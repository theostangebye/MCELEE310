

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 19:59:29 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25Q10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95  0000                     
    96                           ; Version 2.05
    97                           ; Generated 20/12/2018 GMT
    98                           ; 
    99                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F25Q10 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   132  0000                     
   133 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   134  0000                     
   135 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   136  0000                     
   137                           	psect	idataCOMRAM
   138  001F92                     __pidataCOMRAM:
   139                           	opt callstack 0
   140                           
   141                           ;initializer for _timing_val
   142  001F92  FF10               	dw	65296
   143                           
   144                           ;initializer for _servo_max
   145  001F94  1C                 	db	28
   146                           
   147                           ;initializer for _servo_min
   148  001F95  E2                 	db	226
   149                           
   150                           ;initializer for _servo_trim
   151  001F96  11                 	db	17
   152                           
   153                           	psect	nvCOMRAM
   154  00003A                     __pnvCOMRAM:
   155                           	opt callstack 0
   156  00003A                     _TMR3_InterruptHandler:
   157                           	opt callstack 0
   158  00003A                     	ds	2
   159  00003C                     _timer3ReloadVal:
   160                           	opt callstack 0
   161  00003C                     	ds	2
   162  00003E                     _TMR1_InterruptHandler:
   163                           	opt callstack 0
   164  00003E                     	ds	2
   165  000040                     _timer1ReloadVal:
   166                           	opt callstack 0
   167  000040                     	ds	2
   168  000042                     _CCP1_CallBack:
   169                           	opt callstack 0
   170  000042                     	ds	2
   171  000044                     _IOCCF2_InterruptHandler:
   172                           	opt callstack 0
   173  000044                     	ds	2
   174                           
   175                           	psect	nvBANK0
   176  0000F8                     __pnvBANK0:
   177                           	opt callstack 0
   178  0000F8                     _EUSART1_ErrorHandler:
   179                           	opt callstack 0
   180  0000F8                     	ds	2
   181  0000FA                     _EUSART1_OverrunErrorHandler:
   182                           	opt callstack 0
   183  0000FA                     	ds	2
   184  0000FC                     _EUSART1_FramingErrorHandler:
   185                           	opt callstack 0
   186  0000FC                     	ds	2
   187  0000FE                     _TMR2_InterruptHandler:
   188                           	opt callstack 0
   189  0000FE                     	ds	2
   190  0000                     _PIR6	set	3787
   191  0000                     _PIR3bits	set	3784
   192  0000                     _PIR1bits	set	3782
   193  0000                     _PIE1bits	set	3774
   194  0000                     _PIR0bits	set	3781
   195  0000                     _PIR6bits	set	3787
   196  0000                     _PIE6bits	set	3779
   197  0000                     _IPR1bits	set	3766
   198  0000                     _IPR0bits	set	3765
   199  0000                     _IPR6bits	set	3771
   200  0000                     _IPR4bits	set	3769
   201  0000                     _PIE4bits	set	3777
   202  0000                     _PIR4bits	set	3785
   203  0000                     _RC6PPS	set	3832
   204  0000                     _CCP1PPS	set	3754
   205  0000                     _PIE0bits	set	3773
   206  0000                     _PMD5	set	3809
   207  0000                     _PMD4	set	3808
   208  0000                     _PMD3	set	3807
   209  0000                     _PMD2	set	3806
   210  0000                     _PMD1	set	3805
   211  0000                     _PMD0	set	3804
   212  0000                     _OSCTUNE	set	3800
   213  0000                     _OSCFRQ	set	3801
   214  0000                     _OSCEN	set	3799
   215  0000                     _OSCCON3	set	3797
   216  0000                     _OSCCON1	set	3795
   217  0000                     _ADCON1bits	set	3924
   218  0000                     _ADPREVL	set	3932
   219  0000                     _ADPREVH	set	3933
   220  0000                     _ADCON2bits	set	3925
   221  0000                     _ADCON3bits	set	3926
   222  0000                     _ADRESL	set	3934
   223  0000                     _ADRESH	set	3935
   224  0000                     _ADCON0bits	set	3931
   225  0000                     _ADCON0	set	3931
   226  0000                     _ADPCH	set	3930
   227  0000                     _ADACQ	set	3927
   228  0000                     _ADPRE	set	3929
   229  0000                     _ADCAP	set	3928
   230  0000                     _ADREF	set	3923
   231  0000                     _ADCLK	set	3922
   232  0000                     _ADACT	set	3921
   233  0000                     _ADCON3	set	3926
   234  0000                     _ADCON2	set	3925
   235  0000                     _ADCON1	set	3924
   236  0000                     _IOCCPbits	set	3863
   237  0000                     _IOCCNbits	set	3862
   238  0000                     _IOCCFbits	set	3861
   239  0000                     _SLRCONC	set	3865
   240  0000                     _SLRCONB	set	3857
   241  0000                     _SLRCONA	set	3849
   242  0000                     _ODCONC	set	3866
   243  0000                     _ODCONB	set	3858
   244  0000                     _ODCONA	set	3850
   245  0000                     _WPUC	set	3867
   246  0000                     _WPUA	set	3851
   247  0000                     _WPUB	set	3859
   248  0000                     _WPUE	set	3880
   249  0000                     _ANSELA	set	3852
   250  0000                     _ANSELB	set	3860
   251  0000                     _ANSELC	set	3868
   252  0000                     _TRISBbits	set	3976
   253  0000                     _LATBbits	set	3971
   254  0000                     _TRISCbits	set	3977
   255  0000                     _LATCbits	set	3972
   256  0000                     _LATAbits	set	3970
   257  0000                     _T3GCONbits	set	4041
   258  0000                     _T3CONbits	set	4040
   259  0000                     _T3CON	set	4040
   260  0000                     _TMR3L	set	4038
   261  0000                     _TMR3H	set	4039
   262  0000                     _T3CLK	set	4043
   263  0000                     _T3GATE	set	4042
   264  0000                     _T3GCON	set	4041
   265  0000                     _ADERRL	set	3945
   266  0000                     _ADERRH	set	3946
   267  0000                     _ADFLTRL	set	3949
   268  0000                     _ADFLTRH	set	3950
   269  0000                     _ADSTATbits	set	3936
   270  0000                     _ADACCL	set	3947
   271  0000                     _ADACCH	set	3948
   272  0000                     _ADCNT	set	3938
   273  0000                     _ADSTPTH	set	3940
   274  0000                     _ADSTPTL	set	3939
   275  0000                     _ADUTHH	set	3944
   276  0000                     _ADUTHL	set	3943
   277  0000                     _ADLTHH	set	3942
   278  0000                     _ADLTHL	set	3941
   279  0000                     _ADRPT	set	3937
   280  0000                     _ADSTAT	set	3936
   281  0000                     _TX1REG	set	3993
   282  0000                     _RC1REG	set	3992
   283  0000                     _RC1STAbits	set	3996
   284  0000                     _TX1STAbits	set	3997
   285  0000                     _SP1BRGH	set	3995
   286  0000                     _SP1BRGL	set	3994
   287  0000                     _TX1STA	set	3997
   288  0000                     _RC1STA	set	3996
   289  0000                     _BAUD1CON	set	3998
   290  0000                     _T1GCONbits	set	4047
   291  0000                     _T1CONbits	set	4046
   292  0000                     _T1CON	set	4046
   293  0000                     _TMR1L	set	4044
   294  0000                     _TMR1H	set	4045
   295  0000                     _T1CLK	set	4049
   296  0000                     _T1GATE	set	4048
   297  0000                     _T1GCON	set	4047
   298  0000                     _CCPTMRSbits	set	4013
   299  0000                     _CCPR1L	set	4009
   300  0000                     _CCPR1H	set	4010
   301  0000                     _CCP1CAP	set	4012
   302  0000                     _CCP1CON	set	4011
   303  0000                     _INTCONbits	set	4082
   304  0000                     _PR2	set	4027
   305  0000                     _TMR2	set	4026
   306  0000                     _T2CONbits	set	4028
   307  0000                     _T2RSTbits	set	4031
   308  0000                     _T2HLTbits	set	4029
   309  0000                     _T2CON	set	4028
   310  0000                     _T2TMR	set	4026
   311  0000                     _T2PR	set	4027
   312  0000                     _T2RST	set	4031
   313  0000                     _T2HLT	set	4029
   314  0000                     _T2CLKCON	set	4030
   315  0000                     _TRISC	set	3977
   316  0000                     _TRISB	set	3976
   317  0000                     _TRISA	set	3975
   318  0000                     _LATC	set	3972
   319  0000                     _LATB	set	3971
   320  0000                     _LATA	set	3970
   321                           
   322                           	psect	smallconst
   323  000800                     __psmallconst:
   324                           	opt callstack 0
   325  000800  00                 	db	0
   326  000801                     STR_2:
   327  000801  0A                 	db	10
   328  000802  2A                 	db	42
   329  000803  2A                 	db	42
   330  000804  2A                 	db	42
   331  000805  2A                 	db	42
   332  000806  2A                 	db	42
   333  000807  2A                 	db	42
   334  000808  2A                 	db	42
   335  000809  2A                 	db	42
   336  00080A  2A                 	db	42
   337  00080B  2A                 	db	42
   338  00080C  20                 	db	32
   339  00080D  4E                 	db	78	;'N'
   340  00080E  45                 	db	69	;'E'
   341  00080F  57                 	db	87	;'W'
   342  000810  20                 	db	32
   343  000811  53                 	db	83	;'S'
   344  000812  43                 	db	67	;'C'
   345  000813  41                 	db	65	;'A'
   346  000814  4E                 	db	78	;'N'
   347  000815  20                 	db	32
   348  000816  2A                 	db	42
   349  000817  2A                 	db	42
   350  000818  2A                 	db	42
   351  000819  2A                 	db	42
   352  00081A  2A                 	db	42
   353  00081B  2A                 	db	42
   354  00081C  2A                 	db	42
   355  00081D  2A                 	db	42
   356  00081E  2A                 	db	42
   357  00081F  2A                 	db	42
   358  000820  0A                 	db	10
   359  000821  00                 	db	0
   360  000822                     STR_1:
   361  000822  25                 	db	37
   362  000823  64                 	db	100	;'d'
   363  000824  2C                 	db	44
   364  000825  20                 	db	32
   365  000826  00                 	db	0
   366                           
   367                           ; #config settings
   368  000827  00                 	db	0	; dummy byte at the end
   369  0000                     
   370                           	psect	cinit
   371  001956                     __pcinit:
   372                           	opt callstack 0
   373  001956                     start_initialization:
   374                           	opt callstack 0
   375  001956                     __initialization:
   376                           	opt callstack 0
   377                           
   378                           ; Initialize objects allocated to COMRAM (5 bytes)
   379                           ; load TBLPTR registers with __pidataCOMRAM
   380  001956  0E92               	movlw	low __pidataCOMRAM
   381  001958  6EF6               	movwf	tblptrl,c
   382  00195A  0E1F               	movlw	high __pidataCOMRAM
   383  00195C  6EF7               	movwf	tblptrh,c
   384  00195E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   385  001960  6EF8               	movwf	tblptru,c
   386  001962  EE00  F052         	lfsr	0,__pdataCOMRAM
   387  001966  EE10 F005          	lfsr	1,5
   388  00196A                     copy_data0:
   389  00196A  0009               	tblrd		*+
   390  00196C  CFF5 FFEE          	movff	tablat,postinc0
   391  001970  50E5               	movf	postdec1,w,c
   392  001972  50E1               	movf	fsr1l,w,c
   393  001974  E1FA               	bnz	copy_data0
   394                           
   395                           ; Clear objects allocated to BIGRAM (260 bytes)
   396  001976  EE02  F000         	lfsr	0,__pbssBIGRAM
   397  00197A  EE11 F004          	lfsr	1,260
   398  00197E                     clear_0:
   399  00197E  6AEE               	clrf	postinc0,c
   400  001980  50E5               	movf	postdec1,w,c
   401  001982  50E1               	movf	fsr1l,w,c
   402  001984  E1FC               	bnz	clear_0
   403  001986  50E2               	movf	fsr1h,w,c
   404  001988  E1FA               	bnz	clear_0
   405                           
   406                           ; Clear objects allocated to BANK0 (49 bytes)
   407  00198A  EE00  F0C7         	lfsr	0,__pbssBANK0
   408  00198E  0E31               	movlw	49
   409  001990                     clear_1:
   410  001990  6AEE               	clrf	postinc0,c
   411  001992  06E8               	decf	wreg,f,c
   412  001994  E1FD               	bnz	clear_1
   413                           
   414                           ; Clear objects allocated to COMRAM (12 bytes)
   415  001996  EE00  F046         	lfsr	0,__pbssCOMRAM
   416  00199A  0E0C               	movlw	12
   417  00199C                     clear_2:
   418  00199C  6AEE               	clrf	postinc0,c
   419  00199E  06E8               	decf	wreg,f,c
   420  0019A0  E1FD               	bnz	clear_2
   421  0019A2                     end_of_initialization:
   422                           	opt callstack 0
   423  0019A2                     __end_of__initialization:
   424                           	opt callstack 0
   425  0019A2  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   426  0019A4  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   427  0019A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   428  0019A8  6EF8               	movwf	tblptru,c
   429  0019AA  0100               	movlb	0
   430  0019AC  EFA0  F00A         	goto	_main	;jump to C main() function
   431                           
   432                           	psect	bssCOMRAM
   433  000046                     __pbssCOMRAM:
   434                           	opt callstack 0
   435  000046                     _status:
   436                           	opt callstack 0
   437  000046                     	ds	8
   438  00004E                     _delay_between_ack:
   439                           	opt callstack 0
   440  00004E                     	ds	2
   441  000050                     _ADCC_InterruptHandler:
   442                           	opt callstack 0
   443  000050                     	ds	2
   444                           
   445                           	psect	dataCOMRAM
   446  000052                     __pdataCOMRAM:
   447                           	opt callstack 0
   448  000052                     _timing_val:
   449                           	opt callstack 0
   450  000052                     	ds	2
   451  000054                     _servo_max:
   452                           	opt callstack 0
   453  000054                     	ds	1
   454  000055                     _servo_min:
   455                           	opt callstack 0
   456  000055                     	ds	1
   457  000056                     _servo_trim:
   458                           	opt callstack 0
   459  000056                     	ds	1
   460                           
   461                           	psect	bssBANK0
   462  0000C7                     __pbssBANK0:
   463                           	opt callstack 0
   464  0000C7                     _carctl:
   465                           	opt callstack 0
   466  0000C7                     	ds	6
   467  0000CD                     _nout:
   468                           	opt callstack 0
   469  0000CD                     	ds	2
   470  0000CF                     _width:
   471                           	opt callstack 0
   472  0000CF                     	ds	2
   473  0000D1                     _prec:
   474                           	opt callstack 0
   475  0000D1                     	ds	2
   476  0000D3                     _flags:
   477                           	opt callstack 0
   478  0000D3                     	ds	2
   479  0000D5                     _stateTime:
   480                           	opt callstack 0
   481  0000D5                     	ds	2
   482  0000D7                     _eusart1RxLastError:
   483                           	opt callstack 0
   484  0000D7                     	ds	1
   485  0000D8                     _dbuf:
   486                           	opt callstack 0
   487  0000D8                     	ds	32
   488                           
   489                           	psect	bssBIGRAM
   490  000200                     __pbssBIGRAM:
   491                           	opt callstack 0
   492  000200                     _myCam:
   493                           	opt callstack 0
   494  000200                     	ds	260
   495                           
   496                           	psect	cstackBANK1
   497  000100                     __pcstackBANK1:
   498                           	opt callstack 0
   499  000100                     main@cam_pixels:
   500                           	opt callstack 0
   501                           
   502                           ; 256 bytes @ 0x0
   503  000100                     	ds	256
   504                           
   505                           	psect	cstackBANK0
   506  000060                     __pcstackBANK0:
   507                           	opt callstack 0
   508  000060                     ?_strlen:
   509                           	opt callstack 0
   510  000060                     ?___aodiv:
   511                           	opt callstack 0
   512  000060                     ?___aomod:
   513                           	opt callstack 0
   514  000060                     EUSART1_Write@txData:
   515                           	opt callstack 0
   516  000060                     ADCC_SelectChannel@acquisitionDelay:
   517                           	opt callstack 0
   518  000060                     carcontrol_steering@steering:
   519                           	opt callstack 0
   520  000060                     carcontrol_throttle@throttle:
   521                           	opt callstack 0
   522  000060                     IOCCF2_SetInterruptHandler@InterruptHandler:
   523                           	opt callstack 0
   524  000060                     TMR2_SetInterruptHandler@InterruptHandler:
   525                           	opt callstack 0
   526  000060                     CCP1_SetCallBack@customCallBack:
   527                           	opt callstack 0
   528  000060                     TMR1_SetInterruptHandler@InterruptHandler:
   529                           	opt callstack 0
   530  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   531                           	opt callstack 0
   532  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   533                           	opt callstack 0
   534  000060                     EUSART1_SetErrorHandler@interruptHandler:
   535                           	opt callstack 0
   536  000060                     ADCC_SetInterruptHandler@InterruptHandler:
   537                           	opt callstack 0
   538  000060                     TMR3_WriteTimer@timerVal:
   539                           	opt callstack 0
   540  000060                     TMR3_SetInterruptHandler@InterruptHandler:
   541                           	opt callstack 0
   542  000060                     cam_get@pixels:
   543                           	opt callstack 0
   544  000060                     strlen@s:
   545                           	opt callstack 0
   546  000060                     ___aodiv@dividend:
   547                           	opt callstack 0
   548  000060                     ___aomod@dividend:
   549                           	opt callstack 0
   550                           
   551                           ; 8 bytes @ 0x0
   552  000060                     	ds	1
   553  000061                     putch@txData:
   554                           	opt callstack 0
   555  000061                     ADCC_SelectChannel@channel:
   556                           	opt callstack 0
   557                           
   558                           ; 1 bytes @ 0x1
   559  000061                     	ds	1
   560  000062                     ??_TMR3_Initialize:
   561  000062                     ??_TMR1_Initialize:
   562  000062                     ??_cam_start:
   563  000062                     ??_cam_get:
   564  000062                     fputc@c:
   565                           	opt callstack 0
   566  000062                     strlen@a:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x2
   570  000062                     	ds	2
   571  000064                     cam_get@i:
   572                           	opt callstack 0
   573  000064                     fputc@fp:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x4
   577  000064                     	ds	2
   578  000066                     ??_fputc:
   579  000066                     cam_get@i_2600:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x6
   583  000066                     	ds	2
   584  000068                     ___aodiv@divisor:
   585                           	opt callstack 0
   586  000068                     ___aomod@divisor:
   587                           	opt callstack 0
   588                           
   589                           ; 8 bytes @ 0x8
   590  000068                     	ds	3
   591  00006B                     fputs@s:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0xB
   595  00006B                     	ds	2
   596  00006D                     fputs@fp:
   597                           	opt callstack 0
   598                           
   599                           ; 2 bytes @ 0xD
   600  00006D                     	ds	2
   601  00006F                     fputs@c:
   602                           	opt callstack 0
   603                           
   604                           ; 1 bytes @ 0xF
   605  00006F                     	ds	1
   606  000070                     ___aodiv@counter:
   607                           	opt callstack 0
   608  000070                     ___aomod@counter:
   609                           	opt callstack 0
   610  000070                     fputs@i:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x10
   614  000070                     	ds	1
   615  000071                     ___aodiv@sign:
   616                           	opt callstack 0
   617  000071                     ___aomod@sign:
   618                           	opt callstack 0
   619                           
   620                           ; 1 bytes @ 0x11
   621  000071                     	ds	1
   622  000072                     ?_abs:
   623                           	opt callstack 0
   624  000072                     ?_pad:
   625                           	opt callstack 0
   626  000072                     pad@fp:
   627                           	opt callstack 0
   628  000072                     abs@a:
   629                           	opt callstack 0
   630  000072                     ___aodiv@quotient:
   631                           	opt callstack 0
   632                           
   633                           ; 8 bytes @ 0x12
   634  000072                     	ds	2
   635  000074                     ??_abs:
   636  000074                     pad@buf:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x14
   640  000074                     	ds	2
   641  000076                     pad@p:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x16
   645  000076                     	ds	2
   646  000078                     ??_pad:
   647                           
   648                           ; 1 bytes @ 0x18
   649  000078                     	ds	1
   650  000079                     pad@i:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x19
   654  000079                     	ds	2
   655  00007B                     pad@w:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0x1B
   659  00007B                     	ds	2
   660  00007D                     ?_dtoa:
   661                           	opt callstack 0
   662  00007D                     dtoa@fp:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x1D
   666  00007D                     	ds	2
   667  00007F                     dtoa@d:
   668                           	opt callstack 0
   669                           
   670                           ; 8 bytes @ 0x1F
   671  00007F                     	ds	8
   672  000087                     ??_dtoa:
   673                           
   674                           ; 1 bytes @ 0x27
   675  000087                     	ds	8
   676  00008F                     _dtoa$2648:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x2F
   680  00008F                     	ds	2
   681  000091                     dtoa@p:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x31
   685  000091                     	ds	2
   686  000093                     dtoa@w:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x33
   690  000093                     	ds	2
   691  000095                     dtoa@s:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0x35
   695  000095                     	ds	2
   696  000097                     dtoa@n:
   697                           	opt callstack 0
   698                           
   699                           ; 8 bytes @ 0x37
   700  000097                     	ds	8
   701  00009F                     dtoa@i:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x3F
   705  00009F                     	ds	2
   706  0000A1                     ?_vfpfcnvrt:
   707                           	opt callstack 0
   708  0000A1                     vfpfcnvrt@fp:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x41
   712  0000A1                     	ds	2
   713  0000A3                     vfpfcnvrt@fmt:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x43
   717  0000A3                     	ds	2
   718  0000A5                     vfpfcnvrt@ap:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x45
   722  0000A5                     	ds	2
   723  0000A7                     ??_vfpfcnvrt:
   724                           
   725                           ; 1 bytes @ 0x47
   726  0000A7                     	ds	2
   727  0000A9                     vfpfcnvrt@ll:
   728                           	opt callstack 0
   729                           
   730                           ; 8 bytes @ 0x49
   731  0000A9                     	ds	8
   732  0000B1                     ?_vfprintf:
   733                           	opt callstack 0
   734  0000B1                     vfprintf@fp:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x51
   738  0000B1                     	ds	2
   739  0000B3                     vfprintf@fmt:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x53
   743  0000B3                     	ds	2
   744  0000B5                     vfprintf@ap:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x55
   748  0000B5                     	ds	2
   749  0000B7                     vfprintf@cfmt:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x57
   753  0000B7                     	ds	2
   754  0000B9                     ?_printf:
   755                           	opt callstack 0
   756  0000B9                     printf@fmt:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x59
   760  0000B9                     	ds	4
   761  0000BD                     
   762                           ; 1 bytes @ 0x5D
   763  0000BD                     	ds	2
   764  0000BF                     printf@ap:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x5F
   768  0000BF                     	ds	2
   769  0000C1                     ??_main:
   770                           
   771                           ; 1 bytes @ 0x61
   772  0000C1                     	ds	4
   773  0000C5                     main@i:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x65
   777  0000C5                     	ds	2
   778                           
   779                           	psect	cstackCOMRAM
   780  000001                     __pcstackCOMRAM:
   781                           	opt callstack 0
   782  000001                     ??_carcontrol_ISR:
   783  000001                     
   784                           ; 1 bytes @ 0x0
   785  000001                     	ds	3
   786  000004                     ??_INTERRUPT_InterruptManagerHigh:
   787                           
   788                           ; 1 bytes @ 0x3
   789  000004                     	ds	2
   790  000006                     ?___xxtofl:
   791                           	opt callstack 0
   792  000006                     TMR1_WriteTimer@timerVal:
   793                           	opt callstack 0
   794  000006                     i1IOCCF2_SetInterruptHandler@InterruptHandler:
   795                           	opt callstack 0
   796  000006                     i1TMR1_SetInterruptHandler@InterruptHandler:
   797                           	opt callstack 0
   798  000006                     i1TMR3_WriteTimer@timerVal:
   799                           	opt callstack 0
   800  000006                     i1TMR3_SetInterruptHandler@InterruptHandler:
   801                           	opt callstack 0
   802  000006                     ___xxtofl@val:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0x5
   806  000006                     	ds	2
   807  000008                     ??_timer_ISR:
   808  000008                     ??_adc_ready_ISR:
   809  000008                     ??i1_cam_start:
   810                           
   811                           ; 1 bytes @ 0x7
   812  000008                     	ds	1
   813  000009                     
   814                           ; 1 bytes @ 0x8
   815  000009                     	ds	1
   816  00000A                     ??___xxtofl:
   817                           
   818                           ; 1 bytes @ 0x9
   819  00000A                     	ds	4
   820  00000E                     ___xxtofl@sign:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0xD
   824  00000E                     	ds	1
   825  00000F                     ___xxtofl@exp:
   826                           	opt callstack 0
   827                           
   828                           ; 1 bytes @ 0xE
   829  00000F                     	ds	1
   830  000010                     ___xxtofl@arg:
   831                           	opt callstack 0
   832                           
   833                           ; 4 bytes @ 0xF
   834  000010                     	ds	4
   835  000014                     ?___flmul:
   836                           	opt callstack 0
   837  000014                     ___flmul@b:
   838                           	opt callstack 0
   839                           
   840                           ; 4 bytes @ 0x13
   841  000014                     	ds	4
   842  000018                     ___flmul@a:
   843                           	opt callstack 0
   844                           
   845                           ; 4 bytes @ 0x17
   846  000018                     	ds	4
   847  00001C                     ??___flmul:
   848                           
   849                           ; 1 bytes @ 0x1B
   850  00001C                     	ds	4
   851  000020                     ___flmul@sign:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x1F
   855  000020                     	ds	1
   856  000021                     ___flmul@grs:
   857                           	opt callstack 0
   858                           
   859                           ; 4 bytes @ 0x20
   860  000021                     	ds	4
   861  000025                     ___flmul@aexp:
   862                           	opt callstack 0
   863                           
   864                           ; 1 bytes @ 0x24
   865  000025                     	ds	1
   866  000026                     ___flmul@bexp:
   867                           	opt callstack 0
   868                           
   869                           ; 1 bytes @ 0x25
   870  000026                     	ds	1
   871  000027                     ___flmul@prod:
   872                           	opt callstack 0
   873                           
   874                           ; 4 bytes @ 0x26
   875  000027                     	ds	4
   876  00002B                     ___flmul@temp:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x2A
   880  00002B                     	ds	2
   881  00002D                     ping_CCP1_triggered@timeOfFlight:
   882                           	opt callstack 0
   883                           
   884                           ; 2 bytes @ 0x2C
   885  00002D                     	ds	2
   886  00002F                     CCP1_CaptureISR@module:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x2E
   890  00002F                     	ds	2
   891  000031                     ??_INTERRUPT_InterruptManagerLow:
   892                           
   893                           ; 1 bytes @ 0x30
   894  000031                     	ds	9
   895                           
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 52 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  i               2  101[BANK0 ] int 
   906 ;;  cam_pixels    256    0[BANK1 ] unsigned short [128]
   907 ;;  num             2    0        int 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         0       0       0       0       0       0       0       0       0
   918 ;;      Locals:         0       4     256       0       0       0       0       0       0
   919 ;;      Temps:          0       2       0       0       0       0       0       0       0
   920 ;;      Totals:         0       6     256       0       0       0       0       0       0
   921 ;;Total ram usage:      262 bytes
   922 ;; Hardware stack levels required when called:   17
   923 ;; This function calls:
   924 ;;		_SYSTEM_Initialize
   925 ;;		_cam_get
   926 ;;		_cam_init
   927 ;;		_cam_start
   928 ;;		_carcontrol_init
   929 ;;		_carcontrol_steering
   930 ;;		_carcontrol_throttle
   931 ;;		_printf
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text0
   938  001540                     __ptext0:
   939                           	opt callstack 0
   940  001540                     _main:
   941                           	opt callstack 14
   942                           
   943                           ;main.c: 55:     SYSTEM_Initialize();
   944                           
   945                           ;incstack = 0
   946  001540  EC95  F00E         	call	_SYSTEM_Initialize	;wreg free
   947                           
   948                           ;main.c: 68:     (INTCONbits.GIEL = 1);
   949  001544  8CF2               	bsf	4082,6,c	;volatile
   950                           
   951                           ;main.c: 69:     (INTCONbits.GIEH = 1);
   952  001546  8EF2               	bsf	4082,7,c	;volatile
   953                           
   954                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   955  001548  8CF2               	bsf	4082,6,c	;volatile
   956                           
   957                           ;main.c: 75:     carcontrol_init();
   958  00154A  ECBE  F00D         	call	_carcontrol_init	;wreg free
   959                           
   960                           ;main.c: 76:     cam_init();
   961  00154E  EC89  F00D         	call	_cam_init	;wreg free
   962                           
   963                           ;main.c: 78:     carcontrol_throttle(0);
   964  001552  0E00               	movlw	0
   965  001554  EC5B  F00F         	call	_carcontrol_throttle
   966                           
   967                           ;main.c: 79:     carcontrol_steering(0);
   968  001558  0E00               	movlw	0
   969  00155A  ECF2  F00D         	call	_carcontrol_steering
   970                           
   971                           ;main.c: 85:     cam_start();
   972  00155E  EC75  F00B         	call	_cam_start	;wreg free
   973                           
   974                           ;main.c: 86:     _delay((unsigned long)((100)*(64000000/4000.0)));
   975  001562  0E09               	movlw	9
   976  001564  0100               	movlb	0	; () banked
   977  001566  6FC2               	movwf	(??_main+1)& (0+255),b
   978  001568  0E1E               	movlw	30
   979  00156A  6FC1               	movwf	??_main& (0+255),b
   980  00156C  0EE4               	movlw	228
   981  00156E                     u2627:
   982  00156E  2EE8               	decfsz	wreg,f,c
   983  001570  D7FE               	bra	u2627
   984  001572  2FC1               	decfsz	??_main& (0+255),f,b
   985  001574  D7FC               	bra	u2627
   986  001576  2FC2               	decfsz	(??_main+1)& (0+255),f,b
   987  001578  D7FA               	bra	u2627
   988  00157A  F000               	nop	
   989  00157C                     l4002:
   990                           
   991                           ;main.c: 89:     {;main.c: 91:         cam_get(cam_pixels);
   992  00157C  0E00               	movlw	low main@cam_pixels
   993  00157E  0100               	movlb	0	; () banked
   994  001580  6F60               	movwf	cam_get@pixels& (0+255),b
   995  001582  0E01               	movlw	high main@cam_pixels
   996  001584  6F61               	movwf	(cam_get@pixels+1)& (0+255),b
   997  001586  EC4E  F00A         	call	_cam_get	;wreg free
   998                           
   999                           ;main.c: 93:         for (int i = 0; i < 128; i++) {
  1000  00158A  0E00               	movlw	0
  1001  00158C  0100               	movlb	0	; () banked
  1002  00158E  6FC6               	movwf	(main@i+1)& (0+255),b
  1003  001590  0E00               	movlw	0
  1004  001592  6FC5               	movwf	main@i& (0+255),b
  1005  001594                     l4010:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;main.c: 94:             printf("%d, ",cam_pixels[i]);
  1009  001594  0E22               	movlw	low STR_1
  1010  001596  6FB9               	movwf	printf@fmt& (0+255),b
  1011  001598  0E08               	movlw	high STR_1
  1012  00159A  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  1013  00159C  90D8               	bcf	status,0,c
  1014  00159E  35C5               	rlcf	main@i& (0+255),w,b
  1015  0015A0  6ED9               	movwf	fsr2l,c
  1016  0015A2  35C6               	rlcf	(main@i+1)& (0+255),w,b
  1017  0015A4  6EDA               	movwf	fsr2h,c
  1018  0015A6  0E00               	movlw	low main@cam_pixels
  1019  0015A8  26D9               	addwf	fsr2l,f,c
  1020  0015AA  0E01               	movlw	high main@cam_pixels
  1021  0015AC  22DA               	addwfc	fsr2h,f,c
  1022  0015AE  CFDE F0BB          	movff	postinc2,?_printf+2
  1023  0015B2  CFDD F0BC          	movff	postdec2,?_printf+3
  1024  0015B6  ECAA  F00E         	call	_printf	;wreg free
  1025                           
  1026                           ;main.c: 95:         }
  1027  0015BA  0100               	movlb	0	; () banked
  1028  0015BC  4BC5               	infsnz	main@i& (0+255),f,b
  1029  0015BE  2BC6               	incf	(main@i+1)& (0+255),f,b
  1030                           
  1031                           ; BSR set to: 0
  1032  0015C0  BFC6               	btfsc	(main@i+1)& (0+255),7,b
  1033  0015C2  D7E8               	goto	l4010
  1034  0015C4  51C6               	movf	(main@i+1)& (0+255),w,b
  1035  0015C6  E104               	bnz	u2600
  1036  0015C8  0E80               	movlw	128
  1037  0015CA  5DC5               	subwf	main@i& (0+255),w,b
  1038  0015CC  A0D8               	btfss	status,0,c
  1039  0015CE  D7E2               	goto	l4010
  1040  0015D0                     u2600:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;main.c: 96:         printf("\n********** NEW SCAN **********\n");
  1044  0015D0  0E01               	movlw	low STR_2
  1045  0015D2  6FB9               	movwf	printf@fmt& (0+255),b
  1046  0015D4  0E08               	movlw	high STR_2
  1047  0015D6  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  1048  0015D8  ECAA  F00E         	call	_printf	;wreg free
  1049  0015DC  D7CF               	goto	l4002
  1050  0015DE                     __end_of_main:
  1051                           	opt callstack 0
  1052                           
  1053 ;; *************** function _printf *****************
  1054 ;; Defined at:
  1055 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1058 ;;		 -> STR_2(33), STR_1(5), 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  ap              2   95[BANK0 ] PTR void [1]
  1061 ;;		 -> ?_printf(2), 
  1062 ;;  ret             2    0        int 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2   89[BANK0 ] int 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       4       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        8 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:   16
  1079 ;; This function calls:
  1080 ;;		_vfprintf
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text1
  1087  001D54                     __ptext1:
  1088                           	opt callstack 0
  1089  001D54                     _printf:
  1090                           	opt callstack 14
  1091                           
  1092                           ;incstack = 0
  1093  001D54  0EBB               	movlw	low (?_printf+2)
  1094  001D56  0100               	movlb	0	; () banked
  1095  001D58  6FBF               	movwf	printf@ap& (0+255),b
  1096  001D5A  0E00               	movlw	high (?_printf+2)
  1097  001D5C  6FC0               	movwf	(printf@ap+1)& (0+255),b
  1098                           
  1099                           ; BSR set to: 0
  1100  001D5E  0E00               	movlw	0
  1101  001D60  6FB1               	movwf	vfprintf@fp& (0+255),b
  1102  001D62  0E00               	movlw	0
  1103  001D64  6FB2               	movwf	(vfprintf@fp+1)& (0+255),b
  1104  001D66  C0B9  F0B3         	movff	printf@fmt,vfprintf@fmt
  1105  001D6A  C0BA  F0B4         	movff	printf@fmt+1,vfprintf@fmt+1
  1106  001D6E  0EBF               	movlw	low printf@ap
  1107  001D70  6FB5               	movwf	vfprintf@ap& (0+255),b
  1108  001D72  0E00               	movlw	high printf@ap
  1109  001D74  6FB6               	movwf	(vfprintf@ap+1)& (0+255),b
  1110  001D76  ECD8  F00C         	call	_vfprintf	;wreg free
  1111  001D7A  0012               	return		;funcret
  1112  001D7C                     __end_of_printf:
  1113                           	opt callstack 0
  1114                           
  1115 ;; *************** function _vfprintf *****************
  1116 ;; Defined at:
  1117 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  fp              2   81[BANK0 ] PTR struct _IO_FILE
  1120 ;;		 -> NULL(0), 
  1121 ;;  fmt             2   83[BANK0 ] PTR const unsigned char 
  1122 ;;		 -> STR_2(33), STR_1(5), 
  1123 ;;  ap              2   85[BANK0 ] PTR PTR void 
  1124 ;;		 -> printf@ap(2), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  cfmt            2   87[BANK0 ] PTR unsigned char 
  1127 ;;		 -> STR_2(33), STR_1(5), 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  2   81[BANK0 ] int 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         0       6       0       0       0       0       0       0       0
  1138 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        8 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:   15
  1144 ;; This function calls:
  1145 ;;		_vfpfcnvrt
  1146 ;; This function is called by:
  1147 ;;		_printf
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text2
  1152  0019B0                     __ptext2:
  1153                           	opt callstack 0
  1154  0019B0                     _vfprintf:
  1155                           	opt callstack 14
  1156                           
  1157                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  1158                           
  1159                           ;incstack = 0
  1160  0019B0  C0B3  F0B7         	movff	vfprintf@fmt,vfprintf@cfmt
  1161  0019B4  C0B4  F0B8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1162                           
  1163                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1164  0019B8  0E00               	movlw	0
  1165  0019BA  0100               	movlb	0	; () banked
  1166  0019BC  6FCE               	movwf	(_nout+1)& (0+255),b
  1167  0019BE  0E00               	movlw	0
  1168  0019C0  6FCD               	movwf	_nout& (0+255),b
  1169                           
  1170                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1171  0019C2  D013               	goto	l3786
  1172  0019C4                     l3784:
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1176  0019C4  C0B1  F0A1         	movff	vfprintf@fp,vfpfcnvrt@fp
  1177  0019C8  C0B2  F0A2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1178  0019CC  0EB7               	movlw	low vfprintf@cfmt
  1179  0019CE  6FA3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1180  0019D0  0E00               	movlw	high vfprintf@cfmt
  1181  0019D2  6FA4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1182  0019D4  C0B5  F0A5         	movff	vfprintf@ap,vfpfcnvrt@ap
  1183  0019D8  C0B6  F0A6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1184  0019DC  ECE0  F006         	call	_vfpfcnvrt	;wreg free
  1185  0019E0  0100               	movlb	0	; () banked
  1186  0019E2  51A1               	movf	?_vfpfcnvrt& (0+255),w,b
  1187  0019E4  27CD               	addwf	_nout& (0+255),f,b
  1188  0019E6  51A2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1189  0019E8  23CE               	addwfc	(_nout+1)& (0+255),f,b
  1190  0019EA                     l3786:
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1194  0019EA  C0B7  FFF6         	movff	vfprintf@cfmt,tblptrl
  1195  0019EE  C0B8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1196  0019F2                     	if	0	;tblptru may be non-zero
  1197  0019F2                     	endif
  1198  0019F2                     	if	0	;tblptru may be non-zero
  1199  0019F2                     	endif
  1200  0019F2  0008               	tblrd		*
  1201  0019F4  50F5               	movf	tablat,w,c
  1202  0019F6  0900               	iorlw	0
  1203  0019F8  A4D8               	btfss	status,2,c
  1204  0019FA  D7E4               	goto	l3784
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  1208  0019FC  C0CD  F0B1         	movff	_nout,?_vfprintf
  1209  001A00  C0CE  F0B2         	movff	_nout+1,?_vfprintf+1
  1210                           
  1211                           ; BSR set to: 0
  1212  001A04  0012               	return		;funcret
  1213  001A06                     __end_of_vfprintf:
  1214                           	opt callstack 0
  1215                           
  1216 ;; *************** function _vfpfcnvrt *****************
  1217 ;; Defined at:
  1218 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  1221 ;;		 -> NULL(0), 
  1222 ;;  fmt             2   67[BANK0 ] PTR PTR unsigned char 
  1223 ;;		 -> vfprintf@cfmt(2), 
  1224 ;;  ap              2   69[BANK0 ] PTR PTR void 
  1225 ;;		 -> printf@ap(2), 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  ll              8   73[BANK0 ] long long 
  1228 ;;  llu             8    0        unsigned long long 
  1229 ;;  f               4    0        unsigned long long 
  1230 ;;  vp              3    0        PTR void 
  1231 ;;  ct              3    0        unsigned char [3]
  1232 ;;  cp              3    0        PTR unsigned char 
  1233 ;;  i               2    0        int 
  1234 ;;  done            2    0        int 
  1235 ;;  c               1    0        unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2   65[BANK0 ] int 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1245 ;;      Params:         0       6       0       0       0       0       0       0       0
  1246 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1247 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1248 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1249 ;;Total ram usage:       16 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:   14
  1252 ;; This function calls:
  1253 ;;		_dtoa
  1254 ;;		_fputc
  1255 ;; This function is called by:
  1256 ;;		_vfprintf
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text3
  1261  000DC0                     __ptext3:
  1262                           	opt callstack 0
  1263  000DC0                     _vfpfcnvrt:
  1264                           	opt callstack 14
  1265                           
  1266                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;incstack = 0
  1270  000DC0  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1271  000DC4  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1272  000DC8  CFDE FFF6          	movff	postinc2,tblptrl
  1273  000DCC  CFDD FFF7          	movff	postdec2,tblptrh
  1274  000DD0                     	if	0	;tblptru may be non-zero
  1275  000DD0                     	endif
  1276  000DD0                     	if	0	;tblptru may be non-zero
  1277  000DD0                     	endif
  1278  000DD0  0008               	tblrd		*
  1279  000DD2  50F5               	movf	tablat,w,c
  1280  000DD4  0A25               	xorlw	37
  1281  000DD6  A4D8               	btfss	status,2,c
  1282  000DD8  D09B               	goto	l3294
  1283                           
  1284                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1285  000DDA  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1286  000DDE  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1287  000DE2  2ADE               	incf	postinc2,f,c
  1288  000DE4  0E00               	movlw	0
  1289  000DE6  22DD               	addwfc	postdec2,f,c
  1290                           
  1291                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  1292  000DE8  0E00               	movlw	0
  1293  000DEA  0100               	movlb	0	; () banked
  1294  000DEC  6FD0               	movwf	(_width+1)& (0+255),b
  1295  000DEE  0E00               	movlw	0
  1296  000DF0  6FCF               	movwf	_width& (0+255),b
  1297  000DF2  C0CF  F0D3         	movff	_width,_flags
  1298  000DF6  C0D0  F0D4         	movff	_width+1,_flags+1
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  1302  000DFA  69D1               	setf	_prec& (0+255),b
  1303  000DFC  69D2               	setf	(_prec+1)& (0+255),b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1307  000DFE  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1308  000E02  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1309  000E06  CFDE FFF6          	movff	postinc2,tblptrl
  1310  000E0A  CFDD FFF7          	movff	postdec2,tblptrh
  1311  000E0E                     	if	0	;tblptru may be non-zero
  1312  000E0E                     	endif
  1313  000E0E                     	if	0	;tblptru may be non-zero
  1314  000E0E                     	endif
  1315  000E0E  0008               	tblrd		*
  1316  000E10  50F5               	movf	tablat,w,c
  1317  000E12  0A64               	xorlw	100
  1318  000E14  B4D8               	btfsc	status,2,c
  1319  000E16  D00D               	goto	u1770
  1320                           
  1321                           ; BSR set to: 0
  1322  000E18  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1323  000E1C  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1324  000E20  CFDE FFF6          	movff	postinc2,tblptrl
  1325  000E24  CFDD FFF7          	movff	postdec2,tblptrh
  1326  000E28                     	if	0	;tblptru may be non-zero
  1327  000E28                     	endif
  1328  000E28                     	if	0	;tblptru may be non-zero
  1329  000E28                     	endif
  1330  000E28  0008               	tblrd		*
  1331  000E2A  50F5               	movf	tablat,w,c
  1332  000E2C  0A69               	xorlw	105
  1333  000E2E  A4D8               	btfss	status,2,c
  1334  000E30  D03F               	goto	l3278
  1335  000E32                     u1770:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  1339  000E32  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1340  000E36  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1341  000E3A  2ADE               	incf	postinc2,f,c
  1342  000E3C  0E00               	movlw	0
  1343  000E3E  22DD               	addwfc	postdec2,f,c
  1344                           
  1345                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1346  000E40  C0A5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1347  000E44  C0A6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1348  000E48  CFDF F0A7          	movff	indf2,??_vfpfcnvrt
  1349  000E4C  0E02               	movlw	2
  1350  000E4E  26DE               	addwf	postinc2,f,c
  1351  000E50  CFDF F0A8          	movff	indf2,??_vfpfcnvrt+1
  1352  000E54  0E00               	movlw	0
  1353  000E56  22DD               	addwfc	postdec2,f,c
  1354  000E58  C0A7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1355  000E5C  C0A8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1356  000E60  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  1357  000E64  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  1358  000E68  0E00               	movlw	0
  1359  000E6A  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1360  000E6C  0EFF               	movlw	-1
  1361  000E6E  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1362  000E70  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1363  000E72  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1364  000E74  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1365  000E76  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1366  000E78  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  1370  000E7A  C0A1  F07D         	movff	vfpfcnvrt@fp,dtoa@fp
  1371  000E7E  C0A2  F07E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1372  000E82  C0A9  F07F         	movff	vfpfcnvrt@ll,dtoa@d
  1373  000E86  C0AA  F080         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1374  000E8A  C0AB  F081         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1375  000E8E  C0AC  F082         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1376  000E92  C0AD  F083         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1377  000E96  C0AE  F084         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1378  000E9A  C0AF  F085         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1379  000E9E  C0B0  F086         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1380  000EA2  ECBD  F005         	call	_dtoa	;wreg free
  1381  000EA6  C07D  F0A1         	movff	?_dtoa,?_vfpfcnvrt
  1382  000EAA  C07E  F0A2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1383  000EAE  0012               	return	
  1384  000EB0                     l3278:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  1388  000EB0  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1389  000EB4  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1390  000EB8  CFDE FFF6          	movff	postinc2,tblptrl
  1391  000EBC  CFDD FFF7          	movff	postdec2,tblptrh
  1392  000EC0                     	if	0	;tblptru may be non-zero
  1393  000EC0                     	endif
  1394  000EC0                     	if	0	;tblptru may be non-zero
  1395  000EC0                     	endif
  1396  000EC0  0008               	tblrd		*
  1397  000EC2  50F5               	movf	tablat,w,c
  1398  000EC4  0A25               	xorlw	37
  1399  000EC6  A4D8               	btfss	status,2,c
  1400  000EC8  D017               	goto	l3288
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  1404  000ECA  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1405  000ECE  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1406  000ED2  2ADE               	incf	postinc2,f,c
  1407  000ED4  0E00               	movlw	0
  1408  000ED6  22DD               	addwfc	postdec2,f,c
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  1412  000ED8  0E00               	movlw	0
  1413  000EDA  6F63               	movwf	(fputc@c+1)& (0+255),b
  1414  000EDC  0E25               	movlw	37
  1415  000EDE  6F62               	movwf	fputc@c& (0+255),b
  1416  000EE0  C0A1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1417  000EE4  C0A2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1418  000EE8  EC3E  F00B         	call	_fputc	;wreg free
  1419  000EEC                     l3284:
  1420                           
  1421                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  1422  000EEC  0E00               	movlw	0
  1423  000EEE  0100               	movlb	0	; () banked
  1424  000EF0  6FA2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1425  000EF2  0E01               	movlw	1
  1426  000EF4  6FA1               	movwf	?_vfpfcnvrt& (0+255),b
  1427  000EF6  0012               	return	
  1428  000EF8                     l3288:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  1432  000EF8  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1433  000EFC  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1434  000F00  2ADE               	incf	postinc2,f,c
  1435  000F02  0E00               	movlw	0
  1436  000F04  22DD               	addwfc	postdec2,f,c
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  1440  000F06  0E00               	movlw	0
  1441  000F08  6FA2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1442  000F0A  0E00               	movlw	0
  1443  000F0C  6FA1               	movwf	?_vfpfcnvrt& (0+255),b
  1444  000F0E  0012               	return	
  1445  000F10                     l3294:
  1446                           
  1447                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  1448  000F10  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449  000F14  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450  000F18  CFDE FFF6          	movff	postinc2,tblptrl
  1451  000F1C  CFDD FFF7          	movff	postdec2,tblptrh
  1452  000F20                     	if	0	;tblptru may be non-zero
  1453  000F20                     	endif
  1454  000F20                     	if	0	;tblptru may be non-zero
  1455  000F20                     	endif
  1456  000F20  0008               	tblrd		*
  1457  000F22  50F5               	movf	tablat,w,c
  1458  000F24  0100               	movlb	0	; () banked
  1459  000F26  6F62               	movwf	fputc@c& (0+255),b
  1460  000F28  6B63               	clrf	(fputc@c+1)& (0+255),b
  1461  000F2A  C0A1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1462  000F2E  C0A2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1463  000F32  EC3E  F00B         	call	_fputc	;wreg free
  1464                           
  1465                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1466  000F36  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467  000F3A  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468  000F3E  2ADE               	incf	postinc2,f,c
  1469  000F40  0E00               	movlw	0
  1470  000F42  22DD               	addwfc	postdec2,f,c
  1471  000F44  D7D3               	goto	l3284
  1472  000F46                     __end_of_vfpfcnvrt:
  1473                           	opt callstack 0
  1474                           
  1475 ;; *************** function _dtoa *****************
  1476 ;; Defined at:
  1477 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  1480 ;;		 -> NULL(0), 
  1481 ;;  d               8   31[BANK0 ] long long 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  n               8   55[BANK0 ] long long 
  1484 ;;  i               2   63[BANK0 ] int 
  1485 ;;  s               2   53[BANK0 ] int 
  1486 ;;  w               2   51[BANK0 ] int 
  1487 ;;  p               2   49[BANK0 ] int 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2   29[BANK0 ] int 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1497 ;;      Params:         0      10       0       0       0       0       0       0       0
  1498 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1499 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1500 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1501 ;;Total ram usage:       36 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:   13
  1504 ;; This function calls:
  1505 ;;		___aodiv
  1506 ;;		___aomod
  1507 ;;		_abs
  1508 ;;		_pad
  1509 ;; This function is called by:
  1510 ;;		_vfpfcnvrt
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text4
  1515  000B7A                     __ptext4:
  1516                           	opt callstack 0
  1517  000B7A                     _dtoa:
  1518                           	opt callstack 14
  1519                           
  1520                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  1521                           
  1522                           ;incstack = 0
  1523  000B7A  C07F  F097         	movff	dtoa@d,dtoa@n
  1524  000B7E  C080  F098         	movff	dtoa@d+1,dtoa@n+1
  1525  000B82  C081  F099         	movff	dtoa@d+2,dtoa@n+2
  1526  000B86  C082  F09A         	movff	dtoa@d+3,dtoa@n+3
  1527  000B8A  C083  F09B         	movff	dtoa@d+4,dtoa@n+4
  1528  000B8E  C084  F09C         	movff	dtoa@d+5,dtoa@n+5
  1529  000B92  C085  F09D         	movff	dtoa@d+6,dtoa@n+6
  1530  000B96  C086  F09E         	movff	dtoa@d+7,dtoa@n+7
  1531                           
  1532                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  1533  000B9A  0100               	movlb	0	; () banked
  1534  000B9C  AF9E               	btfss	(dtoa@n+7)& (0+255),7,b
  1535  000B9E  D002               	goto	u1600
  1536  000BA0  0E01               	movlw	1
  1537  000BA2  D001               	goto	u1610
  1538  000BA4                     u1600:
  1539  000BA4  0E00               	movlw	0
  1540  000BA6                     u1610:
  1541  000BA6  6F95               	movwf	dtoa@s& (0+255),b
  1542  000BA8  6B96               	clrf	(dtoa@s+1)& (0+255),b
  1543                           
  1544                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  1545  000BAA  5195               	movf	dtoa@s& (0+255),w,b
  1546  000BAC  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1547  000BAE  B4D8               	btfsc	status,2,c
  1548  000BB0  D010               	goto	l3172
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  1552  000BB2  1F9E               	comf	(dtoa@n+7)& (0+255),f,b
  1553  000BB4  1F9D               	comf	(dtoa@n+6)& (0+255),f,b
  1554  000BB6  1F9C               	comf	(dtoa@n+5)& (0+255),f,b
  1555  000BB8  1F9B               	comf	(dtoa@n+4)& (0+255),f,b
  1556  000BBA  1F9A               	comf	(dtoa@n+3)& (0+255),f,b
  1557  000BBC  1F99               	comf	(dtoa@n+2)& (0+255),f,b
  1558  000BBE  1F98               	comf	(dtoa@n+1)& (0+255),f,b
  1559  000BC0  6D97               	negf	dtoa@n& (0+255),b
  1560  000BC2  0E00               	movlw	0
  1561  000BC4  2398               	addwfc	(dtoa@n+1)& (0+255),f,b
  1562  000BC6  2399               	addwfc	(dtoa@n+2)& (0+255),f,b
  1563  000BC8  239A               	addwfc	(dtoa@n+3)& (0+255),f,b
  1564  000BCA  239B               	addwfc	(dtoa@n+4)& (0+255),f,b
  1565  000BCC  239C               	addwfc	(dtoa@n+5)& (0+255),f,b
  1566  000BCE  239D               	addwfc	(dtoa@n+6)& (0+255),f,b
  1567  000BD0  239E               	addwfc	(dtoa@n+7)& (0+255),f,b
  1568  000BD2                     l3172:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  1572  000BD2  AFD2               	btfss	(_prec+1)& (0+255),7,b
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  1576  000BD4  93D3               	bcf	_flags& (0+255),1,b
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  1580  000BD6  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  1581  000BD8  D005               	goto	u1640
  1582  000BDA  51D2               	movf	(_prec+1)& (0+255),w,b
  1583  000BDC  E108               	bnz	l1006
  1584  000BDE  05D1               	decf	_prec& (0+255),w,b
  1585  000BE0  B0D8               	btfsc	status,0,c
  1586  000BE2  D005               	goto	l1006
  1587  000BE4                     u1640:
  1588                           
  1589                           ; BSR set to: 0
  1590  000BE4  0E00               	movlw	0
  1591  000BE6  6F92               	movwf	(dtoa@p+1)& (0+255),b
  1592  000BE8  0E01               	movlw	1
  1593  000BEA  6F91               	movwf	dtoa@p& (0+255),b
  1594  000BEC  D004               	goto	l1008
  1595  000BEE                     l1006:
  1596                           
  1597                           ; BSR set to: 0
  1598  000BEE  C0D1  F091         	movff	_prec,dtoa@p
  1599  000BF2  C0D2  F092         	movff	_prec+1,dtoa@p+1
  1600  000BF6                     l1008:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  1604  000BF6  C0CF  F093         	movff	_width,dtoa@w
  1605  000BFA  C0D0  F094         	movff	_width+1,dtoa@w+1
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  1609  000BFE  5195               	movf	dtoa@s& (0+255),w,b
  1610  000C00  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1611  000C02  A4D8               	btfss	status,2,c
  1612  000C04  D002               	goto	u1660
  1613                           
  1614                           ; BSR set to: 0
  1615  000C06  A5D3               	btfss	_flags& (0+255),2,b
  1616  000C08  D003               	goto	l3186
  1617  000C0A                     u1660:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  1621  000C0A  0793               	decf	dtoa@w& (0+255),f,b
  1622  000C0C  A0D8               	btfss	status,0,c
  1623  000C0E  0794               	decf	(dtoa@w+1)& (0+255),f,b
  1624  000C10                     l3186:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  1628  000C10  0E00               	movlw	0
  1629  000C12  6FA0               	movwf	(dtoa@i+1)& (0+255),b
  1630  000C14  0E1F               	movlw	31
  1631  000C16  6F9F               	movwf	dtoa@i& (0+255),b
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  1635  000C18  0E00               	movlw	0
  1636  000C1A  6FF7               	movwf	(_dbuf+31)& (0+255),b
  1637                           
  1638                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1639  000C1C  D07D               	goto	l3200
  1640  000C1E                     l3190:
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  1644  000C1E  079F               	decf	dtoa@i& (0+255),f,b
  1645  000C20  A0D8               	btfss	status,0,c
  1646  000C22  07A0               	decf	(dtoa@i+1)& (0+255),f,b
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  1650  000C24  0ED8               	movlw	low _dbuf
  1651  000C26  259F               	addwf	dtoa@i& (0+255),w,b
  1652  000C28  6ED9               	movwf	fsr2l,c
  1653  000C2A  0E00               	movlw	high _dbuf
  1654  000C2C  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1655  000C2E  6EDA               	movwf	fsr2h,c
  1656  000C30  C097  F060         	movff	dtoa@n,___aomod@dividend
  1657  000C34  C098  F061         	movff	dtoa@n+1,___aomod@dividend+1
  1658  000C38  C099  F062         	movff	dtoa@n+2,___aomod@dividend+2
  1659  000C3C  C09A  F063         	movff	dtoa@n+3,___aomod@dividend+3
  1660  000C40  C09B  F064         	movff	dtoa@n+4,___aomod@dividend+4
  1661  000C44  C09C  F065         	movff	dtoa@n+5,___aomod@dividend+5
  1662  000C48  C09D  F066         	movff	dtoa@n+6,___aomod@dividend+6
  1663  000C4C  C09E  F067         	movff	dtoa@n+7,___aomod@dividend+7
  1664  000C50  0E0A               	movlw	10
  1665  000C52  6F68               	movwf	___aomod@divisor& (0+255),b
  1666  000C54  0E00               	movlw	0
  1667  000C56  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  1668  000C58  0E00               	movlw	0
  1669  000C5A  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  1670  000C5C  0E00               	movlw	0
  1671  000C5E  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  1672  000C60  0E00               	movlw	0
  1673  000C62  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  1674  000C64  0E00               	movlw	0
  1675  000C66  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  1676  000C68  0E00               	movlw	0
  1677  000C6A  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  1678  000C6C  0E00               	movlw	0
  1679  000C6E  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  1680  000C70  ECE8  F008         	call	___aomod	;wreg free
  1681  000C74  C060  F087         	movff	?___aomod,??_dtoa
  1682  000C78  C061  F088         	movff	?___aomod+1,??_dtoa+1
  1683  000C7C  C062  F089         	movff	?___aomod+2,??_dtoa+2
  1684  000C80  C063  F08A         	movff	?___aomod+3,??_dtoa+3
  1685  000C84  C064  F08B         	movff	?___aomod+4,??_dtoa+4
  1686  000C88  C065  F08C         	movff	?___aomod+5,??_dtoa+5
  1687  000C8C  C066  F08D         	movff	?___aomod+6,??_dtoa+6
  1688  000C90  C067  F08E         	movff	?___aomod+7,??_dtoa+7
  1689  000C94  C087  F072         	movff	??_dtoa,abs@a
  1690  000C98  C089  F073         	movff	??_dtoa+2,abs@a+1
  1691  000C9C  ECA4  F00D         	call	_abs	;wreg free
  1692  000CA0  0100               	movlb	0	; () banked
  1693  000CA2  5172               	movf	?_abs& (0+255),w,b
  1694  000CA4  0F30               	addlw	48
  1695  000CA6  6EDF               	movwf	indf2,c
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  1699  000CA8  0791               	decf	dtoa@p& (0+255),f,b
  1700  000CAA  A0D8               	btfss	status,0,c
  1701  000CAC  0792               	decf	(dtoa@p+1)& (0+255),f,b
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  1705  000CAE  0793               	decf	dtoa@w& (0+255),f,b
  1706  000CB0  A0D8               	btfss	status,0,c
  1707  000CB2  0794               	decf	(dtoa@w+1)& (0+255),f,b
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  1711  000CB4  C097  F060         	movff	dtoa@n,___aodiv@dividend
  1712  000CB8  C098  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  1713  000CBC  C099  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  1714  000CC0  C09A  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  1715  000CC4  C09B  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  1716  000CC8  C09C  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  1717  000CCC  C09D  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  1718  000CD0  C09E  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  1719  000CD4  0E0A               	movlw	10
  1720  000CD6  6F68               	movwf	___aodiv@divisor& (0+255),b
  1721  000CD8  0E00               	movlw	0
  1722  000CDA  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  1723  000CDC  0E00               	movlw	0
  1724  000CDE  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  1725  000CE0  0E00               	movlw	0
  1726  000CE2  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  1727  000CE4  0E00               	movlw	0
  1728  000CE6  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  1729  000CE8  0E00               	movlw	0
  1730  000CEA  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  1731  000CEC  0E00               	movlw	0
  1732  000CEE  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  1733  000CF0  0E00               	movlw	0
  1734  000CF2  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  1735  000CF4  ECA3  F007         	call	___aodiv	;wreg free
  1736  000CF8  C060  F097         	movff	?___aodiv,dtoa@n
  1737  000CFC  C061  F098         	movff	?___aodiv+1,dtoa@n+1
  1738  000D00  C062  F099         	movff	?___aodiv+2,dtoa@n+2
  1739  000D04  C063  F09A         	movff	?___aodiv+3,dtoa@n+3
  1740  000D08  C064  F09B         	movff	?___aodiv+4,dtoa@n+4
  1741  000D0C  C065  F09C         	movff	?___aodiv+5,dtoa@n+5
  1742  000D10  C066  F09D         	movff	?___aodiv+6,dtoa@n+6
  1743  000D14  C067  F09E         	movff	?___aodiv+7,dtoa@n+7
  1744  000D18                     l3200:
  1745                           
  1746                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1747  000D18  0100               	movlb	0	; () banked
  1748  000D1A  BFA0               	btfsc	(dtoa@i+1)& (0+255),7,b
  1749  000D1C  D01F               	goto	u1710
  1750  000D1E  51A0               	movf	(dtoa@i+1)& (0+255),w,b
  1751  000D20  E103               	bnz	u1670
  1752  000D22  059F               	decf	dtoa@i& (0+255),w,b
  1753  000D24  A0D8               	btfss	status,0,c
  1754  000D26  D01A               	goto	u1710
  1755  000D28                     u1670:
  1756                           
  1757                           ; BSR set to: 0
  1758  000D28  5197               	movf	dtoa@n& (0+255),w,b
  1759  000D2A  1198               	iorwf	(dtoa@n+1)& (0+255),w,b
  1760  000D2C  1199               	iorwf	(dtoa@n+2)& (0+255),w,b
  1761  000D2E  119A               	iorwf	(dtoa@n+3)& (0+255),w,b
  1762  000D30  119B               	iorwf	(dtoa@n+4)& (0+255),w,b
  1763  000D32  119C               	iorwf	(dtoa@n+5)& (0+255),w,b
  1764  000D34  119D               	iorwf	(dtoa@n+6)& (0+255),w,b
  1765  000D36  119E               	iorwf	(dtoa@n+7)& (0+255),w,b
  1766  000D38  A4D8               	btfss	status,2,c
  1767  000D3A  D771               	goto	l3190
  1768                           
  1769                           ; BSR set to: 0
  1770  000D3C  BF92               	btfsc	(dtoa@p+1)& (0+255),7,b
  1771  000D3E  D005               	goto	u1690
  1772  000D40  5192               	movf	(dtoa@p+1)& (0+255),w,b
  1773  000D42  E102               	bnz	u1691
  1774  000D44  0591               	decf	dtoa@p& (0+255),w,b
  1775  000D46  B0D8               	btfsc	status,0,c
  1776  000D48                     u1691:
  1777  000D48  D76A               	goto	l3190
  1778  000D4A                     u1690:
  1779                           
  1780                           ; BSR set to: 0
  1781  000D4A  BF94               	btfsc	(dtoa@w+1)& (0+255),7,b
  1782  000D4C  D007               	goto	u1710
  1783  000D4E  5194               	movf	(dtoa@w+1)& (0+255),w,b
  1784  000D50  E103               	bnz	u1700
  1785  000D52  0593               	decf	dtoa@w& (0+255),w,b
  1786  000D54  A0D8               	btfss	status,0,c
  1787  000D56  D002               	goto	u1710
  1788  000D58                     u1700:
  1789                           
  1790                           ; BSR set to: 0
  1791  000D58  B3D3               	btfsc	_flags& (0+255),1,b
  1792  000D5A  D761               	goto	l3190
  1793  000D5C                     u1710:
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  1797  000D5C  5195               	movf	dtoa@s& (0+255),w,b
  1798  000D5E  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1799  000D60  A4D8               	btfss	status,2,c
  1800  000D62  D002               	goto	u1730
  1801                           
  1802                           ; BSR set to: 0
  1803  000D64  A5D3               	btfss	_flags& (0+255),2,b
  1804  000D66  D017               	goto	l3224
  1805  000D68                     u1730:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  1809  000D68  079F               	decf	dtoa@i& (0+255),f,b
  1810  000D6A  A0D8               	btfss	status,0,c
  1811  000D6C  07A0               	decf	(dtoa@i+1)& (0+255),f,b
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  1815  000D6E  5195               	movf	dtoa@s& (0+255),w,b
  1816  000D70  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1817  000D72  A4D8               	btfss	status,2,c
  1818  000D74  D004               	goto	l3220
  1819                           
  1820                           ; BSR set to: 0
  1821  000D76  0E00               	movlw	0
  1822  000D78  6F90               	movwf	(_dtoa$2648+1)& (0+255),b
  1823  000D7A  0E2B               	movlw	43
  1824  000D7C  D003               	goto	L1
  1825  000D7E                     l3220:
  1826                           
  1827                           ; BSR set to: 0
  1828  000D7E  0E00               	movlw	0
  1829  000D80  6F90               	movwf	(_dtoa$2648+1)& (0+255),b
  1830  000D82  0E2D               	movlw	45
  1831  000D84                     L1:
  1832  000D84  6F8F               	movwf	_dtoa$2648& (0+255),b
  1833                           
  1834                           ; BSR set to: 0
  1835  000D86  0ED8               	movlw	low _dbuf
  1836  000D88  259F               	addwf	dtoa@i& (0+255),w,b
  1837  000D8A  6ED9               	movwf	fsr2l,c
  1838  000D8C  0E00               	movlw	high _dbuf
  1839  000D8E  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1840  000D90  6EDA               	movwf	fsr2h,c
  1841  000D92  C08F  FFDF         	movff	_dtoa$2648,indf2
  1842  000D96                     l3224:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  1846  000D96  C07D  F072         	movff	dtoa@fp,pad@fp
  1847  000D9A  C07E  F073         	movff	dtoa@fp+1,pad@fp+1
  1848  000D9E  0ED8               	movlw	low _dbuf
  1849  000DA0  259F               	addwf	dtoa@i& (0+255),w,b
  1850  000DA2  6F74               	movwf	pad@buf& (0+255),b
  1851  000DA4  0E00               	movlw	high _dbuf
  1852  000DA6  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1853  000DA8  6F75               	movwf	(pad@buf+1)& (0+255),b
  1854  000DAA  C093  F076         	movff	dtoa@w,pad@p
  1855  000DAE  C094  F077         	movff	dtoa@w+1,pad@p+1
  1856  000DB2  ECEF  F00A         	call	_pad	;wreg free
  1857  000DB6  C072  F07D         	movff	?_pad,?_dtoa
  1858  000DBA  C073  F07E         	movff	?_pad+1,?_dtoa+1
  1859  000DBE  0012               	return		;funcret
  1860  000DC0                     __end_of_dtoa:
  1861                           	opt callstack 0
  1862                           
  1863 ;; *************** function _pad *****************
  1864 ;; Defined at:
  1865 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  1868 ;;		 -> NULL(0), 
  1869 ;;  buf             2   20[BANK0 ] PTR unsigned char 
  1870 ;;		 -> dbuf(32), 
  1871 ;;  p               2   22[BANK0 ] int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  w               2   27[BANK0 ] int 
  1874 ;;  i               2   25[BANK0 ] int 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2   18[BANK0 ] int 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1884 ;;      Params:         0       6       0       0       0       0       0       0       0
  1885 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1886 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1887 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1888 ;;Total ram usage:       11 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:   12
  1891 ;; This function calls:
  1892 ;;		_fputc
  1893 ;;		_fputs
  1894 ;;		_strlen
  1895 ;; This function is called by:
  1896 ;;		_dtoa
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text5
  1901  0015DE                     __ptext5:
  1902                           	opt callstack 0
  1903  0015DE                     _pad:
  1904                           	opt callstack 14
  1905                           
  1906                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1907                           
  1908                           ;incstack = 0
  1909  0015DE  0100               	movlb	0	; () banked
  1910  0015E0  A1D3               	btfss	_flags& (0+255),0,b
  1911  0015E2  D00A               	goto	l3050
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1915  0015E4  C074  F06B         	movff	pad@buf,fputs@s
  1916  0015E8  C075  F06C         	movff	pad@buf+1,fputs@s+1
  1917  0015EC  C072  F06D         	movff	pad@fp,fputs@fp
  1918  0015F0  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  1919  0015F4  EC6B  F00D         	call	_fputs	;wreg free
  1920  0015F8                     l3050:
  1921                           
  1922                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1923  0015F8  0100               	movlb	0	; () banked
  1924  0015FA  BF77               	btfsc	(pad@p+1)& (0+255),7,b
  1925  0015FC  D005               	goto	l3054
  1926                           
  1927                           ; BSR set to: 0
  1928  0015FE  C076  F07B         	movff	pad@p,pad@w
  1929  001602  C077  F07C         	movff	pad@p+1,pad@w+1
  1930  001606  D004               	goto	l995
  1931  001608                     l3054:
  1932                           
  1933                           ; BSR set to: 0
  1934  001608  0E00               	movlw	0
  1935  00160A  6F7C               	movwf	(pad@w+1)& (0+255),b
  1936  00160C  0E00               	movlw	0
  1937  00160E  6F7B               	movwf	pad@w& (0+255),b
  1938  001610                     l995:
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1942  001610  0E00               	movlw	0
  1943  001612  6F7A               	movwf	(pad@i+1)& (0+255),b
  1944  001614  0E00               	movlw	0
  1945  001616  6F79               	movwf	pad@i& (0+255),b
  1946                           
  1947                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1948  001618  D00D               	goto	l3060
  1949  00161A                     l3056:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1953  00161A  0E00               	movlw	0
  1954  00161C  6F63               	movwf	(fputc@c+1)& (0+255),b
  1955  00161E  0E20               	movlw	32
  1956  001620  6F62               	movwf	fputc@c& (0+255),b
  1957  001622  C072  F064         	movff	pad@fp,fputc@fp
  1958  001626  C073  F065         	movff	pad@fp+1,fputc@fp+1
  1959  00162A  EC3E  F00B         	call	_fputc	;wreg free
  1960                           
  1961                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1962  00162E  0100               	movlb	0	; () banked
  1963  001630  4B79               	infsnz	pad@i& (0+255),f,b
  1964  001632  2B7A               	incf	(pad@i+1)& (0+255),f,b
  1965  001634                     l3060:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1969  001634  517B               	movf	pad@w& (0+255),w,b
  1970  001636  5D79               	subwf	pad@i& (0+255),w,b
  1971  001638  517A               	movf	(pad@i+1)& (0+255),w,b
  1972  00163A  0A80               	xorlw	128
  1973  00163C  6F78               	movwf	??_pad& (0+255),b
  1974  00163E  517C               	movf	(pad@w+1)& (0+255),w,b
  1975  001640  0A80               	xorlw	128
  1976  001642  5978               	subwfb	??_pad& (0+255),w,b
  1977  001644  A0D8               	btfss	status,0,c
  1978  001646  D7E9               	goto	l3056
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  1982  001648  B1D3               	btfsc	_flags& (0+255),0,b
  1983  00164A  D00A               	goto	l3064
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  1987  00164C  C074  F06B         	movff	pad@buf,fputs@s
  1988  001650  C075  F06C         	movff	pad@buf+1,fputs@s+1
  1989  001654  C072  F06D         	movff	pad@fp,fputs@fp
  1990  001658  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  1991  00165C  EC6B  F00D         	call	_fputs	;wreg free
  1992  001660                     l3064:
  1993                           
  1994                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  1995  001660  C074  F060         	movff	pad@buf,strlen@s
  1996  001664  C075  F061         	movff	pad@buf+1,strlen@s+1
  1997  001668  EC3A  F00E         	call	_strlen	;wreg free
  1998  00166C  0100               	movlb	0	; () banked
  1999  00166E  517B               	movf	pad@w& (0+255),w,b
  2000  001670  2560               	addwf	?_strlen& (0+255),w,b
  2001  001672  6F72               	movwf	?_pad& (0+255),b
  2002  001674  517C               	movf	(pad@w+1)& (0+255),w,b
  2003  001676  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  2004  001678  6F73               	movwf	(?_pad+1)& (0+255),b
  2005                           
  2006                           ; BSR set to: 0
  2007  00167A  0012               	return		;funcret
  2008  00167C                     __end_of_pad:
  2009                           	opt callstack 0
  2010                           
  2011 ;; *************** function _strlen *****************
  2012 ;; Defined at:
  2013 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2016 ;;		 -> dbuf(32), 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  2019 ;;		 -> dbuf(32), 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    0[BANK0 ] unsigned int 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2029 ;;      Params:         0       2       0       0       0       0       0       0       0
  2030 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2032 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2033 ;;Total ram usage:        4 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    8
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_pad
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text6
  2044  001C74                     __ptext6:
  2045                           	opt callstack 0
  2046  001C74                     _strlen:
  2047                           	opt callstack 17
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;incstack = 0
  2051  001C74  C060  F062         	movff	strlen@s,strlen@a
  2052  001C78  C061  F063         	movff	strlen@s+1,strlen@a+1
  2053  001C7C  D003               	goto	l3040
  2054  001C7E                     l3038:
  2055  001C7E  0100               	movlb	0	; () banked
  2056  001C80  4B60               	infsnz	strlen@s& (0+255),f,b
  2057  001C82  2B61               	incf	(strlen@s+1)& (0+255),f,b
  2058  001C84                     l3040:
  2059  001C84  C060  FFD9         	movff	strlen@s,fsr2l
  2060  001C88  C061  FFDA         	movff	strlen@s+1,fsr2h
  2061  001C8C  50DF               	movf	indf2,w,c
  2062  001C8E  A4D8               	btfss	status,2,c
  2063  001C90  D7F6               	goto	l3038
  2064  001C92  0100               	movlb	0	; () banked
  2065  001C94  5162               	movf	strlen@a& (0+255),w,b
  2066  001C96  5D60               	subwf	strlen@s& (0+255),w,b
  2067  001C98  6F60               	movwf	?_strlen& (0+255),b
  2068  001C9A  5163               	movf	(strlen@a+1)& (0+255),w,b
  2069  001C9C  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  2070  001C9E  6F61               	movwf	(?_strlen+1)& (0+255),b
  2071                           
  2072                           ; BSR set to: 0
  2073  001CA0  0012               	return		;funcret
  2074  001CA2                     __end_of_strlen:
  2075                           	opt callstack 0
  2076                           
  2077 ;; *************** function _fputs *****************
  2078 ;; Defined at:
  2079 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  s               2   11[BANK0 ] PTR const unsigned char 
  2082 ;;		 -> dbuf(32), 
  2083 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  2084 ;;		 -> NULL(0), 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  i               2   16[BANK0 ] int 
  2087 ;;  c               1   15[BANK0 ] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2   11[BANK0 ] int 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2097 ;;      Params:         0       4       0       0       0       0       0       0       0
  2098 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2100 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2101 ;;Total ram usage:        7 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:   11
  2104 ;; This function calls:
  2105 ;;		_fputc
  2106 ;; This function is called by:
  2107 ;;		_pad
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text7
  2112  001AD6                     __ptext7:
  2113                           	opt callstack 0
  2114  001AD6                     _fputs:
  2115                           	opt callstack 14
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;incstack = 0
  2119  001AD6  0E00               	movlw	0
  2120  001AD8  0100               	movlb	0	; () banked
  2121  001ADA  6F71               	movwf	(fputs@i+1)& (0+255),b
  2122  001ADC  0E00               	movlw	0
  2123  001ADE  6F70               	movwf	fputs@i& (0+255),b
  2124  001AE0  D00C               	goto	l3034
  2125  001AE2                     l3030:
  2126                           
  2127                           ; BSR set to: 0
  2128  001AE2  C06F  F062         	movff	fputs@c,fputc@c
  2129  001AE6  6B63               	clrf	(fputc@c+1)& (0+255),b
  2130  001AE8  C06D  F064         	movff	fputs@fp,fputc@fp
  2131  001AEC  C06E  F065         	movff	fputs@fp+1,fputc@fp+1
  2132  001AF0  EC3E  F00B         	call	_fputc	;wreg free
  2133  001AF4  0100               	movlb	0	; () banked
  2134  001AF6  4B70               	infsnz	fputs@i& (0+255),f,b
  2135  001AF8  2B71               	incf	(fputs@i+1)& (0+255),f,b
  2136  001AFA                     l3034:
  2137                           
  2138                           ; BSR set to: 0
  2139  001AFA  5170               	movf	fputs@i& (0+255),w,b
  2140  001AFC  256B               	addwf	fputs@s& (0+255),w,b
  2141  001AFE  6ED9               	movwf	fsr2l,c
  2142  001B00  5171               	movf	(fputs@i+1)& (0+255),w,b
  2143  001B02  216C               	addwfc	(fputs@s+1)& (0+255),w,b
  2144  001B04  6EDA               	movwf	fsr2h,c
  2145  001B06  50DF               	movf	indf2,w,c
  2146  001B08  6F6F               	movwf	fputs@c& (0+255),b
  2147  001B0A  516F               	movf	fputs@c& (0+255),w,b
  2148  001B0C  B4D8               	btfsc	status,2,c
  2149  001B0E  0012               	return	
  2150  001B10  D7E8               	goto	l3030
  2151  001B12                     __end_of_fputs:
  2152                           	opt callstack 0
  2153                           
  2154 ;; *************** function _fputc *****************
  2155 ;; Defined at:
  2156 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  c               2    2[BANK0 ] int 
  2159 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  2160 ;;		 -> NULL(0), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    2[BANK0 ] int 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         0       4       0       0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2174 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2175 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2176 ;;Total ram usage:        9 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:   10
  2179 ;; This function calls:
  2180 ;;		_putch
  2181 ;; This function is called by:
  2182 ;;		_pad
  2183 ;;		_vfpfcnvrt
  2184 ;;		_fputs
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text8
  2189  00167C                     __ptext8:
  2190                           	opt callstack 0
  2191  00167C                     _fputc:
  2192                           	opt callstack 17
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;incstack = 0
  2196  00167C  0100               	movlb	0	; () banked
  2197  00167E  5164               	movf	fputc@fp& (0+255),w,b
  2198  001680  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  2199  001682  B4D8               	btfsc	status,2,c
  2200  001684  D004               	goto	u1360
  2201                           
  2202                           ; BSR set to: 0
  2203  001686  5164               	movf	fputc@fp& (0+255),w,b
  2204  001688  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  2205  00168A  A4D8               	btfss	status,2,c
  2206  00168C  D004               	goto	l3020
  2207  00168E                     u1360:
  2208                           
  2209                           ; BSR set to: 0
  2210  00168E  5162               	movf	fputc@c& (0+255),w,b
  2211  001690  EC80  F00F         	call	_putch
  2212  001694  0012               	return	
  2213  001696                     l3020:
  2214                           
  2215                           ; BSR set to: 0
  2216  001696  EE20 F004          	lfsr	2,4
  2217  00169A  5164               	movf	fputc@fp& (0+255),w,b
  2218  00169C  26D9               	addwf	fsr2l,f,c
  2219  00169E  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2220  0016A0  22DA               	addwfc	fsr2h,f,c
  2221  0016A2  50DE               	movf	postinc2,w,c
  2222  0016A4  10DE               	iorwf	postinc2,w,c
  2223  0016A6  B4D8               	btfsc	status,2,c
  2224  0016A8  D016               	goto	u1380
  2225                           
  2226                           ; BSR set to: 0
  2227  0016AA  EE20 F004          	lfsr	2,4
  2228  0016AE  5164               	movf	fputc@fp& (0+255),w,b
  2229  0016B0  26D9               	addwf	fsr2l,f,c
  2230  0016B2  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2231  0016B4  22DA               	addwfc	fsr2h,f,c
  2232  0016B6  EE10 F002          	lfsr	1,2
  2233  0016BA  5164               	movf	fputc@fp& (0+255),w,b
  2234  0016BC  26E1               	addwf	fsr1l,f,c
  2235  0016BE  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2236  0016C0  22E2               	addwfc	fsr1h,f,c
  2237  0016C2  50DE               	movf	postinc2,w,c
  2238  0016C4  5CE6               	subwf	postinc1,w,c
  2239  0016C6  50E6               	movf	postinc1,w,c
  2240  0016C8  0A80               	xorlw	128
  2241  0016CA  6F6A               	movwf	(??_fputc+4)& (0+255),b
  2242  0016CC  50DE               	movf	postinc2,w,c
  2243  0016CE  0A80               	xorlw	128
  2244  0016D0  596A               	subwfb	(??_fputc+4)& (0+255),w,b
  2245  0016D2  B0D8               	btfsc	status,0,c
  2246  0016D4  0012               	return	
  2247  0016D6                     u1380:
  2248                           
  2249                           ; BSR set to: 0
  2250  0016D6  EE20 F002          	lfsr	2,2
  2251  0016DA  5164               	movf	fputc@fp& (0+255),w,b
  2252  0016DC  26D9               	addwf	fsr2l,f,c
  2253  0016DE  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2254  0016E0  22DA               	addwfc	fsr2h,f,c
  2255  0016E2  2ADE               	incf	postinc2,f,c
  2256  0016E4  0E00               	movlw	0
  2257  0016E6  22DD               	addwfc	postdec2,f,c
  2258  0016E8  0012               	return		;funcret
  2259  0016EA                     __end_of_fputc:
  2260                           	opt callstack 0
  2261                           
  2262 ;; *************** function _putch *****************
  2263 ;; Defined at:
  2264 ;;		line 145 in file "mcc_generated_files/eusart1.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  txData          1    wreg     unsigned char 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  txData          1    1[BANK0 ] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         0       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2281 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2282 ;;Total ram usage:        1 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    9
  2285 ;; This function calls:
  2286 ;;		_EUSART1_Write
  2287 ;; This function is called by:
  2288 ;;		_fputc
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text9
  2293  001F00                     __ptext9:
  2294                           	opt callstack 0
  2295  001F00                     _putch:
  2296                           	opt callstack 17
  2297                           
  2298                           ;incstack = 0
  2299                           ;putch@txData stored from wreg
  2300  001F00  0100               	movlb	0	; () banked
  2301  001F02  6F61               	movwf	putch@txData& (0+255),b
  2302                           
  2303                           ;mcc_generated_files/eusart1.c: 145: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 146: {;mcc_generated_files/eusart1.c: 147:     EUSART1_Write(txData);
  2304  001F04  0100               	movlb	0	; () banked
  2305  001F06  5161               	movf	putch@txData& (0+255),w,b
  2306  001F08  EC78  F00F         	call	_EUSART1_Write
  2307  001F0C  0012               	return		;funcret
  2308  001F0E                     __end_of_putch:
  2309                           	opt callstack 0
  2310                           
  2311 ;; *************** function _EUSART1_Write *****************
  2312 ;; Defined at:
  2313 ;;		line 131 in file "mcc_generated_files/eusart1.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  txData          1    wreg     unsigned char 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  txData          1    0[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0
  2328 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2330 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2331 ;;Total ram usage:        1 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    8
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_putch
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text10
  2342  001EF0                     __ptext10:
  2343                           	opt callstack 0
  2344  001EF0                     _EUSART1_Write:
  2345                           	opt callstack 17
  2346                           
  2347                           ;incstack = 0
  2348                           ;EUSART1_Write@txData stored from wreg
  2349  001EF0  0100               	movlb	0	; () banked
  2350  001EF2  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  2351  001EF4                     
  2352                           ;mcc_generated_files/eusart1.c: 133:     while(0 == PIR3bits.TX1IF)
  2353                           
  2354                           ;mcc_generated_files/eusart1.c: 134:     {;mcc_generated_files/eusart1.c: 135:     }
  2355  001EF4  010E               	movlb	14	; () banked
  2356  001EF6  A9C8               	btfss	200,4,b	;volatile
  2357  001EF8  D7FD               	goto	l3008
  2358                           
  2359                           ; BSR set to: 14
  2360                           ;mcc_generated_files/eusart1.c: 137:     TX1REG = txData;
  2361  001EFA  C060  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  2362                           
  2363                           ; BSR set to: 14
  2364  001EFE  0012               	return		;funcret
  2365  001F00                     __end_of_EUSART1_Write:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _abs *****************
  2369 ;; Defined at:
  2370 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  a               2   18[BANK0 ] int 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  2   18[BANK0 ] int 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2384 ;;      Params:         0       2       0       0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2386 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2387 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2388 ;;Total ram usage:        4 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    8
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_dtoa
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text11
  2399  001B48                     __ptext11:
  2400                           	opt callstack 0
  2401  001B48                     _abs:
  2402                           	opt callstack 18
  2403                           
  2404                           ; BSR set to: 14
  2405                           ;incstack = 0
  2406  001B48  0100               	movlb	0	; () banked
  2407  001B4A  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  2408  001B4C  D005               	goto	u1450
  2409  001B4E  5173               	movf	(abs@a+1)& (0+255),w,b
  2410  001B50  E110               	bnz	l1718
  2411  001B52  0572               	decf	abs@a& (0+255),w,b
  2412  001B54  B0D8               	btfsc	status,0,c
  2413  001B56  D00D               	goto	l1718
  2414  001B58                     u1450:
  2415                           
  2416                           ; BSR set to: 0
  2417  001B58  C072  F074         	movff	abs@a,??_abs
  2418  001B5C  C073  F075         	movff	abs@a+1,??_abs+1
  2419  001B60  1F74               	comf	??_abs& (0+255),f,b
  2420  001B62  1F75               	comf	(??_abs+1)& (0+255),f,b
  2421  001B64  4B74               	infsnz	??_abs& (0+255),f,b
  2422  001B66  2B75               	incf	(??_abs+1)& (0+255),f,b
  2423  001B68  C074  F072         	movff	??_abs,?_abs
  2424  001B6C  C075  F073         	movff	??_abs+1,?_abs+1
  2425  001B70  0012               	return	
  2426  001B72                     l1718:
  2427                           
  2428                           ; BSR set to: 0
  2429  001B72  C072  F072         	movff	abs@a,?_abs
  2430  001B76  C073  F073         	movff	abs@a+1,?_abs+1
  2431                           
  2432                           ; BSR set to: 0
  2433  001B7A  0012               	return		;funcret
  2434  001B7C                     __end_of_abs:
  2435                           	opt callstack 0
  2436                           
  2437 ;; *************** function ___aomod *****************
  2438 ;; Defined at:
  2439 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  dividend        8    0[BANK0 ] long long 
  2442 ;;  divisor         8    8[BANK0 ] long long 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  sign            1   17[BANK0 ] unsigned char 
  2445 ;;  counter         1   16[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  8    0[BANK0 ] long long 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2455 ;;      Params:         0      16       0       0       0       0       0       0       0
  2456 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2458 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2459 ;;Total ram usage:       18 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    8
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_dtoa
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text12
  2470  0011D0                     __ptext12:
  2471                           	opt callstack 0
  2472  0011D0                     ___aomod:
  2473                           	opt callstack 18
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;incstack = 0
  2477  0011D0  0E00               	movlw	0
  2478  0011D2  0100               	movlb	0	; () banked
  2479  0011D4  6F71               	movwf	___aomod@sign& (0+255),b
  2480                           
  2481                           ; BSR set to: 0
  2482  0011D6  AF67               	btfss	(___aomod@dividend+7)& (0+255),7,b
  2483  0011D8  D012               	goto	l3124
  2484                           
  2485                           ; BSR set to: 0
  2486  0011DA  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  2487  0011DC  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  2488  0011DE  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  2489  0011E0  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  2490  0011E2  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  2491  0011E4  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  2492  0011E6  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  2493  0011E8  6D60               	negf	___aomod@dividend& (0+255),b
  2494  0011EA  0E00               	movlw	0
  2495  0011EC  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2496  0011EE  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2497  0011F0  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2498  0011F2  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2499  0011F4  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2500  0011F6  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2501  0011F8  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2502                           
  2503                           ; BSR set to: 0
  2504  0011FA  0E01               	movlw	1
  2505  0011FC  6F71               	movwf	___aomod@sign& (0+255),b
  2506  0011FE                     l3124:
  2507                           
  2508                           ; BSR set to: 0
  2509  0011FE  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2510  001200  D010               	goto	l3128
  2511                           
  2512                           ; BSR set to: 0
  2513  001202  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  2514  001204  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  2515  001206  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  2516  001208  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  2517  00120A  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  2518  00120C  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  2519  00120E  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  2520  001210  6D68               	negf	___aomod@divisor& (0+255),b
  2521  001212  0E00               	movlw	0
  2522  001214  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2523  001216  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2524  001218  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2525  00121A  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2526  00121C  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2527  00121E  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2528  001220  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2529  001222                     l3128:
  2530                           
  2531                           ; BSR set to: 0
  2532  001222  5168               	movf	___aomod@divisor& (0+255),w,b
  2533  001224  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2534  001226  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2535  001228  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2536  00122A  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2537  00122C  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2538  00122E  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2539  001230  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2540  001232  B4D8               	btfsc	status,2,c
  2541  001234  D03C               	goto	l3144
  2542                           
  2543                           ; BSR set to: 0
  2544  001236  0E01               	movlw	1
  2545  001238  6F70               	movwf	___aomod@counter& (0+255),b
  2546  00123A  D00A               	goto	l3134
  2547  00123C                     l3132:
  2548                           
  2549                           ; BSR set to: 0
  2550  00123C  90D8               	bcf	status,0,c
  2551  00123E  3768               	rlcf	___aomod@divisor& (0+255),f,b
  2552  001240  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2553  001242  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2554  001244  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2555  001246  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2556  001248  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2557  00124A  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2558  00124C  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2559  00124E  2B70               	incf	___aomod@counter& (0+255),f,b
  2560  001250                     l3134:
  2561                           
  2562                           ; BSR set to: 0
  2563  001250  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2564  001252  D7F4               	goto	l3132
  2565  001254                     u1560:
  2566                           
  2567                           ; BSR set to: 0
  2568  001254  5168               	movf	___aomod@divisor& (0+255),w,b
  2569  001256  5D60               	subwf	___aomod@dividend& (0+255),w,b
  2570  001258  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  2571  00125A  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2572  00125C  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2573  00125E  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2574  001260  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2575  001262  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2576  001264  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2577  001266  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2578  001268  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2579  00126A  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2580  00126C  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2581  00126E  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2582  001270  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2583  001272  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2584  001274  A0D8               	btfss	status,0,c
  2585  001276  D010               	goto	l3140
  2586                           
  2587                           ; BSR set to: 0
  2588  001278  5168               	movf	___aomod@divisor& (0+255),w,b
  2589  00127A  5F60               	subwf	___aomod@dividend& (0+255),f,b
  2590  00127C  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  2591  00127E  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2592  001280  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2593  001282  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2594  001284  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2595  001286  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2596  001288  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2597  00128A  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2598  00128C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2599  00128E  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2600  001290  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2601  001292  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2602  001294  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2603  001296  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2604  001298                     l3140:
  2605                           
  2606                           ; BSR set to: 0
  2607  001298  90D8               	bcf	status,0,c
  2608  00129A  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2609  00129C  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2610  00129E  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2611  0012A0  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2612  0012A2  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2613  0012A4  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2614  0012A6  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2615  0012A8  3368               	rrcf	___aomod@divisor& (0+255),f,b
  2616                           
  2617                           ; BSR set to: 0
  2618  0012AA  2F70               	decfsz	___aomod@counter& (0+255),f,b
  2619  0012AC  D7D3               	goto	u1560
  2620  0012AE                     l3144:
  2621                           
  2622                           ; BSR set to: 0
  2623  0012AE  5171               	movf	___aomod@sign& (0+255),w,b
  2624  0012B0  B4D8               	btfsc	status,2,c
  2625  0012B2  D010               	goto	l3148
  2626                           
  2627                           ; BSR set to: 0
  2628  0012B4  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  2629  0012B6  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  2630  0012B8  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  2631  0012BA  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  2632  0012BC  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  2633  0012BE  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  2634  0012C0  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  2635  0012C2  6D60               	negf	___aomod@dividend& (0+255),b
  2636  0012C4  0E00               	movlw	0
  2637  0012C6  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2638  0012C8  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2639  0012CA  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2640  0012CC  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2641  0012CE  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2642  0012D0  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2643  0012D2  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2644  0012D4                     l3148:
  2645                           
  2646                           ; BSR set to: 0
  2647  0012D4  C060  F060         	movff	___aomod@dividend,?___aomod
  2648  0012D8  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  2649  0012DC  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  2650  0012E0  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  2651  0012E4  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  2652  0012E8  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  2653  0012EC  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  2654  0012F0  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  2655                           
  2656                           ; BSR set to: 0
  2657  0012F4  0012               	return		;funcret
  2658  0012F6                     __end_of___aomod:
  2659                           	opt callstack 0
  2660                           
  2661 ;; *************** function ___aodiv *****************
  2662 ;; Defined at:
  2663 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  dividend        8    0[BANK0 ] long long 
  2666 ;;  divisor         8    8[BANK0 ] long long 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  quotient        8   18[BANK0 ] long long 
  2669 ;;  sign            1   17[BANK0 ] unsigned char 
  2670 ;;  counter         1   16[BANK0 ] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  8    0[BANK0 ] long long 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2680 ;;      Params:         0      16       0       0       0       0       0       0       0
  2681 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2683 ;;      Totals:         0      26       0       0       0       0       0       0       0
  2684 ;;Total ram usage:       26 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    8
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_dtoa
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text13
  2695  000F46                     __ptext13:
  2696                           	opt callstack 0
  2697  000F46                     ___aodiv:
  2698                           	opt callstack 18
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;incstack = 0
  2702  000F46  0E00               	movlw	0
  2703  000F48  0100               	movlb	0	; () banked
  2704  000F4A  6F71               	movwf	___aodiv@sign& (0+255),b
  2705                           
  2706                           ; BSR set to: 0
  2707  000F4C  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2708  000F4E  D012               	goto	l3080
  2709                           
  2710                           ; BSR set to: 0
  2711  000F50  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  2712  000F52  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  2713  000F54  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  2714  000F56  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  2715  000F58  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  2716  000F5A  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  2717  000F5C  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  2718  000F5E  6D68               	negf	___aodiv@divisor& (0+255),b
  2719  000F60  0E00               	movlw	0
  2720  000F62  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  2721  000F64  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  2722  000F66  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  2723  000F68  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  2724  000F6A  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  2725  000F6C  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  2726  000F6E  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  2727                           
  2728                           ; BSR set to: 0
  2729  000F70  0E01               	movlw	1
  2730  000F72  6F71               	movwf	___aodiv@sign& (0+255),b
  2731  000F74                     l3080:
  2732                           
  2733                           ; BSR set to: 0
  2734  000F74  AF67               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  2735  000F76  D012               	goto	l3086
  2736                           
  2737                           ; BSR set to: 0
  2738  000F78  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  2739  000F7A  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  2740  000F7C  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  2741  000F7E  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  2742  000F80  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  2743  000F82  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  2744  000F84  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  2745  000F86  6D60               	negf	___aodiv@dividend& (0+255),b
  2746  000F88  0E00               	movlw	0
  2747  000F8A  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  2748  000F8C  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  2749  000F8E  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  2750  000F90  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  2751  000F92  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  2752  000F94  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  2753  000F96  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  2754                           
  2755                           ; BSR set to: 0
  2756  000F98  0E01               	movlw	1
  2757  000F9A  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  2758  000F9C                     l3086:
  2759                           
  2760                           ; BSR set to: 0
  2761  000F9C  EE20  F072         	lfsr	2,___aodiv@quotient
  2762  000FA0  0E07               	movlw	7
  2763  000FA2                     u1481:
  2764  000FA2  6ADE               	clrf	postinc2,c
  2765  000FA4  06E8               	decf	wreg,f,c
  2766  000FA6  E2FD               	bc	u1481
  2767                           
  2768                           ; BSR set to: 0
  2769  000FA8  5168               	movf	___aodiv@divisor& (0+255),w,b
  2770  000FAA  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  2771  000FAC  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  2772  000FAE  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  2773  000FB0  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  2774  000FB2  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  2775  000FB4  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  2776  000FB6  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  2777  000FB8  B4D8               	btfsc	status,2,c
  2778  000FBA  D046               	goto	l3108
  2779                           
  2780                           ; BSR set to: 0
  2781  000FBC  0E01               	movlw	1
  2782  000FBE  6F70               	movwf	___aodiv@counter& (0+255),b
  2783  000FC0  D00A               	goto	l3094
  2784  000FC2                     l3092:
  2785                           
  2786                           ; BSR set to: 0
  2787  000FC2  90D8               	bcf	status,0,c
  2788  000FC4  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  2789  000FC6  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  2790  000FC8  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  2791  000FCA  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  2792  000FCC  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  2793  000FCE  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  2794  000FD0  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  2795  000FD2  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  2796  000FD4  2B70               	incf	___aodiv@counter& (0+255),f,b
  2797  000FD6                     l3094:
  2798                           
  2799                           ; BSR set to: 0
  2800  000FD6  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2801  000FD8  D7F4               	goto	l3092
  2802  000FDA                     u1500:
  2803                           
  2804                           ; BSR set to: 0
  2805  000FDA  90D8               	bcf	status,0,c
  2806  000FDC  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  2807  000FDE  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  2808  000FE0  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  2809  000FE2  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  2810  000FE4  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  2811  000FE6  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  2812  000FE8  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  2813  000FEA  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  2814                           
  2815                           ; BSR set to: 0
  2816  000FEC  5168               	movf	___aodiv@divisor& (0+255),w,b
  2817  000FEE  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  2818  000FF0  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2819  000FF2  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  2820  000FF4  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2821  000FF6  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  2822  000FF8  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2823  000FFA  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  2824  000FFC  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2825  000FFE  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  2826  001000  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2827  001002  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  2828  001004  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2829  001006  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  2830  001008  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2831  00100A  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  2832  00100C  A0D8               	btfss	status,0,c
  2833  00100E  D011               	goto	l3104
  2834                           
  2835                           ; BSR set to: 0
  2836  001010  5168               	movf	___aodiv@divisor& (0+255),w,b
  2837  001012  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  2838  001014  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2839  001016  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  2840  001018  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2841  00101A  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  2842  00101C  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2843  00101E  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  2844  001020  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2845  001022  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  2846  001024  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2847  001026  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  2848  001028  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2849  00102A  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  2850  00102C  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2851  00102E  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  2852                           
  2853                           ; BSR set to: 0
  2854  001030  8172               	bsf	___aodiv@quotient& (0+255),0,b
  2855  001032                     l3104:
  2856                           
  2857                           ; BSR set to: 0
  2858  001032  90D8               	bcf	status,0,c
  2859  001034  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  2860  001036  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  2861  001038  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  2862  00103A  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  2863  00103C  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  2864  00103E  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  2865  001040  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  2866  001042  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  2867                           
  2868                           ; BSR set to: 0
  2869  001044  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  2870  001046  D7C9               	goto	u1500
  2871  001048                     l3108:
  2872                           
  2873                           ; BSR set to: 0
  2874  001048  5171               	movf	___aodiv@sign& (0+255),w,b
  2875  00104A  B4D8               	btfsc	status,2,c
  2876  00104C  D010               	goto	l3112
  2877                           
  2878                           ; BSR set to: 0
  2879  00104E  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  2880  001050  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  2881  001052  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  2882  001054  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  2883  001056  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  2884  001058  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  2885  00105A  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  2886  00105C  6D72               	negf	___aodiv@quotient& (0+255),b
  2887  00105E  0E00               	movlw	0
  2888  001060  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  2889  001062  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  2890  001064  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  2891  001066  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  2892  001068  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  2893  00106A  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  2894  00106C  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  2895  00106E                     l3112:
  2896                           
  2897                           ; BSR set to: 0
  2898  00106E  C072  F060         	movff	___aodiv@quotient,?___aodiv
  2899  001072  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  2900  001076  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  2901  00107A  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  2902  00107E  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  2903  001082  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  2904  001086  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  2905  00108A  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  2906                           
  2907                           ; BSR set to: 0
  2908  00108E  0012               	return		;funcret
  2909  001090                     __end_of___aodiv:
  2910                           	opt callstack 0
  2911                           
  2912 ;; *************** function _carcontrol_init *****************
  2913 ;; Defined at:
  2914 ;;		line 27 in file "car_ctrl.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2931 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    9
  2935 ;; This function calls:
  2936 ;;		_TMR2_SetInterruptHandler
  2937 ;;		_carcontrol_steering
  2938 ;;		_carcontrol_throttle
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text14
  2945  001B7C                     __ptext14:
  2946                           	opt callstack 0
  2947  001B7C                     _carcontrol_init:
  2948                           	opt callstack 21
  2949                           
  2950                           ;car_ctrl.c: 28:     carctl.state = state_unset;
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;incstack = 0
  2954  001B7C  0E00               	movlw	0
  2955  001B7E  0100               	movlb	0	; () banked
  2956  001B80  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;car_ctrl.c: 29:     carcontrol_throttle(0);
  2960  001B82  0E00               	movlw	0
  2961  001B84  EC5B  F00F         	call	_carcontrol_throttle
  2962                           
  2963                           ;car_ctrl.c: 30:     carcontrol_steering(0);
  2964  001B88  0E00               	movlw	0
  2965  001B8A  ECF2  F00D         	call	_carcontrol_steering
  2966                           
  2967                           ;car_ctrl.c: 31:     carctl.servoHighTime = 50;
  2968  001B8E  0E32               	movlw	50
  2969  001B90  0100               	movlb	0	; () banked
  2970  001B92  6FCC               	movwf	(_carctl+5)& (0+255),b	;volatile
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;car_ctrl.c: 33:     TMR2_SetInterruptHandler(carcontrol_ISR);
  2974  001B94  0EF6               	movlw	low _carcontrol_ISR
  2975  001B96  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  2976  001B98  0E12               	movlw	high _carcontrol_ISR
  2977  001B9A  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2978  001B9C  EC97  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
  2979                           
  2980                           ;car_ctrl.c: 34:     stateTime = 0;
  2981  001BA0  0E00               	movlw	0
  2982  001BA2  0100               	movlb	0	; () banked
  2983  001BA4  6FD6               	movwf	(_stateTime+1)& (0+255),b
  2984  001BA6  0E00               	movlw	0
  2985  001BA8  6FD5               	movwf	_stateTime& (0+255),b
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;car_ctrl.c: 35:     carctl.initialized = 1;
  2989  001BAA  0E01               	movlw	1
  2990  001BAC  6FC7               	movwf	_carctl& (0+255),b	;volatile
  2991                           
  2992                           ; BSR set to: 0
  2993  001BAE  0012               	return		;funcret
  2994  001BB0                     __end_of_carcontrol_init:
  2995                           	opt callstack 0
  2996                           
  2997 ;; *************** function _carcontrol_throttle *****************
  2998 ;; Defined at:
  2999 ;;		line 118 in file "car_ctrl.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  throttle        1    wreg     unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  throttle        1    0[BANK0 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0
  3014 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3016 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3017 ;;Total ram usage:        1 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    8
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_main
  3024 ;;		_carcontrol_init
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text15
  3029  001EB6                     __ptext15:
  3030                           	opt callstack 0
  3031  001EB6                     _carcontrol_throttle:
  3032                           	opt callstack 22
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;incstack = 0
  3036                           ;carcontrol_throttle@throttle stored from wreg
  3037  001EB6  0100               	movlb	0	; () banked
  3038  001EB8  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  3039                           
  3040                           ;car_ctrl.c: 120:     if (throttle > 100) throttle = 100;
  3041  001EBA  0E64               	movlw	100
  3042  001EBC  0100               	movlb	0	; () banked
  3043  001EBE  6560               	cpfsgt	carcontrol_throttle@throttle& (0+255),b
  3044  001EC0  D002               	goto	l3656
  3045                           
  3046                           ; BSR set to: 0
  3047  001EC2  0E64               	movlw	100
  3048  001EC4  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  3049  001EC6                     l3656:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;car_ctrl.c: 121:     carctl.throttleHighTime = throttle;
  3053  001EC6  C060  F0CB         	movff	carcontrol_throttle@throttle,_carctl+4	;volatile
  3054                           
  3055                           ; BSR set to: 0
  3056  001ECA  0012               	return		;funcret
  3057  001ECC                     __end_of_carcontrol_throttle:
  3058                           	opt callstack 0
  3059                           
  3060 ;; *************** function _carcontrol_steering *****************
  3061 ;; Defined at:
  3062 ;;		line 93 in file "car_ctrl.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  steering        1    wreg     char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  steering        1    0[BANK0 ] char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0
  3077 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3079 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    8
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;;		_carcontrol_init
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text16
  3092  001BE4                     __ptext16:
  3093                           	opt callstack 0
  3094  001BE4                     _carcontrol_steering:
  3095                           	opt callstack 22
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;incstack = 0
  3099                           ;carcontrol_steering@steering stored from wreg
  3100  001BE4  0100               	movlb	0	; () banked
  3101  001BE6  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3102                           
  3103                           ;car_ctrl.c: 106:     if (steering < servo_min) steering = servo_min;
  3104  001BE8  0100               	movlb	0	; () banked
  3105  001BEA  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3106  001BEC  0A80               	xorlw	128
  3107  001BEE  0F9E               	addlw	158
  3108  001BF0  B0D8               	btfsc	status,0,c
  3109  001BF2  D002               	goto	l3662
  3110                           
  3111                           ; BSR set to: 0
  3112  001BF4  0EE2               	movlw	226
  3113  001BF6  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3114  001BF8                     l3662:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;car_ctrl.c: 107:     if (steering > servo_max) steering = servo_max;
  3118  001BF8  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3119  001BFA  0A80               	xorlw	128
  3120  001BFC  0F63               	addlw	-157
  3121  001BFE  A0D8               	btfss	status,0,c
  3122  001C00  D002               	goto	l3666
  3123                           
  3124                           ; BSR set to: 0
  3125  001C02  0E1C               	movlw	28
  3126  001C04  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3127  001C06                     l3666:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;car_ctrl.c: 109:     steering = steering + servo_trim;
  3131  001C06  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3132  001C08  0F11               	addlw	17
  3133  001C0A  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;car_ctrl.c: 111:     carctl.servoHighTime = steering + 50;
  3137  001C0C  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3138  001C0E  0F32               	addlw	50
  3139  001C10  6FCC               	movwf	(_carctl+5)& (0+255),b	;volatile
  3140                           
  3141                           ; BSR set to: 0
  3142  001C12  0012               	return		;funcret
  3143  001C14                     __end_of_carcontrol_steering:
  3144                           	opt callstack 0
  3145                           
  3146 ;; *************** function _cam_start *****************
  3147 ;; Defined at:
  3148 ;;		line 118 in file "cam.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3164 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3165 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3166 ;;Total ram usage:        1 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    9
  3169 ;; This function calls:
  3170 ;;		_TMR3_SetInterruptHandler
  3171 ;;		_TMR3_StartTimer
  3172 ;;		_TMR3_WriteTimer
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;;		_TMR3_ISR
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text17
  3180  0016EA                     __ptext17:
  3181                           	opt callstack 0
  3182  0016EA                     _cam_start:
  3183                           	opt callstack 0
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;Skip over the trampoline to the duplicate function for level 1
  3187  0016EA  B057               	btfsc	btemp,0,c
  3188  0016EC  EF4B  F00C         	goto	i1_cam_start
  3189  0016F0                     _cam_start$intlevel0:
  3190                           	opt callstack 21
  3191                           
  3192                           ;cam.c: 120:     if (myCam.status == CAM_DONE){
  3193                           
  3194                           ;incstack = 0
  3195  0016F0  C301  FFE8         	movff	_myCam+257,wreg	;volatile
  3196  0016F4  0A02               	xorlw	2
  3197  0016F6  A4D8               	btfss	status,2,c
  3198  0016F8  0012               	return	
  3199                           
  3200                           ;cam.c: 121:         myCam.status = CAM_START;
  3201  0016FA  0E00               	movlw	0
  3202  0016FC  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  3203                           
  3204                           ;cam.c: 122:         myCam.index = 0;
  3205  001700  0E00               	movlw	0
  3206  001702  CFE8 F302          	movff	wreg,_myCam+258	;volatile
  3207  001706  0E00               	movlw	0
  3208  001708  CFE8 F303          	movff	wreg,_myCam+259	;volatile
  3209                           
  3210                           ;cam.c: 123:         myCam.readFromFirst = !myCam.readFromFirst;
  3211  00170C  EE22  F000         	lfsr	2,_myCam
  3212  001710  50DF               	movf	indf2,w,c
  3213  001712  A4D8               	btfss	status,2,c
  3214  001714  D004               	goto	u2430
  3215  001716  0100               	movlb	0	; () banked
  3216  001718  6B62               	clrf	??_cam_start& (0+255),b
  3217  00171A  2B62               	incf	??_cam_start& (0+255),f,b
  3218  00171C  D002               	goto	u2448
  3219  00171E                     u2430:
  3220  00171E  0100               	movlb	0	; () banked
  3221  001720  6B62               	clrf	??_cam_start& (0+255),b
  3222  001722                     u2448:
  3223  001722  C062  F200         	movff	??_cam_start,_myCam
  3224                           
  3225                           ; BSR set to: 0
  3226  001726  8483               	bsf	3971,2,c	;volatile
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;cam.c: 125:         _delay((unsigned long)((3)*(64000000/4000000.0)));
  3230  001728  0E10               	movlw	16
  3231  00172A                     u2637:
  3232  00172A  2EE8               	decfsz	wreg,f,c
  3233  00172C  D7FE               	bra	u2637
  3234  00172E  8283               	bsf	3971,1,c	;volatile
  3235                           
  3236                           ;cam.c: 127:         TMR3_SetInterruptHandler(timer_ISR);
  3237  001730  0E58               	movlw	low _timer_ISR
  3238  001732  0100               	movlb	0	; () banked
  3239  001734  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3240  001736  0E17               	movlw	high _timer_ISR
  3241  001738  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3242  00173A  EC92  F00F         	call	_TMR3_SetInterruptHandler	;wreg free
  3243                           
  3244                           ;cam.c: 128:         TMR3_WriteTimer(timing_val);
  3245  00173E  C052  F060         	movff	_timing_val,TMR3_WriteTimer@timerVal
  3246  001742  C053  F061         	movff	_timing_val+1,TMR3_WriteTimer@timerVal+1
  3247  001746  ECF6  F00E         	call	_TMR3_WriteTimer	;wreg free
  3248                           
  3249                           ;cam.c: 129:         TMR3_StartTimer();
  3250  00174A  ECCC  F00F         	call	_TMR3_StartTimer	;wreg free
  3251                           
  3252                           ;cam.c: 130:         ADCON0bits.ADON = 1;
  3253  00174E  010F               	movlb	15	; () banked
  3254  001750  8F5B               	bsf	91,7,b	;volatile
  3255                           
  3256                           ; BSR set to: 15
  3257                           ;cam.c: 131:         PIE1bits.ADIE = 0;
  3258  001752  010E               	movlb	14	; () banked
  3259  001754  91BE               	bcf	190,0,b	;volatile
  3260  001756  0012               	return		;funcret
  3261  001758                     __end_of_cam_start:
  3262                           	opt callstack 0
  3263                           
  3264 ;; *************** function _TMR3_WriteTimer *****************
  3265 ;; Defined at:
  3266 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  timerVal        2    0[BANK0 ] unsigned short 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3280 ;;      Params:         0       2       0       0       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3283 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3284 ;;Total ram usage:        2 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    8
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_cam_start
  3291 ;;		_TMR3_Reload
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text18
  3296  001DEC                     __ptext18:
  3297                           	opt callstack 0
  3298  001DEC                     _TMR3_WriteTimer:
  3299                           	opt callstack 21
  3300                           
  3301                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  3302                           
  3303                           ;incstack = 0
  3304  001DEC  A4C8               	btfss	4040,2,c	;volatile
  3305  001DEE  D008               	goto	l3648
  3306                           
  3307                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  3308  001DF0  90C8               	bcf	4040,0,c	;volatile
  3309                           
  3310                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  3311  001DF2  0100               	movlb	0	; () banked
  3312  001DF4  5161               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
  3313  001DF6  6EC7               	movwf	4039,c	;volatile
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  3317  001DF8  C060  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  3321  001DFC  80C8               	bsf	4040,0,c	;volatile
  3322                           
  3323                           ;mcc_generated_files/tmr3.c: 140:     }
  3324  001DFE  0012               	return	
  3325  001E00                     l3648:
  3326                           
  3327                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  3328  001E00  0100               	movlb	0	; () banked
  3329  001E02  5161               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
  3330  001E04  6EC7               	movwf	4039,c	;volatile
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  3334  001E06  C060  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  3335                           
  3336                           ; BSR set to: 0
  3337  001E0A  0012               	return		;funcret
  3338  001E0C                     __end_of_TMR3_WriteTimer:
  3339                           	opt callstack 0
  3340                           
  3341 ;; *************** function _TMR3_StartTimer *****************
  3342 ;; Defined at:
  3343 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		None
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    8
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_cam_start
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text19
  3372  001F98                     __ptext19:
  3373                           	opt callstack 0
  3374  001F98                     _TMR3_StartTimer:
  3375                           	opt callstack 21
  3376                           
  3377                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 1;
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;incstack = 0
  3381  001F98  80C8               	bsf	4040,0,c	;volatile
  3382  001F9A  0012               	return		;funcret
  3383  001F9C                     __end_of_TMR3_StartTimer:
  3384                           	opt callstack 0
  3385                           
  3386 ;; *************** function _cam_init *****************
  3387 ;; Defined at:
  3388 ;;		line 103 in file "cam.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3402 ;;      Params:         0       0       0       0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    9
  3409 ;; This function calls:
  3410 ;;		_ADCC_SelectChannel
  3411 ;;		_ADCC_SetInterruptHandler
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text20
  3418  001B12                     __ptext20:
  3419                           	opt callstack 0
  3420  001B12                     _cam_init:
  3421                           	opt callstack 21
  3422                           
  3423                           ;incstack = 0
  3424                           ;cam.c: 104:     do { LATBbits.LATB2 = 0; } while(0);
  3425  001B12  9483               	bcf	3971,2,c	;volatile
  3426                           
  3427                           ;cam.c: 105:     do { LATBbits.LATB1 = 0; } while(0);
  3428  001B14  9283               	bcf	3971,1,c	;volatile
  3429                           
  3430                           ;cam.c: 106:     do { TRISBbits.TRISB2 = 0; } while(0);
  3431  001B16  9488               	bcf	3976,2,c	;volatile
  3432                           
  3433                           ;cam.c: 107:     do { TRISBbits.TRISB1 = 0; } while(0);
  3434  001B18  9288               	bcf	3976,1,c	;volatile
  3435                           
  3436                           ;cam.c: 108:     ADCC_SetInterruptHandler(adc_ready_ISR);
  3437  001B1A  0EDC               	movlw	low _adc_ready_ISR
  3438  001B1C  0100               	movlb	0	; () banked
  3439  001B1E  6F60               	movwf	ADCC_SetInterruptHandler@InterruptHandler& (0+255),b
  3440  001B20  0E13               	movlw	high _adc_ready_ISR
  3441  001B22  6F61               	movwf	(ADCC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3442  001B24  EC8D  F00F         	call	_ADCC_SetInterruptHandler	;wreg free
  3443                           
  3444                           ;cam.c: 109:     ADCC_SelectChannel(CAM_A0,2);
  3445  001B28  0E02               	movlw	2
  3446  001B2A  0100               	movlb	0	; () banked
  3447  001B2C  6F60               	movwf	ADCC_SelectChannel@acquisitionDelay& (0+255),b
  3448  001B2E  0E0B               	movlw	11
  3449  001B30  EC66  F00F         	call	_ADCC_SelectChannel
  3450                           
  3451                           ;cam.c: 110:     myCam.index = 0;
  3452  001B34  0E00               	movlw	0
  3453  001B36  CFE8 F302          	movff	wreg,_myCam+258	;volatile
  3454  001B3A  0E00               	movlw	0
  3455  001B3C  CFE8 F303          	movff	wreg,_myCam+259	;volatile
  3456                           
  3457                           ;cam.c: 111:     myCam.status = CAM_DONE;
  3458  001B40  0E02               	movlw	2
  3459  001B42  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  3460  001B46  0012               	return		;funcret
  3461  001B48                     __end_of_cam_init:
  3462                           	opt callstack 0
  3463                           
  3464 ;; *************** function _ADCC_SetInterruptHandler *****************
  3465 ;; Defined at:
  3466 ;;		line 304 in file "mcc_generated_files/adcc.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3469 ;;		 -> adc_ready_ISR(1), 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3481 ;;      Params:         0       2       0       0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3484 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3485 ;;Total ram usage:        2 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    8
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_cam_init
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text21
  3496  001F1A                     __ptext21:
  3497                           	opt callstack 0
  3498  001F1A                     _ADCC_SetInterruptHandler:
  3499                           	opt callstack 21
  3500                           
  3501                           ;mcc_generated_files/adcc.c: 304: void ADCC_SetInterruptHandler(void (*InterruptHandler)
      +                          (void));mcc_generated_files/adcc.c: 305: {;mcc_generated_files/adcc.c: 306:     ADCC_Int
      +                          erruptHandler = InterruptHandler;
  3502                           
  3503                           ;incstack = 0
  3504  001F1A  C060  F050         	movff	ADCC_SetInterruptHandler@InterruptHandler,_ADCC_InterruptHandler
  3505  001F1E  C061  F051         	movff	ADCC_SetInterruptHandler@InterruptHandler+1,_ADCC_InterruptHandler+1
  3506  001F22  0012               	return		;funcret
  3507  001F24                     __end_of_ADCC_SetInterruptHandler:
  3508                           	opt callstack 0
  3509                           
  3510 ;; *************** function _ADCC_SelectChannel *****************
  3511 ;; Defined at:
  3512 ;;		line 115 in file "mcc_generated_files/adcc.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  channel         1    wreg     enum E9316
  3515 ;;  acquisitionD    1    0[BANK0 ] unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  channel         1    1[BANK0 ] enum E9316
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3527 ;;      Params:         0       1       0       0       0       0       0       0       0
  3528 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3530 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3531 ;;Total ram usage:        2 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    8
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_cam_init
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text22
  3542  001ECC                     __ptext22:
  3543                           	opt callstack 0
  3544  001ECC                     _ADCC_SelectChannel:
  3545                           	opt callstack 21
  3546                           
  3547                           ;incstack = 0
  3548                           ;ADCC_SelectChannel@channel stored from wreg
  3549  001ECC  0100               	movlb	0	; () banked
  3550  001ECE  6F61               	movwf	ADCC_SelectChannel@channel& (0+255),b
  3551                           
  3552                           ;mcc_generated_files/adcc.c: 115: void ADCC_SelectChannel(adcc_channel_t channel, uint8_
      +                          t acquisitionDelay);mcc_generated_files/adcc.c: 116: {;mcc_generated_files/adcc.c: 118: 
      +                              ADPCH = channel;
  3553  001ED0  C061  FF5A         	movff	ADCC_SelectChannel@channel,3930	;volatile
  3554                           
  3555                           ;mcc_generated_files/adcc.c: 120:     ADACQ = acquisitionDelay;
  3556  001ED4  C060  FF57         	movff	ADCC_SelectChannel@acquisitionDelay,3927	;volatile
  3557                           
  3558                           ;mcc_generated_files/adcc.c: 123:     ADCON0bits.ADON = 1;
  3559  001ED8  010F               	movlb	15	; () banked
  3560  001EDA  8F5B               	bsf	91,7,b	;volatile
  3561                           
  3562                           ; BSR set to: 15
  3563  001EDC  0012               	return		;funcret
  3564  001EDE                     __end_of_ADCC_SelectChannel:
  3565                           	opt callstack 0
  3566                           
  3567 ;; *************** function _cam_get *****************
  3568 ;; Defined at:
  3569 ;;		line 150 in file "cam.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  pixels          2    0[BANK0 ] PTR unsigned short 
  3572 ;;		 -> main@cam_pixels(256), 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  i               2    6[BANK0 ] int 
  3575 ;;  i               2    4[BANK0 ] int 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3585 ;;      Params:         0       2       0       0       0       0       0       0       0
  3586 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3587 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3588 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3589 ;;Total ram usage:        8 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    8
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text23
  3600  00149C                     __ptext23:
  3601                           	opt callstack 0
  3602  00149C                     _cam_get:
  3603                           	opt callstack 22
  3604                           
  3605                           ;cam.c: 151:     if (myCam.readFromFirst) {
  3606                           
  3607                           ; BSR set to: 15
  3608                           ;incstack = 0
  3609  00149C  EE22  F000         	lfsr	2,_myCam
  3610  0014A0  50DF               	movf	indf2,w,c
  3611  0014A2  B4D8               	btfsc	status,2,c
  3612  0014A4  D026               	goto	l3934
  3613                           
  3614                           ;cam.c: 152:         for (int i = 0; i < 128; i++){
  3615  0014A6  0E00               	movlw	0
  3616  0014A8  0100               	movlb	0	; () banked
  3617  0014AA  6F65               	movwf	(cam_get@i+1)& (0+255),b
  3618  0014AC  0E00               	movlw	0
  3619  0014AE  6F64               	movwf	cam_get@i& (0+255),b
  3620  0014B0                     l3928:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;cam.c: 153:             pixels[i] = myCam.cam_pixels_1[i];
  3624  0014B0  0E01               	movlw	low (_myCam+1)
  3625  0014B2  2564               	addwf	cam_get@i& (0+255),w,b
  3626  0014B4  6ED9               	movwf	fsr2l,c
  3627  0014B6  0E02               	movlw	high (_myCam+1)
  3628  0014B8  2165               	addwfc	(cam_get@i+1)& (0+255),w,b
  3629  0014BA  6EDA               	movwf	fsr2h,c
  3630  0014BC  50DF               	movf	indf2,w,c
  3631  0014BE  6F62               	movwf	??_cam_get& (0+255),b
  3632  0014C0  6B63               	clrf	(??_cam_get+1)& (0+255),b
  3633  0014C2  90D8               	bcf	status,0,c
  3634  0014C4  3564               	rlcf	cam_get@i& (0+255),w,b
  3635  0014C6  6ED9               	movwf	fsr2l,c
  3636  0014C8  3565               	rlcf	(cam_get@i+1)& (0+255),w,b
  3637  0014CA  6EDA               	movwf	fsr2h,c
  3638  0014CC  5160               	movf	cam_get@pixels& (0+255),w,b
  3639  0014CE  26D9               	addwf	fsr2l,f,c
  3640  0014D0  5161               	movf	(cam_get@pixels+1)& (0+255),w,b
  3641  0014D2  22DA               	addwfc	fsr2h,f,c
  3642  0014D4  C062  FFDE         	movff	??_cam_get,postinc2
  3643  0014D8  C063  FFDD         	movff	??_cam_get+1,postdec2
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;cam.c: 154:         }
  3647  0014DC  4B64               	infsnz	cam_get@i& (0+255),f,b
  3648  0014DE  2B65               	incf	(cam_get@i+1)& (0+255),f,b
  3649                           
  3650                           ; BSR set to: 0
  3651  0014E0  BF65               	btfsc	(cam_get@i+1)& (0+255),7,b
  3652  0014E2  D7E6               	goto	l3928
  3653  0014E4  5165               	movf	(cam_get@i+1)& (0+255),w,b
  3654  0014E6  E12B               	bnz	l968
  3655  0014E8  0E80               	movlw	128
  3656  0014EA  5D64               	subwf	cam_get@i& (0+255),w,b
  3657  0014EC  B0D8               	btfsc	status,0,c
  3658  0014EE  0012               	return	
  3659  0014F0  D7DF               	goto	l3928
  3660  0014F2                     l3934:
  3661                           
  3662                           ;cam.c: 156:         for (int i = 0; i < 128; i++){
  3663  0014F2  0E00               	movlw	0
  3664  0014F4  0100               	movlb	0	; () banked
  3665  0014F6  6F67               	movwf	(cam_get@i_2600+1)& (0+255),b
  3666  0014F8  0E00               	movlw	0
  3667  0014FA  6F66               	movwf	cam_get@i_2600& (0+255),b
  3668  0014FC                     l3940:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;cam.c: 157:             pixels[i] = myCam.cam_pixels_2[i];
  3672  0014FC  0E81               	movlw	low (_myCam+129)
  3673  0014FE  2566               	addwf	cam_get@i_2600& (0+255),w,b
  3674  001500  6ED9               	movwf	fsr2l,c
  3675  001502  0E02               	movlw	high (_myCam+129)
  3676  001504  2167               	addwfc	(cam_get@i_2600+1)& (0+255),w,b
  3677  001506  6EDA               	movwf	fsr2h,c
  3678  001508  50DF               	movf	indf2,w,c
  3679  00150A  6F62               	movwf	??_cam_get& (0+255),b
  3680  00150C  6B63               	clrf	(??_cam_get+1)& (0+255),b
  3681  00150E  90D8               	bcf	status,0,c
  3682  001510  3566               	rlcf	cam_get@i_2600& (0+255),w,b
  3683  001512  6ED9               	movwf	fsr2l,c
  3684  001514  3567               	rlcf	(cam_get@i_2600+1)& (0+255),w,b
  3685  001516  6EDA               	movwf	fsr2h,c
  3686  001518  5160               	movf	cam_get@pixels& (0+255),w,b
  3687  00151A  26D9               	addwf	fsr2l,f,c
  3688  00151C  5161               	movf	(cam_get@pixels+1)& (0+255),w,b
  3689  00151E  22DA               	addwfc	fsr2h,f,c
  3690  001520  C062  FFDE         	movff	??_cam_get,postinc2
  3691  001524  C063  FFDD         	movff	??_cam_get+1,postdec2
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;cam.c: 158:         }
  3695  001528  4B66               	infsnz	cam_get@i_2600& (0+255),f,b
  3696  00152A  2B67               	incf	(cam_get@i_2600+1)& (0+255),f,b
  3697                           
  3698                           ; BSR set to: 0
  3699  00152C  BF67               	btfsc	(cam_get@i_2600+1)& (0+255),7,b
  3700  00152E  D7E6               	goto	l3940
  3701  001530  5167               	movf	(cam_get@i_2600+1)& (0+255),w,b
  3702  001532  E105               	bnz	u2470
  3703  001534  0E80               	movlw	128
  3704  001536  5D66               	subwf	cam_get@i_2600& (0+255),w,b
  3705  001538  B0D8               	btfsc	status,0,c
  3706  00153A  0012               	return	
  3707  00153C  D7DF               	goto	l3940
  3708  00153E                     u2470:
  3709  00153E                     l968:
  3710                           
  3711                           ; BSR set to: 0
  3712  00153E  0012               	return		;funcret
  3713  001540                     __end_of_cam_get:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _SYSTEM_Initialize *****************
  3717 ;; Defined at:
  3718 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:   10
  3739 ;; This function calls:
  3740 ;;		_ADCC_Initialize
  3741 ;;		_CCP1_Initialize
  3742 ;;		_EUSART1_Initialize
  3743 ;;		_INTERRUPT_Initialize
  3744 ;;		_OSCILLATOR_Initialize
  3745 ;;		_PIN_MANAGER_Initialize
  3746 ;;		_PMD_Initialize
  3747 ;;		_TMR1_Initialize
  3748 ;;		_TMR2_Initialize
  3749 ;;		_TMR3_Initialize
  3750 ;; This function is called by:
  3751 ;;		_main
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text24
  3756  001D2A                     __ptext24:
  3757                           	opt callstack 0
  3758  001D2A                     _SYSTEM_Initialize:
  3759                           	opt callstack 20
  3760                           
  3761                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;incstack = 0
  3765  001D2A  EC6F  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3766                           
  3767                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3768  001D2E  EC25  F00F         	call	_PMD_Initialize	;wreg free
  3769                           
  3770                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3771  001D32  ECE3  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  3772                           
  3773                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3774  001D36  EC4F  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  3775                           
  3776                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  3777  001D3A  EC7C  F00C         	call	_ADCC_Initialize	;wreg free
  3778                           
  3779                           ;mcc_generated_files/mcc.c: 57:     TMR3_Initialize();
  3780  001D3E  EC49  F00D         	call	_TMR3_Initialize	;wreg free
  3781                           
  3782                           ;mcc_generated_files/mcc.c: 58:     CCP1_Initialize();
  3783  001D42  EC68  F00E         	call	_CCP1_Initialize	;wreg free
  3784                           
  3785                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3786  001D46  EC51  F00E         	call	_TMR2_Initialize	;wreg free
  3787                           
  3788                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3789  001D4A  EC03  F00D         	call	_TMR1_Initialize	;wreg free
  3790                           
  3791                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  3792  001D4E  EC26  F00D         	call	_EUSART1_Initialize	;wreg free
  3793  001D52  0012               	return		;funcret
  3794  001D54                     __end_of_SYSTEM_Initialize:
  3795                           	opt callstack 0
  3796                           
  3797 ;; *************** function _TMR3_Initialize *****************
  3798 ;; Defined at:
  3799 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3813 ;;      Params:         0       0       0       0       0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3815 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3816 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3817 ;;Total ram usage:        2 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    9
  3820 ;; This function calls:
  3821 ;;		_TMR3_SetInterruptHandler
  3822 ;; This function is called by:
  3823 ;;		_SYSTEM_Initialize
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text25
  3828  001A92                     __ptext25:
  3829                           	opt callstack 0
  3830  001A92                     _TMR3_Initialize:
  3831                           	opt callstack 20
  3832                           
  3833                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  3834                           
  3835                           ;incstack = 0
  3836  001A92  0E00               	movlw	0
  3837  001A94  6EC9               	movwf	4041,c	;volatile
  3838                           
  3839                           ;mcc_generated_files/tmr3.c: 72:     T3GATE = 0x00;
  3840  001A96  0E00               	movlw	0
  3841  001A98  6ECA               	movwf	4042,c	;volatile
  3842                           
  3843                           ;mcc_generated_files/tmr3.c: 75:     T3CLK = 0x01;
  3844  001A9A  0E01               	movlw	1
  3845  001A9C  6ECB               	movwf	4043,c	;volatile
  3846                           
  3847                           ;mcc_generated_files/tmr3.c: 78:     TMR3H = 0xFF;
  3848  001A9E  68C7               	setf	4039,c	;volatile
  3849                           
  3850                           ;mcc_generated_files/tmr3.c: 81:     TMR3L = 0x10;
  3851  001AA0  0E10               	movlw	16
  3852  001AA2  6EC6               	movwf	4038,c	;volatile
  3853                           
  3854                           ;mcc_generated_files/tmr3.c: 84:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  3855  001AA4  50C6               	movf	4038,w,c	;volatile
  3856  001AA6  CFC7 F062          	movff	4039,??_TMR3_Initialize	;volatile
  3857  001AAA  0100               	movlb	0	; () banked
  3858  001AAC  6B63               	clrf	(??_TMR3_Initialize+1)& (0+255),b
  3859  001AAE  C062  F063         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  3860  001AB2  6B62               	clrf	??_TMR3_Initialize& (0+255),b
  3861  001AB4  1162               	iorwf	??_TMR3_Initialize& (0+255),w,b
  3862  001AB6  6E3C               	movwf	_timer3ReloadVal,c	;volatile
  3863  001AB8  5163               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
  3864  001ABA  6E3D               	movwf	_timer3ReloadVal+1,c	;volatile
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;mcc_generated_files/tmr3.c: 87:     PIR4bits.TMR3IF = 0;
  3868  001ABC  010E               	movlb	14	; () banked
  3869  001ABE  95C9               	bcf	201,2,b	;volatile
  3870                           
  3871                           ; BSR set to: 14
  3872                           ;mcc_generated_files/tmr3.c: 90:     PIE4bits.TMR3IE = 1;
  3873  001AC0  85C1               	bsf	193,2,b	;volatile
  3874                           
  3875                           ; BSR set to: 14
  3876                           ;mcc_generated_files/tmr3.c: 93:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  3877  001AC2  0EA4               	movlw	low _TMR3_DefaultInterruptHandler
  3878  001AC4  0100               	movlb	0	; () banked
  3879  001AC6  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3880  001AC8  0E1F               	movlw	high _TMR3_DefaultInterruptHandler
  3881  001ACA  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3882  001ACC  EC92  F00F         	call	_TMR3_SetInterruptHandler	;wreg free
  3883                           
  3884                           ;mcc_generated_files/tmr3.c: 96:     T3CON = 0x03;
  3885  001AD0  0E03               	movlw	3
  3886  001AD2  6EC8               	movwf	4040,c	;volatile
  3887  001AD4  0012               	return		;funcret
  3888  001AD6                     __end_of_TMR3_Initialize:
  3889                           	opt callstack 0
  3890                           
  3891 ;; *************** function _TMR3_SetInterruptHandler *****************
  3892 ;; Defined at:
  3893 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3896 ;;		 -> timer_ISR(1), cam_start(1), TMR3_DefaultInterruptHandler(1), 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3908 ;;      Params:         0       2       0       0       0       0       0       0       0
  3909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3911 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3912 ;;Total ram usage:        2 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    8
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		_TMR3_Initialize
  3919 ;;		_cam_start
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text26
  3924  001F24                     __ptext26:
  3925                           	opt callstack 0
  3926  001F24                     _TMR3_SetInterruptHandler:
  3927                           	opt callstack 21
  3928                           
  3929                           ;mcc_generated_files/tmr3.c: 179:     TMR3_InterruptHandler = InterruptHandler;
  3930                           
  3931                           ;incstack = 0
  3932  001F24  C060  F03A         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3933  001F28  C061  F03B         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3934  001F2C  0012               	return		;funcret
  3935  001F2E                     __end_of_TMR3_SetInterruptHandler:
  3936                           	opt callstack 0
  3937                           
  3938 ;; *************** function _TMR2_Initialize *****************
  3939 ;; Defined at:
  3940 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3954 ;;      Params:         0       0       0       0       0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3958 ;;Total ram usage:        0 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    9
  3961 ;; This function calls:
  3962 ;;		_TMR2_SetInterruptHandler
  3963 ;; This function is called by:
  3964 ;;		_SYSTEM_Initialize
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text27
  3969  001CA2                     __ptext27:
  3970                           	opt callstack 0
  3971  001CA2                     _TMR2_Initialize:
  3972                           	opt callstack 20
  3973                           
  3974                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  3975                           
  3976                           ;incstack = 0
  3977  001CA2  0E01               	movlw	1
  3978  001CA4  6EBE               	movwf	4030,c	;volatile
  3979                           
  3980                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  3981  001CA6  0E00               	movlw	0
  3982  001CA8  6EBD               	movwf	4029,c	;volatile
  3983                           
  3984                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  3985  001CAA  0E00               	movlw	0
  3986  001CAC  6EBF               	movwf	4031,c	;volatile
  3987                           
  3988                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x00;
  3989  001CAE  0E00               	movlw	0
  3990  001CB0  6EBB               	movwf	4027,c	;volatile
  3991                           
  3992                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  3993  001CB2  0E00               	movlw	0
  3994  001CB4  6EBA               	movwf	4026,c	;volatile
  3995                           
  3996                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  3997  001CB6  010E               	movlb	14	; () banked
  3998  001CB8  93C9               	bcf	201,1,b	;volatile
  3999                           
  4000                           ; BSR set to: 14
  4001                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  4002  001CBA  83C1               	bsf	193,1,b	;volatile
  4003                           
  4004                           ; BSR set to: 14
  4005                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  4006  001CBC  0EAC               	movlw	low _TMR2_DefaultInterruptHandler
  4007  001CBE  0100               	movlb	0	; () banked
  4008  001CC0  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  4009  001CC2  0E1F               	movlw	high _TMR2_DefaultInterruptHandler
  4010  001CC4  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4011  001CC6  EC97  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
  4012                           
  4013                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xF0;
  4014  001CCA  0EF0               	movlw	240
  4015  001CCC  6EBC               	movwf	4028,c	;volatile
  4016  001CCE  0012               	return		;funcret
  4017  001CD0                     __end_of_TMR2_Initialize:
  4018                           	opt callstack 0
  4019                           
  4020 ;; *************** function _TMR2_SetInterruptHandler *****************
  4021 ;; Defined at:
  4022 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4025 ;;		 -> carcontrol_ISR(1), TMR2_DefaultInterruptHandler(1), 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         0       2       0       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4040 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4041 ;;Total ram usage:        2 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    8
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_TMR2_Initialize
  4048 ;;		_carcontrol_init
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text28
  4053  001F2E                     __ptext28:
  4054                           	opt callstack 0
  4055  001F2E                     _TMR2_SetInterruptHandler:
  4056                           	opt callstack 21
  4057                           
  4058                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  4059                           
  4060                           ;incstack = 0
  4061  001F2E  C060  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  4062  001F32  C061  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  4063  001F36  0012               	return		;funcret
  4064  001F38                     __end_of_TMR2_SetInterruptHandler:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _TMR1_Initialize *****************
  4068 ;; Defined at:
  4069 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4085 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4086 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4087 ;;Total ram usage:        2 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    9
  4090 ;; This function calls:
  4091 ;;		_TMR1_SetInterruptHandler
  4092 ;; This function is called by:
  4093 ;;		_SYSTEM_Initialize
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text29
  4098  001A06                     __ptext29:
  4099                           	opt callstack 0
  4100  001A06                     _TMR1_Initialize:
  4101                           	opt callstack 20
  4102                           
  4103                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4104                           
  4105                           ;incstack = 0
  4106  001A06  0E00               	movlw	0
  4107  001A08  6ECF               	movwf	4047,c	;volatile
  4108                           
  4109                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4110  001A0A  0E00               	movlw	0
  4111  001A0C  6ED0               	movwf	4048,c	;volatile
  4112                           
  4113                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x01;
  4114  001A0E  0E01               	movlw	1
  4115  001A10  6ED1               	movwf	4049,c	;volatile
  4116                           
  4117                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x63;
  4118  001A12  0E63               	movlw	99
  4119  001A14  6ECD               	movwf	4045,c	;volatile
  4120                           
  4121                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xC0;
  4122  001A16  0EC0               	movlw	192
  4123  001A18  6ECC               	movwf	4044,c	;volatile
  4124                           
  4125                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4126  001A1A  50CC               	movf	4044,w,c	;volatile
  4127  001A1C  CFCD F062          	movff	4045,??_TMR1_Initialize	;volatile
  4128  001A20  0100               	movlb	0	; () banked
  4129  001A22  6B63               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  4130  001A24  C062  F063         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  4131  001A28  6B62               	clrf	??_TMR1_Initialize& (0+255),b
  4132  001A2A  1162               	iorwf	??_TMR1_Initialize& (0+255),w,b
  4133  001A2C  6E40               	movwf	_timer1ReloadVal,c	;volatile
  4134  001A2E  5163               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  4135  001A30  6E41               	movwf	_timer1ReloadVal+1,c	;volatile
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  4139  001A32  010E               	movlb	14	; () banked
  4140  001A34  91C9               	bcf	201,0,b	;volatile
  4141                           
  4142                           ; BSR set to: 14
  4143                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  4144  001A36  81C1               	bsf	193,0,b	;volatile
  4145                           
  4146                           ; BSR set to: 14
  4147                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4148  001A38  0EA6               	movlw	low _TMR1_DefaultInterruptHandler
  4149  001A3A  0100               	movlb	0	; () banked
  4150  001A3C  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4151  001A3E  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  4152  001A40  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4153  001A42  EC9C  F00F         	call	_TMR1_SetInterruptHandler	;wreg free
  4154                           
  4155                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x33;
  4156  001A46  0E33               	movlw	51
  4157  001A48  6ECE               	movwf	4046,c	;volatile
  4158  001A4A  0012               	return		;funcret
  4159  001A4C                     __end_of_TMR1_Initialize:
  4160                           	opt callstack 0
  4161                           
  4162 ;; *************** function _TMR1_SetInterruptHandler *****************
  4163 ;; Defined at:
  4164 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4167 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4179 ;;      Params:         0       2       0       0       0       0       0       0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4182 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4183 ;;Total ram usage:        2 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    8
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_TMR1_Initialize
  4190 ;;		_ping_init
  4191 ;;		_ping_send
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text30
  4196  001F38                     __ptext30:
  4197                           	opt callstack 0
  4198  001F38                     _TMR1_SetInterruptHandler:
  4199                           	opt callstack 20
  4200                           
  4201                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4202                           
  4203                           ;incstack = 0
  4204  001F38  C060  F03E         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4205  001F3C  C061  F03F         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4206  001F40  0012               	return		;funcret
  4207  001F42                     __end_of_TMR1_SetInterruptHandler:
  4208                           	opt callstack 0
  4209                           
  4210 ;; *************** function _PMD_Initialize *****************
  4211 ;; Defined at:
  4212 ;;		line 78 in file "mcc_generated_files/mcc.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    8
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_SYSTEM_Initialize
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text31
  4241  001E4A                     __ptext31:
  4242                           	opt callstack 0
  4243  001E4A                     _PMD_Initialize:
  4244                           	opt callstack 21
  4245                           
  4246                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
  4247                           
  4248                           ;incstack = 0
  4249  001E4A  0E00               	movlw	0
  4250  001E4C  010E               	movlb	14	; () banked
  4251  001E4E  6FDC               	movwf	220,b	;volatile
  4252                           
  4253                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
  4254  001E50  0E00               	movlw	0
  4255  001E52  6FDD               	movwf	221,b	;volatile
  4256                           
  4257                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
  4258  001E54  0E00               	movlw	0
  4259  001E56  6FDE               	movwf	222,b	;volatile
  4260                           
  4261                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
  4262  001E58  0E00               	movlw	0
  4263  001E5A  6FDF               	movwf	223,b	;volatile
  4264                           
  4265                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
  4266  001E5C  0E00               	movlw	0
  4267  001E5E  6FE0               	movwf	224,b	;volatile
  4268                           
  4269                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
  4270  001E60  0E00               	movlw	0
  4271  001E62  6FE1               	movwf	225,b	;volatile
  4272                           
  4273                           ; BSR set to: 14
  4274  001E64  0012               	return		;funcret
  4275  001E66                     __end_of_PMD_Initialize:
  4276                           	opt callstack 0
  4277                           
  4278 ;; *************** function _PIN_MANAGER_Initialize *****************
  4279 ;; Defined at:
  4280 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    9
  4301 ;; This function calls:
  4302 ;;		_IOCCF2_SetInterruptHandler
  4303 ;; This function is called by:
  4304 ;;		_SYSTEM_Initialize
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text32
  4309  0017C6                     __ptext32:
  4310                           	opt callstack 0
  4311  0017C6                     _PIN_MANAGER_Initialize:
  4312                           	opt callstack 20
  4313                           
  4314                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4315                           
  4316                           ; BSR set to: 14
  4317                           ;incstack = 0
  4318  0017C6  0E00               	movlw	0
  4319  0017C8  6E82               	movwf	3970,c	;volatile
  4320                           
  4321                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4322  0017CA  0E00               	movlw	0
  4323  0017CC  6E83               	movwf	3971,c	;volatile
  4324                           
  4325                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4326  0017CE  0E00               	movlw	0
  4327  0017D0  6E84               	movwf	3972,c	;volatile
  4328                           
  4329                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xF0;
  4330  0017D2  0EF0               	movlw	240
  4331  0017D4  6E87               	movwf	3975,c	;volatile
  4332                           
  4333                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF9;
  4334  0017D6  0EF9               	movlw	249
  4335  0017D8  6E88               	movwf	3976,c	;volatile
  4336                           
  4337                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x3D;
  4338  0017DA  0E3D               	movlw	61
  4339  0017DC  6E89               	movwf	3977,c	;volatile
  4340                           
  4341                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x3B;
  4342  0017DE  0E3B               	movlw	59
  4343  0017E0  010F               	movlb	15	; () banked
  4344  0017E2  6F1C               	movwf	28,b	;volatile
  4345                           
  4346                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF9;
  4347  0017E4  0EF9               	movlw	249
  4348  0017E6  6F14               	movwf	20,b	;volatile
  4349                           
  4350                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFA;
  4351  0017E8  0EFA               	movlw	250
  4352  0017EA  6F0C               	movwf	12,b	;volatile
  4353                           
  4354                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  4355  0017EC  0E00               	movlw	0
  4356  0017EE  6F28               	movwf	40,b	;volatile
  4357                           
  4358                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  4359  0017F0  0E00               	movlw	0
  4360  0017F2  6F13               	movwf	19,b	;volatile
  4361                           
  4362                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
  4363  0017F4  0E00               	movlw	0
  4364  0017F6  6F0B               	movwf	11,b	;volatile
  4365                           
  4366                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
  4367  0017F8  0E00               	movlw	0
  4368  0017FA  6F1B               	movwf	27,b	;volatile
  4369                           
  4370                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  4371  0017FC  0E00               	movlw	0
  4372  0017FE  6F0A               	movwf	10,b	;volatile
  4373                           
  4374                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  4375  001800  0E00               	movlw	0
  4376  001802  6F12               	movwf	18,b	;volatile
  4377                           
  4378                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  4379  001804  0E00               	movlw	0
  4380  001806  6F1A               	movwf	26,b	;volatile
  4381                           
  4382                           ; BSR set to: 15
  4383                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  4384  001808  6909               	setf	9,b	;volatile
  4385                           
  4386                           ; BSR set to: 15
  4387                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  4388  00180A  6911               	setf	17,b	;volatile
  4389                           
  4390                           ; BSR set to: 15
  4391                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  4392  00180C  6919               	setf	25,b	;volatile
  4393                           
  4394                           ; BSR set to: 15
  4395                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF2 = 0;
  4396  00180E  9515               	bcf	21,2,b	;volatile
  4397                           
  4398                           ; BSR set to: 15
  4399                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN2 = 0;
  4400  001810  9516               	bcf	22,2,b	;volatile
  4401                           
  4402                           ; BSR set to: 15
  4403                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP2 = 1;
  4404  001812  8517               	bsf	23,2,b	;volatile
  4405                           
  4406                           ; BSR set to: 15
  4407                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
  4408  001814  0EA8               	movlw	low _IOCCF2_DefaultInterruptHandler
  4409  001816  0100               	movlb	0	; () banked
  4410  001818  6F60               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler& (0+255),b
  4411  00181A  0E1F               	movlw	high _IOCCF2_DefaultInterruptHandler
  4412  00181C  6F61               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4413  00181E  ECA1  F00F         	call	_IOCCF2_SetInterruptHandler	;wreg free
  4414                           
  4415                           ;mcc_generated_files/pin_manager.c: 119:     PIE0bits.IOCIE = 1;
  4416  001822  010E               	movlb	14	; () banked
  4417  001824  89BD               	bsf	189,4,b	;volatile
  4418                           
  4419                           ; BSR set to: 14
  4420                           ;mcc_generated_files/pin_manager.c: 122:     CCP1PPS = 0x12;
  4421  001826  0E12               	movlw	18
  4422  001828  6FAA               	movwf	170,b	;volatile
  4423                           
  4424                           ; BSR set to: 14
  4425                           ;mcc_generated_files/pin_manager.c: 123:     RC6PPS = 0x09;
  4426  00182A  0E09               	movlw	9
  4427  00182C  6FF8               	movwf	248,b	;volatile
  4428                           
  4429                           ; BSR set to: 14
  4430  00182E  0012               	return		;funcret
  4431  001830                     __end_of_PIN_MANAGER_Initialize:
  4432                           	opt callstack 0
  4433                           
  4434 ;; *************** function _IOCCF2_SetInterruptHandler *****************
  4435 ;; Defined at:
  4436 ;;		line 153 in file "mcc_generated_files/pin_manager.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4439 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4451 ;;      Params:         0       2       0       0       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4454 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4455 ;;Total ram usage:        2 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    8
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_PIN_MANAGER_Initialize
  4462 ;;		_ping_init
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text33
  4467  001F42                     __ptext33:
  4468                           	opt callstack 0
  4469  001F42                     _IOCCF2_SetInterruptHandler:
  4470                           	opt callstack 20
  4471                           
  4472                           ;mcc_generated_files/pin_manager.c: 154:     IOCCF2_InterruptHandler = InterruptHandler;
  4473                           
  4474                           ; BSR set to: 14
  4475                           ;incstack = 0
  4476  001F42  C060  F044         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  4477  001F46  C061  F045         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  4478  001F4A  0012               	return		;funcret
  4479  001F4C                     __end_of_IOCCF2_SetInterruptHandler:
  4480                           	opt callstack 0
  4481                           
  4482 ;; *************** function _OSCILLATOR_Initialize *****************
  4483 ;; Defined at:
  4484 ;;		line 64 in file "mcc_generated_files/mcc.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;		None
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;		None
  4489 ;; Return value:  Size  Location     Type
  4490 ;;                  1    wreg      void 
  4491 ;; Registers used:
  4492 ;;		wreg, status,2
  4493 ;; Tracked objects:
  4494 ;;		On entry : 0/0
  4495 ;;		On exit  : 0/0
  4496 ;;		Unchanged: 0/0
  4497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4498 ;;      Params:         0       0       0       0       0       0       0       0       0
  4499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4501 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4502 ;;Total ram usage:        0 bytes
  4503 ;; Hardware stack levels used:    1
  4504 ;; Hardware stack levels required when called:    8
  4505 ;; This function calls:
  4506 ;;		Nothing
  4507 ;; This function is called by:
  4508 ;;		_SYSTEM_Initialize
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text34
  4513  001E9E                     __ptext34:
  4514                           	opt callstack 0
  4515  001E9E                     _OSCILLATOR_Initialize:
  4516                           	opt callstack 21
  4517                           
  4518                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x60;
  4519                           
  4520                           ;incstack = 0
  4521  001E9E  0E60               	movlw	96
  4522  001EA0  010E               	movlb	14	; () banked
  4523  001EA2  6FD3               	movwf	211,b	;volatile
  4524                           
  4525                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
  4526  001EA4  0E00               	movlw	0
  4527  001EA6  6FD5               	movwf	213,b	;volatile
  4528                           
  4529                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
  4530  001EA8  0E00               	movlw	0
  4531  001EAA  6FD7               	movwf	215,b	;volatile
  4532                           
  4533                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x08;
  4534  001EAC  0E08               	movlw	8
  4535  001EAE  6FD9               	movwf	217,b	;volatile
  4536                           
  4537                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  4538  001EB0  0E00               	movlw	0
  4539  001EB2  6FD8               	movwf	216,b	;volatile
  4540                           
  4541                           ; BSR set to: 14
  4542  001EB4  0012               	return		;funcret
  4543  001EB6                     __end_of_OSCILLATOR_Initialize:
  4544                           	opt callstack 0
  4545                           
  4546 ;; *************** function _INTERRUPT_Initialize *****************
  4547 ;; Defined at:
  4548 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		None
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4565 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4566 ;;Total ram usage:        0 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    8
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_SYSTEM_Initialize
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text35
  4577  001EDE                     __ptext35:
  4578                           	opt callstack 0
  4579  001EDE                     _INTERRUPT_Initialize:
  4580                           	opt callstack 21
  4581                           
  4582                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 1;
  4583                           
  4584                           ; BSR set to: 14
  4585                           ;incstack = 0
  4586  001EDE  8AF2               	bsf	4082,5,c	;volatile
  4587                           
  4588                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR4bits.TMR2IP = 1;
  4589  001EE0  010E               	movlb	14	; () banked
  4590  001EE2  83B9               	bsf	185,1,b	;volatile
  4591                           
  4592                           ;mcc_generated_files/interrupt_manager.c: 64:     IPR4bits.TMR1IP = 0;
  4593  001EE4  91B9               	bcf	185,0,b	;volatile
  4594                           
  4595                           ;mcc_generated_files/interrupt_manager.c: 67:     IPR4bits.TMR3IP = 0;
  4596  001EE6  95B9               	bcf	185,2,b	;volatile
  4597                           
  4598                           ;mcc_generated_files/interrupt_manager.c: 70:     IPR6bits.CCP1IP = 0;
  4599  001EE8  91BB               	bcf	187,0,b	;volatile
  4600                           
  4601                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR0bits.IOCIP = 0;
  4602  001EEA  99B5               	bcf	181,4,b	;volatile
  4603                           
  4604                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 0;
  4605  001EEC  91B6               	bcf	182,0,b	;volatile
  4606                           
  4607                           ; BSR set to: 14
  4608  001EEE  0012               	return		;funcret
  4609  001EF0                     __end_of_INTERRUPT_Initialize:
  4610                           	opt callstack 0
  4611                           
  4612 ;; *************** function _EUSART1_Initialize *****************
  4613 ;; Defined at:
  4614 ;;		line 65 in file "mcc_generated_files/eusart1.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4628 ;;      Params:         0       0       0       0       0       0       0       0       0
  4629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4631 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4632 ;;Total ram usage:        0 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    9
  4635 ;; This function calls:
  4636 ;;		_EUSART1_SetErrorHandler
  4637 ;;		_EUSART1_SetFramingErrorHandler
  4638 ;;		_EUSART1_SetOverrunErrorHandler
  4639 ;; This function is called by:
  4640 ;;		_SYSTEM_Initialize
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text36
  4645  001A4C                     __ptext36:
  4646                           	opt callstack 0
  4647  001A4C                     _EUSART1_Initialize:
  4648                           	opt callstack 20
  4649                           
  4650                           ;mcc_generated_files/eusart1.c: 70:     BAUD1CON = 0x08;
  4651                           
  4652                           ; BSR set to: 14
  4653                           ;incstack = 0
  4654  001A4C  0E08               	movlw	8
  4655  001A4E  6E9E               	movwf	3998,c	;volatile
  4656                           
  4657                           ;mcc_generated_files/eusart1.c: 73:     RC1STA = 0x80;
  4658  001A50  0E80               	movlw	128
  4659  001A52  6E9C               	movwf	3996,c	;volatile
  4660                           
  4661                           ;mcc_generated_files/eusart1.c: 76:     TX1STA = 0x24;
  4662  001A54  0E24               	movlw	36
  4663  001A56  6E9D               	movwf	3997,c	;volatile
  4664                           
  4665                           ;mcc_generated_files/eusart1.c: 79:     SP1BRGL = 0x82;
  4666  001A58  0E82               	movlw	130
  4667  001A5A  6E9A               	movwf	3994,c	;volatile
  4668                           
  4669                           ;mcc_generated_files/eusart1.c: 82:     SP1BRGH = 0x06;
  4670  001A5C  0E06               	movlw	6
  4671  001A5E  6E9B               	movwf	3995,c	;volatile
  4672                           
  4673                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4674  001A60  0E00               	movlw	0
  4675  001A62  0100               	movlb	0	; () banked
  4676  001A64  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4677  001A66  0E00               	movlw	0
  4678  001A68  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4679  001A6A  ECAB  F00F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4680                           
  4681                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4682  001A6E  0E00               	movlw	0
  4683  001A70  0100               	movlb	0	; () banked
  4684  001A72  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4685  001A74  0E00               	movlw	0
  4686  001A76  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4687  001A78  ECA6  F00F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4688                           
  4689                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4690  001A7C  0E00               	movlw	0
  4691  001A7E  0100               	movlb	0	; () banked
  4692  001A80  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4693  001A82  0E00               	movlw	0
  4694  001A84  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4695  001A86  ECB0  F00F         	call	_EUSART1_SetErrorHandler	;wreg free
  4696                           
  4697                           ;mcc_generated_files/eusart1.c: 89:     eusart1RxLastError.status = 0;
  4698  001A8A  0E00               	movlw	0
  4699  001A8C  0100               	movlb	0	; () banked
  4700  001A8E  6FD7               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4701                           
  4702                           ; BSR set to: 0
  4703  001A90  0012               	return		;funcret
  4704  001A92                     __end_of_EUSART1_Initialize:
  4705                           	opt callstack 0
  4706                           
  4707 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4708 ;; Defined at:
  4709 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4712 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;		None
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4724 ;;      Params:         0       2       0       0       0       0       0       0       0
  4725 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4727 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4728 ;;Total ram usage:        2 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    8
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_EUSART1_Initialize
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text37
  4739  001F4C                     __ptext37:
  4740                           	opt callstack 0
  4741  001F4C                     _EUSART1_SetOverrunErrorHandler:
  4742                           	opt callstack 20
  4743                           
  4744                           ;mcc_generated_files/eusart1.c: 170:     EUSART1_OverrunErrorHandler = interruptHandler;
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;incstack = 0
  4748  001F4C  C060  F0FA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4749  001F50  C061  F0FB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4750  001F54  0012               	return		;funcret
  4751  001F56                     __end_of_EUSART1_SetOverrunErrorHandler:
  4752                           	opt callstack 0
  4753                           
  4754 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4755 ;; Defined at:
  4756 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4759 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      void 
  4764 ;; Registers used:
  4765 ;;		wreg, status,2, status,0
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4771 ;;      Params:         0       2       0       0       0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4774 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4775 ;;Total ram usage:        2 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    8
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_EUSART1_Initialize
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text38
  4786  001F56                     __ptext38:
  4787                           	opt callstack 0
  4788  001F56                     _EUSART1_SetFramingErrorHandler:
  4789                           	opt callstack 20
  4790                           
  4791                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_FramingErrorHandler = interruptHandler;
  4792                           
  4793                           ;incstack = 0
  4794  001F56  C060  F0FC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4795  001F5A  C061  F0FD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4796  001F5E  0012               	return		;funcret
  4797  001F60                     __end_of_EUSART1_SetFramingErrorHandler:
  4798                           	opt callstack 0
  4799                           
  4800 ;; *************** function _EUSART1_SetErrorHandler *****************
  4801 ;; Defined at:
  4802 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4805 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4817 ;;      Params:         0       2       0       0       0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4820 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4821 ;;Total ram usage:        2 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    8
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_EUSART1_Initialize
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text39
  4832  001F60                     __ptext39:
  4833                           	opt callstack 0
  4834  001F60                     _EUSART1_SetErrorHandler:
  4835                           	opt callstack 20
  4836                           
  4837                           ;mcc_generated_files/eusart1.c: 174:     EUSART1_ErrorHandler = interruptHandler;
  4838                           
  4839                           ;incstack = 0
  4840  001F60  C060  F0F8         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4841  001F64  C061  F0F9         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4842  001F68  0012               	return		;funcret
  4843  001F6A                     __end_of_EUSART1_SetErrorHandler:
  4844                           	opt callstack 0
  4845                           
  4846 ;; *************** function _CCP1_Initialize *****************
  4847 ;; Defined at:
  4848 ;;		line 65 in file "mcc_generated_files/ccp1.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4865 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    9
  4869 ;; This function calls:
  4870 ;;		_CCP1_SetCallBack
  4871 ;; This function is called by:
  4872 ;;		_SYSTEM_Initialize
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text40
  4877  001CD0                     __ptext40:
  4878                           	opt callstack 0
  4879  001CD0                     _CCP1_Initialize:
  4880                           	opt callstack 20
  4881                           
  4882                           ;mcc_generated_files/ccp1.c: 70:  CCP1CON = 0x84;
  4883                           
  4884                           ;incstack = 0
  4885  001CD0  0E84               	movlw	132
  4886  001CD2  6EAB               	movwf	4011,c	;volatile
  4887                           
  4888                           ;mcc_generated_files/ccp1.c: 73:  CCP1CAP = 0x00;
  4889  001CD4  0E00               	movlw	0
  4890  001CD6  6EAC               	movwf	4012,c	;volatile
  4891                           
  4892                           ;mcc_generated_files/ccp1.c: 76:  CCPR1H = 0x00;
  4893  001CD8  0E00               	movlw	0
  4894  001CDA  6EAA               	movwf	4010,c	;volatile
  4895                           
  4896                           ;mcc_generated_files/ccp1.c: 79:  CCPR1L = 0x00;
  4897  001CDC  0E00               	movlw	0
  4898  001CDE  6EA9               	movwf	4009,c	;volatile
  4899                           
  4900                           ;mcc_generated_files/ccp1.c: 82:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  4901  001CE0  0EAA               	movlw	low _CCP1_DefaultCallBack
  4902  001CE2  0100               	movlb	0	; () banked
  4903  001CE4  6F60               	movwf	CCP1_SetCallBack@customCallBack& (0+255),b
  4904  001CE6  0E1F               	movlw	high _CCP1_DefaultCallBack
  4905  001CE8  6F61               	movwf	(CCP1_SetCallBack@customCallBack+1)& (0+255),b
  4906  001CEA  ECB5  F00F         	call	_CCP1_SetCallBack	;wreg free
  4907                           
  4908                           ;mcc_generated_files/ccp1.c: 85:  CCPTMRSbits.C1TSEL = 0x1;
  4909  001CEE  50AD               	movf	4013,w,c	;volatile
  4910  001CF0  0BFC               	andlw	-4
  4911  001CF2  0901               	iorlw	1
  4912  001CF4  6EAD               	movwf	4013,c	;volatile
  4913                           
  4914                           ;mcc_generated_files/ccp1.c: 88:     PIR6bits.CCP1IF = 0;
  4915  001CF6  010E               	movlb	14	; () banked
  4916  001CF8  91CB               	bcf	203,0,b	;volatile
  4917                           
  4918                           ; BSR set to: 14
  4919                           ;mcc_generated_files/ccp1.c: 91:     PIE6bits.CCP1IE = 1;
  4920  001CFA  81C3               	bsf	195,0,b	;volatile
  4921                           
  4922                           ; BSR set to: 14
  4923  001CFC  0012               	return		;funcret
  4924  001CFE                     __end_of_CCP1_Initialize:
  4925                           	opt callstack 0
  4926                           
  4927 ;; *************** function _CCP1_SetCallBack *****************
  4928 ;; Defined at:
  4929 ;;		line 109 in file "mcc_generated_files/ccp1.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  4932 ;;		 -> ping_CCP1_triggered(1), CCP1_DefaultCallBack(1), 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4944 ;;      Params:         0       2       0       0       0       0       0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4947 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4948 ;;Total ram usage:        2 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    8
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_CCP1_Initialize
  4955 ;;		_ping_init
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text41
  4960  001F6A                     __ptext41:
  4961                           	opt callstack 0
  4962  001F6A                     _CCP1_SetCallBack:
  4963                           	opt callstack 20
  4964                           
  4965                           ;mcc_generated_files/ccp1.c: 110:     CCP1_CallBack = customCallBack;
  4966                           
  4967                           ; BSR set to: 14
  4968                           ;incstack = 0
  4969  001F6A  C060  F042         	movff	CCP1_SetCallBack@customCallBack,_CCP1_CallBack
  4970  001F6E  C061  F043         	movff	CCP1_SetCallBack@customCallBack+1,_CCP1_CallBack+1
  4971  001F72  0012               	return		;funcret
  4972  001F74                     __end_of_CCP1_SetCallBack:
  4973                           	opt callstack 0
  4974                           
  4975 ;; *************** function _ADCC_Initialize *****************
  4976 ;; Defined at:
  4977 ;;		line 59 in file "mcc_generated_files/adcc.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4991 ;;      Params:         0       0       0       0       0       0       0       0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4994 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4995 ;;Total ram usage:        0 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    8
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_SYSTEM_Initialize
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text42
  5006  0018F8                     __ptext42:
  5007                           	opt callstack 0
  5008  0018F8                     _ADCC_Initialize:
  5009                           	opt callstack 21
  5010                           
  5011                           ;mcc_generated_files/adcc.c: 61:     ADCC_InterruptHandler = ((void*)0);
  5012                           
  5013                           ;incstack = 0
  5014  0018F8  0E00               	movlw	0
  5015  0018FA  6E50               	movwf	_ADCC_InterruptHandler,c
  5016  0018FC  0E00               	movlw	0
  5017  0018FE  6E51               	movwf	_ADCC_InterruptHandler+1,c
  5018                           
  5019                           ;mcc_generated_files/adcc.c: 65:     ADCON1 = 0x00;
  5020  001900  0E00               	movlw	0
  5021  001902  010F               	movlb	15	; () banked
  5022  001904  6F54               	movwf	84,b	;volatile
  5023                           
  5024                           ; BSR set to: 15
  5025                           ;mcc_generated_files/adcc.c: 67:     ADCON2 = 0x00;
  5026  001906  0E00               	movlw	0
  5027  001908  6F55               	movwf	85,b	;volatile
  5028                           
  5029                           ; BSR set to: 15
  5030                           ;mcc_generated_files/adcc.c: 69:     ADCON3 = 0x00;
  5031  00190A  0E00               	movlw	0
  5032  00190C  6F56               	movwf	86,b	;volatile
  5033                           
  5034                           ; BSR set to: 15
  5035                           ;mcc_generated_files/adcc.c: 71:     ADACT = 0x00;
  5036  00190E  0E00               	movlw	0
  5037  001910  6F51               	movwf	81,b	;volatile
  5038                           
  5039                           ; BSR set to: 15
  5040                           ;mcc_generated_files/adcc.c: 73:     ADSTAT = 0x00;
  5041  001912  0E00               	movlw	0
  5042  001914  6E60               	movwf	3936,c	;volatile
  5043                           
  5044                           ; BSR set to: 15
  5045                           ;mcc_generated_files/adcc.c: 75:     ADCLK = 0x00;
  5046  001916  0E00               	movlw	0
  5047  001918  6F52               	movwf	82,b	;volatile
  5048                           
  5049                           ; BSR set to: 15
  5050                           ;mcc_generated_files/adcc.c: 77:     ADREF = 0x00;
  5051  00191A  0E00               	movlw	0
  5052  00191C  6F53               	movwf	83,b	;volatile
  5053                           
  5054                           ; BSR set to: 15
  5055                           ;mcc_generated_files/adcc.c: 79:     ADCAP = 0x00;
  5056  00191E  0E00               	movlw	0
  5057  001920  6F58               	movwf	88,b	;volatile
  5058                           
  5059                           ; BSR set to: 15
  5060                           ;mcc_generated_files/adcc.c: 81:     ADPRE = 0x00;
  5061  001922  0E00               	movlw	0
  5062  001924  6F59               	movwf	89,b	;volatile
  5063                           
  5064                           ; BSR set to: 15
  5065                           ;mcc_generated_files/adcc.c: 83:     ADACQ = 0x00;
  5066  001926  0E00               	movlw	0
  5067  001928  6F57               	movwf	87,b	;volatile
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
  5071  00192A  0E00               	movlw	0
  5072  00192C  6F5A               	movwf	90,b	;volatile
  5073                           
  5074                           ; BSR set to: 15
  5075                           ;mcc_generated_files/adcc.c: 87:     ADRPT = 0x00;
  5076  00192E  0E00               	movlw	0
  5077  001930  6E61               	movwf	3937,c	;volatile
  5078                           
  5079                           ; BSR set to: 15
  5080                           ;mcc_generated_files/adcc.c: 89:     ADLTHL = 0x00;
  5081  001932  0E00               	movlw	0
  5082  001934  6E65               	movwf	3941,c	;volatile
  5083                           
  5084                           ; BSR set to: 15
  5085                           ;mcc_generated_files/adcc.c: 91:     ADLTHH = 0x00;
  5086  001936  0E00               	movlw	0
  5087  001938  6E66               	movwf	3942,c	;volatile
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;mcc_generated_files/adcc.c: 93:     ADUTHL = 0x00;
  5091  00193A  0E00               	movlw	0
  5092  00193C  6E67               	movwf	3943,c	;volatile
  5093                           
  5094                           ; BSR set to: 15
  5095                           ;mcc_generated_files/adcc.c: 95:     ADUTHH = 0x00;
  5096  00193E  0E00               	movlw	0
  5097  001940  6E68               	movwf	3944,c	;volatile
  5098                           
  5099                           ; BSR set to: 15
  5100                           ;mcc_generated_files/adcc.c: 97:     ADSTPTL = 0x00;
  5101  001942  0E00               	movlw	0
  5102  001944  6E63               	movwf	3939,c	;volatile
  5103                           
  5104                           ; BSR set to: 15
  5105                           ;mcc_generated_files/adcc.c: 99:     ADSTPTH = 0x00;
  5106  001946  0E00               	movlw	0
  5107  001948  6E64               	movwf	3940,c	;volatile
  5108                           
  5109                           ; BSR set to: 15
  5110                           ;mcc_generated_files/adcc.c: 102:     ADCON0 = 0x90;
  5111  00194A  0E90               	movlw	144
  5112  00194C  6F5B               	movwf	91,b	;volatile
  5113                           
  5114                           ; BSR set to: 15
  5115                           ;mcc_generated_files/adcc.c: 105:     PIR1bits.ADIF = 0;
  5116  00194E  010E               	movlb	14	; () banked
  5117  001950  91C6               	bcf	198,0,b	;volatile
  5118                           
  5119                           ; BSR set to: 14
  5120                           ;mcc_generated_files/adcc.c: 107:     PIE1bits.ADIE = 1;
  5121  001952  81BE               	bsf	190,0,b	;volatile
  5122                           
  5123                           ; BSR set to: 14
  5124  001954  0012               	return		;funcret
  5125  001956                     __end_of_ADCC_Initialize:
  5126                           	opt callstack 0
  5127                           
  5128 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  5129 ;; Defined at:
  5130 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          9       0       0       0       0       0       0       0       0
  5147 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:        9 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    7
  5151 ;; This function calls:
  5152 ;;		_ADCC_ISR
  5153 ;;		_CCP1_CaptureISR
  5154 ;;		_PIN_MANAGER_IOC
  5155 ;;		_TMR1_ISR
  5156 ;;		_TMR3_ISR
  5157 ;; This function is called by:
  5158 ;;		Interrupt level 1
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	intcodelo
  5163  000018                     __pintcodelo:
  5164                           	opt callstack 0
  5165  000018                     _INTERRUPT_InterruptManagerLow:
  5166                           	opt callstack 14
  5167                           
  5168                           ; BSR set to: 14
  5169                           ;incstack = 0
  5170  000018  8057               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5171  00001A  CFD8 F031          	movff	status,??_INTERRUPT_InterruptManagerLow
  5172  00001E  CFE8 F032          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  5173  000022  CFE0 F033          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  5174  000026  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  5175  00002A  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  5176  00002E  CFD9 F036          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
  5177  000032  CFDA F037          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
  5178  000036  CFF3 F038          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
  5179  00003A  CFF4 F039          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
  5180                           
  5181                           ;mcc_generated_files/interrupt_manager.c: 92:     if(PIE4bits.TMR1IE == 1 && PIR4bits.TM
      +                          R1IF == 1)
  5182  00003E  010E               	movlb	14	; () banked
  5183  000040  B1C1               	btfsc	193,0,b	;volatile
  5184                           
  5185                           ; BSR set to: 14
  5186  000042  A1C9               	btfss	201,0,b	;volatile
  5187  000044  D003               	goto	i1l259
  5188                           
  5189                           ; BSR set to: 14
  5190                           ;mcc_generated_files/interrupt_manager.c: 93:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 94:         TMR1_ISR();
  5191  000046  EC22  F00E         	call	_TMR1_ISR	;wreg free
  5192                           
  5193                           ;mcc_generated_files/interrupt_manager.c: 95:     }
  5194  00004A  D017               	goto	i1l264
  5195  00004C                     i1l259:
  5196                           
  5197                           ; BSR set to: 14
  5198  00004C  B5C1               	btfsc	193,2,b	;volatile
  5199                           
  5200                           ; BSR set to: 14
  5201  00004E  A5C9               	btfss	201,2,b	;volatile
  5202  000050  D003               	goto	i1l261
  5203                           
  5204                           ; BSR set to: 14
  5205                           ;mcc_generated_files/interrupt_manager.c: 97:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 98:         TMR3_ISR();
  5206  000052  EC0A  F00E         	call	_TMR3_ISR	;wreg free
  5207                           
  5208                           ;mcc_generated_files/interrupt_manager.c: 99:     }
  5209  000056  D011               	goto	i1l264
  5210  000058                     i1l261:
  5211                           
  5212                           ; BSR set to: 14
  5213  000058  B1C3               	btfsc	195,0,b	;volatile
  5214                           
  5215                           ; BSR set to: 14
  5216  00005A  A1CB               	btfss	203,0,b	;volatile
  5217  00005C  D003               	goto	i1l263
  5218                           
  5219                           ; BSR set to: 14
  5220                           ;mcc_generated_files/interrupt_manager.c: 101:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 102:         CCP1_CaptureISR();
  5221  00005E  EC7F  F00E         	call	_CCP1_CaptureISR	;wreg free
  5222                           
  5223                           ;mcc_generated_files/interrupt_manager.c: 103:     }
  5224  000062  D00B               	goto	i1l264
  5225  000064                     i1l263:
  5226                           
  5227                           ; BSR set to: 14
  5228  000064  B9BD               	btfsc	189,4,b	;volatile
  5229                           
  5230                           ; BSR set to: 14
  5231  000066  A9C5               	btfss	197,4,b	;volatile
  5232  000068  D003               	goto	i1l265
  5233                           
  5234                           ; BSR set to: 14
  5235                           ;mcc_generated_files/interrupt_manager.c: 105:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 106:         PIN_MANAGER_IOC();
  5236  00006A  EC87  F00F         	call	_PIN_MANAGER_IOC	;wreg free
  5237                           
  5238                           ;mcc_generated_files/interrupt_manager.c: 107:     }
  5239  00006E  D005               	goto	i1l264
  5240  000070                     i1l265:
  5241                           
  5242                           ; BSR set to: 14
  5243  000070  B1BE               	btfsc	190,0,b	;volatile
  5244                           
  5245                           ; BSR set to: 14
  5246  000072  A1C6               	btfss	198,0,b	;volatile
  5247  000074  D002               	goto	i1l264
  5248                           
  5249                           ; BSR set to: 14
  5250                           ;mcc_generated_files/interrupt_manager.c: 109:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 110:         ADCC_ISR();
  5251  000076  ECE4  F00E         	call	_ADCC_ISR	;wreg free
  5252  00007A                     i1l264:
  5253                           
  5254                           ; BSR set to: 14
  5255  00007A  C039  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
  5256  00007E  C038  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
  5257  000082  C037  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
  5258  000086  C036  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
  5259  00008A  C035  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  5260  00008E  C034  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  5261  000092  C033  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  5262  000096  C032  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  5263  00009A  C031  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  5264  00009E  9057               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5265  0000A0  0010               	retfie	
  5266  0000A2                     __end_of_INTERRUPT_InterruptManagerLow:
  5267                           	opt callstack 0
  5268                           
  5269 ;; *************** function _TMR3_ISR *****************
  5270 ;; Defined at:
  5271 ;;		line 164 in file "mcc_generated_files/tmr3.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5285 ;;      Params:         0       0       0       0       0       0       0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5289 ;;Total ram usage:        0 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    5
  5292 ;; This function calls:
  5293 ;;		Absolute function
  5294 ;;		_TMR3_DefaultInterruptHandler
  5295 ;;		_timer_ISR
  5296 ;;		i1_TMR3_WriteTimer
  5297 ;;		i1_cam_start
  5298 ;; This function is called by:
  5299 ;;		_INTERRUPT_InterruptManagerLow
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text44
  5304  001C14                     __ptext44:
  5305                           	opt callstack 0
  5306  001C14                     _TMR3_ISR:
  5307                           	opt callstack 15
  5308                           
  5309                           ;mcc_generated_files/tmr3.c: 168:     PIR4bits.TMR3IF = 0;
  5310                           
  5311                           ;incstack = 0
  5312  001C14  010E               	movlb	14	; () banked
  5313  001C16  95C9               	bcf	201,2,b	;volatile
  5314                           
  5315                           ; BSR set to: 14
  5316                           ;mcc_generated_files/tmr3.c: 169:     TMR3_WriteTimer(timer3ReloadVal);
  5317  001C18  C03C  F006         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
  5318  001C1C  C03D  F007         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
  5319  001C20  EC41  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  5320                           
  5321                           ;mcc_generated_files/tmr3.c: 171:     if(TMR3_InterruptHandler)
  5322  001C24  503A               	movf	_TMR3_InterruptHandler,w,c
  5323  001C26  103B               	iorwf	_TMR3_InterruptHandler+1,w,c
  5324  001C28  B4D8               	btfsc	status,2,c
  5325  001C2A  0012               	return	
  5326                           
  5327                           ;mcc_generated_files/tmr3.c: 172:     {;mcc_generated_files/tmr3.c: 173:         TMR3_In
      +                          terruptHandler();
  5328  001C2C  D801               	call	i1u236_28
  5329  001C2E  0012               	return	
  5330  001C30                     i1u236_28:
  5331  001C30  0005               	push	
  5332  001C32  6EFA               	movwf	pclath,c
  5333  001C34  503A               	movf	_TMR3_InterruptHandler,w,c
  5334  001C36  6EFD               	movwf	tosl,c
  5335  001C38  503B               	movf	_TMR3_InterruptHandler+1,w,c
  5336  001C3A  6EFE               	movwf	tosh,c
  5337  001C3C  50F8               	movf	tblptru,w,c
  5338  001C3E  6EFF               	movwf	tosu,c
  5339  001C40  50FA               	movf	pclath,w,c
  5340  001C42  0012               	return		;indir
  5341  001C44                     __end_of_TMR3_ISR:
  5342                           	opt callstack 0
  5343                           
  5344 ;; *************** function _timer_ISR *****************
  5345 ;; Defined at:
  5346 ;;		line 49 in file "cam.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5362 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5363 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5364 ;;Total ram usage:        1 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    4
  5367 ;; This function calls:
  5368 ;;		i1_TMR3_SetInterruptHandler
  5369 ;;		i1_TMR3_StartTimer
  5370 ;;		i1_TMR3_WriteTimer
  5371 ;; This function is called by:
  5372 ;;		_adc_ready_ISR
  5373 ;;		_cam_start
  5374 ;;		i1_cam_start
  5375 ;;		_TMR3_ISR
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text45
  5380  001758                     __ptext45:
  5381                           	opt callstack 0
  5382  001758                     _timer_ISR:
  5383                           	opt callstack 15
  5384                           
  5385                           ;cam.c: 50:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  5386                           
  5387                           ;incstack = 0
  5388  001758  0EA4               	movlw	low _TMR3_DefaultInterruptHandler
  5389  00175A  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  5390  00175C  0E1F               	movlw	high _TMR3_DefaultInterruptHandler
  5391  00175E  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  5392  001760  ECC4  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  5393  001764  A284               	btfss	3972,1,c	;volatile
  5394  001766  D002               	goto	i1u220_20
  5395  001768  0E01               	movlw	1
  5396  00176A  D001               	goto	i1u220_26
  5397  00176C                     i1u220_20:
  5398  00176C  0E00               	movlw	0
  5399  00176E                     i1u220_26:
  5400  00176E  0AFF               	xorlw	255
  5401  001770  6E08               	movwf	??_timer_ISR& (0+255),c
  5402  001772  4608               	rlncf	??_timer_ISR,f,c
  5403  001774  5084               	movf	3972,w,c	;volatile
  5404  001776  1808               	xorwf	??_timer_ISR,w,c
  5405  001778  0BFD               	andlw	-3
  5406  00177A  1808               	xorwf	??_timer_ISR,w,c
  5407  00177C  6E84               	movwf	3972,c	;volatile
  5408                           
  5409                           ;cam.c: 53:     if (myCam.status == CAM_START) {
  5410  00177E  EE23  F001         	lfsr	2,_myCam+257	;volatile
  5411  001782  50DF               	movf	indf2,w,c
  5412  001784  A4D8               	btfss	status,2,c
  5413  001786  D014               	goto	i1l3754
  5414                           
  5415                           ;cam.c: 54:         myCam.status = CAM_IN_PROGRESS;
  5416  001788  0E01               	movlw	1
  5417  00178A  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  5418                           
  5419                           ;cam.c: 55:         do { LATBbits.LATB2 = 0; } while(0);
  5420  00178E  9483               	bcf	3971,2,c	;volatile
  5421                           
  5422                           ;cam.c: 56:         do { LATBbits.LATB1 = 0; } while(0);
  5423  001790  9283               	bcf	3971,1,c	;volatile
  5424                           
  5425                           ;cam.c: 57:         TMR3_WriteTimer(timing_val);
  5426  001792  C052  F006         	movff	_timing_val,i1TMR3_WriteTimer@timerVal
  5427  001796  C053  F007         	movff	_timing_val+1,i1TMR3_WriteTimer@timerVal+1
  5428  00179A  EC41  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  5429                           
  5430                           ;cam.c: 58:         TMR3_SetInterruptHandler(timer_ISR);
  5431  00179E  0E58               	movlw	low _timer_ISR
  5432  0017A0  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  5433  0017A2  0E17               	movlw	high _timer_ISR
  5434  0017A4  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  5435  0017A6  ECC4  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  5436                           
  5437                           ;cam.c: 59:         TMR3_StartTimer();
  5438  0017AA  ECD0  F00F         	call	i1_TMR3_StartTimer	;wreg free
  5439                           
  5440                           ;cam.c: 60:     } else if (myCam.status == CAM_IN_PROGRESS) {
  5441  0017AE  0012               	return	
  5442  0017B0                     i1l3754:
  5443  0017B0  C301  FFE8         	movff	_myCam+257,wreg	;volatile
  5444  0017B4  0A01               	xorlw	1
  5445  0017B6  A4D8               	btfss	status,2,c
  5446  0017B8  0012               	return	
  5447                           
  5448                           ;cam.c: 61:         do { LATBbits.LATB1 = 1; } while(0);
  5449  0017BA  8283               	bsf	3971,1,c	;volatile
  5450                           
  5451                           ;cam.c: 62:         PIE1bits.ADIE = 1;
  5452  0017BC  010E               	movlb	14	; () banked
  5453  0017BE  81BE               	bsf	190,0,b	;volatile
  5454                           
  5455                           ;cam.c: 63:         ADCON0bits.GO = 1;
  5456  0017C0  010F               	movlb	15	; () banked
  5457  0017C2  815B               	bsf	91,0,b	;volatile
  5458  0017C4  0012               	return		;funcret
  5459  0017C6                     __end_of_timer_ISR:
  5460                           	opt callstack 0
  5461                           
  5462 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  5463 ;; Defined at:
  5464 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;		None
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      void 
  5471 ;; Registers used:
  5472 ;;		None
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5478 ;;      Params:         0       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5481 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:        0 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    3
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_TMR3_Initialize
  5489 ;;		_timer_ISR
  5490 ;;		_TMR3_ISR
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text46
  5495  001FA4                     __ptext46:
  5496                           	opt callstack 0
  5497  001FA4                     _TMR3_DefaultInterruptHandler:
  5498                           	opt callstack 16
  5499                           
  5500                           ;incstack = 0
  5501  001FA4  0012               	return		;funcret
  5502  001FA6                     __end_of_TMR3_DefaultInterruptHandler:
  5503                           	opt callstack 0
  5504                           
  5505 ;; *************** function i1_cam_start *****************
  5506 ;; Defined at:
  5507 ;;		line 118 in file "cam.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5523 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5524 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5525 ;;Total ram usage:        1 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    4
  5528 ;; This function calls:
  5529 ;;		i1_TMR3_SetInterruptHandler
  5530 ;;		i1_TMR3_StartTimer
  5531 ;;		i1_TMR3_WriteTimer
  5532 ;; This function is called by:
  5533 ;;		_adc_ready_ISR
  5534 ;;		_TMR3_ISR
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text47
  5539  001896                     __ptext47:
  5540                           	opt callstack 0
  5541  001896                     i1_cam_start:
  5542                           	opt callstack 15
  5543                           
  5544                           ;cam.c: 120:     if (myCam.status == CAM_DONE){
  5545                           
  5546                           ;incstack = 0
  5547  001896  C301  FFE8         	movff	_myCam+257,wreg	;volatile
  5548  00189A  0A02               	xorlw	2
  5549  00189C  A4D8               	btfss	status,2,c
  5550  00189E  0012               	return	
  5551                           
  5552                           ;cam.c: 121:         myCam.status = CAM_START;
  5553  0018A0  0E00               	movlw	0
  5554  0018A2  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  5555                           
  5556                           ;cam.c: 122:         myCam.index = 0;
  5557  0018A6  0E00               	movlw	0
  5558  0018A8  CFE8 F302          	movff	wreg,_myCam+258	;volatile
  5559  0018AC  0E00               	movlw	0
  5560  0018AE  CFE8 F303          	movff	wreg,_myCam+259	;volatile
  5561                           
  5562                           ;cam.c: 123:         myCam.readFromFirst = !myCam.readFromFirst;
  5563  0018B2  EE22  F000         	lfsr	2,_myCam
  5564  0018B6  50DF               	movf	indf2,w,c
  5565  0018B8  A4D8               	btfss	status,2,c
  5566  0018BA  D003               	goto	i1u228_20
  5567  0018BC  6A08               	clrf	??i1_cam_start& (0+255),c
  5568  0018BE  2A08               	incf	??i1_cam_start& (0+255),f,c
  5569  0018C0  D001               	goto	i1u229_28
  5570  0018C2                     i1u228_20:
  5571  0018C2  6A08               	clrf	??i1_cam_start& (0+255),c
  5572  0018C4                     i1u229_28:
  5573  0018C4  C008  F200         	movff	??i1_cam_start,_myCam
  5574  0018C8  8483               	bsf	3971,2,c	;volatile
  5575                           
  5576                           ;cam.c: 125:         _delay((unsigned long)((3)*(64000000/4000000.0)));
  5577  0018CA  0E10               	movlw	16
  5578  0018CC                     i1u264_27:
  5579  0018CC  2EE8               	decfsz	wreg,f,c
  5580  0018CE  D7FE               	bra	i1u264_27
  5581  0018D0  8283               	bsf	3971,1,c	;volatile
  5582                           
  5583                           ;cam.c: 127:         TMR3_SetInterruptHandler(timer_ISR);
  5584  0018D2  0E58               	movlw	low _timer_ISR
  5585  0018D4  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  5586  0018D6  0E17               	movlw	high _timer_ISR
  5587  0018D8  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  5588  0018DA  ECC4  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  5589                           
  5590                           ;cam.c: 128:         TMR3_WriteTimer(timing_val);
  5591  0018DE  C052  F006         	movff	_timing_val,i1TMR3_WriteTimer@timerVal
  5592  0018E2  C053  F007         	movff	_timing_val+1,i1TMR3_WriteTimer@timerVal+1
  5593  0018E6  EC41  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  5594                           
  5595                           ;cam.c: 129:         TMR3_StartTimer();
  5596  0018EA  ECD0  F00F         	call	i1_TMR3_StartTimer	;wreg free
  5597                           
  5598                           ;cam.c: 130:         ADCON0bits.ADON = 1;
  5599  0018EE  010F               	movlb	15	; () banked
  5600  0018F0  8F5B               	bsf	91,7,b	;volatile
  5601                           
  5602                           ; BSR set to: 15
  5603                           ;cam.c: 131:         PIE1bits.ADIE = 0;
  5604  0018F2  010E               	movlb	14	; () banked
  5605  0018F4  91BE               	bcf	190,0,b	;volatile
  5606  0018F6  0012               	return		;funcret
  5607  0018F8                     __end_ofi1_cam_start:
  5608                           	opt callstack 0
  5609                           
  5610 ;; *************** function _TMR1_ISR *****************
  5611 ;; Defined at:
  5612 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0
  5627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5630 ;;Total ram usage:        0 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    5
  5633 ;; This function calls:
  5634 ;;		Absolute function
  5635 ;;		_TMR1_DefaultInterruptHandler
  5636 ;;		_TMR1_WriteTimer
  5637 ;;		_ping_TMR1Overflow_isr
  5638 ;; This function is called by:
  5639 ;;		_INTERRUPT_InterruptManagerLow
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text48
  5644  001C44                     __ptext48:
  5645                           	opt callstack 0
  5646  001C44                     _TMR1_ISR:
  5647                           	opt callstack 15
  5648                           
  5649                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  5650                           
  5651                           ;incstack = 0
  5652  001C44  010E               	movlb	14	; () banked
  5653  001C46  91C9               	bcf	201,0,b	;volatile
  5654                           
  5655                           ; BSR set to: 14
  5656                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5657  001C48  C040  F006         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  5658  001C4C  C041  F007         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  5659  001C50  EC33  F00F         	call	_TMR1_WriteTimer	;wreg free
  5660                           
  5661                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5662  001C54  503E               	movf	_TMR1_InterruptHandler,w,c
  5663  001C56  103F               	iorwf	_TMR1_InterruptHandler+1,w,c
  5664  001C58  B4D8               	btfsc	status,2,c
  5665  001C5A  0012               	return	
  5666                           
  5667                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5668  001C5C  D801               	call	i1u234_28
  5669  001C5E  0012               	return	
  5670  001C60                     i1u234_28:
  5671  001C60  0005               	push	
  5672  001C62  6EFA               	movwf	pclath,c
  5673  001C64  503E               	movf	_TMR1_InterruptHandler,w,c
  5674  001C66  6EFD               	movwf	tosl,c
  5675  001C68  503F               	movf	_TMR1_InterruptHandler+1,w,c
  5676  001C6A  6EFE               	movwf	tosh,c
  5677  001C6C  50F8               	movf	tblptru,w,c
  5678  001C6E  6EFF               	movwf	tosu,c
  5679  001C70  50FA               	movf	pclath,w,c
  5680  001C72  0012               	return		;indir
  5681  001C74                     __end_of_TMR1_ISR:
  5682                           	opt callstack 0
  5683                           
  5684 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5685 ;; Defined at:
  5686 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		None
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    3
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_TMR1_Initialize
  5711 ;;		_ping_TMR1Overflow_isr
  5712 ;;		_ping_RC2_went_HIGH
  5713 ;;		_ping_init
  5714 ;;		_TMR1_ISR
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text49
  5719  001FA6                     __ptext49:
  5720                           	opt callstack 0
  5721  001FA6                     _TMR1_DefaultInterruptHandler:
  5722                           	opt callstack 16
  5723                           
  5724                           ;incstack = 0
  5725  001FA6  0012               	return		;funcret
  5726  001FA8                     __end_of_TMR1_DefaultInterruptHandler:
  5727                           	opt callstack 0
  5728                           
  5729 ;; *************** function _ping_TMR1Overflow_isr *****************
  5730 ;; Defined at:
  5731 ;;		line 54 in file "ping.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      void 
  5738 ;; Registers used:
  5739 ;;		wreg, status,2, status,0, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5745 ;;      Params:         0       0       0       0       0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5748 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5749 ;;Total ram usage:        0 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    4
  5752 ;; This function calls:
  5753 ;;		i1_IOCCF2_SetInterruptHandler
  5754 ;;		i1_TMR1_SetInterruptHandler
  5755 ;; This function is called by:
  5756 ;;		_ping_send
  5757 ;;		_TMR1_ISR
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text50
  5762  001E2C                     __ptext50:
  5763                           	opt callstack 0
  5764  001E2C                     _ping_TMR1Overflow_isr:
  5765                           	opt callstack 15
  5766                           
  5767                           ;ping.c: 55:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5768                           
  5769                           ;incstack = 0
  5770  001E2C  0EA6               	movlw	low _TMR1_DefaultInterruptHandler
  5771  001E2E  6E06               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler,c
  5772  001E30  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  5773  001E32  6E07               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1,c
  5774  001E34  ECBA  F00F         	call	i1_TMR1_SetInterruptHandler	;wreg free
  5775  001E38  9484               	bcf	3972,2,c	;volatile
  5776  001E3A  8489               	bsf	3977,2,c	;volatile
  5777                           
  5778                           ;ping.c: 60:     IOCCF2_SetInterruptHandler(ping_RC2_went_HIGH);
  5779  001E3C  0EB0               	movlw	low _ping_RC2_went_HIGH
  5780  001E3E  6E06               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler,c
  5781  001E40  0E1B               	movlw	high _ping_RC2_went_HIGH
  5782  001E42  6E07               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,c
  5783  001E44  ECBF  F00F         	call	i1_IOCCF2_SetInterruptHandler	;wreg free
  5784  001E48  0012               	return		;funcret
  5785  001E4A                     __end_of_ping_TMR1Overflow_isr:
  5786                           	opt callstack 0
  5787                           
  5788 ;; *************** function _PIN_MANAGER_IOC *****************
  5789 ;; Defined at:
  5790 ;;		line 126 in file "mcc_generated_files/pin_manager.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    6
  5811 ;; This function calls:
  5812 ;;		_IOCCF2_ISR
  5813 ;; This function is called by:
  5814 ;;		_INTERRUPT_InterruptManagerLow
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text51
  5819  001F0E                     __ptext51:
  5820                           	opt callstack 0
  5821  001F0E                     _PIN_MANAGER_IOC:
  5822                           	opt callstack 14
  5823                           
  5824                           ;mcc_generated_files/pin_manager.c: 129:     if(IOCCFbits.IOCCF2 == 1)
  5825                           
  5826                           ;incstack = 0
  5827  001F0E  010F               	movlb	15	; () banked
  5828  001F10  A515               	btfss	21,2,b	;volatile
  5829  001F12  0012               	return	
  5830                           
  5831                           ; BSR set to: 15
  5832                           ;mcc_generated_files/pin_manager.c: 130:     {;mcc_generated_files/pin_manager.c: 131:  
      +                                 IOCCF2_ISR();
  5833  001F14  ECBE  F00E         	call	_IOCCF2_ISR	;wreg free
  5834  001F18  0012               	return		;funcret
  5835  001F1A                     __end_of_PIN_MANAGER_IOC:
  5836                           	opt callstack 0
  5837                           
  5838 ;; *************** function _IOCCF2_ISR *****************
  5839 ;; Defined at:
  5840 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;		None
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  1    wreg      void 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5854 ;;      Params:         0       0       0       0       0       0       0       0       0
  5855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5857 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5858 ;;Total ram usage:        0 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    5
  5861 ;; This function calls:
  5862 ;;		Absolute function
  5863 ;;		_IOCCF2_DefaultInterruptHandler
  5864 ;;		_ping_RC2_went_HIGH
  5865 ;; This function is called by:
  5866 ;;		_PIN_MANAGER_IOC
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text52
  5871  001D7C                     __ptext52:
  5872                           	opt callstack 0
  5873  001D7C                     _IOCCF2_ISR:
  5874                           	opt callstack 14
  5875                           
  5876                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCCF2_InterruptHandler)
  5877                           
  5878                           ;incstack = 0
  5879  001D7C  5044               	movf	_IOCCF2_InterruptHandler,w,c
  5880  001D7E  1045               	iorwf	_IOCCF2_InterruptHandler+1,w,c
  5881  001D80  B4D8               	btfsc	status,2,c
  5882  001D82  D00C               	goto	i1u210_29
  5883                           
  5884                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCCF2_InterruptHandler();
  5885  001D84  D801               	call	i1u210_28
  5886  001D86  D00A               	goto	i1u210_29
  5887  001D88                     i1u210_28:
  5888  001D88  0005               	push	
  5889  001D8A  6EFA               	movwf	pclath,c
  5890  001D8C  5044               	movf	_IOCCF2_InterruptHandler,w,c
  5891  001D8E  6EFD               	movwf	tosl,c
  5892  001D90  5045               	movf	_IOCCF2_InterruptHandler+1,w,c
  5893  001D92  6EFE               	movwf	tosh,c
  5894  001D94  50F8               	movf	tblptru,w,c
  5895  001D96  6EFF               	movwf	tosu,c
  5896  001D98  50FA               	movf	pclath,w,c
  5897  001D9A  0012               	return		;indir
  5898  001D9C                     i1u210_29:
  5899                           
  5900                           ;mcc_generated_files/pin_manager.c: 147:     IOCCFbits.IOCCF2 = 0;
  5901  001D9C  010F               	movlb	15	; () banked
  5902  001D9E  9515               	bcf	21,2,b	;volatile
  5903                           
  5904                           ; BSR set to: 15
  5905  001DA0  0012               	return		;funcret
  5906  001DA2                     __end_of_IOCCF2_ISR:
  5907                           	opt callstack 0
  5908                           
  5909 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
  5910 ;; Defined at:
  5911 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;		None
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  1    wreg      void 
  5918 ;; Registers used:
  5919 ;;		None
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5925 ;;      Params:         0       0       0       0       0       0       0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5928 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5929 ;;Total ram usage:        0 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    3
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_PIN_MANAGER_Initialize
  5936 ;;		_ping_RC2_went_HIGH
  5937 ;;		_ping_init
  5938 ;;		_IOCCF2_ISR
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text53
  5943  001FA8                     __ptext53:
  5944                           	opt callstack 0
  5945  001FA8                     _IOCCF2_DefaultInterruptHandler:
  5946                           	opt callstack 15
  5947                           
  5948                           ; BSR set to: 15
  5949                           ;incstack = 0
  5950  001FA8  0012               	return		;funcret
  5951  001FAA                     __end_of_IOCCF2_DefaultInterruptHandler:
  5952                           	opt callstack 0
  5953                           
  5954 ;; *************** function _ping_RC2_went_HIGH *****************
  5955 ;; Defined at:
  5956 ;;		line 66 in file "ping.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;		None
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg, status,2, status,0, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5970 ;;      Params:         0       0       0       0       0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5974 ;;Total ram usage:        0 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    4
  5977 ;; This function calls:
  5978 ;;		_TMR1_StartTimer
  5979 ;;		_TMR1_WriteTimer
  5980 ;;		i1_IOCCF2_SetInterruptHandler
  5981 ;;		i1_TMR1_SetInterruptHandler
  5982 ;; This function is called by:
  5983 ;;		_ping_TMR1Overflow_isr
  5984 ;;		_IOCCF2_ISR
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text54
  5989  001BB0                     __ptext54:
  5990                           	opt callstack 0
  5991  001BB0                     _ping_RC2_went_HIGH:
  5992                           	opt callstack 14
  5993                           
  5994                           ;ping.c: 67:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultInterruptHandler);
  5995                           
  5996                           ;incstack = 0
  5997  001BB0  0EA8               	movlw	low _IOCCF2_DefaultInterruptHandler
  5998  001BB2  6E06               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler,c
  5999  001BB4  0E1F               	movlw	high _IOCCF2_DefaultInterruptHandler
  6000  001BB6  6E07               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,c
  6001  001BB8  ECBF  F00F         	call	i1_IOCCF2_SetInterruptHandler	;wreg free
  6002                           
  6003                           ;ping.c: 68:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  6004  001BBC  0EA6               	movlw	low _TMR1_DefaultInterruptHandler
  6005  001BBE  6E06               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler,c
  6006  001BC0  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  6007  001BC2  6E07               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1,c
  6008  001BC4  ECBA  F00F         	call	i1_TMR1_SetInterruptHandler	;wreg free
  6009                           
  6010                           ;ping.c: 70:     TMR1_WriteTimer(0);
  6011  001BC8  0E00               	movlw	0
  6012  001BCA  6E07               	movwf	TMR1_WriteTimer@timerVal+1,c
  6013  001BCC  0E00               	movlw	0
  6014  001BCE  6E06               	movwf	TMR1_WriteTimer@timerVal,c
  6015  001BD0  EC33  F00F         	call	_TMR1_WriteTimer	;wreg free
  6016                           
  6017                           ;ping.c: 71:     TMR1_StartTimer();
  6018  001BD4  ECCE  F00F         	call	_TMR1_StartTimer	;wreg free
  6019  001BD8  8482               	bsf	3970,2,c	;volatile
  6020                           
  6021                           ;ping.c: 74:     PIR6 = 0;
  6022  001BDA  0E00               	movlw	0
  6023  001BDC  010E               	movlb	14	; () banked
  6024  001BDE  6FCB               	movwf	203,b	;volatile
  6025                           
  6026                           ; BSR set to: 14
  6027                           ;ping.c: 75:     PIE6bits.CCP1IE = 1;
  6028  001BE0  81C3               	bsf	195,0,b	;volatile
  6029                           
  6030                           ; BSR set to: 14
  6031  001BE2  0012               	return		;funcret
  6032  001BE4                     __end_of_ping_RC2_went_HIGH:
  6033                           	opt callstack 0
  6034                           
  6035 ;; *************** function i1_TMR1_SetInterruptHandler *****************
  6036 ;; Defined at:
  6037 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  6040 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6052 ;;      Params:         2       0       0       0       0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6055 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6056 ;;Total ram usage:        2 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    3
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_ping_TMR1Overflow_isr
  6063 ;;		_ping_RC2_went_HIGH
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text55
  6068  001F74                     __ptext55:
  6069                           	opt callstack 0
  6070  001F74                     i1_TMR1_SetInterruptHandler:
  6071                           	opt callstack 15
  6072                           
  6073                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6074                           
  6075                           ; BSR set to: 14
  6076                           ;incstack = 0
  6077  001F74  C006  F03E         	movff	i1TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  6078  001F78  C007  F03F         	movff	i1TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  6079  001F7C  0012               	return		;funcret
  6080  001F7E                     __end_ofi1_TMR1_SetInterruptHandler:
  6081                           	opt callstack 0
  6082                           
  6083 ;; *************** function i1_IOCCF2_SetInterruptHandler *****************
  6084 ;; Defined at:
  6085 ;;		line 153 in file "mcc_generated_files/pin_manager.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  6088 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, status,2, status,0
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6100 ;;      Params:         2       0       0       0       0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6103 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6104 ;;Total ram usage:        2 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    3
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_ping_TMR1Overflow_isr
  6111 ;;		_ping_RC2_went_HIGH
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text56
  6116  001F7E                     __ptext56:
  6117                           	opt callstack 0
  6118  001F7E                     i1_IOCCF2_SetInterruptHandler:
  6119                           	opt callstack 15
  6120                           
  6121                           ;mcc_generated_files/pin_manager.c: 154:     IOCCF2_InterruptHandler = InterruptHandler;
  6122                           
  6123                           ;incstack = 0
  6124  001F7E  C006  F044         	movff	i1IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  6125  001F82  C007  F045         	movff	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  6126  001F86  0012               	return		;funcret
  6127  001F88                     __end_ofi1_IOCCF2_SetInterruptHandler:
  6128                           	opt callstack 0
  6129                           
  6130 ;; *************** function _TMR1_WriteTimer *****************
  6131 ;; Defined at:
  6132 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  timerVal        2    5[COMRAM] unsigned short 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, status,2
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6146 ;;      Params:         2       0       0       0       0       0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6149 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6150 ;;Total ram usage:        2 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    3
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_TMR1_ISR
  6157 ;;		_ping_RC2_went_HIGH
  6158 ;;		_TMR1_Reload
  6159 ;;		_ping_send
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text57
  6164  001E66                     __ptext57:
  6165                           	opt callstack 0
  6166  001E66                     _TMR1_WriteTimer:
  6167                           	opt callstack 16
  6168                           
  6169                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  6170                           
  6171                           ;incstack = 0
  6172  001E66  A4CE               	btfss	4046,2,c	;volatile
  6173  001E68  D007               	goto	i1l3162
  6174                           
  6175                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  6176  001E6A  90CE               	bcf	4046,0,c	;volatile
  6177                           
  6178                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  6179  001E6C  5007               	movf	TMR1_WriteTimer@timerVal+1,w,c
  6180  001E6E  6ECD               	movwf	4045,c	;volatile
  6181                           
  6182                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  6183  001E70  C006  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6184                           
  6185                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  6186  001E74  80CE               	bsf	4046,0,c	;volatile
  6187                           
  6188                           ;mcc_generated_files/tmr1.c: 140:     }
  6189  001E76  0012               	return	
  6190  001E78                     i1l3162:
  6191                           
  6192                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  6193  001E78  5007               	movf	TMR1_WriteTimer@timerVal+1,w,c
  6194  001E7A  6ECD               	movwf	4045,c	;volatile
  6195                           
  6196                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  6197  001E7C  C006  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6198  001E80  0012               	return		;funcret
  6199  001E82                     __end_of_TMR1_WriteTimer:
  6200                           	opt callstack 0
  6201                           
  6202 ;; *************** function _TMR1_StartTimer *****************
  6203 ;; Defined at:
  6204 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		None
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    3
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_ping_RC2_went_HIGH
  6229 ;;		_ping_send
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text58
  6234  001F9C                     __ptext58:
  6235                           	opt callstack 0
  6236  001F9C                     _TMR1_StartTimer:
  6237                           	opt callstack 14
  6238                           
  6239                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
  6240                           
  6241                           ;incstack = 0
  6242  001F9C  80CE               	bsf	4046,0,c	;volatile
  6243  001F9E  0012               	return		;funcret
  6244  001FA0                     __end_of_TMR1_StartTimer:
  6245                           	opt callstack 0
  6246                           
  6247 ;; *************** function _CCP1_CaptureISR *****************
  6248 ;; Defined at:
  6249 ;;		line 94 in file "mcc_generated_files/ccp1.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  module          2   46[COMRAM] struct CCPR1Reg_tag
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0
  6264 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6266 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6267 ;;Total ram usage:        2 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    5
  6270 ;; This function calls:
  6271 ;;		Absolute function
  6272 ;;		_CCP1_DefaultCallBack
  6273 ;;		_ping_CCP1_triggered
  6274 ;; This function is called by:
  6275 ;;		_INTERRUPT_InterruptManagerLow
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text59
  6280  001CFE                     __ptext59:
  6281                           	opt callstack 0
  6282  001CFE                     _CCP1_CaptureISR:
  6283                           	opt callstack 15
  6284                           
  6285                           ;mcc_generated_files/ccp1.c: 96:     CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1.
      +                          c: 99:     PIR6bits.CCP1IF = 0;
  6286                           
  6287                           ;incstack = 0
  6288  001CFE  010E               	movlb	14	; () banked
  6289  001D00  91CB               	bcf	203,0,b	;volatile
  6290                           
  6291                           ;mcc_generated_files/ccp1.c: 102:     module.ccpr1l = CCPR1L;
  6292  001D02  CFA9 F02F          	movff	4009,CCP1_CaptureISR@module	;volatile
  6293                           
  6294                           ;mcc_generated_files/ccp1.c: 103:     module.ccpr1h = CCPR1H;
  6295  001D06  CFAA F030          	movff	4010,CCP1_CaptureISR@module+1	;volatile
  6296                           
  6297                           ; BSR set to: 14
  6298                           ;mcc_generated_files/ccp1.c: 106:     CCP1_CallBack(module.ccpr1_16Bit);
  6299  001D0A  C02F  F02D         	movff	CCP1_CaptureISR@module,ping_CCP1_triggered@timeOfFlight
  6300  001D0E  C030  F02E         	movff	CCP1_CaptureISR@module+1,ping_CCP1_triggered@timeOfFlight+1
  6301  001D12  D801               	call	i1u237_28
  6302  001D14  0012               	return	
  6303  001D16                     i1u237_28:
  6304  001D16  0005               	push	
  6305  001D18  6EFA               	movwf	pclath,c
  6306  001D1A  5042               	movf	_CCP1_CallBack,w,c
  6307  001D1C  6EFD               	movwf	tosl,c
  6308  001D1E  5043               	movf	_CCP1_CallBack+1,w,c
  6309  001D20  6EFE               	movwf	tosh,c
  6310  001D22  50F8               	movf	tblptru,w,c
  6311  001D24  6EFF               	movwf	tosu,c
  6312  001D26  50FA               	movf	pclath,w,c
  6313  001D28  0012               	return		;indir
  6314  001D2A                     __end_of_CCP1_CaptureISR:
  6315                           	opt callstack 0
  6316                           
  6317 ;; *************** function _CCP1_DefaultCallBack *****************
  6318 ;; Defined at:
  6319 ;;		line 60 in file "mcc_generated_files/ccp1.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  capturedValu    2   44[COMRAM] unsigned short 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		None
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6333 ;;      Params:         2       0       0       0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6336 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6337 ;;Total ram usage:        2 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    3
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_CCP1_Initialize
  6344 ;;		_CCP1_CaptureISR
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text60
  6349  001FAA                     __ptext60:
  6350                           	opt callstack 0
  6351  001FAA                     _CCP1_DefaultCallBack:
  6352                           	opt callstack 16
  6353                           
  6354                           ;incstack = 0
  6355  001FAA  0012               	return		;funcret
  6356  001FAC                     __end_of_CCP1_DefaultCallBack:
  6357                           	opt callstack 0
  6358                           
  6359 ;; *************** function _ping_CCP1_triggered *****************
  6360 ;; Defined at:
  6361 ;;		line 83 in file "ping.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  timeOfFlight    2   44[COMRAM] unsigned short 
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6375 ;;      Params:         2       0       0       0       0       0       0       0       0
  6376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6378 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6379 ;;Total ram usage:        2 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    4
  6382 ;; This function calls:
  6383 ;;		___flmul
  6384 ;;		___xxtofl
  6385 ;; This function is called by:
  6386 ;;		_ping_init
  6387 ;;		_CCP1_CaptureISR
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text61
  6392  001830                     __ptext61:
  6393                           	opt callstack 0
  6394  001830                     _ping_CCP1_triggered:
  6395                           	opt callstack 15
  6396                           
  6397                           ;ping.c: 84:     status.tof = timeOfFlight;
  6398                           
  6399                           ;incstack = 0
  6400  001830  C02D  F04C         	movff	ping_CCP1_triggered@timeOfFlight,_status+6	;volatile
  6401  001834  C02E  F04D         	movff	ping_CCP1_triggered@timeOfFlight+1,_status+7	;volatile
  6402                           
  6403                           ;ping.c: 85:     status.pingStarted = 0;
  6404  001838  0E00               	movlw	0
  6405  00183A  6E4B               	movwf	_status+5,c	;volatile
  6406                           
  6407                           ;ping.c: 86:     status.readReady = 1;
  6408  00183C  0E01               	movlw	1
  6409  00183E  6E46               	movwf	_status,c	;volatile
  6410                           
  6411                           ;ping.c: 87:     PIE6bits.CCP1IE = 0;
  6412  001840  010E               	movlb	14	; () banked
  6413  001842  91C3               	bcf	195,0,b	;volatile
  6414                           
  6415                           ; BSR set to: 14
  6416  001844  9482               	bcf	3970,2,c	;volatile
  6417                           
  6418                           ; BSR set to: 14
  6419                           ;ping.c: 89:     status.measurment = 0.009 * timeOfFlight;
  6420  001846  C02D  F006         	movff	ping_CCP1_triggered@timeOfFlight,___xxtofl@val
  6421  00184A  C02E  F007         	movff	ping_CCP1_triggered@timeOfFlight+1,___xxtofl@val+1
  6422  00184E  6A08               	clrf	___xxtofl@val+2,c
  6423  001850  6A09               	clrf	___xxtofl@val+3,c
  6424  001852  0E00               	movlw	0
  6425  001854  EC48  F008         	call	___xxtofl
  6426  001858  C006  F014         	movff	?___xxtofl,___flmul@b
  6427  00185C  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  6428  001860  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  6429  001864  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  6430  001868  0EBC               	movlw	188
  6431  00186A  6E18               	movwf	___flmul@a,c
  6432  00186C  0E74               	movlw	116
  6433  00186E  6E19               	movwf	___flmul@a+1,c
  6434  001870  0E13               	movlw	19
  6435  001872  6E1A               	movwf	___flmul@a+2,c
  6436  001874  0E3C               	movlw	60
  6437  001876  6E1B               	movwf	___flmul@a+3,c
  6438  001878  EC14  F004         	call	___flmul	;wreg free
  6439  00187C  C014  F047         	movff	?___flmul,_status+1	;volatile
  6440  001880  C015  F048         	movff	?___flmul+1,_status+2	;volatile
  6441  001884  C016  F049         	movff	?___flmul+2,_status+3	;volatile
  6442  001888  C017  F04A         	movff	?___flmul+3,_status+4	;volatile
  6443                           
  6444                           ;ping.c: 90:     status.readReady = 1;
  6445  00188C  0E01               	movlw	1
  6446  00188E  6E46               	movwf	_status,c	;volatile
  6447                           
  6448                           ;ping.c: 91:     status.pingStarted = 0;
  6449  001890  0E00               	movlw	0
  6450  001892  6E4B               	movwf	_status+5,c	;volatile
  6451  001894  0012               	return		;funcret
  6452  001896                     __end_of_ping_CCP1_triggered:
  6453                           	opt callstack 0
  6454                           
  6455 ;; *************** function ___xxtofl *****************
  6456 ;; Defined at:
  6457 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  sign            1    wreg     unsigned char 
  6460 ;;  val             4    5[COMRAM] long 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  sign            1   13[COMRAM] unsigned char 
  6463 ;;  arg             4   15[COMRAM] unsigned long 
  6464 ;;  exp             1   14[COMRAM] unsigned char 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  4    5[COMRAM] unsigned char 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2, status,0
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6474 ;;      Params:         4       0       0       0       0       0       0       0       0
  6475 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6476 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6477 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6478 ;;Total ram usage:       14 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    3
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_ping_CCP1_triggered
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text62
  6489  001090                     __ptext62:
  6490                           	opt callstack 0
  6491  001090                     ___xxtofl:
  6492                           	opt callstack 15
  6493                           
  6494                           ;incstack = 0
  6495                           ;___xxtofl@sign stored from wreg
  6496  001090  6E0E               	movwf	___xxtofl@sign,c
  6497  001092  500E               	movf	___xxtofl@sign,w,c
  6498  001094  A4D8               	btfss	status,2,c
  6499  001096  AE09               	btfss	___xxtofl@val+3,7,c
  6500  001098  D01A               	goto	i1l1698
  6501  00109A  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6502  00109E  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6503  0010A2  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6504  0010A6  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6505  0010AA  1E0A               	comf	??___xxtofl,f,c
  6506  0010AC  1E0B               	comf	??___xxtofl+1,f,c
  6507  0010AE  1E0C               	comf	??___xxtofl+2,f,c
  6508  0010B0  1E0D               	comf	??___xxtofl+3,f,c
  6509  0010B2  2A0A               	incf	??___xxtofl,f,c
  6510  0010B4  0E00               	movlw	0
  6511  0010B6  220B               	addwfc	??___xxtofl+1,f,c
  6512  0010B8  220C               	addwfc	??___xxtofl+2,f,c
  6513  0010BA  220D               	addwfc	??___xxtofl+3,f,c
  6514  0010BC  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6515  0010C0  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6516  0010C4  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6517  0010C8  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6518  0010CC  D008               	goto	i1l3438
  6519  0010CE                     i1l1698:
  6520  0010CE  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6521  0010D2  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6522  0010D6  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6523  0010DA  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6524  0010DE                     i1l3438:
  6525  0010DE  5006               	movf	___xxtofl@val,w,c
  6526  0010E0  1007               	iorwf	___xxtofl@val+1,w,c
  6527  0010E2  1008               	iorwf	___xxtofl@val+2,w,c
  6528  0010E4  1009               	iorwf	___xxtofl@val+3,w,c
  6529  0010E6  A4D8               	btfss	status,2,c
  6530  0010E8  D009               	goto	i1l3444
  6531  0010EA  0E00               	movlw	0
  6532  0010EC  6E06               	movwf	?___xxtofl,c
  6533  0010EE  0E00               	movlw	0
  6534  0010F0  6E07               	movwf	?___xxtofl+1,c
  6535  0010F2  0E00               	movlw	0
  6536  0010F4  6E08               	movwf	?___xxtofl+2,c
  6537  0010F6  0E00               	movlw	0
  6538  0010F8  6E09               	movwf	?___xxtofl+3,c
  6539  0010FA  0012               	return	
  6540  0010FC                     i1l3444:
  6541  0010FC  0E96               	movlw	150
  6542  0010FE  6E0F               	movwf	___xxtofl@exp,c
  6543  001100  D006               	goto	i1l3448
  6544  001102                     i1l3446:
  6545  001102  2A0F               	incf	___xxtofl@exp,f,c
  6546  001104  90D8               	bcf	status,0,c
  6547  001106  3213               	rrcf	___xxtofl@arg+3,f,c
  6548  001108  3212               	rrcf	___xxtofl@arg+2,f,c
  6549  00110A  3211               	rrcf	___xxtofl@arg+1,f,c
  6550  00110C  3210               	rrcf	___xxtofl@arg,f,c
  6551  00110E                     i1l3448:
  6552  00110E  0E00               	movlw	0
  6553  001110  1410               	andwf	___xxtofl@arg,w,c
  6554  001112  6E0A               	movwf	??___xxtofl& (0+255),c
  6555  001114  0E00               	movlw	0
  6556  001116  1411               	andwf	___xxtofl@arg+1,w,c
  6557  001118  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6558  00111A  0E00               	movlw	0
  6559  00111C  1412               	andwf	___xxtofl@arg+2,w,c
  6560  00111E  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6561  001120  0EFE               	movlw	254
  6562  001122  1413               	andwf	___xxtofl@arg+3,w,c
  6563  001124  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6564  001126  500A               	movf	??___xxtofl,w,c
  6565  001128  100B               	iorwf	??___xxtofl+1,w,c
  6566  00112A  100C               	iorwf	??___xxtofl+2,w,c
  6567  00112C  100D               	iorwf	??___xxtofl+3,w,c
  6568  00112E  B4D8               	btfsc	status,2,c
  6569  001130  D00D               	goto	i1l1705
  6570  001132  D7E7               	goto	i1l3446
  6571  001134                     i1l3450:
  6572  001134  2A0F               	incf	___xxtofl@exp,f,c
  6573  001136  0E01               	movlw	1
  6574  001138  2610               	addwf	___xxtofl@arg,f,c
  6575  00113A  0E00               	movlw	0
  6576  00113C  2211               	addwfc	___xxtofl@arg+1,f,c
  6577  00113E  2212               	addwfc	___xxtofl@arg+2,f,c
  6578  001140  2213               	addwfc	___xxtofl@arg+3,f,c
  6579  001142  90D8               	bcf	status,0,c
  6580  001144  3213               	rrcf	___xxtofl@arg+3,f,c
  6581  001146  3212               	rrcf	___xxtofl@arg+2,f,c
  6582  001148  3211               	rrcf	___xxtofl@arg+1,f,c
  6583  00114A  3210               	rrcf	___xxtofl@arg,f,c
  6584  00114C                     i1l1705:
  6585  00114C  0E00               	movlw	0
  6586  00114E  1410               	andwf	___xxtofl@arg,w,c
  6587  001150  6E0A               	movwf	??___xxtofl& (0+255),c
  6588  001152  0E00               	movlw	0
  6589  001154  1411               	andwf	___xxtofl@arg+1,w,c
  6590  001156  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6591  001158  0E00               	movlw	0
  6592  00115A  1412               	andwf	___xxtofl@arg+2,w,c
  6593  00115C  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6594  00115E  0EFF               	movlw	255
  6595  001160  1413               	andwf	___xxtofl@arg+3,w,c
  6596  001162  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6597  001164  500A               	movf	??___xxtofl,w,c
  6598  001166  100B               	iorwf	??___xxtofl+1,w,c
  6599  001168  100C               	iorwf	??___xxtofl+2,w,c
  6600  00116A  100D               	iorwf	??___xxtofl+3,w,c
  6601  00116C  B4D8               	btfsc	status,2,c
  6602  00116E  D007               	goto	i1l3458
  6603  001170  D7E1               	goto	i1l3450
  6604  001172                     i1l3456:
  6605  001172  060F               	decf	___xxtofl@exp,f,c
  6606  001174  90D8               	bcf	status,0,c
  6607  001176  3610               	rlcf	___xxtofl@arg,f,c
  6608  001178  3611               	rlcf	___xxtofl@arg+1,f,c
  6609  00117A  3612               	rlcf	___xxtofl@arg+2,f,c
  6610  00117C  3613               	rlcf	___xxtofl@arg+3,f,c
  6611  00117E                     i1l3458:
  6612  00117E  BE12               	btfsc	___xxtofl@arg+2,7,c
  6613  001180  D003               	goto	i1u204_20
  6614  001182  0E02               	movlw	2
  6615  001184  600F               	cpfslt	___xxtofl@exp,c
  6616  001186  D7F5               	goto	i1l3456
  6617  001188                     i1u204_20:
  6618  001188  A00F               	btfss	___xxtofl@exp,0,c
  6619  00118A  9E12               	bcf	___xxtofl@arg+2,7,c
  6620  00118C  90D8               	bcf	status,0,c
  6621  00118E  320F               	rrcf	___xxtofl@exp,f,c
  6622  001190  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6623  001194  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6624  001196  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6625  001198  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6626  00119A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6627  00119E  6A0C               	clrf	??___xxtofl+2,c
  6628  0011A0  6A0B               	clrf	??___xxtofl+1,c
  6629  0011A2  6A0A               	clrf	??___xxtofl,c
  6630  0011A4  500A               	movf	??___xxtofl,w,c
  6631  0011A6  1210               	iorwf	___xxtofl@arg,f,c
  6632  0011A8  500B               	movf	??___xxtofl+1,w,c
  6633  0011AA  1211               	iorwf	___xxtofl@arg+1,f,c
  6634  0011AC  500C               	movf	??___xxtofl+2,w,c
  6635  0011AE  1212               	iorwf	___xxtofl@arg+2,f,c
  6636  0011B0  500D               	movf	??___xxtofl+3,w,c
  6637  0011B2  1213               	iorwf	___xxtofl@arg+3,f,c
  6638  0011B4  500E               	movf	___xxtofl@sign,w,c
  6639  0011B6  A4D8               	btfss	status,2,c
  6640  0011B8  AE09               	btfss	___xxtofl@val+3,7,c
  6641  0011BA  D001               	goto	i1l3474
  6642  0011BC  8E13               	bsf	___xxtofl@arg+3,7,c
  6643  0011BE                     i1l3474:
  6644  0011BE  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6645  0011C2  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6646  0011C6  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6647  0011CA  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6648  0011CE  0012               	return		;funcret
  6649  0011D0                     __end_of___xxtofl:
  6650                           	opt callstack 0
  6651                           
  6652 ;; *************** function ___flmul *****************
  6653 ;; Defined at:
  6654 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  b               4   19[COMRAM] unsigned char 
  6657 ;;  a               4   23[COMRAM] unsigned char 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  prod            4   38[COMRAM] struct .
  6660 ;;  grs             4   32[COMRAM] unsigned long 
  6661 ;;  temp            2   42[COMRAM] struct .
  6662 ;;  bexp            1   37[COMRAM] unsigned char 
  6663 ;;  aexp            1   36[COMRAM] unsigned char 
  6664 ;;  sign            1   31[COMRAM] unsigned char 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  4   19[COMRAM] unsigned char 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0, prodl, prodh
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6674 ;;      Params:         8       0       0       0       0       0       0       0       0
  6675 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6676 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6677 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6678 ;;Total ram usage:       25 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    3
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_ping_CCP1_triggered
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text63
  6689  000828                     __ptext63:
  6690                           	opt callstack 0
  6691  000828                     ___flmul:
  6692                           	opt callstack 15
  6693                           
  6694                           ;incstack = 0
  6695  000828  5017               	movf	___flmul@b+3,w,c
  6696  00082A  0B80               	andlw	128
  6697  00082C  6E20               	movwf	___flmul@sign,c
  6698  00082E  5017               	movf	___flmul@b+3,w,c
  6699  000830  2417               	addwf	___flmul@b+3,w,c
  6700  000832  6E26               	movwf	___flmul@bexp,c
  6701  000834  BE16               	btfsc	___flmul@b+2,7,c
  6702  000836  8026               	bsf	___flmul@bexp,0,c
  6703  000838  5026               	movf	___flmul@bexp,w,c
  6704  00083A  B4D8               	btfsc	status,2,c
  6705  00083C  D00D               	goto	i1l3316
  6706  00083E  2826               	incf	___flmul@bexp,w,c
  6707  000840  A4D8               	btfss	status,2,c
  6708  000842  D008               	goto	i1l3314
  6709  000844  0E00               	movlw	0
  6710  000846  6E14               	movwf	___flmul@b,c
  6711  000848  0E00               	movlw	0
  6712  00084A  6E15               	movwf	___flmul@b+1,c
  6713  00084C  0E00               	movlw	0
  6714  00084E  6E16               	movwf	___flmul@b+2,c
  6715  000850  0E00               	movlw	0
  6716  000852  6E17               	movwf	___flmul@b+3,c
  6717  000854                     i1l3314:
  6718  000854  8E16               	bsf	___flmul@b+2,7,c
  6719  000856  D008               	goto	i1l3318
  6720  000858                     i1l3316:
  6721  000858  0E00               	movlw	0
  6722  00085A  6E14               	movwf	___flmul@b,c
  6723  00085C  0E00               	movlw	0
  6724  00085E  6E15               	movwf	___flmul@b+1,c
  6725  000860  0E00               	movlw	0
  6726  000862  6E16               	movwf	___flmul@b+2,c
  6727  000864  0E00               	movlw	0
  6728  000866  6E17               	movwf	___flmul@b+3,c
  6729  000868                     i1l3318:
  6730  000868  501B               	movf	___flmul@a+3,w,c
  6731  00086A  0B80               	andlw	128
  6732  00086C  1A20               	xorwf	___flmul@sign,f,c
  6733  00086E  501B               	movf	___flmul@a+3,w,c
  6734  000870  241B               	addwf	___flmul@a+3,w,c
  6735  000872  6E25               	movwf	___flmul@aexp,c
  6736  000874  BE1A               	btfsc	___flmul@a+2,7,c
  6737  000876  8025               	bsf	___flmul@aexp,0,c
  6738  000878  5025               	movf	___flmul@aexp,w,c
  6739  00087A  B4D8               	btfsc	status,2,c
  6740  00087C  D00D               	goto	i1l3334
  6741  00087E  2825               	incf	___flmul@aexp,w,c
  6742  000880  A4D8               	btfss	status,2,c
  6743  000882  D008               	goto	i1l3332
  6744  000884  0E00               	movlw	0
  6745  000886  6E18               	movwf	___flmul@a,c
  6746  000888  0E00               	movlw	0
  6747  00088A  6E19               	movwf	___flmul@a+1,c
  6748  00088C  0E00               	movlw	0
  6749  00088E  6E1A               	movwf	___flmul@a+2,c
  6750  000890  0E00               	movlw	0
  6751  000892  6E1B               	movwf	___flmul@a+3,c
  6752  000894                     i1l3332:
  6753  000894  8E1A               	bsf	___flmul@a+2,7,c
  6754  000896  D008               	goto	i1l1657
  6755  000898                     i1l3334:
  6756  000898  0E00               	movlw	0
  6757  00089A  6E18               	movwf	___flmul@a,c
  6758  00089C  0E00               	movlw	0
  6759  00089E  6E19               	movwf	___flmul@a+1,c
  6760  0008A0  0E00               	movlw	0
  6761  0008A2  6E1A               	movwf	___flmul@a+2,c
  6762  0008A4  0E00               	movlw	0
  6763  0008A6  6E1B               	movwf	___flmul@a+3,c
  6764  0008A8                     i1l1657:
  6765  0008A8  5025               	movf	___flmul@aexp,w,c
  6766  0008AA  B4D8               	btfsc	status,2,c
  6767  0008AC  D003               	goto	i1u186_20
  6768  0008AE  5026               	movf	___flmul@bexp,w,c
  6769  0008B0  A4D8               	btfss	status,2,c
  6770  0008B2  D009               	goto	i1l3342
  6771  0008B4                     i1u186_20:
  6772  0008B4  0E00               	movlw	0
  6773  0008B6  6E14               	movwf	?___flmul,c
  6774  0008B8  0E00               	movlw	0
  6775  0008BA  6E15               	movwf	?___flmul+1,c
  6776  0008BC  0E00               	movlw	0
  6777  0008BE  6E16               	movwf	?___flmul+2,c
  6778  0008C0  0E00               	movlw	0
  6779  0008C2  6E17               	movwf	?___flmul+3,c
  6780  0008C4  0012               	return	
  6781  0008C6                     i1l3342:
  6782  0008C6  501A               	movf	___flmul@a+2,w,c
  6783  0008C8  0214               	mulwf	___flmul@b,c
  6784  0008CA  CFF3 F02B          	movff	prodl,___flmul@temp
  6785  0008CE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6786  0008D2  502B               	movf	___flmul@temp,w,c
  6787  0008D4  6E21               	movwf	___flmul@grs,c
  6788  0008D6  6A22               	clrf	___flmul@grs+1,c
  6789  0008D8  6A23               	clrf	___flmul@grs+2,c
  6790  0008DA  6A24               	clrf	___flmul@grs+3,c
  6791  0008DC  502C               	movf	___flmul@temp+1,w,c
  6792  0008DE  6E27               	movwf	___flmul@prod,c
  6793  0008E0  6A28               	clrf	___flmul@prod+1,c
  6794  0008E2  6A29               	clrf	___flmul@prod+2,c
  6795  0008E4  6A2A               	clrf	___flmul@prod+3,c
  6796  0008E6  5019               	movf	___flmul@a+1,w,c
  6797  0008E8  0215               	mulwf	___flmul@b+1,c
  6798  0008EA  CFF3 F02B          	movff	prodl,___flmul@temp
  6799  0008EE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6800  0008F2  502B               	movf	___flmul@temp,w,c
  6801  0008F4  2621               	addwf	___flmul@grs,f,c
  6802  0008F6  0E00               	movlw	0
  6803  0008F8  2222               	addwfc	___flmul@grs+1,f,c
  6804  0008FA  2223               	addwfc	___flmul@grs+2,f,c
  6805  0008FC  2224               	addwfc	___flmul@grs+3,f,c
  6806  0008FE  502C               	movf	___flmul@temp+1,w,c
  6807  000900  2627               	addwf	___flmul@prod,f,c
  6808  000902  0E00               	movlw	0
  6809  000904  2228               	addwfc	___flmul@prod+1,f,c
  6810  000906  2229               	addwfc	___flmul@prod+2,f,c
  6811  000908  222A               	addwfc	___flmul@prod+3,f,c
  6812  00090A  5018               	movf	___flmul@a,w,c
  6813  00090C  0216               	mulwf	___flmul@b+2,c
  6814  00090E  CFF3 F02B          	movff	prodl,___flmul@temp
  6815  000912  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6816  000916  502B               	movf	___flmul@temp,w,c
  6817  000918  2621               	addwf	___flmul@grs,f,c
  6818  00091A  0E00               	movlw	0
  6819  00091C  2222               	addwfc	___flmul@grs+1,f,c
  6820  00091E  2223               	addwfc	___flmul@grs+2,f,c
  6821  000920  2224               	addwfc	___flmul@grs+3,f,c
  6822  000922  502C               	movf	___flmul@temp+1,w,c
  6823  000924  2627               	addwf	___flmul@prod,f,c
  6824  000926  0E00               	movlw	0
  6825  000928  2228               	addwfc	___flmul@prod+1,f,c
  6826  00092A  2229               	addwfc	___flmul@prod+2,f,c
  6827  00092C  222A               	addwfc	___flmul@prod+3,f,c
  6828  00092E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6829  000932  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6830  000936  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6831  00093A  6A21               	clrf	___flmul@grs,c
  6832  00093C  5018               	movf	___flmul@a,w,c
  6833  00093E  0215               	mulwf	___flmul@b+1,c
  6834  000940  CFF3 F02B          	movff	prodl,___flmul@temp
  6835  000944  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6836  000948  502B               	movf	___flmul@temp,w,c
  6837  00094A  2621               	addwf	___flmul@grs,f,c
  6838  00094C  502C               	movf	___flmul@temp+1,w,c
  6839  00094E  2222               	addwfc	___flmul@grs+1,f,c
  6840  000950  0E00               	movlw	0
  6841  000952  2223               	addwfc	___flmul@grs+2,f,c
  6842  000954  0E00               	movlw	0
  6843  000956  2224               	addwfc	___flmul@grs+3,f,c
  6844  000958  5019               	movf	___flmul@a+1,w,c
  6845  00095A  0214               	mulwf	___flmul@b,c
  6846  00095C  CFF3 F02B          	movff	prodl,___flmul@temp
  6847  000960  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6848  000964  502B               	movf	___flmul@temp,w,c
  6849  000966  2621               	addwf	___flmul@grs,f,c
  6850  000968  502C               	movf	___flmul@temp+1,w,c
  6851  00096A  2222               	addwfc	___flmul@grs+1,f,c
  6852  00096C  0E00               	movlw	0
  6853  00096E  2223               	addwfc	___flmul@grs+2,f,c
  6854  000970  0E00               	movlw	0
  6855  000972  2224               	addwfc	___flmul@grs+3,f,c
  6856  000974  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6857  000978  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6858  00097C  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6859  000980  6A21               	clrf	___flmul@grs,c
  6860  000982  5018               	movf	___flmul@a,w,c
  6861  000984  0214               	mulwf	___flmul@b,c
  6862  000986  CFF3 F02B          	movff	prodl,___flmul@temp
  6863  00098A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6864  00098E  502B               	movf	___flmul@temp,w,c
  6865  000990  2621               	addwf	___flmul@grs,f,c
  6866  000992  502C               	movf	___flmul@temp+1,w,c
  6867  000994  2222               	addwfc	___flmul@grs+1,f,c
  6868  000996  0E00               	movlw	0
  6869  000998  2223               	addwfc	___flmul@grs+2,f,c
  6870  00099A  0E00               	movlw	0
  6871  00099C  2224               	addwfc	___flmul@grs+3,f,c
  6872  00099E  501A               	movf	___flmul@a+2,w,c
  6873  0009A0  0215               	mulwf	___flmul@b+1,c
  6874  0009A2  CFF3 F02B          	movff	prodl,___flmul@temp
  6875  0009A6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6876  0009AA  502B               	movf	___flmul@temp,w,c
  6877  0009AC  2627               	addwf	___flmul@prod,f,c
  6878  0009AE  502C               	movf	___flmul@temp+1,w,c
  6879  0009B0  2228               	addwfc	___flmul@prod+1,f,c
  6880  0009B2  0E00               	movlw	0
  6881  0009B4  2229               	addwfc	___flmul@prod+2,f,c
  6882  0009B6  0E00               	movlw	0
  6883  0009B8  222A               	addwfc	___flmul@prod+3,f,c
  6884  0009BA  5019               	movf	___flmul@a+1,w,c
  6885  0009BC  0216               	mulwf	___flmul@b+2,c
  6886  0009BE  CFF3 F02B          	movff	prodl,___flmul@temp
  6887  0009C2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6888  0009C6  502B               	movf	___flmul@temp,w,c
  6889  0009C8  2627               	addwf	___flmul@prod,f,c
  6890  0009CA  502C               	movf	___flmul@temp+1,w,c
  6891  0009CC  2228               	addwfc	___flmul@prod+1,f,c
  6892  0009CE  0E00               	movlw	0
  6893  0009D0  2229               	addwfc	___flmul@prod+2,f,c
  6894  0009D2  0E00               	movlw	0
  6895  0009D4  222A               	addwfc	___flmul@prod+3,f,c
  6896  0009D6  501A               	movf	___flmul@a+2,w,c
  6897  0009D8  0216               	mulwf	___flmul@b+2,c
  6898  0009DA  CFF3 F02B          	movff	prodl,___flmul@temp
  6899  0009DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6900  0009E2  502B               	movf	___flmul@temp,w,c
  6901  0009E4  6E1C               	movwf	??___flmul& (0+255),c
  6902  0009E6  502C               	movf	___flmul@temp+1,w,c
  6903  0009E8  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6904  0009EA  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6905  0009EC  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6906  0009EE  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6907  0009F2  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6908  0009F6  C01C  F01D         	movff	??___flmul,??___flmul+1
  6909  0009FA  6A1C               	clrf	??___flmul,c
  6910  0009FC  501C               	movf	??___flmul,w,c
  6911  0009FE  2627               	addwf	___flmul@prod,f,c
  6912  000A00  501D               	movf	??___flmul+1,w,c
  6913  000A02  2228               	addwfc	___flmul@prod+1,f,c
  6914  000A04  501E               	movf	??___flmul+2,w,c
  6915  000A06  2229               	addwfc	___flmul@prod+2,f,c
  6916  000A08  501F               	movf	??___flmul+3,w,c
  6917  000A0A  222A               	addwfc	___flmul@prod+3,f,c
  6918  000A0C  C021  F01C         	movff	___flmul@grs,??___flmul
  6919  000A10  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  6920  000A14  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  6921  000A18  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  6922  000A1C  0E19               	movlw	25
  6923  000A1E  D005               	goto	i1u187_20
  6924  000A20                     i1u187_25:
  6925  000A20  90D8               	bcf	status,0,c
  6926  000A22  321F               	rrcf	??___flmul+3,f,c
  6927  000A24  321E               	rrcf	??___flmul+2,f,c
  6928  000A26  321D               	rrcf	??___flmul+1,f,c
  6929  000A28  321C               	rrcf	??___flmul,f,c
  6930  000A2A                     i1u187_20:
  6931  000A2A  2EE8               	decfsz	wreg,f,c
  6932  000A2C  D7F9               	goto	i1u187_25
  6933  000A2E  501C               	movf	??___flmul,w,c
  6934  000A30  2627               	addwf	___flmul@prod,f,c
  6935  000A32  501D               	movf	??___flmul+1,w,c
  6936  000A34  2228               	addwfc	___flmul@prod+1,f,c
  6937  000A36  501E               	movf	??___flmul+2,w,c
  6938  000A38  2229               	addwfc	___flmul@prod+2,f,c
  6939  000A3A  501F               	movf	??___flmul+3,w,c
  6940  000A3C  222A               	addwfc	___flmul@prod+3,f,c
  6941  000A3E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6942  000A42  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6943  000A46  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6944  000A4A  6A21               	clrf	___flmul@grs,c
  6945  000A4C  5025               	movf	___flmul@aexp,w,c
  6946  000A4E  C026  F01C         	movff	___flmul@bexp,??___flmul
  6947  000A52  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6948  000A54  261C               	addwf	??___flmul,f,c
  6949  000A56  0E00               	movlw	0
  6950  000A58  221D               	addwfc	??___flmul+1,f,c
  6951  000A5A  0E82               	movlw	130
  6952  000A5C  241C               	addwf	??___flmul,w,c
  6953  000A5E  6E2B               	movwf	___flmul@temp,c
  6954  000A60  0EFF               	movlw	255
  6955  000A62  201D               	addwfc	??___flmul+1,w,c
  6956  000A64  6E2C               	movwf	___flmul@temp+1,c
  6957  000A66  D00F               	goto	i1l3390
  6958  000A68                     i1l3384:
  6959  000A68  90D8               	bcf	status,0,c
  6960  000A6A  3627               	rlcf	___flmul@prod,f,c
  6961  000A6C  3628               	rlcf	___flmul@prod+1,f,c
  6962  000A6E  3629               	rlcf	___flmul@prod+2,f,c
  6963  000A70  362A               	rlcf	___flmul@prod+3,f,c
  6964  000A72  BE24               	btfsc	___flmul@grs+3,7,c
  6965  000A74  8027               	bsf	___flmul@prod,0,c
  6966  000A76  90D8               	bcf	status,0,c
  6967  000A78  3621               	rlcf	___flmul@grs,f,c
  6968  000A7A  3622               	rlcf	___flmul@grs+1,f,c
  6969  000A7C  3623               	rlcf	___flmul@grs+2,f,c
  6970  000A7E  3624               	rlcf	___flmul@grs+3,f,c
  6971  000A80  062B               	decf	___flmul@temp,f,c
  6972  000A82  A0D8               	btfss	status,0,c
  6973  000A84  062C               	decf	___flmul@temp+1,f,c
  6974  000A86                     i1l3390:
  6975  000A86  AE29               	btfss	___flmul@prod+2,7,c
  6976  000A88  D7EF               	goto	i1l3384
  6977  000A8A  0E00               	movlw	0
  6978  000A8C  6E25               	movwf	___flmul@aexp,c
  6979  000A8E  AE24               	btfss	___flmul@grs+3,7,c
  6980  000A90  D017               	goto	i1l1666
  6981  000A92  0EFF               	movlw	255
  6982  000A94  1421               	andwf	___flmul@grs,w,c
  6983  000A96  6E1C               	movwf	??___flmul& (0+255),c
  6984  000A98  0EFF               	movlw	255
  6985  000A9A  1422               	andwf	___flmul@grs+1,w,c
  6986  000A9C  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6987  000A9E  0EFF               	movlw	255
  6988  000AA0  1423               	andwf	___flmul@grs+2,w,c
  6989  000AA2  6E1E               	movwf	(??___flmul+2)& (0+255),c
  6990  000AA4  0E7F               	movlw	127
  6991  000AA6  1424               	andwf	___flmul@grs+3,w,c
  6992  000AA8  6E1F               	movwf	(??___flmul+3)& (0+255),c
  6993  000AAA  501C               	movf	??___flmul,w,c
  6994  000AAC  101D               	iorwf	??___flmul+1,w,c
  6995  000AAE  101E               	iorwf	??___flmul+2,w,c
  6996  000AB0  101F               	iorwf	??___flmul+3,w,c
  6997  000AB2  B4D8               	btfsc	status,2,c
  6998  000AB4  D003               	goto	i1l1667
  6999  000AB6                     i1u191_20:
  7000  000AB6  0E01               	movlw	1
  7001  000AB8  6E25               	movwf	___flmul@aexp,c
  7002  000ABA  D002               	goto	i1l1666
  7003  000ABC                     i1l1667:
  7004  000ABC  B027               	btfsc	___flmul@prod,0,c
  7005  000ABE  D7FB               	goto	i1u191_20
  7006  000AC0                     i1l1666:
  7007  000AC0  5025               	movf	___flmul@aexp,w,c
  7008  000AC2  B4D8               	btfsc	status,2,c
  7009  000AC4  D01F               	goto	i1l3410
  7010  000AC6  0E01               	movlw	1
  7011  000AC8  2627               	addwf	___flmul@prod,f,c
  7012  000ACA  0E00               	movlw	0
  7013  000ACC  2228               	addwfc	___flmul@prod+1,f,c
  7014  000ACE  2229               	addwfc	___flmul@prod+2,f,c
  7015  000AD0  222A               	addwfc	___flmul@prod+3,f,c
  7016  000AD2  A02A               	btfss	___flmul@prod+3,0,c
  7017  000AD4  D017               	goto	i1l3410
  7018  000AD6  C027  F01C         	movff	___flmul@prod,??___flmul
  7019  000ADA  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  7020  000ADE  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  7021  000AE2  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  7022  000AE6  341F               	rlcf	??___flmul+3,w,c
  7023  000AE8  321F               	rrcf	??___flmul+3,f,c
  7024  000AEA  321E               	rrcf	??___flmul+2,f,c
  7025  000AEC  321D               	rrcf	??___flmul+1,f,c
  7026  000AEE  321C               	rrcf	??___flmul,f,c
  7027  000AF0  C01C  F027         	movff	??___flmul,___flmul@prod
  7028  000AF4  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  7029  000AF8  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  7030  000AFC  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  7031  000B00  4A2B               	infsnz	___flmul@temp,f,c
  7032  000B02  2A2C               	incf	___flmul@temp+1,f,c
  7033  000B04                     i1l3410:
  7034  000B04  BE2C               	btfsc	___flmul@temp+1,7,c
  7035  000B06  D00D               	goto	i1l3414
  7036  000B08  502C               	movf	___flmul@temp+1,w,c
  7037  000B0A  E103               	bnz	i1u195_20
  7038  000B0C  282B               	incf	___flmul@temp,w,c
  7039  000B0E  A0D8               	btfss	status,0,c
  7040  000B10  D008               	goto	i1l3414
  7041  000B12                     i1u195_20:
  7042  000B12  0E00               	movlw	0
  7043  000B14  6E27               	movwf	___flmul@prod,c
  7044  000B16  0E00               	movlw	0
  7045  000B18  6E28               	movwf	___flmul@prod+1,c
  7046  000B1A  0E80               	movlw	128
  7047  000B1C  6E29               	movwf	___flmul@prod+2,c
  7048  000B1E  0E7F               	movlw	127
  7049  000B20  D020               	goto	L2
  7050  000B22                     i1l3414:
  7051  000B22  BE2C               	btfsc	___flmul@temp+1,7,c
  7052  000B24  D005               	goto	i1u196_20
  7053  000B26  502C               	movf	___flmul@temp+1,w,c
  7054  000B28  E10E               	bnz	i1l1674
  7055  000B2A  042B               	decf	___flmul@temp,w,c
  7056  000B2C  B0D8               	btfsc	status,0,c
  7057  000B2E  D00B               	goto	i1l1674
  7058  000B30                     i1u196_20:
  7059  000B30  0E00               	movlw	0
  7060  000B32  6E27               	movwf	___flmul@prod,c
  7061  000B34  0E00               	movlw	0
  7062  000B36  6E28               	movwf	___flmul@prod+1,c
  7063  000B38  0E00               	movlw	0
  7064  000B3A  6E29               	movwf	___flmul@prod+2,c
  7065  000B3C  0E00               	movlw	0
  7066  000B3E  6E2A               	movwf	___flmul@prod+3,c
  7067  000B40  0E00               	movlw	0
  7068  000B42  6E20               	movwf	___flmul@sign,c
  7069  000B44  D00F               	goto	i1l3426
  7070  000B46                     i1l1674:
  7071  000B46  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  7072  000B4A  0EFF               	movlw	255
  7073  000B4C  1627               	andwf	___flmul@prod,f,c
  7074  000B4E  0EFF               	movlw	255
  7075  000B50  1628               	andwf	___flmul@prod+1,f,c
  7076  000B52  0E7F               	movlw	127
  7077  000B54  1629               	andwf	___flmul@prod+2,f,c
  7078  000B56  0E00               	movlw	0
  7079  000B58  162A               	andwf	___flmul@prod+3,f,c
  7080  000B5A  B026               	btfsc	___flmul@bexp,0,c
  7081  000B5C  8E29               	bsf	___flmul@prod+2,7,c
  7082  000B5E  90D8               	bcf	status,0,c
  7083  000B60  3026               	rrcf	___flmul@bexp,w,c
  7084  000B62                     L2:
  7085  000B62  6E2A               	movwf	___flmul@prod+3,c
  7086  000B64                     i1l3426:
  7087  000B64  5020               	movf	___flmul@sign,w,c
  7088  000B66  122A               	iorwf	___flmul@prod+3,f,c
  7089  000B68  C027  F014         	movff	___flmul@prod,?___flmul
  7090  000B6C  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  7091  000B70  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  7092  000B74  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  7093  000B78  0012               	return		;funcret
  7094  000B7A                     __end_of___flmul:
  7095                           	opt callstack 0
  7096                           
  7097 ;; *************** function _ADCC_ISR *****************
  7098 ;; Defined at:
  7099 ;;		line 309 in file "mcc_generated_files/adcc.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;		None
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7113 ;;      Params:         0       0       0       0       0       0       0       0       0
  7114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7116 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7117 ;;Total ram usage:        0 bytes
  7118 ;; Hardware stack levels used:    1
  7119 ;; Hardware stack levels required when called:    5
  7120 ;; This function calls:
  7121 ;;		Absolute function
  7122 ;;		_adc_ready_ISR
  7123 ;; This function is called by:
  7124 ;;		_INTERRUPT_InterruptManagerLow
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text64
  7129  001DC8                     __ptext64:
  7130                           	opt callstack 0
  7131  001DC8                     _ADCC_ISR:
  7132                           	opt callstack 15
  7133                           
  7134                           ;mcc_generated_files/adcc.c: 312:     PIR1bits.ADIF = 0;
  7135                           
  7136                           ;incstack = 0
  7137  001DC8  010E               	movlb	14	; () banked
  7138  001DCA  91C6               	bcf	198,0,b	;volatile
  7139                           
  7140                           ; BSR set to: 14
  7141                           ;mcc_generated_files/adcc.c: 314:     if(ADCC_InterruptHandler)
  7142  001DCC  5050               	movf	_ADCC_InterruptHandler,w,c
  7143  001DCE  1051               	iorwf	_ADCC_InterruptHandler+1,w,c
  7144  001DD0  B4D8               	btfsc	status,2,c
  7145  001DD2  0012               	return	
  7146                           
  7147                           ; BSR set to: 14
  7148                           ;mcc_generated_files/adcc.c: 315:     {;mcc_generated_files/adcc.c: 316:         ADCC_In
      +                          terruptHandler();
  7149  001DD4  D801               	call	i1u239_28
  7150  001DD6  0012               	return	
  7151  001DD8                     i1u239_28:
  7152  001DD8  0005               	push	
  7153  001DDA  6EFA               	movwf	pclath,c
  7154  001DDC  5050               	movf	_ADCC_InterruptHandler,w,c
  7155  001DDE  6EFD               	movwf	tosl,c
  7156  001DE0  5051               	movf	_ADCC_InterruptHandler+1,w,c
  7157  001DE2  6EFE               	movwf	tosh,c
  7158  001DE4  50F8               	movf	tblptru,w,c
  7159  001DE6  6EFF               	movwf	tosu,c
  7160  001DE8  50FA               	movf	pclath,w,c
  7161  001DEA  0012               	return		;indir
  7162  001DEC                     __end_of_ADCC_ISR:
  7163                           	opt callstack 0
  7164                           
  7165 ;; *************** function _adc_ready_ISR *****************
  7166 ;; Defined at:
  7167 ;;		line 70 in file "cam.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;		None
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7183 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7184 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7185 ;;Total ram usage:        2 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    4
  7188 ;; This function calls:
  7189 ;;		i1_TMR3_SetInterruptHandler
  7190 ;;		i1_TMR3_StartTimer
  7191 ;;		i1_TMR3_WriteTimer
  7192 ;; This function is called by:
  7193 ;;		_cam_init
  7194 ;;		_ADCC_ISR
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text65
  7199  0013DC                     __ptext65:
  7200                           	opt callstack 0
  7201  0013DC                     _adc_ready_ISR:
  7202                           	opt callstack 15
  7203                           
  7204                           ;cam.c: 71:     PIE1bits.ADIE = 0;
  7205                           
  7206                           ;incstack = 0
  7207  0013DC  010E               	movlb	14	; () banked
  7208  0013DE  91BE               	bcf	190,0,b	;volatile
  7209                           
  7210                           ; BSR set to: 14
  7211  0013E0  A284               	btfss	3972,1,c	;volatile
  7212  0013E2  D002               	goto	i1u223_20
  7213  0013E4  0E01               	movlw	1
  7214  0013E6  D001               	goto	i1u223_26
  7215  0013E8                     i1u223_20:
  7216  0013E8  0E00               	movlw	0
  7217  0013EA                     i1u223_26:
  7218  0013EA  0AFF               	xorlw	255
  7219  0013EC  6E08               	movwf	??_adc_ready_ISR& (0+255),c
  7220  0013EE  4608               	rlncf	??_adc_ready_ISR,f,c
  7221  0013F0  5084               	movf	3972,w,c	;volatile
  7222  0013F2  1808               	xorwf	??_adc_ready_ISR,w,c
  7223  0013F4  0BFD               	andlw	-3
  7224  0013F6  1808               	xorwf	??_adc_ready_ISR,w,c
  7225  0013F8  6E84               	movwf	3972,c	;volatile
  7226                           
  7227                           ; BSR set to: 14
  7228                           ;cam.c: 73:     if (myCam.readFromFirst) {
  7229  0013FA  EE22  F000         	lfsr	2,_myCam
  7230  0013FE  50DF               	movf	indf2,w,c
  7231  001400  B4D8               	btfsc	status,2,c
  7232  001402  D00B               	goto	i1l3764
  7233                           
  7234                           ; BSR set to: 14
  7235                           ;cam.c: 75:         myCam.cam_pixels_2[myCam.index] = ADRESH;
  7236  001404  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7237  001408  CFDE F008          	movff	postinc2,??_adc_ready_ISR
  7238  00140C  CFDD F009          	movff	postdec2,??_adc_ready_ISR+1
  7239  001410  0E81               	movlw	low (_myCam+129)
  7240  001412  2408               	addwf	??_adc_ready_ISR,w,c
  7241  001414  6ED9               	movwf	fsr2l,c
  7242  001416  0E02               	movlw	high (_myCam+129)
  7243  001418  D00A               	goto	L3
  7244  00141A                     i1l3764:
  7245                           
  7246                           ; BSR set to: 14
  7247                           ;cam.c: 77:         myCam.cam_pixels_1[myCam.index] = ADRESH;
  7248  00141A  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7249  00141E  CFDE F008          	movff	postinc2,??_adc_ready_ISR
  7250  001422  CFDD F009          	movff	postdec2,??_adc_ready_ISR+1
  7251  001426  0E01               	movlw	low (_myCam+1)
  7252  001428  2408               	addwf	??_adc_ready_ISR,w,c
  7253  00142A  6ED9               	movwf	fsr2l,c
  7254  00142C  0E02               	movlw	high (_myCam+1)
  7255  00142E                     L3:
  7256  00142E  2009               	addwfc	??_adc_ready_ISR+1,w,c
  7257  001430  6EDA               	movwf	fsr2h,c
  7258  001432  CF5F FFDF          	movff	3935,indf2	;volatile
  7259                           
  7260                           ; BSR set to: 14
  7261                           ;cam.c: 79:     myCam.index++;
  7262                           
  7263                           ;cam.c: 78:     }
  7264  001436  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7265  00143A  2ADE               	incf	postinc2,f,c
  7266  00143C  0E00               	movlw	0
  7267  00143E  22DD               	addwfc	postdec2,f,c
  7268                           
  7269                           ;cam.c: 81:     if (myCam.index >= 128) {
  7270  001440  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7271  001444  0E01               	movlw	1
  7272  001446  BEDB               	btfsc	plusw2,7,c
  7273  001448  D01B               	goto	i1l935
  7274  00144A  0E01               	movlw	1
  7275  00144C  50DB               	movf	plusw2,w,c
  7276  00144E  E104               	bnz	i1u225_20
  7277  001450  0E80               	movlw	128
  7278  001452  5CDE               	subwf	postinc2,w,c
  7279  001454  A0D8               	btfss	status,0,c
  7280  001456  D014               	goto	i1l935
  7281  001458                     i1u225_20:
  7282                           
  7283                           ; BSR set to: 14
  7284                           ;cam.c: 85:         myCam.status = CAM_DONE;
  7285  001458  0E02               	movlw	2
  7286  00145A  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  7287                           
  7288                           ; BSR set to: 14
  7289                           
  7290                           ;cam.c: 86:         do { LATBbits.LATB1 = 0; } while(0);
  7291  00145E  9283               	bcf	3971,1,c	;volatile
  7292                           
  7293                           ; BSR set to: 14
  7294                           
  7295                           ;cam.c: 87:         do { LATBbits.LATB2 = 0; } while(0);
  7296  001460  9483               	bcf	3971,2,c	;volatile
  7297                           
  7298                           ; BSR set to: 14
  7299                           ;cam.c: 88:         TMR3_SetInterruptHandler(cam_start);
  7300  001462  0E96               	movlw	low i1_cam_start
  7301  001464  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  7302  001466  0E18               	movlw	high i1_cam_start
  7303  001468  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  7304  00146A  ECC4  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  7305                           
  7306                           ;cam.c: 89:         TMR3_WriteTimer(delay_between_ack);
  7307  00146E  C04E  F006         	movff	_delay_between_ack,i1TMR3_WriteTimer@timerVal
  7308  001472  C04F  F007         	movff	_delay_between_ack+1,i1TMR3_WriteTimer@timerVal+1
  7309  001476  EC41  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  7310  00147A                     i1l3772:
  7311                           
  7312                           ;cam.c: 90:         TMR3_StartTimer();
  7313  00147A  ECD0  F00F         	call	i1_TMR3_StartTimer	;wreg free
  7314                           
  7315                           ;cam.c: 92:     } else {
  7316  00147E  0012               	return	
  7317  001480                     i1l935:
  7318                           
  7319                           ; BSR set to: 14
  7320  001480  9283               	bcf	3971,1,c	;volatile
  7321                           
  7322                           ; BSR set to: 14
  7323                           ;cam.c: 94:         TMR3_SetInterruptHandler(timer_ISR);
  7324  001482  0E58               	movlw	low _timer_ISR
  7325  001484  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  7326  001486  0E17               	movlw	high _timer_ISR
  7327  001488  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  7328  00148A  ECC4  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  7329                           
  7330                           ;cam.c: 95:         TMR3_WriteTimer(timing_val);
  7331  00148E  C052  F006         	movff	_timing_val,i1TMR3_WriteTimer@timerVal
  7332  001492  C053  F007         	movff	_timing_val+1,i1TMR3_WriteTimer@timerVal+1
  7333  001496  EC41  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  7334  00149A  D7EF               	goto	i1l3772
  7335  00149C                     __end_of_adc_ready_ISR:
  7336                           	opt callstack 0
  7337                           
  7338 ;; *************** function i1_TMR3_WriteTimer *****************
  7339 ;; Defined at:
  7340 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  timerVal        2    5[COMRAM] unsigned short 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7354 ;;      Params:         2       0       0       0       0       0       0       0       0
  7355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7357 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7358 ;;Total ram usage:        2 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    3
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_TMR3_ISR
  7365 ;;		_timer_ISR
  7366 ;;		_adc_ready_ISR
  7367 ;;		i1_cam_start
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text66
  7372  001E82                     __ptext66:
  7373                           	opt callstack 0
  7374  001E82                     i1_TMR3_WriteTimer:
  7375                           	opt callstack 15
  7376                           
  7377                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  7378                           
  7379                           ;incstack = 0
  7380  001E82  A4C8               	btfss	4040,2,c	;volatile
  7381  001E84  D007               	goto	i1l3488
  7382                           
  7383                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  7384  001E86  90C8               	bcf	4040,0,c	;volatile
  7385                           
  7386                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  7387  001E88  5007               	movf	i1TMR3_WriteTimer@timerVal+1,w,c
  7388  001E8A  6EC7               	movwf	4039,c	;volatile
  7389                           
  7390                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  7391  001E8C  C006  FFC6         	movff	i1TMR3_WriteTimer@timerVal,4038	;volatile
  7392                           
  7393                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  7394  001E90  80C8               	bsf	4040,0,c	;volatile
  7395                           
  7396                           ;mcc_generated_files/tmr3.c: 140:     }
  7397  001E92  0012               	return	
  7398  001E94                     i1l3488:
  7399                           
  7400                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  7401  001E94  5007               	movf	i1TMR3_WriteTimer@timerVal+1,w,c
  7402  001E96  6EC7               	movwf	4039,c	;volatile
  7403                           
  7404                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  7405  001E98  C006  FFC6         	movff	i1TMR3_WriteTimer@timerVal,4038	;volatile
  7406  001E9C  0012               	return		;funcret
  7407  001E9E                     __end_ofi1_TMR3_WriteTimer:
  7408                           	opt callstack 0
  7409                           
  7410 ;; *************** function i1_TMR3_StartTimer *****************
  7411 ;; Defined at:
  7412 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;		None
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		None
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0
  7427 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7429 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7430 ;;Total ram usage:        0 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    3
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_timer_ISR
  7437 ;;		_adc_ready_ISR
  7438 ;;		i1_cam_start
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text67
  7443  001FA0                     __ptext67:
  7444                           	opt callstack 0
  7445  001FA0                     i1_TMR3_StartTimer:
  7446                           	opt callstack 15
  7447                           
  7448                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 1;
  7449                           
  7450                           ;incstack = 0
  7451  001FA0  80C8               	bsf	4040,0,c	;volatile
  7452  001FA2  0012               	return		;funcret
  7453  001FA4                     __end_ofi1_TMR3_StartTimer:
  7454                           	opt callstack 0
  7455                           
  7456 ;; *************** function i1_TMR3_SetInterruptHandler *****************
  7457 ;; Defined at:
  7458 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  7461 ;;		 -> i1_cam_start(1), timer_ISR(1), cam_start(1), TMR3_DefaultInterruptHandler(1), 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2, status,0
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7473 ;;      Params:         2       0       0       0       0       0       0       0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7476 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7477 ;;Total ram usage:        2 bytes
  7478 ;; Hardware stack levels used:    1
  7479 ;; Hardware stack levels required when called:    3
  7480 ;; This function calls:
  7481 ;;		Nothing
  7482 ;; This function is called by:
  7483 ;;		_timer_ISR
  7484 ;;		_adc_ready_ISR
  7485 ;;		i1_cam_start
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text68
  7490  001F88                     __ptext68:
  7491                           	opt callstack 0
  7492  001F88                     i1_TMR3_SetInterruptHandler:
  7493                           	opt callstack 15
  7494                           
  7495                           ;mcc_generated_files/tmr3.c: 179:     TMR3_InterruptHandler = InterruptHandler;
  7496                           
  7497                           ;incstack = 0
  7498  001F88  C006  F03A         	movff	i1TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  7499  001F8C  C007  F03B         	movff	i1TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  7500  001F90  0012               	return		;funcret
  7501  001F92                     __end_ofi1_TMR3_SetInterruptHandler:
  7502                           	opt callstack 0
  7503                           
  7504 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  7505 ;; Defined at:
  7506 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;		None
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  1    wreg      void 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7520 ;;      Params:         0       0       0       0       0       0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7522 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7523 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7524 ;;Total ram usage:        2 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    2
  7527 ;; This function calls:
  7528 ;;		_TMR2_ISR
  7529 ;; This function is called by:
  7530 ;;		Interrupt level 2
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	intcode
  7535  000008                     __pintcode:
  7536                           	opt callstack 0
  7537  000008                     _INTERRUPT_InterruptManagerHigh:
  7538                           	opt callstack 14
  7539                           
  7540                           ;incstack = 0
  7541  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7542  00000A  EF06  F00F         	goto	int_func
  7543                           
  7544                           	psect	intcode_body
  7545  001E0C                     __pintcode_body:
  7546                           	opt callstack 14
  7547  001E0C                     int_func:
  7548                           	opt callstack 14
  7549  001E0C  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  7550  001E10  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  7551                           
  7552                           ;mcc_generated_files/interrupt_manager.c: 83:     if(PIE4bits.TMR2IE == 1 && PIR4bits.TM
      +                          R2IF == 1)
  7553  001E14  010E               	movlb	14	; () banked
  7554  001E16  B3C1               	btfsc	193,1,b	;volatile
  7555                           
  7556                           ; BSR set to: 14
  7557  001E18  A3C9               	btfss	201,1,b	;volatile
  7558  001E1A  D002               	goto	i2l254
  7559                           
  7560                           ; BSR set to: 14
  7561                           ;mcc_generated_files/interrupt_manager.c: 84:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 85:         TMR2_ISR();
  7562  001E1C  ECD1  F00E         	call	_TMR2_ISR	;wreg free
  7563  001E20                     i2l254:
  7564  001E20  C005  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  7565  001E24  C004  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  7566  001E28  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7567  001E2A  0011               	retfie		f
  7568  001E2C                     __end_of_INTERRUPT_InterruptManagerHigh:
  7569                           	opt callstack 0
  7570                           
  7571 ;; *************** function _TMR2_ISR *****************
  7572 ;; Defined at:
  7573 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7587 ;;      Params:         0       0       0       0       0       0       0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7590 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7591 ;;Total ram usage:        0 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; Hardware stack levels required when called:    1
  7594 ;; This function calls:
  7595 ;;		Absolute function
  7596 ;;		_TMR2_DefaultInterruptHandler
  7597 ;;		_carcontrol_ISR
  7598 ;; This function is called by:
  7599 ;;		_INTERRUPT_InterruptManagerHigh
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text70
  7604  001DA2                     __ptext70:
  7605                           	opt callstack 0
  7606  001DA2                     _TMR2_ISR:
  7607                           	opt callstack 14
  7608                           
  7609                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  7610                           
  7611                           ;incstack = 0
  7612  001DA2  010E               	movlb	14	; () banked
  7613  001DA4  93C9               	bcf	201,1,b	;volatile
  7614                           
  7615                           ; BSR set to: 14
  7616                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  7617  001DA6  0100               	movlb	0	; () banked
  7618  001DA8  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7619  001DAA  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7620  001DAC  B4D8               	btfsc	status,2,c
  7621  001DAE  0012               	return	
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  7625  001DB0  D801               	call	i2u232_48
  7626  001DB2  0012               	return	
  7627  001DB4                     i2u232_48:
  7628  001DB4  0005               	push	
  7629  001DB6  6EFA               	movwf	pclath,c
  7630  001DB8  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7631  001DBA  6EFD               	movwf	tosl,c
  7632  001DBC  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7633  001DBE  6EFE               	movwf	tosh,c
  7634  001DC0  50F8               	movf	tblptru,w,c
  7635  001DC2  6EFF               	movwf	tosu,c
  7636  001DC4  50FA               	movf	pclath,w,c
  7637  001DC6  0012               	return		;indir
  7638  001DC8                     __end_of_TMR2_ISR:
  7639                           	opt callstack 0
  7640                           
  7641 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7642 ;; Defined at:
  7643 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		None
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7657 ;;      Params:         0       0       0       0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_TMR2_Initialize
  7667 ;;		_TMR2_ISR
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text71
  7672  001FAC                     __ptext71:
  7673                           	opt callstack 0
  7674  001FAC                     _TMR2_DefaultInterruptHandler:
  7675                           	opt callstack 14
  7676                           
  7677                           ;incstack = 0
  7678  001FAC  0012               	return		;funcret
  7679  001FAE                     __end_of_TMR2_DefaultInterruptHandler:
  7680                           	opt callstack 0
  7681                           
  7682 ;; *************** function _carcontrol_ISR *****************
  7683 ;; Defined at:
  7684 ;;		line 41 in file "car_ctrl.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7698 ;;      Params:         0       0       0       0       0       0       0       0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7700 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7701 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7702 ;;Total ram usage:        3 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		_carcontrol_init
  7708 ;;		_TMR2_ISR
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text72
  7713  0012F6                     __ptext72:
  7714                           	opt callstack 0
  7715  0012F6                     _carcontrol_ISR:
  7716                           	opt callstack 14
  7717                           
  7718                           ;car_ctrl.c: 43:     switch (carctl.state) {
  7719                           
  7720                           ;incstack = 0
  7721  0012F6  D05C               	goto	i2l3714
  7722  0012F8                     i2l3672:
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;car_ctrl.c: 46:             carctl.state = state_high;
  7726  0012F8  0E01               	movlw	1
  7727  0012FA  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7728                           
  7729                           ; BSR set to: 0
  7730  0012FC  8082               	bsf	3970,0,c	;volatile
  7731                           
  7732                           ; BSR set to: 0
  7733  0012FE  8282               	bsf	3970,1,c	;volatile
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;car_ctrl.c: 49:             stateTime = 0;
  7737  001300  0E00               	movlw	0
  7738  001302  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7739  001304  0E00               	movlw	0
  7740  001306  6FD5               	movwf	_stateTime& (0+255),b
  7741                           
  7742                           ;car_ctrl.c: 50:         break;
  7743  001308  0012               	return	
  7744  00130A                     i2l3678:
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;car_ctrl.c: 52:             stateTime++;
  7748  00130A  4BD5               	infsnz	_stateTime& (0+255),f,b
  7749  00130C  2BD6               	incf	(_stateTime+1)& (0+255),f,b
  7750                           
  7751                           ; BSR set to: 0
  7752  00130E  8082               	bsf	3970,0,c	;volatile
  7753                           
  7754                           ; BSR set to: 0
  7755  001310  8282               	bsf	3970,1,c	;volatile
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;car_ctrl.c: 55:             if (stateTime >= 100) {
  7759  001312  BFD6               	btfsc	(_stateTime+1)& (0+255),7,b
  7760  001314  0012               	return	
  7761  001316  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7762  001318  E104               	bnz	i2u215_40
  7763  00131A  0E64               	movlw	100
  7764  00131C  5DD5               	subwf	_stateTime& (0+255),w,b
  7765  00131E  A0D8               	btfss	status,0,c
  7766  001320  0012               	return	
  7767  001322                     i2u215_40:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;car_ctrl.c: 57:                 carctl.state = state_vary;
  7771  001322  0E02               	movlw	2
  7772  001324  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7773                           
  7774                           ;car_ctrl.c: 58:                 stateTime = 0;
  7775  001326  0E00               	movlw	0
  7776  001328  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7777  00132A  0E00               	movlw	0
  7778  00132C  6FD5               	movwf	_stateTime& (0+255),b
  7779  00132E  0012               	return	
  7780  001330                     i2l3688:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;car_ctrl.c: 62:             stateTime++;
  7784  001330  4BD5               	infsnz	_stateTime& (0+255),f,b
  7785  001332  2BD6               	incf	(_stateTime+1)& (0+255),f,b
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;car_ctrl.c: 63:             if (stateTime > carctl.throttleHighTime) {
  7789  001334  51CB               	movf	(_carctl+4)& (0+255),w,b	;volatile
  7790  001336  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7791  001338  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7792  00133A  51D5               	movf	_stateTime& (0+255),w,b
  7793  00133C  5C01               	subwf	??_carcontrol_ISR,w,c
  7794  00133E  5002               	movf	??_carcontrol_ISR+1,w,c
  7795  001340  0A80               	xorlw	128
  7796  001342  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
  7797  001344  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7798  001346  0A80               	xorlw	128
  7799  001348  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
  7800  00134A  A0D8               	btfss	status,0,c
  7801                           
  7802                           ; BSR set to: 0
  7803                           
  7804                           ;car_ctrl.c: 64:                 do { LATAbits.LATA0 = 0; } while(0);
  7805  00134C  9082               	bcf	3970,0,c	;volatile
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;car_ctrl.c: 66:             if (stateTime > carctl.servoHighTime) {
  7809  00134E  51CC               	movf	(_carctl+5)& (0+255),w,b	;volatile
  7810  001350  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7811  001352  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7812  001354  51D5               	movf	_stateTime& (0+255),w,b
  7813  001356  5C01               	subwf	??_carcontrol_ISR,w,c
  7814  001358  5002               	movf	??_carcontrol_ISR+1,w,c
  7815  00135A  0A80               	xorlw	128
  7816  00135C  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
  7817  00135E  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7818  001360  0A80               	xorlw	128
  7819  001362  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
  7820  001364  A0D8               	btfss	status,0,c
  7821                           
  7822                           ; BSR set to: 0
  7823                           
  7824                           ;car_ctrl.c: 67:                 do { LATAbits.LATA1 = 0; } while(0);
  7825  001366  9282               	bcf	3970,1,c	;volatile
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;car_ctrl.c: 69:             if (stateTime >= 100) {
  7829  001368  BFD6               	btfsc	(_stateTime+1)& (0+255),7,b
  7830  00136A  0012               	return	
  7831  00136C  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7832  00136E  E104               	bnz	i2u218_40
  7833  001370  0E64               	movlw	100
  7834  001372  5DD5               	subwf	_stateTime& (0+255),w,b
  7835  001374  A0D8               	btfss	status,0,c
  7836  001376  0012               	return	
  7837  001378                     i2u218_40:
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;car_ctrl.c: 70:                 carctl.state = state_low;
  7841  001378  0E03               	movlw	3
  7842  00137A  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7843                           
  7844                           ;car_ctrl.c: 71:                 stateTime = 0;
  7845  00137C  0E00               	movlw	0
  7846  00137E  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7847  001380  0E00               	movlw	0
  7848  001382  6FD5               	movwf	_stateTime& (0+255),b
  7849  001384  0012               	return	
  7850  001386                     i2l3698:
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;car_ctrl.c: 75:             stateTime++;
  7854  001386  4BD5               	infsnz	_stateTime& (0+255),f,b
  7855  001388  2BD6               	incf	(_stateTime+1)& (0+255),f,b
  7856                           
  7857                           ; BSR set to: 0
  7858  00138A  9082               	bcf	3970,0,c	;volatile
  7859                           
  7860                           ; BSR set to: 0
  7861  00138C  9282               	bcf	3970,1,c	;volatile
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;car_ctrl.c: 78:             if (stateTime >= 1800) {
  7865  00138E  BFD6               	btfsc	(_stateTime+1)& (0+255),7,b
  7866  001390  0012               	return	
  7867  001392  0E08               	movlw	8
  7868  001394  5DD5               	subwf	_stateTime& (0+255),w,b
  7869  001396  0E07               	movlw	7
  7870  001398  59D6               	subwfb	(_stateTime+1)& (0+255),w,b
  7871  00139A  A0D8               	btfss	status,0,c
  7872  00139C  0012               	return	
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;car_ctrl.c: 79:                 carctl.state = state_high;
  7876  00139E  0E01               	movlw	1
  7877  0013A0  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7878                           
  7879                           ;car_ctrl.c: 80:                 stateTime = 0;
  7880  0013A2  0E00               	movlw	0
  7881  0013A4  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7882  0013A6  0E00               	movlw	0
  7883  0013A8  6FD5               	movwf	_stateTime& (0+255),b
  7884                           
  7885                           ; BSR set to: 0
  7886  0013AA  8082               	bsf	3970,0,c	;volatile
  7887                           
  7888                           ; BSR set to: 0
  7889  0013AC  9282               	bcf	3970,1,c	;volatile
  7890  0013AE  0012               	return	
  7891  0013B0                     i2l3714:
  7892  0013B0  0100               	movlb	0	; () banked
  7893  0013B2  51C8               	movf	(_carctl+1)& (0+255),w,b	;volatile
  7894  0013B4  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7895  0013B6  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7896                           
  7897                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7898                           ; Switch size 1, requested type "simple"
  7899                           ; Number of cases is 1, Range of values is 0 to 0
  7900                           ; switch strategies available:
  7901                           ; Name         Instructions Cycles
  7902                           ; simple_byte            4     3 (average)
  7903                           ;	Chosen strategy is simple_byte
  7904  0013B8  5002               	movf	??_carcontrol_ISR+1,w,c
  7905  0013BA  0A00               	xorlw	0	; case 0
  7906  0013BC  A4D8               	btfss	status,2,c
  7907  0013BE  0012               	return	
  7908                           
  7909                           ; BSR set to: 0
  7910                           ; Switch size 1, requested type "simple"
  7911                           ; Number of cases is 4, Range of values is 0 to 3
  7912                           ; switch strategies available:
  7913                           ; Name         Instructions Cycles
  7914                           ; simple_byte           13     7 (average)
  7915                           ;	Chosen strategy is simple_byte
  7916  0013C0  5001               	movf	??_carcontrol_ISR,w,c
  7917  0013C2  0A00               	xorlw	0	; case 0
  7918  0013C4  B4D8               	btfsc	status,2,c
  7919  0013C6  D798               	goto	i2l3672
  7920  0013C8  0A01               	xorlw	1	; case 1
  7921  0013CA  B4D8               	btfsc	status,2,c
  7922  0013CC  D79E               	goto	i2l3678
  7923  0013CE  0A03               	xorlw	3	; case 2
  7924  0013D0  B4D8               	btfsc	status,2,c
  7925  0013D2  D7AE               	goto	i2l3688
  7926  0013D4  0A01               	xorlw	1	; case 3
  7927  0013D6  A4D8               	btfss	status,2,c
  7928  0013D8  0012               	return	
  7929  0013DA  D7D5               	goto	i2l3698
  7930  0013DC                     __end_of_carcontrol_ISR:
  7931                           	opt callstack 0
  7932                           
  7933                           	psect	text73
  7934  000000                     __ptext73:
  7935                           	opt callstack 0
  7936                           
  7937                           	psect	rparam
  7938  0000                     
  7939                           	psect	temp
  7940  000057                     btemp:
  7941                           	opt callstack 0
  7942  000057                     	ds	1
  7943  0000                     int$flags	set	btemp
  7944  0000                     wtemp8	set	btemp+1
  7945  0000                     ttemp5	set	btemp+1
  7946  0000                     ttemp6	set	btemp+4
  7947  0000                     ttemp7	set	btemp+8
  7948                           tosu	equ	0xFFF
  7949                           tosh	equ	0xFFE
  7950                           tosl	equ	0xFFD
  7951                           stkptr	equ	0xFFC
  7952                           pclatu	equ	0xFFB
  7953                           pclath	equ	0xFFA
  7954                           pcl	equ	0xFF9
  7955                           tblptru	equ	0xFF8
  7956                           tblptrh	equ	0xFF7
  7957                           tblptrl	equ	0xFF6
  7958                           tablat	equ	0xFF5
  7959                           prodh	equ	0xFF4
  7960                           prodl	equ	0xFF3
  7961                           indf0	equ	0xFEF
  7962                           postinc0	equ	0xFEE
  7963                           postdec0	equ	0xFED
  7964                           preinc0	equ	0xFEC
  7965                           plusw0	equ	0xFEB
  7966                           fsr0h	equ	0xFEA
  7967                           fsr0l	equ	0xFE9
  7968                           wreg	equ	0xFE8
  7969                           indf1	equ	0xFE7
  7970                           postinc1	equ	0xFE6
  7971                           postdec1	equ	0xFE5
  7972                           preinc1	equ	0xFE4
  7973                           plusw1	equ	0xFE3
  7974                           fsr1h	equ	0xFE2
  7975                           fsr1l	equ	0xFE1
  7976                           bsr	equ	0xFE0
  7977                           indf2	equ	0xFDF
  7978                           postinc2	equ	0xFDE
  7979                           postdec2	equ	0xFDD
  7980                           preinc2	equ	0xFDC
  7981                           plusw2	equ	0xFDB
  7982                           fsr2h	equ	0xFDA
  7983                           fsr2l	equ	0xFD9
  7984                           status	equ	0xFD8


Data Sizes:
    Strings     38
    Constant    0
    Data        5
    BSS         321
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      86
    BANK0           160    103     160
    BANK1           256    256     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3109_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    cam_get@pixels	PTR unsigned short  size(2) Largest target is 256
		 -> main@cam_pixels(BANK1[256]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_ISR(), cam_start(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i1_cam_start(), timer_ISR(), cam_start(), TMR3_DefaultInterruptHandler(), 
		 -> Absolute function(), 

    ADCC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_ready_ISR(), 

    ADCC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_ready_ISR(), NULL(NULL[0]), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), Absolute function(), IOCCF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _INTERRUPT_InterruptManagerLow->_CCP1_CaptureISR
    _TMR3_ISR->_timer_ISR
    _TMR3_ISR->i1_cam_start
    i1_cam_start->i1_TMR3_SetInterruptHandler
    i1_cam_start->i1_TMR3_WriteTimer
    _timer_ISR->i1_TMR3_SetInterruptHandler
    _timer_ISR->i1_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _ping_TMR1Overflow_isr->i1_IOCCF2_SetInterruptHandler
    _ping_TMR1Overflow_isr->i1_TMR1_SetInterruptHandler
    _ping_RC2_went_HIGH->_TMR1_WriteTimer
    _ping_RC2_went_HIGH->i1_IOCCF2_SetInterruptHandler
    _ping_RC2_went_HIGH->i1_TMR1_SetInterruptHandler
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_CaptureISR->_ping_CCP1_triggered
    _ping_CCP1_triggered->___flmul
    ___flmul->___xxtofl
    _ADCC_ISR->_adc_ready_ISR
    _adc_ready_ISR->i1_TMR3_SetInterruptHandler
    _adc_ready_ISR->i1_TMR3_WriteTimer

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR2_ISR->_carcontrol_ISR

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _carcontrol_init->_TMR2_SetInterruptHandler
    _cam_start->_TMR3_SetInterruptHandler
    _cam_start->_TMR3_WriteTimer
    _cam_init->_ADCC_SelectChannel
    _cam_init->_ADCC_SetInterruptHandler
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _CCP1_Initialize->_CCP1_SetCallBack

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0    9781
                                             97 BANK0      6     6      0
                                              0 BANK1    256   256      0
                  _SYSTEM_Initialize
                            _cam_get
                           _cam_init
                          _cam_start
                    _carcontrol_init
                _carcontrol_steering
                _carcontrol_throttle
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6245
                                             89 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6039
                                             81 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5685
                                             65 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4314
                                             29 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2665
                                             18 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     812
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _carcontrol_init                                      0     0      0     310
           _TMR2_SetInterruptHandler
                _carcontrol_steering
                _carcontrol_throttle
 ---------------------------------------------------------------------------------
 (1) _carcontrol_throttle                                  1     1      0      45
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _carcontrol_steering                                  1     1      0      91
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cam_start                                            1     1      0     814
                                              2 BANK0      1     1      0
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     440
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cam_init                                             0     0      0     218
                 _ADCC_SelectChannel
           _ADCC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_SelectChannel                                   2     1      1     120
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _cam_get                                              8     6      2     300
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1640
                    _ADCC_Initialize
                    _CCP1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     374
                                              2 BANK0      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             2     0      2     374
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     350
                                              2 BANK0      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     350
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     274
         _IOCCF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2     274
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     174
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerLow                       9     9      0    4694
                                             48 COMRAM     9     9      0
                           _ADCC_ISR
                    _CCP1_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0     958
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _timer_ISR *
                  i1_TMR3_WriteTimer
                        i1_cam_start *
 ---------------------------------------------------------------------------------
 (12) i1_cam_start                                         1     1      0     370
                                              7 COMRAM     1     1      0
         i1_TMR3_SetInterruptHandler
                  i1_TMR3_StartTimer
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _timer_ISR                                           1     1      0     370
                                              7 COMRAM     1     1      0
         i1_TMR3_SetInterruptHandler
                  i1_TMR3_StartTimer
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     540
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
              _ping_TMR1Overflow_isr *
 ---------------------------------------------------------------------------------
 (12) _ping_TMR1Overflow_isr                               0     0      0     148
       i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0     540
                         _IOCCF2_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF2_ISR                                          0     0      0     540
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                 _ping_RC2_went_HIGH *
 ---------------------------------------------------------------------------------
 (13) _ping_RC2_went_HIGH                                  0     0      0     540
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
       i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (13) i1_TMR1_SetInterruptHandler                          2     0      2      74
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i1_IOCCF2_SetInterruptHandler                        2     0      2      74
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     392
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     2     2      0    2286
                                             46 COMRAM     2     2      0
                   Absolute function *
               _CCP1_DefaultCallBack *
                _ping_CCP1_triggered *
 ---------------------------------------------------------------------------------
 (12) _ping_CCP1_triggered                                 2     0      2    2239
                                             44 COMRAM     2     0      2
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (13) ___xxtofl                                           14    10      4     398
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___flmul                                            25    17      8    1744
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _ADCC_ISR                                            0     0      0     370
                   Absolute function *
                      _adc_ready_ISR *
 ---------------------------------------------------------------------------------
 (12) _adc_ready_ISR                                       2     2      0     370
                                              7 COMRAM     2     2      0
         i1_TMR3_SetInterruptHandler
                  i1_TMR3_StartTimer
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_WriteTimer                                   2     0      2     218
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_SetInterruptHandler                          2     0      2     152
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManagerHigh                      2     2      0       0
                                              3 COMRAM     2     2      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                     _carcontrol_ISR *
 ---------------------------------------------------------------------------------
 (17) _carcontrol_ISR                                      3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (17) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP1_Initialize
       _CCP1_SetCallBack
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _cam_get
   _cam_init
     _ADCC_SelectChannel
     _ADCC_SetInterruptHandler
   _cam_start
     _TMR3_SetInterruptHandler
     _TMR3_StartTimer
     _TMR3_WriteTimer
   _carcontrol_init
     _TMR2_SetInterruptHandler
     _carcontrol_steering
     _carcontrol_throttle
   _carcontrol_steering
   _carcontrol_throttle
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _ADCC_ISR
     Absolute function(Fake) *
     _adc_ready_ISR *
       i1_TMR3_SetInterruptHandler
       i1_TMR3_StartTimer
       i1_TMR3_WriteTimer
   _CCP1_CaptureISR
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
     _ping_CCP1_triggered *
       ___flmul
         ___xxtofl (ARG)
       ___xxtofl
   _PIN_MANAGER_IOC
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       _ping_RC2_went_HIGH *
         _TMR1_StartTimer
         _TMR1_WriteTimer
         i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _ping_TMR1Overflow_isr *
       i1_IOCCF2_SetInterruptHandler
       i1_TMR1_SetInterruptHandler
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _timer_ISR *
       i1_TMR3_SetInterruptHandler
       i1_TMR3_StartTimer
       i1_TMR3_WriteTimer
     i1_TMR3_WriteTimer *
     i1_cam_start *
       i1_TMR3_SetInterruptHandler
       i1_TMR3_StartTimer
       i1_TMR3_WriteTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _carcontrol_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     104      21       12.7%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      56       1       91.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F6      18        0.0%
DATA                 0      0     2FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 19:59:29 2019

                                 cam_get@pixels 0060                __end_of_TMR2_SetInterruptHandler 1F38  
                             ??_carcontrol_init 0062                                     __CFG_CP$OFF 000000  
                                            bsr 000FE0                             _carcontrol_throttle 1EB6  
                           _carcontrol_steering 1BE4                         __end_of_CCP1_Initialize 1CFE  
                                   __CFG_LVP$ON 000000                                             l968 153E  
                                           l995 1610                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                 _timer1ReloadVal 0040  
                                           _abs 1B48                                             _pad 15DE  
                       __size_of_PMD_Initialize 001C                                 _TMR2_Initialize 1CA2  
                                           tosl 000FFD                                             wreg 000FE8  
              ??_IOCCF2_DefaultInterruptHandler 0006                 ?_IOCCF2_DefaultInterruptHandler 0001  
                                  ___flmul@aexp 0025                                    ___flmul@bexp 0026  
                                  ___flmul@sign 0020                                    ___flmul@temp 002B  
                                  ___flmul@prod 0027                     carcontrol_steering@steering 0060  
                                   i1_cam_start 1896                                    __CFG_ZCD$OFF 000000  
                                          l1006 0BEE                                            l1008 0BF6  
                                          ?_abs 0072                                            l3020 1696  
                                          l3030 1AE2                                            l3112 106E  
                                          l3104 1032                                            l3008 1EF4  
                                          l3040 1C84                                            l3200 0D18  
                                          l3034 1AFA                                            l3050 15F8  
                                          l4010 1594                                            l4002 157C  
                               _timer3ReloadVal 003C                                            l3108 1048  
                                          l3140 1298                                            l3132 123C  
                                          l3124 11FE                                            l3060 1634  
                                          l3220 0D7E                                            l3134 1250  
                                          l3038 1C7E                                            l3054 1608  
                                          l3080 0F74                                            l3144 12AE  
                                          l3128 1222                                            l3064 1660  
                                          l3056 161A                                            l3224 0D96  
                                          l3092 0FC2                                            l3148 12D4  
                                          l3172 0BD2                                            l3094 0FD6  
                                          l3086 0F9C                                            l1718 1B72  
                                          l3190 0C1E                                            l3186 0C10  
                                          l3284 0EEC                                            l3278 0EB0  
                                          l3294 0F10                                            l3288 0EF8  
                                          l3662 1BF8                                            ?_pad 0072  
                                          l3648 1E00                                            l3656 1EC6  
                                          l3666 1C06                                            l3940 14FC  
                                          l3934 14F2                                            l3928 14B0  
                                          l3784 19C4                                            l3786 19EA  
                                          STR_1 0822                                            STR_2 0801  
                                          u1500 0FDA                                            _LATA 000F82  
                                          _LATB 000F83                                            _LATC 000F84  
                                          u1360 168E                                            u1600 0BA4  
                                          u1450 1B58                                            u1610 0BA6  
                                          u1380 16D6                                            u1700 0D58  
                                          u2430 171E                                            u1710 0D5C  
                                          u1560 1254                                            u1640 0BE4  
                                          u2600 15D0                                            u1481 0FA2  
                                          u1730 0D68                                            _T2PR 000FBB  
                                          u1660 0C0A                                            u2470 153E  
                                          u1670 0D28                                            u2448 1722  
                                          u1690 0D4A                                            u1770 0E32  
                                          u1691 0D48                                            u2627 156E  
                                          u2637 172A                                            _PMD0 000EDC  
                                          _PMD1 000EDD                                            _PMD2 000EDE  
                                          _PMD3 000EDF                                            _PMD4 000EE0  
                                          _PMD5 000EE1                                            _PIR6 000ECB  
                                          _TMR2 000FBA                                            _WPUA 000F0B  
                                          _WPUB 000F13                                            _WPUC 000F1B  
                                          _WPUE 000F28                                __end_of_ADCC_ISR 1DEC  
                          ?_carcontrol_throttle 0001                            ?_carcontrol_steering 0001  
                                 _EUSART1_Write 1EF0                                   __CFG_FCMEN$ON 000000  
                      _ADCC_SetInterruptHandler 1F1A                                            abs@a 0072  
                                          _dbuf 00D8                                            _main 1540  
                                          _dtoa 0B7A                                            _prec 00D1  
                                          _nout 00CD                                            pad@i 0079  
                                          pad@p 0076                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 007B  
                                          fsr2l 000FD9                                            btemp 0057  
                            _ADCC_SelectChannel 1ECC                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00A2  
                               _TMR3_Initialize 1A92                        __end_of_CCP1_SetCallBack 1F74  
                    ??_TMR1_SetInterruptHandler 0062                                   __CFG_CSWEN$ON 000000  
                                  ___param_bank 000000                                ?_CCP1_CaptureISR 0001  
                           ?_ADCC_SelectChannel 0060                                   __CFG_SCANE$ON 000000  
                                         ??_abs 0074                                           ??_pad 0078  
                __size_of_OSCILLATOR_Initialize 0018                   __end_of_OSCILLATOR_Initialize 1EB6  
                           __size_of_IOCCF2_ISR 0026                                 __end_of___aodiv 1090  
                                         _ADACQ 000F57                                           _ADACT 000F51  
                                         _ADCAP 000F58                                           ?_main 0001  
                                         ?_dtoa 007D                                           _ADCLK 000F52  
                               __end_of___aomod 12F6                                           _ADCNT 000F62  
                                         _ADPCH 000F5A                                           _ADREF 000F53  
                                         _ADPRE 000F59                                   __CFG_WDTE$OFF 000000  
                                         _ADRPT 000F61                                 __end_of___flmul 0B7A  
                               _TMR1_StartTimer 1F9C                       ADCC_SelectChannel@channel 0061  
                                         _T1CLK 000FD1                                           _T1CON 000FCE  
                                         _T3CLK 000FCB                                           _T2CON 000FBC  
                                         _T3CON 000FC8                                           _T2HLT 000FBD  
                                __CFG_DEBUG$OFF 000000                                           _T2TMR 000FBA  
                                         _T2RST 000FBF                                           i1l261 0058  
                                         i1l263 0064                                           i1l264 007A  
                                         i1l265 0070                                           i1l259 004C  
                                         i2l254 1E20                                           i1l935 1480  
                                         _OSCEN 000ED7                                    vfpfcnvrt@fmt 00A3  
                               __end_of_cam_get 1540                                           _TMR1H 000FCD  
                                         _TMR1L 000FCC                                           _TMR3H 000FC7  
                                         _TMR3L 000FC6                                           _TRISA 000F87  
                                         _TRISB 000F88                                           _TRISC 000F89  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000               __size_of_TMR3_SetInterruptHandler 000A  
                                 __CFG_WRT3$OFF 000000                       ?_TMR3_SetInterruptHandler 0060  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR1_ISR 1C74                                __end_of_TMR2_ISR 1DC8  
                                 __CFG_WRTB$OFF 000000                                __end_of_TMR3_ISR 1C44  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                            ??_ADCC_SelectChannel 0061  
                ??_TMR3_DefaultInterruptHandler 0006                         __end_of_PIN_MANAGER_IOC 1F1A  
                                         _flags 00D3                                           _myCam 0200  
                        __size_of_adc_ready_ISR 00C0                                           _fputc 167C  
                                         _fputs 1AD6                              __CFG_MCLRE$EXTMCLR 000000  
                                         pad@fp 0072                                           _width 00CF  
                                         _putch 1F00                                           main@i 00C5  
                                         dtoa@d 007F                                           dtoa@i 009F  
                                         dtoa@n 0097                                           dtoa@p 0091  
                                         dtoa@s 0095                                           dtoa@w 0093  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 1A4C  
                         ??_carcontrol_throttle 0060                           ??_carcontrol_steering 0060  
                                         pclath 000FFA                                           tablat 000FF5  
                                         plusw2 000FDB                  ??i1_IOCCF2_SetInterruptHandler 0008  
                                         ttemp5 0058                                           ttemp6 005B  
                                         ttemp7 005F                                           status 000FD8  
                                         wtemp8 0058                                  _carcontrol_ISR 12F6  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 1E66  
                ?_INTERRUPT_InterruptManagerLow 0001                                 __initialization 1956  
                   ?i1_TMR1_SetInterruptHandler 0006                      __end_of_EUSART1_Initialize 1A92  
                                  __end_of_main 15DE                                    __end_of_dtoa 0DC0  
                       __end_of_TMR2_Initialize 1CD0                        _TMR2_SetInterruptHandler 1F2E  
                                        ??_main 00C1                                          ??_dtoa 0087  
                             _delay_between_ack 004E                                ?_CCP1_Initialize 0001  
                               _TMR3_StartTimer 1F98                                   __activetblptr 000002  
                         _TMR3_InterruptHandler 003A                         _IOCCF2_InterruptHandler 0044  
                                        _ADACCH 000F6C                                          _ADACCL 000F6B  
                                        _ADCON0 000F5B                                          _ADCON1 000F54  
                                        _ADCON2 000F55                                          _ADCON3 000F56  
                                        _ADERRH 000F6A                                          _ADERRL 000F69  
                                        ?_fputc 0062                                          _ADLTHH 000F66  
                                        _ADLTHL 000F65                                          ?_fputs 006B  
                                        _ADRESH 000F5F                                          _ADRESL 000F5E  
                                        _CCPR1H 000FAA                                          _CCPR1L 000FA9  
                                        _ADSTAT 000F60                                          _ADUTHH 000F68  
                                        _ADUTHL 000F67                                          _ANSELA 000F0C  
                                        ?_putch 0001                                          _ANSELB 000F14  
                                        _ANSELC 000F1C                                          _T1GATE 000FD0  
                                        _T1GCON 000FCF                                          _T3GATE 000FCA  
                                        _T3GCON 000FC9                                          _RC1REG 000F98  
                 __size_of_CCP1_DefaultCallBack 0002                                          _RC1STA 000F9C  
                       TMR1_WriteTimer@timerVal 0006                                          _ODCONA 000F0A  
                                        _ODCONB 000F12                                          _ODCONC 000F1A  
                                        _RC6PPS 000EF8                          __end_of_carcontrol_ISR 13DC  
                                        i1l1705 114C                                          i1l3410 0B04  
                                        i1l3314 0854                                          i1l3162 1E78  
                                        i1l3332 0894                                          i1l3316 0858  
                                        i1l3414 0B22                                          i1l3342 08C6  
                                        i1l3334 0898                                          i1l3318 0868  
                                        i1l1657 08A8                                          i1l1674 0B46  
                                        i1l3426 0B64                                          i1l1666 0AC0  
                                        i1l3450 1134                                          i1l1667 0ABC  
                                        i1l3444 10FC                         __end_of_TMR3_Initialize 1AD6  
                                        i1l3390 0A86                                          i1l3446 1102  
                                        i1l3438 10DE                                          i1l3384 0A68  
                                        i1l3456 1172                                          i1l3448 110E  
                                        i1l3474 11BE                                          i1l3458 117E  
                                        i1l1698 10CE                                          i1l3488 1E94  
                                __CFG_WDTCCS$SC 000000                                          i1l3754 17B0  
                                        i1l3772 147A                                          i1l3764 141A  
                                        i2l3714 13B0                                          i2l3672 12F8  
                                        i2l3678 130A                                          i2l3688 1330  
                                        i2l3698 1386                                          _OSCFRQ 000ED9  
                                        _TX1REG 000F99                                __end_of_cam_init 1B48  
                                        _TX1STA 000F9D                                __end_of___xxtofl 11D0  
                               _TMR3_WriteTimer 1DEC                                   _CCP1_CallBack 0042  
                                __CFG_PWRTE$OFF 000000                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 1FA8           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 1FA6                                    vfprintf@cfmt 00B7  
                       __end_of_TMR1_StartTimer 1FA0                                   _adc_ready_ISR 13DC  
                                     ??___aodiv 0070                                       ??___aomod 0070  
                                __CFG_STVREN$ON 000000                                       ??___flmul 001C  
                                        _carctl 00C7                        ?_EUSART1_SetErrorHandler 0060  
                                     ??_cam_get 0062                                          clear_0 197E  
                                        clear_1 1990                                          clear_2 199C  
                                        _printf 1D54                                          pad@buf 0074  
              ??_EUSART1_SetOverrunErrorHandler 0062                 ?_EUSART1_SetOverrunErrorHandler 0060  
                                        _status 0046                                          dtoa@fp 007D  
                                     ?_ADCC_ISR 0001                                          _strlen 1C74  
                   __end_of_ping_CCP1_triggered 1896                                 _ADCC_Initialize 18F8  
                                        fputc@c 0062                                  _PMD_Initialize 1E4A  
                                        fputs@c 006F                                          fputs@i 0070  
                                  __pdataCOMRAM 0052                                          fputs@s 006B  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 1A06                                 ??_EUSART1_Write 0060  
                       ??_ping_TMR1Overflow_isr 0008      i1TMR3_SetInterruptHandler@InterruptHandler 0006  
    i1TMR1_SetInterruptHandler@InterruptHandler 0006    i1IOCCF2_SetInterruptHandler@InterruptHandler 0006  
      TMR3_SetInterruptHandler@InterruptHandler 0060        ADCC_SetInterruptHandler@InterruptHandler 0060  
      TMR1_SetInterruptHandler@InterruptHandler 0060        TMR2_SetInterruptHandler@InterruptHandler 0060  
    IOCCF2_SetInterruptHandler@InterruptHandler 0060                                ?_PIN_MANAGER_IOC 0001  
                       __end_of_TMR1_WriteTimer 1E82                   __size_of_INTERRUPT_Initialize 0012  
                                  ??_IOCCF2_ISR 0008                     __size_of_ping_RC2_went_HIGH 0034  
                              ?_TMR1_Initialize 0001                                 ?_carcontrol_ISR 0001  
                                  ___xxtofl@arg 0010                                    ___xxtofl@exp 000F  
              ??_INTERRUPT_InterruptManagerHigh 0004                 ?_INTERRUPT_InterruptManagerHigh 0001  
                             _SYSTEM_Initialize 1D2A                                    ___xxtofl@val 0006  
                               _carcontrol_init 1B7C                                      __accesstop 0060  
                       __end_of__initialization 19A2                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  ?_adc_ready_ISR 0001  
                                __pcstackCOMRAM 0001                                  main@cam_pixels 0100  
                            __size_of_cam_start 006E                             ??_SYSTEM_Initialize 0064  
                       __end_of_TMR3_StartTimer 1F9C                                       ?_TMR1_ISR 0001  
                                     ?_TMR2_ISR 0001                   ?_TMR1_DefaultInterruptHandler 0001  
                                     ?_TMR3_ISR 0001                                   __end_of_fputc 16EA  
                                 __end_of_fputs 1B12                                   __end_of_putch 1F0E  
                              ?_TMR2_Initialize 0001                          __end_of_PMD_Initialize 1E66  
                                    ??_ADCC_ISR 000A                              __end_of_IOCCF2_ISR 1DA2  
                    ??_ADCC_SetInterruptHandler 0062                                    ?i1_cam_start 0001  
                                       ??_fputc 0066                       __end_of_SYSTEM_Initialize 1D54  
                                       ??_fputs 006F                         __end_of_TMR3_WriteTimer 1E0C  
                                       ??_putch 0061                                      __pbssBANK0 00C7  
                              ?_TMR3_Initialize 0001                                      __pnvCOMRAM 003A  
        __end_of_IOCCF2_DefaultInterruptHandler 1FAA         __size_of_IOCCF2_DefaultInterruptHandler 0002  
                _IOCCF2_DefaultInterruptHandler 1FA8                 __end_of_EUSART1_SetErrorHandler 1F6A  
                             ?_CCP1_SetCallBack 0060                __end_of_TMR3_SetInterruptHandler 1F2E  
                              ?_TMR1_StartTimer 0001                                      ??_TMR1_ISR 0008  
                               __CFG_PPS1WAY$ON 000000                                      ??_TMR2_ISR 0004  
                  ??i1_TMR3_SetInterruptHandler 0008                                      ??_TMR3_ISR 0009  
                            ??_CCP1_SetCallBack 0062                         __end_of_ADCC_Initialize 1956  
                                       _CCP1CAP 000FAC                                         _CCP1CON 000FAB  
                                       _ADFLTRH 000F6E                                         _ADFLTRL 000F6D  
                                       _CCP1PPS 000EAA                                         _ADPREVH 000F5D  
                                       _ADPREVL 000F5C                                         _ADSTPTH 000F64  
                                       _ADSTPTL 000F63                                         ?_printf 00B9  
                               ?_PMD_Initialize 0001                                         ?_strlen 0060  
        __end_of_EUSART1_SetFramingErrorHandler 1F60         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 1F56                              __size_of_timer_ISR 006E  
                                     ?_cam_init 0001                                       ?___xxtofl 0006  
                                       _SP1BRGH 000F9B                                         _SP1BRGL 000F9A  
                                       _OSCCON1 000ED3                                         _OSCCON3 000ED5  
                            __size_of_vfpfcnvrt 0186                         __end_of_carcontrol_init 1BB0  
                                       _OSCTUNE 000ED8                                         _SLRCONA 000F09  
                                       _SLRCONB 000F11                                         _SLRCONC 000F19  
                             __end_of_cam_start 1758                                ?_TMR1_WriteTimer 0006  
             CCP1_DefaultCallBack@capturedValue 002D             __size_ofi1_TMR3_SetInterruptHandler 000A  
                               ??_adc_ready_ISR 0008                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0062  
                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                         ___aodiv 0F46  
                                       ___aomod 11D0                                         ___flmul 0828  
                              ?_TMR3_StartTimer 0001                                       ?_vfprintf 00B1  
                                  __psmallconst 0800                                         _cam_get 149C  
                                       __pcinit 1956                                         __ramtop 0800  
                                       __ptext0 1540                                         __ptext1 1D54  
                                       __ptext2 19B0                                         __ptext3 0DC0  
                                       __ptext4 0B7A                                         __ptext5 15DE  
                                       __ptext6 1C74                                         __ptext7 1AD6  
                                       __ptext8 167C                                         __ptext9 1F00  
                               __size_of_printf 0028                        __size_of_CCP1_CaptureISR 002C  
                ??_TMR1_DefaultInterruptHandler 0006                                 __size_of_strlen 002E  
                                     _T1CONbits 000FCE                                      ??_cam_init 0062  
                         _OSCILLATOR_Initialize 1E9E                                       _T2CONbits 000FBC  
                                  __size_of_abs 0034                                    __size_of_pad 009E  
                                    ??___xxtofl 000A                                       _T3CONbits 000FC8  
             __size_of_TMR1_SetInterruptHandler 000A                              _EUSART1_Initialize 1A4C  
                   __end_of_carcontrol_throttle 1ECC                        ??_PIN_MANAGER_Initialize 0062  
                     ?_TMR1_SetInterruptHandler 0060                     __end_of_carcontrol_steering 1C14  
                                     _T2HLTbits 000FBD                                       _IOCCFbits 000F15  
                                     _IOCCNbits 000F16                                       _IOCCPbits 000F17  
                   __size_of_ADCC_SelectChannel 0012                      __size_of_SYSTEM_Initialize 002A  
                                __pintcode_body 1E0C                            end_of_initialization 19A2  
                              ?_TMR3_WriteTimer 0060                                       _T2RSTbits 000FBF  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0064  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00FA  
                                       int_func 1E0C                                         fputs@fp 006D  
                             __end_of_timer_ISR 17C6                               __end_of_vfpfcnvrt 0F46  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                    __end_of_CCP1_DefaultCallBack 1FAC  
                              ?_ADCC_Initialize 0001                                      ??_vfprintf 00B7  
                         _ADCC_InterruptHandler 0050                            ??_EUSART1_Initialize 0062  
                         __CFG_WDTCPS$WDTCPS_31 000000                                         strlen@a 0062  
                                       strlen@s 0060                        _TMR3_SetInterruptHandler 1F24  
                                    _timing_val 0052                                      _servo_trim 0056  
                             __size_of_ADCC_ISR 0024                                   ___xxtofl@sign 000E  
                                     _TRISBbits 000F88                                       _TRISCbits 000F89  
                              ??_carcontrol_ISR 0001                                ?_carcontrol_init 0001  
              __size_of_EUSART1_SetErrorHandler 000A                        __size_of_CCP1_Initialize 002E  
                  ??_IOCCF2_SetInterruptHandler 0062                             EUSART1_Write@txData 0060  
                              __CFG_FEXTOSC$OFF 000000                  __size_of_ping_TMR1Overflow_isr 001E  
                 __end_of_ping_TMR1Overflow_isr 1E4A                            __size_ofi1_cam_start 0062  
                                   ___flmul@grs 0021              __end_ofi1_TMR3_SetInterruptHandler 1F92  
                    i1_TMR3_SetInterruptHandler 1F88                    __end_of_INTERRUPT_Initialize 1EF0  
          __end_of_TMR2_DefaultInterruptHandler 1FAE           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 1FAC                                     vfpfcnvrt@ap 00A5  
                                   vfpfcnvrt@fp 00A1                                     vfpfcnvrt@ll 00A9  
                                 __pidataCOMRAM 1F92                               __size_of_TMR1_ISR 0030  
                             __size_of_TMR2_ISR 0026                               __size_of_TMR3_ISR 0030  
                           _cam_start$intlevel0 16F0                          ?_OSCILLATOR_Initialize 0001  
           __size_of_IOCCF2_SetInterruptHandler 000A                                  __end_of_printf 1D7C  
                                __end_of_strlen 1CA2                             start_initialization 1956  
               __size_of_PIN_MANAGER_Initialize 006A                                     __end_of_abs 1B7C  
                                   __end_of_pad 167C                      __end_of_ping_RC2_went_HIGH 1BE4  
                             ??_CCP1_CaptureISR 002F                    __size_of_ping_CCP1_triggered 0066  
                                   putch@txData 0061                           __end_of_EUSART1_Write 1F00  
                      __size_of_PIN_MANAGER_IOC 000C                                __CFG_LPBOREN$OFF 000000  
                      __size_of_TMR1_Initialize 0046                                     vfprintf@fmt 00B3  
                              ??_PMD_Initialize 0060                                     _CCPTMRSbits 000FAD  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 00BD  
                                      ??_strlen 0062                           CCP1_CaptureISR@module 002F  
                                   __pbssBIGRAM 0200                                       ___flmul@a 0018  
                                     ___flmul@b 0014                                     __pbssCOMRAM 0046  
                     __size_of_CCP1_SetCallBack 000A                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ___aodiv@dividend 0060  
                      __size_of_TMR2_Initialize 002E                               __size_of_cam_init 0036  
                             __size_of___xxtofl 0140                            _CCP1_DefaultCallBack 1FAA  
              ??_EUSART1_SetFramingErrorHandler 0062                 ?_EUSART1_SetFramingErrorHandler 0060  
                                     _cam_start 16EA                               ??_CCP1_Initialize 0062  
                                     __pnvBANK0 00F8               __size_of_ADCC_SetInterruptHandler 000A  
                     ?_ADCC_SetInterruptHandler 0060                          _PIN_MANAGER_Initialize 17C6  
                                     _dtoa$2648 008F                        __size_of_TMR3_Initialize 0044  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 1F42  
                                      ?___aodiv 0060                                        ?___aomod 0060  
                  ??i1_TMR1_SetInterruptHandler 0008                                ___aodiv@quotient 0072  
                                      ?___flmul 0014                                        ?_cam_get 0060  
                                   __pintcodelo 0018                               __size_of_vfprintf 0056  
                                      _ADCC_ISR 1DC8                                        _BAUD1CON 000F9E  
                                   __smallconst 0800                        __size_of_TMR1_StartTimer 0004  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 00F8  
                       _EUSART1_SetErrorHandler 1F60              __end_of_IOCCF2_SetInterruptHandler 1F4C  
                    _IOCCF2_SetInterruptHandler 1F42                                  __size_of_fputc 006E  
                                      _T2CLKCON 000FBE                                  __size_of_fputs 003C  
                         ?_CCP1_DefaultCallBack 002D                                  __size_of_putch 000E  
                          _INTERRUPT_Initialize 1EDE                                      ?_cam_start 0001  
           __size_ofi1_TMR1_SetInterruptHandler 000A                                        _LATAbits 000F82  
       EUSART1_SetErrorHandler@interruptHandler 0060                                        _LATBbits 000F83  
                                      _LATCbits 000F84                                        _IPR0bits 000EB5  
                                      _IPR1bits 000EB6                                        _PIE0bits 000EBD  
                                      _PIE1bits 000EBE                                        _IPR4bits 000EB9  
                                      _PIE4bits 000EC1                                        _IPR6bits 000EBB  
                                      _PIE6bits 000EC3                                        i1u210_28 1D88  
                                      i1u210_29 1D9C                                        i1u204_20 1188  
                                      i1u220_20 176C                                        i1u220_26 176E  
                                      i1u223_20 13E8                                        i1u223_26 13EA  
                                      i1u225_20 1458                                        i1u234_28 1C60  
                                      i1u228_20 18C2                                        i1u236_28 1C30  
                                      i1u237_28 1D16                                        i1u229_28 18C4  
                                      i1u191_20 0AB6                        __size_of_TMR1_WriteTimer 001C  
                                      i1u239_28 1DD8                                        i1u264_27 18CC  
                                      i1u186_20 08B4                                        i1u195_20 0B12  
                                      i1u187_20 0A2A                                        i1u187_25 0A20  
                                      i1u196_20 0B30                                        i2u215_40 1322  
                                      i2u232_48 1DB4                                        i2u218_40 1378  
                                      _PIR0bits 000EC5                                        _PIR1bits 000EC6  
                                      _PIR3bits 000EC8                                        _PIR4bits 000EC9  
                    ??_TMR3_SetInterruptHandler 0062                                        _PIR6bits 000ECB  
                         __end_of_adc_ready_ISR 149C                                       _timer_ISR 1758  
                                      _TMR1_ISR 1C44                                        _TMR2_ISR 1DA2  
                                      _TMR3_ISR 1C14                                       _servo_max 0054  
                                     _servo_min 0055                               ??_PIN_MANAGER_IOC 0008  
                             i1_TMR3_StartTimer 1FA0                                       _vfpfcnvrt 0DC0  
                             ??_TMR1_Initialize 0062                                       _stateTime 00D5  
                                    _ADCON0bits 000F5B                                      _ADCON1bits 000F54  
                                    _ADCON2bits 000F55                                      _ADCON3bits 000F56  
                            ?i1_TMR3_StartTimer 0001                        __size_of_TMR3_StartTimer 0004  
                    __end_of_ADCC_SelectChannel 1EDE                  ??_TMR2_DefaultInterruptHandler 0001  
             __size_of_TMR2_SetInterruptHandler 000A                       ?_TMR2_SetInterruptHandler 0060  
                           ??i1_TMR3_StartTimer 0006                                       copy_data0 196A  
                         ?_INTERRUPT_Initialize 0001                    __size_of_carcontrol_throttle 0016  
                  __size_of_carcontrol_steering 0030                               i1_TMR3_WriteTimer 1E82  
                             ??_TMR2_Initialize 0062                              ?i1_TMR3_WriteTimer 0006  
                                    _ADSTATbits 000F60                                        __Hrparam 0000  
                      __size_of_TMR3_WriteTimer 0020                                      vfprintf@ap 00B5  
                                      __Lrparam 0000                                      vfprintf@fp 00B1  
                            __CFG_BOREN$SBORDIS 000000                     ?i1_TMR3_SetInterruptHandler 0006  
                                    ?_timer_ISR 0001                       __end_ofi1_TMR3_StartTimer 1FA4  
                           ??i1_TMR3_WriteTimer 0008                         ??_OSCILLATOR_Initialize 0060  
                           _ping_CCP1_triggered 1830                                __size_of___aodiv 014A  
                              __size_of___aomod 0126                                __size_of___flmul 0352  
                   __size_of_EUSART1_Initialize 0046                                      ?_vfpfcnvrt 00A1  
                               _CCP1_CaptureISR 1CFE                                __size_of_cam_get 00A4  
                               ___aodiv@divisor 0068                               ??_TMR3_Initialize 0062  
                      _TMR1_SetInterruptHandler 1F38                                 ___aodiv@counter 0070  
                         _TMR1_InterruptHandler 003E                       ??_EUSART1_SetErrorHandler 0062  
                                      _cam_init 1B12                     _EUSART1_DefaultErrorHandler 000000  
                                      ___xxtofl 1090                                _CCP1_SetCallBack 1F6A  
                      __size_of_ADCC_Initialize 005E                 ??_INTERRUPT_InterruptManagerLow 0031  
                CCP1_SetCallBack@customCallBack 0060                                   ??i1_cam_start 0008  
            ADCC_SelectChannel@acquisitionDelay 0060                                        __ptext10 1EF0  
                                      __ptext11 1B48                                        __ptext20 1B12  
                                      __ptext12 11D0                                        __ptext21 1F1A  
                                      __ptext13 0F46                                      _T1GCONbits 000FCF  
                                      __ptext30 1F38                                        __ptext22 1ECC  
                                      __ptext14 1B7C                                        __ptext31 1E4A  
                                      __ptext23 149C                                        __ptext15 1EB6  
                                      __ptext40 1CD0                                        __ptext32 17C6  
                                      __ptext24 1D2A                                        __ptext16 1BE4  
                                      __ptext41 1F6A                                        __ptext33 1F42  
                                      __ptext25 1A92                                        __ptext17 16EA  
                                      __ptext50 1E2C                                        __ptext42 18F8  
                                      __ptext34 1E9E                                        __ptext26 1F24  
                                      __ptext18 1DEC                                        __ptext51 1F0E  
                                      __ptext35 1EDE                                        __ptext27 1CA2  
                                      __ptext19 1F98                                        __ptext60 1FAA  
                                      __ptext52 1D7C                                        __ptext44 1C14  
                                      __ptext36 1A4C                                        __ptext28 1F2E  
                                      __ptext61 1830                                        __ptext53 1FA8  
                                      __ptext45 1758                                        __ptext37 1F4C  
                                      __ptext29 1A06                                        __ptext70 1DA2  
                                      __ptext62 1090                                        __ptext54 1BB0  
                                      __ptext46 1FA4                                        __ptext38 1F56  
                                      __ptext71 1FAC                                        __ptext63 0828  
                                      __ptext55 1F74                                        __ptext47 1896  
                                      __ptext39 1F60                                        __ptext72 12F6  
                                      __ptext64 1DC8                                        __ptext56 1F7E  
                                      __ptext48 1C44                                        __ptext73 0000  
                                      __ptext65 13DC                                        __ptext57 1E66  
                                      __ptext49 1FA6                                        __ptext66 1E82  
                                      __ptext58 1F9C                                        __ptext67 1FA0  
                                      __ptext59 1CFE                                        __ptext68 1F88  
                        ??_CCP1_DefaultCallBack 002F                            ?_ping_CCP1_triggered 002D  
                     __end_ofi1_TMR3_WriteTimer 1E9E                                        cam_get@i 0064  
                             ??_TMR1_StartTimer 0006                                      _T3GCONbits 000FC9  
                                    _IOCCF2_ISR 1D7C                         TMR3_WriteTimer@timerVal 0060  
                                   ??_cam_start 0062                                   __size_of_main 009E  
                                 __size_of_dtoa 0246                           _ping_TMR1Overflow_isr 1E2C  
                      __size_of_carcontrol_init 0034                            __CFG_WDTCWS$WDTCWS_7 000000  
                            __CFG_BORV$VBOR_190 000000                              _ping_RC2_went_HIGH 1BB0  
                                    _RC1STAbits 000F9C              __end_ofi1_TMR1_SetInterruptHandler 1F7E  
                    i1_TMR1_SetInterruptHandler 1F74  EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                     i1TMR3_WriteTimer@timerVal 0006                 ping_CCP1_triggered@timeOfFlight 002D  
                                      int$flags 0057                                        _vfprintf 19B0  
                           ?_ping_RC2_went_HIGH 0001                                       printf@fmt 00B9  
                             ??_TMR1_WriteTimer 0008            __end_of_TMR3_DefaultInterruptHandler 1FA6  
         __size_of_TMR3_DefaultInterruptHandler 0002                    _TMR3_DefaultInterruptHandler 1FA4  
                   _EUSART1_FramingErrorHandler 00FC                                ___aomod@dividend 0060  
                                    _INTCONbits 000FF2            __end_ofi1_IOCCF2_SetInterruptHandler 1F88  
         __size_ofi1_IOCCF2_SetInterruptHandler 000A                    i1_IOCCF2_SetInterruptHandler 1F7E  
                               _CCP1_Initialize 1CD0                __end_of_ADCC_SetInterruptHandler 1F24  
                        ??_INTERRUPT_Initialize 0060                           ??_ping_CCP1_triggered 002F  
                          ??_ping_RC2_went_HIGH 0008                               ??_TMR3_StartTimer 0060  
                                      intlevel1 0000                                        intlevel2 0000  
                           __end_ofi1_cam_start 18F8                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 1F56  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 1F4C  
                       __size_of_carcontrol_ISR 00E6                         __end_of_CCP1_CaptureISR 1D2A  
                                   ??_timer_ISR 0008                      __size_ofi1_TMR3_StartTimer 0004  
                                      printf@ap 00BF  EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                               ___aomod@divisor 0068                                     ??_vfpfcnvrt 00A7  
                               ___aomod@counter 0070                               ??_TMR3_WriteTimer 0062  
                        __size_of_EUSART1_Write 0010                              _eusart1RxLastError 00D7  
                   carcontrol_throttle@throttle 0060          __end_of_INTERRUPT_InterruptManagerHigh 1E2C  
       __size_of_INTERRUPT_InterruptManagerHigh 1E24                  _INTERRUPT_InterruptManagerHigh 0008  
                 ?_TMR3_DefaultInterruptHandler 0001                   ?i1_IOCCF2_SetInterruptHandler 0006  
                   ?_IOCCF2_SetInterruptHandler 0060                                      _TX1STAbits 000F9D  
                    __size_ofi1_TMR3_WriteTimer 001C           __end_of_INTERRUPT_InterruptManagerLow 00A2  
        __size_of_INTERRUPT_InterruptManagerLow 008A                   _INTERRUPT_InterruptManagerLow 0018  
                                  ___aodiv@sign 0071                                     ?_IOCCF2_ISR 0001  
                                 cam_get@i_2600 0066                  __end_of_PIN_MANAGER_Initialize 1830  
                             ??_ADCC_Initialize 0060                          ?_ping_TMR1Overflow_isr 0001  
                               _PIN_MANAGER_IOC 1F0E                           _TMR2_InterruptHandler 00FE  
                                  ___aomod@sign 0071                                 _TMR1_Initialize 1A06  
