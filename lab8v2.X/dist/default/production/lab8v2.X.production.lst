

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 23 15:29:47 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25Q10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   104  0000                     
   105                           ; Version 2.05
   106                           ; Generated 20/12/2018 GMT
   107                           ; 
   108                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC18F25Q10 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139  0000                     
   140                           	psect	idataCOMRAM
   141  003828                     __pidataCOMRAM:
   142                           	opt callstack 0
   143                           
   144                           ;initializer for _servo_max
   145  003828  1C                 	db	28
   146                           
   147                           ;initializer for _servo_min
   148  003829  E2                 	db	226
   149                           
   150                           ;initializer for _servo_trim
   151  00382A  11                 	db	17
   152                           
   153                           	psect	nvCOMRAM
   154  000057                     __pnvCOMRAM:
   155                           	opt callstack 0
   156  000057                     _timer1ReloadVal:
   157                           	opt callstack 0
   158  000057                     	ds	2
   159  000059                     _IOCCF2_InterruptHandler:
   160                           	opt callstack 0
   161  000059                     	ds	2
   162  00005B                     _eusart1TxBufferRemaining:
   163                           	opt callstack 0
   164  00005B                     	ds	1
   165                           
   166                           	psect	nvBANK1
   167  000184                     __pnvBANK1:
   168                           	opt callstack 0
   169  000184                     _EUSART1_ErrorHandler:
   170                           	opt callstack 0
   171  000184                     	ds	2
   172  000186                     _EUSART1_OverrunErrorHandler:
   173                           	opt callstack 0
   174  000186                     	ds	2
   175  000188                     _EUSART1_FramingErrorHandler:
   176                           	opt callstack 0
   177  000188                     	ds	2
   178  00018A                     _TMR1_InterruptHandler:
   179                           	opt callstack 0
   180  00018A                     	ds	2
   181  00018C                     _CCP1_CallBack:
   182                           	opt callstack 0
   183  00018C                     	ds	2
   184  00018E                     _TMR2_InterruptHandler:
   185                           	opt callstack 0
   186  00018E                     	ds	2
   187  000190                     _EUSART1_RxDefaultInterruptHandler:
   188                           	opt callstack 0
   189  000190                     	ds	2
   190  000192                     _EUSART1_TxDefaultInterruptHandler:
   191                           	opt callstack 0
   192  000192                     	ds	2
   193  0000                     _PIR6	set	3787
   194  0000                     _PIR6bits	set	3787
   195  0000                     _PIE6bits	set	3779
   196  0000                     _PIR3bits	set	3784
   197  0000                     _PIE3bits	set	3776
   198  0000                     _PIR0bits	set	3781
   199  0000                     _PIE4bits	set	3777
   200  0000                     _PIR4bits	set	3785
   201  0000                     _RC6PPS	set	3832
   202  0000                     _CCP1PPS	set	3754
   203  0000                     _PIE0bits	set	3773
   204  0000                     _PMD5	set	3809
   205  0000                     _PMD4	set	3808
   206  0000                     _PMD3	set	3807
   207  0000                     _PMD2	set	3806
   208  0000                     _PMD1	set	3805
   209  0000                     _PMD0	set	3804
   210  0000                     _OSCTUNE	set	3800
   211  0000                     _OSCFRQ	set	3801
   212  0000                     _OSCEN	set	3799
   213  0000                     _OSCCON3	set	3797
   214  0000                     _OSCCON1	set	3795
   215  0000                     _IOCCPbits	set	3863
   216  0000                     _IOCCNbits	set	3862
   217  0000                     _IOCCFbits	set	3861
   218  0000                     _SLRCONC	set	3865
   219  0000                     _SLRCONB	set	3857
   220  0000                     _SLRCONA	set	3849
   221  0000                     _ODCONC	set	3866
   222  0000                     _ODCONB	set	3858
   223  0000                     _ODCONA	set	3850
   224  0000                     _WPUC	set	3867
   225  0000                     _WPUA	set	3851
   226  0000                     _WPUB	set	3859
   227  0000                     _WPUE	set	3880
   228  0000                     _ANSELA	set	3852
   229  0000                     _ANSELB	set	3860
   230  0000                     _ANSELC	set	3868
   231  0000                     _TRISCbits	set	3977
   232  0000                     _LATAbits	set	3970
   233  0000                     _LATCbits	set	3972
   234  0000                     _RC1REG	set	3992
   235  0000                     _RC1STAbits	set	3996
   236  0000                     _TX1REG	set	3993
   237  0000                     _TX1STAbits	set	3997
   238  0000                     _SP1BRGH	set	3995
   239  0000                     _SP1BRGL	set	3994
   240  0000                     _TX1STA	set	3997
   241  0000                     _RC1STA	set	3996
   242  0000                     _BAUD1CON	set	3998
   243  0000                     _T1GCONbits	set	4047
   244  0000                     _T1CONbits	set	4046
   245  0000                     _T1CON	set	4046
   246  0000                     _TMR1L	set	4044
   247  0000                     _TMR1H	set	4045
   248  0000                     _T1CLK	set	4049
   249  0000                     _T1GATE	set	4048
   250  0000                     _T1GCON	set	4047
   251  0000                     _CCPTMRSbits	set	4013
   252  0000                     _CCPR1L	set	4009
   253  0000                     _CCPR1H	set	4010
   254  0000                     _CCP1CAP	set	4012
   255  0000                     _CCP1CON	set	4011
   256  0000                     _INTCONbits	set	4082
   257  0000                     _PR2	set	4027
   258  0000                     _TMR2	set	4026
   259  0000                     _T2CONbits	set	4028
   260  0000                     _T2RSTbits	set	4031
   261  0000                     _T2HLTbits	set	4029
   262  0000                     _T2CON	set	4028
   263  0000                     _T2TMR	set	4026
   264  0000                     _T2PR	set	4027
   265  0000                     _T2RST	set	4031
   266  0000                     _T2HLT	set	4029
   267  0000                     _T2CLKCON	set	4030
   268  0000                     _TRISC	set	3977
   269  0000                     _TRISB	set	3976
   270  0000                     _TRISA	set	3975
   271  0000                     _LATC	set	3972
   272  0000                     _LATB	set	3971
   273  0000                     _LATA	set	3970
   274                           
   275                           	psect	smallconst
   276  000800                     __psmallconst:
   277                           	opt callstack 0
   278  000800  00                 	db	0
   279  000801                     STR_1:
   280  000801  74                 	db	116	;'t'
   281  000802  65                 	db	101	;'e'
   282  000803  73                 	db	115	;'s'
   283  000804  74                 	db	116	;'t'
   284  000805  20                 	db	32
   285  000806  64                 	db	100	;'d'
   286  000807  69                 	db	105	;'i'
   287  000808  73                 	db	115	;'s'
   288  000809  74                 	db	116	;'t'
   289  00080A  61                 	db	97	;'a'
   290  00080B  6E                 	db	110	;'n'
   291  00080C  63                 	db	99	;'c'
   292  00080D  65                 	db	101	;'e'
   293  00080E  3A                 	db	58	;':'
   294  00080F  20                 	db	32
   295  000810  20                 	db	32
   296  000811  20                 	db	32
   297  000812  20                 	db	32
   298  000813  25                 	db	37
   299  000814  2E                 	db	46
   300  000815  32                 	db	50	;'2'
   301  000816  66                 	db	102	;'f'
   302  000817  0A                 	db	10
   303  000818  00                 	db	0
   304  000819                     STR_2:
   305  000819  49                 	db	73	;'I'
   306  00081A  4E                 	db	78	;'N'
   307  00081B  46                 	db	70	;'F'
   308  00081C  00                 	db	0
   309  00081D                     STR_6:
   310  00081D  4E                 	db	78	;'N'
   311  00081E  41                 	db	65	;'A'
   312  00081F  4E                 	db	78	;'N'
   313  000820  00                 	db	0
   314  000821                     STR_3:
   315  000821  69                 	db	105	;'i'
   316  000822  6E                 	db	110	;'n'
   317  000823  66                 	db	102	;'f'
   318  000824  00                 	db	0
   319  000825                     STR_7:
   320  000825  6E                 	db	110	;'n'
   321  000826  61                 	db	97	;'a'
   322  000827  6E                 	db	110	;'n'
   323  000828  00                 	db	0
   324  000829                     STR_10:
   325  000829  6C                 	db	108	;'l'
   326  00082A  66                 	db	102	;'f'
   327  00082B  00                 	db	0
   328  0000                     
   329                           ; #config settings
   330  00082C  00                 	db	0	; dummy byte at the end
   331  0000                     
   332                           	psect	cinit
   333  003196                     __pcinit:
   334                           	opt callstack 0
   335  003196                     start_initialization:
   336                           	opt callstack 0
   337  003196                     __initialization:
   338                           	opt callstack 0
   339                           
   340                           ; Initialize objects allocated to COMRAM (3 bytes)
   341                           ; load TBLPTR registers with __pidataCOMRAM
   342  003196  0E28               	movlw	low __pidataCOMRAM
   343  003198  6EF6               	movwf	tblptrl,c
   344  00319A  0E38               	movlw	high __pidataCOMRAM
   345  00319C  6EF7               	movwf	tblptrh,c
   346  00319E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   347  0031A0  6EF8               	movwf	tblptru,c
   348  0031A2  0009               	tblrd		*+	;fetch initializer
   349  0031A4  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   350  0031A8  0009               	tblrd		*+	;fetch initializer
   351  0031AA  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
   352  0031AE  0009               	tblrd		*+	;fetch initializer
   353  0031B0  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
   354                           
   355                           ; Clear objects allocated to BANK1 (104 bytes)
   356  0031B4  EE01  F000         	lfsr	0,__pbssBANK1
   357  0031B8  0E68               	movlw	104
   358  0031BA                     clear_0:
   359  0031BA  6AEE               	clrf	postinc0,c
   360  0031BC  06E8               	decf	wreg,f,c
   361  0031BE  E1FD               	bnz	clear_0
   362                           
   363                           ; Clear objects allocated to BANK0 (1 bytes)
   364  0031C0  0100               	movlb	0
   365  0031C2  6BFF               	clrf	__pbssBANK0& (0+255),b
   366                           
   367                           ; Clear objects allocated to COMRAM (37 bytes)
   368  0031C4  EE00  F032         	lfsr	0,__pbssCOMRAM
   369  0031C8  0E25               	movlw	37
   370  0031CA                     clear_1:
   371  0031CA  6AEE               	clrf	postinc0,c
   372  0031CC  06E8               	decf	wreg,f,c
   373  0031CE  E1FD               	bnz	clear_1
   374  0031D0                     end_of_initialization:
   375                           	opt callstack 0
   376  0031D0                     __end_of__initialization:
   377                           	opt callstack 0
   378  0031D0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   379  0031D2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380  0031D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   381  0031D6  6EF8               	movwf	tblptru,c
   382  0031D8  0100               	movlb	0
   383  0031DA  EF0D  F011         	goto	_main	;jump to C main() function
   384                           
   385                           	psect	bssCOMRAM
   386  000032                     __pbssCOMRAM:
   387                           	opt callstack 0
   388  000032                     _status:
   389                           	opt callstack 0
   390  000032                     	ds	8
   391  00003A                     _carctl:
   392                           	opt callstack 0
   393  00003A                     	ds	6
   394  000040                     floorf@F524:
   395                           	opt callstack 0
   396  000040                     	ds	4
   397  000044                     ___fpclassifyf@F463:
   398                           	opt callstack 0
   399  000044                     	ds	4
   400  000048                     _nout:
   401                           	opt callstack 0
   402  000048                     	ds	2
   403  00004A                     _width:
   404                           	opt callstack 0
   405  00004A                     	ds	2
   406  00004C                     _prec:
   407                           	opt callstack 0
   408  00004C                     	ds	2
   409  00004E                     _flags:
   410                           	opt callstack 0
   411  00004E                     	ds	2
   412  000050                     _stateTime:
   413                           	opt callstack 0
   414  000050                     	ds	2
   415  000052                     _eusart1RxLastError:
   416                           	opt callstack 0
   417  000052                     	ds	1
   418  000053                     _eusart1RxCount:
   419                           	opt callstack 0
   420  000053                     	ds	1
   421  000054                     _eusart1RxTail:
   422                           	opt callstack 0
   423  000054                     	ds	1
   424  000055                     _eusart1TxTail:
   425                           	opt callstack 0
   426  000055                     	ds	1
   427  000056                     _eusart1TxHead:
   428                           	opt callstack 0
   429  000056                     	ds	1
   430                           
   431                           	psect	dataCOMRAM
   432  00005C                     __pdataCOMRAM:
   433                           	opt callstack 0
   434  00005C                     _servo_max:
   435                           	opt callstack 0
   436  00005C                     	ds	1
   437  00005D                     _servo_min:
   438                           	opt callstack 0
   439  00005D                     	ds	1
   440  00005E                     _servo_trim:
   441                           	opt callstack 0
   442  00005E                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445  0000FF                     __pbssBANK0:
   446                           	opt callstack 0
   447  0000FF                     _eusart1RxHead:
   448                           	opt callstack 0
   449  0000FF                     	ds	1
   450                           
   451                           	psect	bssBANK1
   452  000100                     __pbssBANK1:
   453                           	opt callstack 0
   454  000100                     _eusart1RxStatusBuffer:
   455                           	opt callstack 0
   456  000100                     	ds	8
   457  000108                     _eusart1RxBuffer:
   458                           	opt callstack 0
   459  000108                     	ds	8
   460  000110                     _eusart1TxBuffer:
   461                           	opt callstack 0
   462  000110                     	ds	8
   463  000118                     _dbuf:
   464                           	opt callstack 0
   465  000118                     	ds	80
   466                           
   467                           	psect	cstackBANK1
   468  000168                     __pcstackBANK1:
   469                           	opt callstack 0
   470  000168                     ?_printf:
   471                           	opt callstack 0
   472  000168                     printf@fmt:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x0
   476  000168                     	ds	8
   477  000170                     printf@ap:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x8
   481  000170                     	ds	2
   482  000172                     ??_main:
   483                           
   484                           ; 1 bytes @ 0xA
   485  000172                     	ds	2
   486  000174                     main@angle:
   487                           	opt callstack 0
   488                           
   489                           ; 4 bytes @ 0xC
   490  000174                     	ds	4
   491  000178                     main@last_dis:
   492                           	opt callstack 0
   493                           
   494                           ; 4 bytes @ 0x10
   495  000178                     	ds	4
   496  00017C                     main@dis:
   497                           	opt callstack 0
   498                           
   499                           ; 4 bytes @ 0x14
   500  00017C                     	ds	4
   501  000180                     main@mean:
   502                           	opt callstack 0
   503                           
   504                           ; 4 bytes @ 0x18
   505  000180                     	ds	4
   506                           
   507                           	psect	cstackBANK0
   508  000060                     __pcstackBANK0:
   509                           	opt callstack 0
   510  000060                     ?_strlen:
   511                           	opt callstack 0
   512  000060                     ?___fpclassifyf:
   513                           	opt callstack 0
   514  000060                     ?_isupper:
   515                           	opt callstack 0
   516  000060                     ?_isdigit:
   517                           	opt callstack 0
   518  000060                     ?_strncmp:
   519                           	opt callstack 0
   520  000060                     ?_isspace:
   521                           	opt callstack 0
   522  000060                     ?___wmul:
   523                           	opt callstack 0
   524  000060                     ?___awdiv:
   525                           	opt callstack 0
   526  000060                     ?___awmod:
   527                           	opt callstack 0
   528  000060                     ?_ping_get:
   529                           	opt callstack 0
   530  000060                     ?___fladd:
   531                           	opt callstack 0
   532  000060                     ?___flmul:
   533                           	opt callstack 0
   534  000060                     ?___flneg:
   535                           	opt callstack 0
   536  000060                     ?___fltol:
   537                           	opt callstack 0
   538  000060                     EUSART1_Write@txData:
   539                           	opt callstack 0
   540  000060                     carcontrol_steering@steering:
   541                           	opt callstack 0
   542  000060                     carcontrol_throttle@throttle:
   543                           	opt callstack 0
   544  000060                     IOCCF2_SetInterruptHandler@InterruptHandler:
   545                           	opt callstack 0
   546  000060                     TMR2_SetInterruptHandler@InterruptHandler:
   547                           	opt callstack 0
   548  000060                     CCP1_SetCallBack@customCallBack:
   549                           	opt callstack 0
   550  000060                     TMR1_WriteTimer@timerVal:
   551                           	opt callstack 0
   552  000060                     TMR1_SetInterruptHandler@InterruptHandler:
   553                           	opt callstack 0
   554  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   555                           	opt callstack 0
   556  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   557                           	opt callstack 0
   558  000060                     EUSART1_SetErrorHandler@interruptHandler:
   559                           	opt callstack 0
   560  000060                     EUSART1_SetTxInterruptHandler@interruptHandler:
   561                           	opt callstack 0
   562  000060                     EUSART1_SetRxInterruptHandler@interruptHandler:
   563                           	opt callstack 0
   564  000060                     ___wmul@multiplier:
   565                           	opt callstack 0
   566  000060                     ___awdiv@dividend:
   567                           	opt callstack 0
   568  000060                     ___awmod@dividend:
   569                           	opt callstack 0
   570  000060                     isdigit@c:
   571                           	opt callstack 0
   572  000060                     isspace@c:
   573                           	opt callstack 0
   574  000060                     isupper@c:
   575                           	opt callstack 0
   576  000060                     strcpy@dest:
   577                           	opt callstack 0
   578  000060                     strlen@s:
   579                           	opt callstack 0
   580  000060                     strncmp@_l:
   581                           	opt callstack 0
   582  000060                     ___fleq@ff1:
   583                           	opt callstack 0
   584  000060                     ___flneg@f1:
   585                           	opt callstack 0
   586  000060                     ___fltol@f1:
   587                           	opt callstack 0
   588  000060                     ___fladd@b:
   589                           	opt callstack 0
   590  000060                     ___flmul@b:
   591                           	opt callstack 0
   592  000060                     ___fpclassifyf@x:
   593                           	opt callstack 0
   594                           
   595                           ; 4 bytes @ 0x0
   596  000060                     	ds	1
   597  000061                     putch@txData:
   598                           	opt callstack 0
   599                           
   600                           ; 1 bytes @ 0x1
   601  000061                     	ds	1
   602  000062                     ??_TMR1_Initialize:
   603  000062                     ??_isupper:
   604  000062                     ??_isdigit:
   605  000062                     ??_isspace:
   606  000062                     ___wmul@multiplicand:
   607                           	opt callstack 0
   608  000062                     ___awdiv@divisor:
   609                           	opt callstack 0
   610  000062                     ___awmod@divisor:
   611                           	opt callstack 0
   612  000062                     fputc@c:
   613                           	opt callstack 0
   614  000062                     strcpy@src:
   615                           	opt callstack 0
   616  000062                     strlen@a:
   617                           	opt callstack 0
   618  000062                     strncmp@_r:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x2
   622  000062                     	ds	2
   623  000064                     ??___fpclassifyf:
   624  000064                     ??_strcpy:
   625  000064                     ??___fltol:
   626  000064                     ___awdiv@counter:
   627                           	opt callstack 0
   628  000064                     ___awmod@counter:
   629                           	opt callstack 0
   630  000064                     ___wmul@product:
   631                           	opt callstack 0
   632  000064                     fputc@fp:
   633                           	opt callstack 0
   634  000064                     strncmp@n:
   635                           	opt callstack 0
   636  000064                     ___fleq@ff2:
   637                           	opt callstack 0
   638  000064                     ___fladd@a:
   639                           	opt callstack 0
   640  000064                     ___flmul@a:
   641                           	opt callstack 0
   642                           
   643                           ; 4 bytes @ 0x4
   644  000064                     	ds	1
   645  000065                     ___awdiv@sign:
   646                           	opt callstack 0
   647  000065                     ___awmod@sign:
   648                           	opt callstack 0
   649                           
   650                           ; 1 bytes @ 0x5
   651  000065                     	ds	1
   652  000066                     ??_fputc:
   653  000066                     ??_strncmp:
   654  000066                     ?_tolower:
   655                           	opt callstack 0
   656  000066                     _isspace$2523:
   657                           	opt callstack 0
   658  000066                     ___awdiv@quotient:
   659                           	opt callstack 0
   660  000066                     strcpy@s:
   661                           	opt callstack 0
   662  000066                     tolower@c:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x6
   666  000066                     	ds	1
   667  000067                     ?_atoi:
   668                           	opt callstack 0
   669  000067                     atoi@s:
   670                           	opt callstack 0
   671  000067                     strncmp@l:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x7
   675  000067                     	ds	1
   676  000068                     ??_tolower:
   677  000068                     ??___fladd:
   678  000068                     ??___flmul:
   679  000068                     ??___fleq:
   680  000068                     ___fltol@sign1:
   681                           	opt callstack 0
   682  000068                     ___fpclassifyf@e:
   683                           	opt callstack 0
   684  000068                     strcpy@d:
   685                           	opt callstack 0
   686                           
   687                           ; 2 bytes @ 0x8
   688  000068                     	ds	1
   689  000069                     ??_atoi:
   690  000069                     ___fltol@exp1:
   691                           	opt callstack 0
   692  000069                     strncmp@r:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x9
   696  000069                     	ds	1
   697  00006A                     ___fpclassifyf@u:
   698                           	opt callstack 0
   699                           
   700                           ; 4 bytes @ 0xA
   701  00006A                     	ds	1
   702  00006B                     fputs@s:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0xB
   706  00006B                     	ds	1
   707  00006C                     ___fladd@signs:
   708                           	opt callstack 0
   709  00006C                     ___flmul@sign:
   710                           	opt callstack 0
   711  00006C                     _tolower$2597:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0xC
   715  00006C                     	ds	1
   716  00006D                     ___fladd@aexp:
   717                           	opt callstack 0
   718  00006D                     atoi@neg:
   719                           	opt callstack 0
   720  00006D                     fputs@fp:
   721                           	opt callstack 0
   722  00006D                     ___flmul@grs:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0xD
   726  00006D                     	ds	1
   727  00006E                     ___fladd@bexp:
   728                           	opt callstack 0
   729                           
   730                           ; 1 bytes @ 0xE
   731  00006E                     	ds	1
   732  00006F                     ___fladd@grs:
   733                           	opt callstack 0
   734  00006F                     fputs@c:
   735                           	opt callstack 0
   736  00006F                     _atoi$2492:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0xF
   740  00006F                     	ds	1
   741  000070                     ?___fldiv:
   742                           	opt callstack 0
   743  000070                     fputs@i:
   744                           	opt callstack 0
   745  000070                     ___fldiv@b:
   746                           	opt callstack 0
   747                           
   748                           ; 4 bytes @ 0x10
   749  000070                     	ds	1
   750  000071                     ___flmul@aexp:
   751                           	opt callstack 0
   752  000071                     _atoi$2494:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x11
   756  000071                     	ds	1
   757  000072                     ?_pad:
   758                           	opt callstack 0
   759  000072                     ___flmul@bexp:
   760                           	opt callstack 0
   761  000072                     pad@fp:
   762                           	opt callstack 0
   763                           
   764                           ; 2 bytes @ 0x12
   765  000072                     	ds	1
   766  000073                     _atoi$2493:
   767                           	opt callstack 0
   768  000073                     ___flmul@prod:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x13
   772  000073                     	ds	1
   773  000074                     pad@buf:
   774                           	opt callstack 0
   775  000074                     atoi@n:
   776                           	opt callstack 0
   777  000074                     ___fldiv@a:
   778                           	opt callstack 0
   779                           
   780                           ; 4 bytes @ 0x14
   781  000074                     	ds	2
   782  000076                     pad@p:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x16
   786  000076                     	ds	1
   787  000077                     ___flmul@temp:
   788                           	opt callstack 0
   789                           
   790                           ; 2 bytes @ 0x17
   791  000077                     	ds	1
   792  000078                     ??___fldiv:
   793  000078                     ??_pad:
   794                           
   795                           ; 1 bytes @ 0x18
   796  000078                     	ds	1
   797  000079                     ?___flsub:
   798                           	opt callstack 0
   799  000079                     pad@i:
   800                           	opt callstack 0
   801  000079                     ___flge@ff1:
   802                           	opt callstack 0
   803  000079                     ___flsub@b:
   804                           	opt callstack 0
   805                           
   806                           ; 4 bytes @ 0x19
   807  000079                     	ds	2
   808  00007B                     pad@w:
   809                           	opt callstack 0
   810                           
   811                           ; 2 bytes @ 0x1B
   812  00007B                     	ds	1
   813  00007C                     ___fldiv@rem:
   814                           	opt callstack 0
   815                           
   816                           ; 4 bytes @ 0x1C
   817  00007C                     	ds	1
   818  00007D                     ___flge@ff2:
   819                           	opt callstack 0
   820  00007D                     ___flsub@a:
   821                           	opt callstack 0
   822                           
   823                           ; 4 bytes @ 0x1D
   824  00007D                     	ds	3
   825  000080                     ___fldiv@sign:
   826                           	opt callstack 0
   827                           
   828                           ; 1 bytes @ 0x20
   829  000080                     	ds	1
   830  000081                     ??___flge:
   831  000081                     ___fldiv@new_exp:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x21
   835  000081                     	ds	2
   836  000083                     ___fldiv@grs:
   837                           	opt callstack 0
   838                           
   839                           ; 4 bytes @ 0x23
   840  000083                     	ds	4
   841  000087                     ___fldiv@bexp:
   842                           	opt callstack 0
   843                           
   844                           ; 1 bytes @ 0x27
   845  000087                     	ds	1
   846  000088                     ___fldiv@aexp:
   847                           	opt callstack 0
   848                           
   849                           ; 1 bytes @ 0x28
   850  000088                     	ds	1
   851  000089                     ?_floorf:
   852                           	opt callstack 0
   853  000089                     floorf@x:
   854                           	opt callstack 0
   855                           
   856                           ; 4 bytes @ 0x29
   857  000089                     	ds	4
   858  00008D                     ??_floorf:
   859                           
   860                           ; 1 bytes @ 0x2D
   861  00008D                     	ds	6
   862  000093                     floorf@m:
   863                           	opt callstack 0
   864                           
   865                           ; 4 bytes @ 0x33
   866  000093                     	ds	4
   867  000097                     floorf@e:
   868                           	opt callstack 0
   869                           
   870                           ; 2 bytes @ 0x37
   871  000097                     	ds	2
   872  000099                     floorf@u:
   873                           	opt callstack 0
   874                           
   875                           ; 4 bytes @ 0x39
   876  000099                     	ds	4
   877  00009D                     ?_efgtoa:
   878                           	opt callstack 0
   879  00009D                     efgtoa@fp:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x3D
   883  00009D                     	ds	2
   884  00009F                     efgtoa@f:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0x3F
   888  00009F                     	ds	4
   889  0000A3                     efgtoa@c:
   890                           	opt callstack 0
   891                           
   892                           ; 1 bytes @ 0x43
   893  0000A3                     	ds	1
   894  0000A4                     ??_efgtoa:
   895                           
   896                           ; 1 bytes @ 0x44
   897  0000A4                     	ds	5
   898  0000A9                     efgtoa@ou:
   899                           	opt callstack 0
   900                           
   901                           ; 4 bytes @ 0x49
   902  0000A9                     	ds	4
   903  0000AD                     _efgtoa$1991:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x4D
   907  0000AD                     	ds	2
   908  0000AF                     _efgtoa$1992:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x4F
   912  0000AF                     	ds	2
   913  0000B1                     _efgtoa$1997:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0x51
   917  0000B1                     	ds	2
   918  0000B3                     _efgtoa$2001:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x53
   922  0000B3                     	ds	2
   923  0000B5                     _efgtoa$2002:
   924                           	opt callstack 0
   925                           
   926                           ; 2 bytes @ 0x55
   927  0000B5                     	ds	2
   928  0000B7                     _efgtoa$2003:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x57
   932  0000B7                     	ds	2
   933  0000B9                     efgtoa@t:
   934                           	opt callstack 0
   935                           
   936                           ; 2 bytes @ 0x59
   937  0000B9                     	ds	2
   938  0000BB                     efgtoa@pp:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x5B
   942  0000BB                     	ds	2
   943  0000BD                     efgtoa@m:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x5D
   947  0000BD                     	ds	2
   948  0000BF                     efgtoa@ne:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x5F
   952  0000BF                     	ds	2
   953  0000C1                     efgtoa@d:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x61
   957  0000C1                     	ds	2
   958  0000C3                     efgtoa@sign:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x63
   962  0000C3                     	ds	2
   963  0000C5                     efgtoa@p:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x65
   967  0000C5                     	ds	2
   968  0000C7                     efgtoa@nmode:
   969                           	opt callstack 0
   970                           
   971                           ; 1 bytes @ 0x67
   972  0000C7                     	ds	1
   973  0000C8                     efgtoa@w:
   974                           	opt callstack 0
   975                           
   976                           ; 2 bytes @ 0x68
   977  0000C8                     	ds	2
   978  0000CA                     efgtoa@mode:
   979                           	opt callstack 0
   980                           
   981                           ; 1 bytes @ 0x6A
   982  0000CA                     	ds	1
   983  0000CB                     efgtoa@h:
   984                           	opt callstack 0
   985                           
   986                           ; 4 bytes @ 0x6B
   987  0000CB                     	ds	4
   988  0000CF                     efgtoa@l:
   989                           	opt callstack 0
   990                           
   991                           ; 4 bytes @ 0x6F
   992  0000CF                     	ds	4
   993  0000D3                     efgtoa@i:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x73
   997  0000D3                     	ds	2
   998  0000D5                     efgtoa@g:
   999                           	opt callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x75
  1002  0000D5                     	ds	4
  1003  0000D9                     efgtoa@e:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x79
  1007  0000D9                     	ds	2
  1008  0000DB                     efgtoa@n:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x7B
  1012  0000DB                     	ds	2
  1013  0000DD                     efgtoa@u:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x7D
  1017  0000DD                     	ds	4
  1018  0000E1                     ?_vfpfcnvrt:
  1019                           	opt callstack 0
  1020  0000E1                     vfpfcnvrt@fp:
  1021                           	opt callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x81
  1024  0000E1                     	ds	2
  1025  0000E3                     vfpfcnvrt@fmt:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x83
  1029  0000E3                     	ds	2
  1030  0000E5                     vfpfcnvrt@ap:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x85
  1034  0000E5                     	ds	2
  1035  0000E7                     ??_vfpfcnvrt:
  1036                           
  1037                           ; 1 bytes @ 0x87
  1038  0000E7                     	ds	4
  1039  0000EB                     _vfpfcnvrt$2017:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x8B
  1043  0000EB                     	ds	2
  1044  0000ED                     _vfpfcnvrt$2021:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x8D
  1048  0000ED                     	ds	2
  1049  0000EF                     vfpfcnvrt@f:
  1050                           	opt callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x8F
  1053  0000EF                     	ds	4
  1054  0000F3                     vfpfcnvrt@ct:
  1055                           	opt callstack 0
  1056                           
  1057                           ; 3 bytes @ 0x93
  1058  0000F3                     	ds	3
  1059  0000F6                     vfpfcnvrt@c:
  1060                           	opt callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x96
  1063  0000F6                     	ds	1
  1064  0000F7                     ?_vfprintf:
  1065                           	opt callstack 0
  1066  0000F7                     vfprintf@fp:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x97
  1070  0000F7                     	ds	2
  1071  0000F9                     vfprintf@fmt:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x99
  1075  0000F9                     	ds	2
  1076  0000FB                     vfprintf@ap:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x9B
  1080  0000FB                     	ds	2
  1081  0000FD                     vfprintf@cfmt:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x9D
  1085  0000FD                     	ds	2
  1086  0000FF                     
  1087                           ; 1 bytes @ 0x9F
  1088                           
  1089                           	psect	cstackCOMRAM
  1090  000001                     __pcstackCOMRAM:
  1091                           	opt callstack 0
  1092  000001                     ??_carcontrol_ISR:
  1093  000001                     ?___xxtofl:
  1094                           	opt callstack 0
  1095  000001                     i2IOCCF2_SetInterruptHandler@InterruptHandler:
  1096                           	opt callstack 0
  1097  000001                     i2TMR1_WriteTimer@timerVal:
  1098                           	opt callstack 0
  1099  000001                     i2TMR1_SetInterruptHandler@InterruptHandler:
  1100                           	opt callstack 0
  1101  000001                     ___xxtofl@val:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x0
  1105  000001                     	ds	2
  1106  000003                     
  1107                           ; 1 bytes @ 0x2
  1108  000003                     	ds	1
  1109  000004                     
  1110                           ; 1 bytes @ 0x3
  1111  000004                     	ds	1
  1112  000005                     ??___xxtofl:
  1113                           
  1114                           ; 1 bytes @ 0x4
  1115  000005                     	ds	4
  1116  000009                     ___xxtofl@sign:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x8
  1120  000009                     	ds	1
  1121  00000A                     ___xxtofl@exp:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x9
  1125  00000A                     	ds	1
  1126  00000B                     ___xxtofl@arg:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 4 bytes @ 0xA
  1130  00000B                     	ds	4
  1131  00000F                     ?i2___flmul:
  1132                           	opt callstack 0
  1133  00000F                     i2___flmul@b:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 4 bytes @ 0xE
  1137  00000F                     	ds	4
  1138  000013                     i2___flmul@a:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x12
  1142  000013                     	ds	4
  1143  000017                     ??i2___flmul:
  1144                           
  1145                           ; 1 bytes @ 0x16
  1146  000017                     	ds	4
  1147  00001B                     i2___flmul@sign:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x1A
  1151  00001B                     	ds	1
  1152  00001C                     i2___flmul@grs:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x1B
  1156  00001C                     	ds	4
  1157  000020                     i2___flmul@aexp:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x1F
  1161  000020                     	ds	1
  1162  000021                     i2___flmul@bexp:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x20
  1166  000021                     	ds	1
  1167  000022                     i2___flmul@prod:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x21
  1171  000022                     	ds	4
  1172  000026                     i2___flmul@temp:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x25
  1176  000026                     	ds	2
  1177  000028                     ping_CCP1_triggered@timeOfFlight:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x27
  1181  000028                     	ds	2
  1182  00002A                     CCP1_CaptureISR@module:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x29
  1186  00002A                     	ds	2
  1187  00002C                     ??_INTERRUPT_InterruptManager:
  1188                           
  1189                           ; 1 bytes @ 0x2B
  1190  00002C                     	ds	6
  1191                           
  1192 ;;
  1193 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1194 ;;
  1195 ;; *************** function _main *****************
  1196 ;; Defined at:
  1197 ;;		line 51 in file "main.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  mean            4   24[BANK1 ] PTR FTN()void 
  1202 ;;  angle           4   12[BANK1 ] PTR FTN()void 
  1203 ;;  dis             4   20[BANK1 ] PTR FTN()void 
  1204 ;;  last_dis        4   16[BANK1 ] PTR FTN()void 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0
  1215 ;;      Locals:         0       0      16       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       2       0       0       0       0       0       0
  1217 ;;      Totals:         0       0      18       0       0       0       0       0       0
  1218 ;;Total ram usage:       18 bytes
  1219 ;; Hardware stack levels required when called:   14
  1220 ;; This function calls:
  1221 ;;		_SYSTEM_Initialize
  1222 ;;		___fladd
  1223 ;;		___fldiv
  1224 ;;		___fleq
  1225 ;;		___flge
  1226 ;;		___fltol
  1227 ;;		_carcontrol_init
  1228 ;;		_carcontrol_steering
  1229 ;;		_ping_get
  1230 ;;		_ping_init
  1231 ;;		_ping_send
  1232 ;;		_printf
  1233 ;; This function is called by:
  1234 ;;		Startup code after reset
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text0
  1239  00221A                     __ptext0:
  1240                           	opt callstack 0
  1241  00221A                     _main:
  1242                           	opt callstack 17
  1243                           
  1244                           ;main.c: 54:     SYSTEM_Initialize();
  1245                           
  1246                           ;incstack = 0
  1247  00221A  EC50  F01B         	call	_SYSTEM_Initialize	;wreg free
  1248                           
  1249                           ;main.c: 61:     (INTCONbits.GIE = 1);
  1250  00221E  8EF2               	bsf	4082,7,c	;volatile
  1251                           
  1252                           ;main.c: 67:     (INTCONbits.PEIE = 1);
  1253  002220  8CF2               	bsf	4082,6,c	;volatile
  1254                           
  1255                           ;main.c: 72:     carcontrol_init();
  1256  002222  EC5F  F01A         	call	_carcontrol_init	;wreg free
  1257                           
  1258                           ;main.c: 73:     ping_init();
  1259  002226  EC74  F019         	call	_ping_init	;wreg free
  1260                           
  1261                           ;main.c: 74:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1262  00222A  0E52               	movlw	82
  1263  00222C  0101               	movlb	1	; () banked
  1264  00222E  6F73               	movwf	(??_main+1)& (0+255),b
  1265  002230  0E2B               	movlw	43
  1266  002232  6F72               	movwf	??_main& (0+255),b
  1267  002234  0E00               	movlw	0
  1268  002236                     u6167:
  1269  002236  2EE8               	decfsz	wreg,f,c
  1270  002238  D7FE               	bra	u6167
  1271  00223A  2F72               	decfsz	??_main& (0+255),f,b
  1272  00223C  D7FC               	bra	u6167
  1273  00223E  2F73               	decfsz	(??_main+1)& (0+255),f,b
  1274  002240  D7FA               	bra	u6167
  1275  002242  F000               	nop	
  1276                           
  1277                           ;main.c: 76:     carcontrol_steering(0);
  1278  002244  0E00               	movlw	0
  1279  002246  EC77  F01A         	call	_carcontrol_steering
  1280                           
  1281                           ;main.c: 78:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  1282  00224A  0E35               	movlw	53
  1283  00224C                     u6177:
  1284  00224C  2EE8               	decfsz	wreg,f,c
  1285  00224E  D7FE               	bra	u6177
  1286  002250  F000               	nop	
  1287                           
  1288                           ;main.c: 80:     carcontrol_steering(0);
  1289  002252  0E00               	movlw	0
  1290  002254  EC77  F01A         	call	_carcontrol_steering
  1291  002258                     
  1292                           ;main.c: 85:     {;main.c: 86:         ping_send();
  1293  002258  ECAF  F019         	call	_ping_send	;wreg free
  1294                           
  1295                           ;main.c: 88:         last_dis = dis;
  1296  00225C  C17C  F178         	movff	main@dis,main@last_dis
  1297  002260  C17D  F179         	movff	main@dis+1,main@last_dis+1
  1298  002264  C17E  F17A         	movff	main@dis+2,main@last_dis+2
  1299  002268  C17F  F17B         	movff	main@dis+3,main@last_dis+3
  1300  00226C                     l5609:
  1301                           
  1302                           ;main.c: 91:            dis = ping_get();
  1303  00226C  EC47  F01A         	call	_ping_get	;wreg free
  1304  002270  C060  F17C         	movff	?_ping_get,main@dis
  1305  002274  C061  F17D         	movff	?_ping_get+1,main@dis+1
  1306  002278  C062  F17E         	movff	?_ping_get+2,main@dis+2
  1307  00227C  C063  F17F         	movff	?_ping_get+3,main@dis+3
  1308                           
  1309                           ;main.c: 92:         } while (dis == 0);
  1310  002280  C17C  F060         	movff	main@dis,___fleq@ff1
  1311  002284  C17D  F061         	movff	main@dis+1,___fleq@ff1+1
  1312  002288  C17E  F062         	movff	main@dis+2,___fleq@ff1+2
  1313  00228C  C17F  F063         	movff	main@dis+3,___fleq@ff1+3
  1314  002290  0E00               	movlw	0
  1315  002292  0100               	movlb	0	; () banked
  1316  002294  6F64               	movwf	___fleq@ff2& (0+255),b
  1317  002296  0E00               	movlw	0
  1318  002298  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  1319  00229A  0E00               	movlw	0
  1320  00229C  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  1321  00229E  0E00               	movlw	0
  1322  0022A0  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  1323  0022A2  ECAB  F016         	call	___fleq	;wreg free
  1324  0022A6  0100               	movlb	0	; () banked
  1325  0022A8  B0D8               	btfsc	status,0,c
  1326  0022AA  D7E0               	goto	l5609
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 94:         double mean = (last_dis + dis)/2;
  1330  0022AC  C17C  F064         	movff	main@dis,___fladd@a
  1331  0022B0  C17D  F065         	movff	main@dis+1,___fladd@a+1
  1332  0022B4  C17E  F066         	movff	main@dis+2,___fladd@a+2
  1333  0022B8  C17F  F067         	movff	main@dis+3,___fladd@a+3
  1334  0022BC  C178  F060         	movff	main@last_dis,___fladd@b
  1335  0022C0  C179  F061         	movff	main@last_dis+1,___fladd@b+1
  1336  0022C4  C17A  F062         	movff	main@last_dis+2,___fladd@b+2
  1337  0022C8  C17B  F063         	movff	main@last_dis+3,___fladd@b+3
  1338  0022CC  EC41  F00E         	call	___fladd	;wreg free
  1339  0022D0  C060  F070         	movff	?___fladd,___fldiv@b
  1340  0022D4  C061  F071         	movff	?___fladd+1,___fldiv@b+1
  1341  0022D8  C062  F072         	movff	?___fladd+2,___fldiv@b+2
  1342  0022DC  C063  F073         	movff	?___fladd+3,___fldiv@b+3
  1343  0022E0  0E00               	movlw	0
  1344  0022E2  0100               	movlb	0	; () banked
  1345  0022E4  6F74               	movwf	___fldiv@a& (0+255),b
  1346  0022E6  0E00               	movlw	0
  1347  0022E8  6F75               	movwf	(___fldiv@a+1)& (0+255),b
  1348  0022EA  0E00               	movlw	0
  1349  0022EC  6F76               	movwf	(___fldiv@a+2)& (0+255),b
  1350  0022EE  0E40               	movlw	64
  1351  0022F0  6F77               	movwf	(___fldiv@a+3)& (0+255),b
  1352  0022F2  ECC8  F00F         	call	___fldiv	;wreg free
  1353  0022F6  C070  F180         	movff	?___fldiv,main@mean
  1354  0022FA  C071  F181         	movff	?___fldiv+1,main@mean+1
  1355  0022FE  C072  F182         	movff	?___fldiv+2,main@mean+2
  1356  002302  C073  F183         	movff	?___fldiv+3,main@mean+3
  1357                           
  1358                           ;main.c: 97:         if (mean > 70) mean = 70;
  1359  002306  0E00               	movlw	0
  1360  002308  0100               	movlb	0	; () banked
  1361  00230A  6F79               	movwf	___flge@ff1& (0+255),b
  1362  00230C  0E00               	movlw	0
  1363  00230E  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  1364  002310  0E8C               	movlw	140
  1365  002312  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  1366  002314  0E42               	movlw	66
  1367  002316  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  1368  002318  C180  F07D         	movff	main@mean,___flge@ff2
  1369  00231C  C181  F07E         	movff	main@mean+1,___flge@ff2+1
  1370  002320  C182  F07F         	movff	main@mean+2,___flge@ff2+2
  1371  002324  C183  F080         	movff	main@mean+3,___flge@ff2+3
  1372  002328  EC8D  F014         	call	___flge	;wreg free
  1373  00232C  0100               	movlb	0	; () banked
  1374  00232E  B0D8               	btfsc	status,0,c
  1375  002330  D009               	goto	l5617
  1376                           
  1377                           ; BSR set to: 0
  1378  002332  0E00               	movlw	0
  1379  002334  0101               	movlb	1	; () banked
  1380  002336  6F80               	movwf	main@mean& (0+255),b
  1381  002338  0E00               	movlw	0
  1382  00233A  6F81               	movwf	(main@mean+1)& (0+255),b
  1383  00233C  0E8C               	movlw	140
  1384  00233E  6F82               	movwf	(main@mean+2)& (0+255),b
  1385  002340  0E42               	movlw	66
  1386  002342  6F83               	movwf	(main@mean+3)& (0+255),b
  1387  002344                     l5617:
  1388                           
  1389                           ;main.c: 98:         if (mean < 10) mean = 10;
  1390  002344  C180  F079         	movff	main@mean,___flge@ff1
  1391  002348  C181  F07A         	movff	main@mean+1,___flge@ff1+1
  1392  00234C  C182  F07B         	movff	main@mean+2,___flge@ff1+2
  1393  002350  C183  F07C         	movff	main@mean+3,___flge@ff1+3
  1394  002354  0E00               	movlw	0
  1395  002356  0100               	movlb	0	; () banked
  1396  002358  6F7D               	movwf	___flge@ff2& (0+255),b
  1397  00235A  0E00               	movlw	0
  1398  00235C  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  1399  00235E  0E20               	movlw	32
  1400  002360  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  1401  002362  0E41               	movlw	65
  1402  002364  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  1403  002366  EC8D  F014         	call	___flge	;wreg free
  1404  00236A  0100               	movlb	0	; () banked
  1405  00236C  B0D8               	btfsc	status,0,c
  1406  00236E  D009               	goto	l5621
  1407                           
  1408                           ; BSR set to: 0
  1409  002370  0E00               	movlw	0
  1410  002372  0101               	movlb	1	; () banked
  1411  002374  6F80               	movwf	main@mean& (0+255),b
  1412  002376  0E00               	movlw	0
  1413  002378  6F81               	movwf	(main@mean+1)& (0+255),b
  1414  00237A  0E20               	movlw	32
  1415  00237C  6F82               	movwf	(main@mean+2)& (0+255),b
  1416  00237E  0E41               	movlw	65
  1417  002380  6F83               	movwf	(main@mean+3)& (0+255),b
  1418  002382                     l5621:
  1419                           
  1420                           ;main.c: 99:         double angle = (mean-40);
  1421  002382  C180  F060         	movff	main@mean,___fladd@b
  1422  002386  C181  F061         	movff	main@mean+1,___fladd@b+1
  1423  00238A  C182  F062         	movff	main@mean+2,___fladd@b+2
  1424  00238E  C183  F063         	movff	main@mean+3,___fladd@b+3
  1425  002392  0E00               	movlw	0
  1426  002394  0100               	movlb	0	; () banked
  1427  002396  6F64               	movwf	___fladd@a& (0+255),b
  1428  002398  0E00               	movlw	0
  1429  00239A  6F65               	movwf	(___fladd@a+1)& (0+255),b
  1430  00239C  0E20               	movlw	32
  1431  00239E  6F66               	movwf	(___fladd@a+2)& (0+255),b
  1432  0023A0  0EC2               	movlw	194
  1433  0023A2  6F67               	movwf	(___fladd@a+3)& (0+255),b
  1434  0023A4  EC41  F00E         	call	___fladd	;wreg free
  1435  0023A8  C060  F174         	movff	?___fladd,main@angle
  1436  0023AC  C061  F175         	movff	?___fladd+1,main@angle+1
  1437  0023B0  C062  F176         	movff	?___fladd+2,main@angle+2
  1438  0023B4  C063  F177         	movff	?___fladd+3,main@angle+3
  1439                           
  1440                           ;main.c: 102:         carcontrol_steering(angle);
  1441  0023B8  C174  F060         	movff	main@angle,___fltol@f1
  1442  0023BC  C175  F061         	movff	main@angle+1,___fltol@f1+1
  1443  0023C0  C176  F062         	movff	main@angle+2,___fltol@f1+2
  1444  0023C4  C177  F063         	movff	main@angle+3,___fltol@f1+3
  1445  0023C8  EC5D  F015         	call	___fltol	;wreg free
  1446  0023CC  0100               	movlb	0	; () banked
  1447  0023CE  5160               	movf	?___fltol& (0+255),w,b
  1448  0023D0  EC77  F01A         	call	_carcontrol_steering
  1449  0023D4  8E84               	bsf	3972,7,c	;volatile
  1450                           
  1451                           ;main.c: 105:         printf("test distance:    %.2f\n", mean);
  1452  0023D6  0E01               	movlw	low STR_1
  1453  0023D8  0101               	movlb	1	; () banked
  1454  0023DA  6F68               	movwf	printf@fmt& (0+255),b
  1455  0023DC  0E08               	movlw	high STR_1
  1456  0023DE  6F69               	movwf	(printf@fmt+1)& (0+255),b
  1457  0023E0  C180  F16A         	movff	main@mean,?_printf+2
  1458  0023E4  C181  F16B         	movff	main@mean+1,?_printf+3
  1459  0023E8  C182  F16C         	movff	main@mean+2,?_printf+4
  1460  0023EC  C183  F16D         	movff	main@mean+3,?_printf+5
  1461  0023F0  EC01  F01B         	call	_printf	;wreg free
  1462  0023F4  9E84               	bcf	3972,7,c	;volatile
  1463  0023F6  D730               	goto	l5603
  1464  0023F8                     __end_of_main:
  1465                           	opt callstack 0
  1466                           
  1467 ;; *************** function _printf *****************
  1468 ;; Defined at:
  1469 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  1472 ;;		 -> STR_1(24), 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  ap              2    8[BANK1 ] PTR void [1]
  1475 ;;		 -> ?_printf(2), 
  1476 ;;  ret             2    0        int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    0[BANK1 ] int 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1486 ;;      Params:         0       0       6       0       0       0       0       0       0
  1487 ;;      Locals:         0       0       4       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1489 ;;      Totals:         0       0      10       0       0       0       0       0       0
  1490 ;;Total ram usage:       10 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:   13
  1493 ;; This function calls:
  1494 ;;		_vfprintf
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text1
  1501  003602                     __ptext1:
  1502                           	opt callstack 0
  1503  003602                     _printf:
  1504                           	opt callstack 17
  1505                           
  1506                           ;incstack = 0
  1507  003602  0E6A               	movlw	low (?_printf+2)
  1508  003604  0101               	movlb	1	; () banked
  1509  003606  6F70               	movwf	printf@ap& (0+255),b
  1510  003608  0E01               	movlw	high (?_printf+2)
  1511  00360A  6F71               	movwf	(printf@ap+1)& (0+255),b
  1512                           
  1513                           ; BSR set to: 1
  1514  00360C  0E00               	movlw	0
  1515  00360E  0100               	movlb	0	; () banked
  1516  003610  6FF7               	movwf	vfprintf@fp& (0+255),b
  1517  003612  0E00               	movlw	0
  1518  003614  6FF8               	movwf	(vfprintf@fp+1)& (0+255),b
  1519  003616  C168  F0F9         	movff	printf@fmt,vfprintf@fmt
  1520  00361A  C169  F0FA         	movff	printf@fmt+1,vfprintf@fmt+1
  1521  00361E  0E70               	movlw	low printf@ap
  1522  003620  6FFB               	movwf	vfprintf@ap& (0+255),b
  1523  003622  0E01               	movlw	high printf@ap
  1524  003624  6FFC               	movwf	(vfprintf@ap+1)& (0+255),b
  1525  003626  EC4F  F018         	call	_vfprintf	;wreg free
  1526  00362A  0012               	return		;funcret
  1527  00362C                     __end_of_printf:
  1528                           	opt callstack 0
  1529                           
  1530 ;; *************** function _vfprintf *****************
  1531 ;; Defined at:
  1532 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  fp              2  151[BANK0 ] PTR struct _IO_FILE
  1535 ;;		 -> NULL(0), 
  1536 ;;  fmt             2  153[BANK0 ] PTR const unsigned char 
  1537 ;;		 -> STR_1(24), 
  1538 ;;  ap              2  155[BANK0 ] PTR PTR void 
  1539 ;;		 -> printf@ap(2), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  cfmt            2  157[BANK0 ] PTR unsigned char 
  1542 ;;		 -> STR_1(24), 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2  151[BANK0 ] int 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1552 ;;      Params:         0       6       0       0       0       0       0       0       0
  1553 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1555 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1556 ;;Total ram usage:        8 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:   12
  1559 ;; This function calls:
  1560 ;;		_vfpfcnvrt
  1561 ;; This function is called by:
  1562 ;;		_printf
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text2
  1567  00309E                     __ptext2:
  1568                           	opt callstack 0
  1569  00309E                     _vfprintf:
  1570                           	opt callstack 17
  1571                           
  1572                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  1573                           
  1574                           ;incstack = 0
  1575  00309E  C0F9  F0FD         	movff	vfprintf@fmt,vfprintf@cfmt
  1576  0030A2  C0FA  F0FE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1577                           
  1578                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1579  0030A6  0E00               	movlw	0
  1580  0030A8  6E49               	movwf	_nout+1,c
  1581  0030AA  0E00               	movlw	0
  1582  0030AC  6E48               	movwf	_nout,c
  1583                           
  1584                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1585  0030AE  D014               	goto	l5407
  1586  0030B0                     l5405:
  1587                           
  1588                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1589  0030B0  C0F7  F0E1         	movff	vfprintf@fp,vfpfcnvrt@fp
  1590  0030B4  C0F8  F0E2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1591  0030B8  0EFD               	movlw	low vfprintf@cfmt
  1592  0030BA  0100               	movlb	0	; () banked
  1593  0030BC  6FE3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1594  0030BE  0E00               	movlw	high vfprintf@cfmt
  1595  0030C0  6FE4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1596  0030C2  C0FB  F0E5         	movff	vfprintf@ap,vfpfcnvrt@ap
  1597  0030C6  C0FC  F0E6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1598  0030CA  EC01  F009         	call	_vfpfcnvrt	;wreg free
  1599  0030CE  0100               	movlb	0	; () banked
  1600  0030D0  51E1               	movf	?_vfpfcnvrt& (0+255),w,b
  1601  0030D2  2648               	addwf	_nout,f,c
  1602  0030D4  51E2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1603  0030D6  2249               	addwfc	_nout+1,f,c
  1604  0030D8                     l5407:
  1605                           
  1606                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1607  0030D8  C0FD  FFF6         	movff	vfprintf@cfmt,tblptrl
  1608  0030DC  C0FE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1609  0030E0                     	if	0	;tblptru may be non-zero
  1610  0030E0                     	endif
  1611  0030E0                     	if	0	;tblptru may be non-zero
  1612  0030E0                     	endif
  1613  0030E0  0008               	tblrd		*
  1614  0030E2  50F5               	movf	tablat,w,c
  1615  0030E4  0900               	iorlw	0
  1616  0030E6  A4D8               	btfss	status,2,c
  1617  0030E8  D7E3               	goto	l5405
  1618                           
  1619                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  1620  0030EA  C048  F0F7         	movff	_nout,?_vfprintf
  1621  0030EE  C049  F0F8         	movff	_nout+1,?_vfprintf+1
  1622  0030F2  0012               	return		;funcret
  1623  0030F4                     __end_of_vfprintf:
  1624                           	opt callstack 0
  1625                           
  1626 ;; *************** function _vfpfcnvrt *****************
  1627 ;; Defined at:
  1628 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  fp              2  129[BANK0 ] PTR struct _IO_FILE
  1631 ;;		 -> NULL(0), 
  1632 ;;  fmt             2  131[BANK0 ] PTR PTR unsigned char 
  1633 ;;		 -> vfprintf@cfmt(2), 
  1634 ;;  ap              2  133[BANK0 ] PTR PTR void 
  1635 ;;		 -> printf@ap(2), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  llu             8    0        unsigned long long 
  1638 ;;  ll              8    0        long long 
  1639 ;;  f               4  143[BANK0 ] long long 
  1640 ;;  ct              3  147[BANK0 ] unsigned char [3]
  1641 ;;  vp              3    0        PTR void 
  1642 ;;  cp              3    0        PTR unsigned char 
  1643 ;;  i               2    0        int 
  1644 ;;  done            2    0        int 
  1645 ;;  c               1  150[BANK0 ] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  2  129[BANK0 ] int 
  1648 ;; Registers used:
  1649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1655 ;;      Params:         0       6       0       0       0       0       0       0       0
  1656 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1657 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1658 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1659 ;;Total ram usage:       22 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:   11
  1662 ;; This function calls:
  1663 ;;		_atoi
  1664 ;;		_efgtoa
  1665 ;;		_fputc
  1666 ;;		_isdigit
  1667 ;;		_isupper
  1668 ;;		_strncmp
  1669 ;;		_tolower
  1670 ;; This function is called by:
  1671 ;;		_vfprintf
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text3
  1676  001202                     __ptext3:
  1677                           	opt callstack 0
  1678  001202                     _vfpfcnvrt:
  1679                           	opt callstack 17
  1680                           
  1681                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  1682                           
  1683                           ;incstack = 0
  1684  001202  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1685  001206  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1686  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  1687  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  1688  001212                     	if	0	;tblptru may be non-zero
  1689  001212                     	endif
  1690  001212                     	if	0	;tblptru may be non-zero
  1691  001212                     	endif
  1692  001212  0008               	tblrd		*
  1693  001214  50F5               	movf	tablat,w,c
  1694  001216  0A25               	xorlw	37
  1695  001218  A4D8               	btfss	status,2,c
  1696  00121A  D1C5               	goto	l5019
  1697                           
  1698                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1699  00121C  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1700  001220  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1701  001224  2ADE               	incf	postinc2,f,c
  1702  001226  0E00               	movlw	0
  1703  001228  22DD               	addwfc	postdec2,f,c
  1704                           
  1705                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  1706  00122A  0E00               	movlw	0
  1707  00122C  6E4B               	movwf	_width+1,c
  1708  00122E  0E00               	movlw	0
  1709  001230  6E4A               	movwf	_width,c
  1710  001232  C04A  F04E         	movff	_width,_flags
  1711  001236  C04B  F04F         	movff	_width+1,_flags+1
  1712                           
  1713                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  1714  00123A  684C               	setf	_prec,c
  1715  00123C  684D               	setf	_prec+1,c
  1716                           
  1717                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*f
      +                          mt)[0] == '.') {
  1718  00123E  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1719  001242  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1720  001246  CFDE FFF6          	movff	postinc2,tblptrl
  1721  00124A  CFDD FFF7          	movff	postdec2,tblptrh
  1722  00124E                     	if	0	;tblptru may be non-zero
  1723  00124E                     	endif
  1724  00124E                     	if	0	;tblptru may be non-zero
  1725  00124E                     	endif
  1726  00124E  0008               	tblrd		*
  1727  001250  50F5               	movf	tablat,w,c
  1728  001252  0A2E               	xorlw	46
  1729  001254  A4D8               	btfss	status,2,c
  1730  001256  D06E               	goto	u5300
  1731                           
  1732                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             pre
      +                          c = 0;
  1733  001258  0E00               	movlw	0
  1734  00125A  6E4D               	movwf	_prec+1,c
  1735  00125C  0E00               	movlw	0
  1736  00125E  6E4C               	movwf	_prec,c
  1737                           
  1738                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*
      +                          fmt;
  1739  001260  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1740  001264  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1741  001268  2ADE               	incf	postinc2,f,c
  1742  00126A  0E00               	movlw	0
  1743  00126C  22DD               	addwfc	postdec2,f,c
  1744                           
  1745                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if 
      +                          ((*fmt)[0] == '*') {
  1746  00126E  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1747  001272  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1748  001276  CFDE FFF6          	movff	postinc2,tblptrl
  1749  00127A  CFDD FFF7          	movff	postdec2,tblptrh
  1750  00127E                     	if	0	;tblptru may be non-zero
  1751  00127E                     	endif
  1752  00127E                     	if	0	;tblptru may be non-zero
  1753  00127E                     	endif
  1754  00127E  0008               	tblrd		*
  1755  001280  50F5               	movf	tablat,w,c
  1756  001282  0A2A               	xorlw	42
  1757  001284  A4D8               	btfss	status,2,c
  1758  001286  D01C               	goto	l4955
  1759                           
  1760                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                
      +                           ++*fmt;
  1761  001288  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1762  00128C  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1763  001290  2ADE               	incf	postinc2,f,c
  1764  001292  0E00               	movlw	0
  1765  001294  22DD               	addwfc	postdec2,f,c
  1766                           
  1767                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1768  001296  C0E5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1769  00129A  C0E6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1770  00129E  CFDF F0E7          	movff	indf2,??_vfpfcnvrt
  1771  0012A2  0E02               	movlw	2
  1772  0012A4  26DE               	addwf	postinc2,f,c
  1773  0012A6  CFDF F0E8          	movff	indf2,??_vfpfcnvrt+1
  1774  0012AA  0E00               	movlw	0
  1775  0012AC  22DD               	addwfc	postdec2,f,c
  1776  0012AE  C0E7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1777  0012B2  C0E8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1778  0012B6  CFDE F04C          	movff	postinc2,_prec
  1779  0012BA  CFDD F04D          	movff	postdec2,_prec+1
  1780                           
  1781                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } e
      +                          lse {
  1782  0012BE  D03A               	goto	u5300
  1783  0012C0                     l4955:
  1784                           
  1785                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                
      +                           prec = atoi(*fmt);
  1786  0012C0  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  0012C4  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  0012C8  CFDE F067          	movff	postinc2,atoi@s
  1789  0012CC  CFDD F068          	movff	postdec2,atoi@s+1
  1790  0012D0  ECD9  F012         	call	_atoi	;wreg free
  1791  0012D4  C067  F04C         	movff	?_atoi,_prec
  1792  0012D8  C068  F04D         	movff	?_atoi+1,_prec+1
  1793                           
  1794                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1795  0012DC  D007               	goto	l4959
  1796  0012DE                     l4957:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                
      +                               ++*fmt;
  1800  0012DE  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801  0012E2  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802  0012E6  2ADE               	incf	postinc2,f,c
  1803  0012E8  0E00               	movlw	0
  1804  0012EA  22DD               	addwfc	postdec2,f,c
  1805  0012EC                     l4959:
  1806  0012EC  0ED0               	movlw	208
  1807  0012EE  0100               	movlb	0	; () banked
  1808  0012F0  6FE7               	movwf	??_vfpfcnvrt& (0+255),b
  1809  0012F2  0EFF               	movlw	255
  1810  0012F4  6FE8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1811  0012F6  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1812  0012FA  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1813  0012FE  CFDE FFF6          	movff	postinc2,tblptrl
  1814  001302  CFDD FFF7          	movff	postdec2,tblptrh
  1815  001306                     	if	0	;tblptru may be non-zero
  1816  001306                     	endif
  1817  001306                     	if	0	;tblptru may be non-zero
  1818  001306                     	endif
  1819  001306  0008               	tblrd		*
  1820  001308  50F5               	movf	tablat,w,c
  1821  00130A  6FE9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1822  00130C  6BEA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1823  00130E  51E7               	movf	??_vfpfcnvrt& (0+255),w,b
  1824  001310  27E9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1825  001312  51E8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1826  001314  23EA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1827  001316  51EA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1828  001318  E106               	bnz	u5280
  1829  00131A  0E0A               	movlw	10
  1830  00131C  5DE9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1831  00131E  B0D8               	btfsc	status,0,c
  1832  001320  D002               	goto	u5280
  1833  001322  0E01               	movlw	1
  1834  001324  D001               	goto	u5290
  1835  001326                     u5280:
  1836  001326  0E00               	movlw	0
  1837  001328                     u5290:
  1838  001328  6FEB               	movwf	_vfpfcnvrt$2017& (0+255),b
  1839  00132A  6BEC               	clrf	(_vfpfcnvrt$2017+1)& (0+255),b
  1840                           
  1841                           ; BSR set to: 0
  1842  00132C  51EB               	movf	_vfpfcnvrt$2017& (0+255),w,b
  1843  00132E  11EC               	iorwf	(_vfpfcnvrt$2017+1)& (0+255),w,b
  1844  001330  A4D8               	btfss	status,2,c
  1845  001332  D7D5               	goto	l4957
  1846  001334                     u5300:
  1847                           
  1848                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] =
      +                           tolower((int)(*fmt)[0]);
  1849  001334  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850  001338  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851  00133C  CFDE FFF6          	movff	postinc2,tblptrl
  1852  001340  CFDD FFF7          	movff	postdec2,tblptrh
  1853  001344                     	if	0	;tblptru may be non-zero
  1854  001344                     	endif
  1855  001344                     	if	0	;tblptru may be non-zero
  1856  001344                     	endif
  1857  001344  0008               	tblrd		*
  1858  001346  50F5               	movf	tablat,w,c
  1859  001348  0100               	movlb	0	; () banked
  1860  00134A  6F66               	movwf	tolower@c& (0+255),b
  1861  00134C  6B67               	clrf	(tolower@c+1)& (0+255),b
  1862  00134E  ECA4  F018         	call	_tolower	;wreg free
  1863  001352  0100               	movlb	0	; () banked
  1864  001354  5166               	movf	?_tolower& (0+255),w,b
  1865  001356  6FF3               	movwf	vfpfcnvrt@ct& (0+255),b
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[
      +                          0]) {
  1869  001358  51F3               	movf	vfpfcnvrt@ct& (0+255),w,b
  1870  00135A  B4D8               	btfsc	status,2,c
  1871  00135C  D035               	goto	l4975
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[
      +                          1] = tolower((int)(*fmt)[1]);
  1875  00135E  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1876  001362  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1877  001366  CFDE F0E7          	movff	postinc2,??_vfpfcnvrt
  1878  00136A  CFDD F0E8          	movff	postdec2,??_vfpfcnvrt+1
  1879  00136E  0E01               	movlw	1
  1880  001370  27E7               	addwf	??_vfpfcnvrt& (0+255),f,b
  1881  001372  0E00               	movlw	0
  1882  001374  23E8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1883  001376  C0E7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1884  00137A  C0E8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1885  00137E                     	if	0	;tblptru may be non-zero
  1886  00137E                     	endif
  1887  00137E                     	if	0	;tblptru may be non-zero
  1888  00137E                     	endif
  1889  00137E  0008               	tblrd		*
  1890  001380  50F5               	movf	tablat,w,c
  1891  001382  6F66               	movwf	tolower@c& (0+255),b
  1892  001384  6B67               	clrf	(tolower@c+1)& (0+255),b
  1893  001386  ECA4  F018         	call	_tolower	;wreg free
  1894  00138A  0100               	movlb	0	; () banked
  1895  00138C  5166               	movf	?_tolower& (0+255),w,b
  1896  00138E  6FF4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if 
      +                          (ct[1]) {
  1900  001390  51F4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1901  001392  B4D8               	btfsc	status,2,c
  1902  001394  D019               	goto	l4975
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                
      +                           ct[2] = tolower((int)(*fmt)[2]);
  1906  001396  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1907  00139A  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1908  00139E  CFDE F0E7          	movff	postinc2,??_vfpfcnvrt
  1909  0013A2  CFDD F0E8          	movff	postdec2,??_vfpfcnvrt+1
  1910  0013A6  0E02               	movlw	2
  1911  0013A8  27E7               	addwf	??_vfpfcnvrt& (0+255),f,b
  1912  0013AA  0E00               	movlw	0
  1913  0013AC  23E8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1914  0013AE  C0E7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1915  0013B2  C0E8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1916  0013B6                     	if	0	;tblptru may be non-zero
  1917  0013B6                     	endif
  1918  0013B6                     	if	0	;tblptru may be non-zero
  1919  0013B6                     	endif
  1920  0013B6  0008               	tblrd		*
  1921  0013B8  50F5               	movf	tablat,w,c
  1922  0013BA  6F66               	movwf	tolower@c& (0+255),b
  1923  0013BC  6B67               	clrf	(tolower@c+1)& (0+255),b
  1924  0013BE  ECA4  F018         	call	_tolower	;wreg free
  1925  0013C2  0100               	movlb	0	; () banked
  1926  0013C4  5166               	movf	?_tolower& (0+255),w,b
  1927  0013C6  6FF5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1928  0013C8                     l4975:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[
      +                          0] == 'f') {
  1932  0013C8  0E66               	movlw	102
  1933  0013CA  19F3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1934  0013CC  A4D8               	btfss	status,2,c
  1935  0013CE  D03F               	goto	l4987
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c =
      +                           (*fmt)[0];
  1939  0013D0  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1940  0013D4  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1941  0013D8  CFDE FFF6          	movff	postinc2,tblptrl
  1942  0013DC  CFDD FFF7          	movff	postdec2,tblptrh
  1943  0013E0                     	if	0	;tblptru may be non-zero
  1944  0013E0                     	endif
  1945  0013E0                     	if	0	;tblptru may be non-zero
  1946  0013E0                     	endif
  1947  0013E0  0008               	tblrd		*
  1948  0013E2  CFF5 F0F6          	movff	tablat,vfpfcnvrt@c
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*
      +                          fmt;
  1952  0013E6  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1953  0013EA  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1954  0013EE  2ADE               	incf	postinc2,f,c
  1955  0013F0  0E00               	movlw	0
  1956  0013F2  22DD               	addwfc	postdec2,f,c
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1960  0013F4  C0E5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1961  0013F8  C0E6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1962  0013FC  CFDF F0E7          	movff	indf2,??_vfpfcnvrt
  1963  001400  0E04               	movlw	4
  1964  001402  26DE               	addwf	postinc2,f,c
  1965  001404  CFDF F0E8          	movff	indf2,??_vfpfcnvrt+1
  1966  001408  0E00               	movlw	0
  1967  00140A  22DD               	addwfc	postdec2,f,c
  1968  00140C  C0E7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1969  001410  C0E8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1970  001414  CFDE F0EF          	movff	postinc2,vfpfcnvrt@f
  1971  001418  CFDE F0F0          	movff	postinc2,vfpfcnvrt@f+1
  1972  00141C  CFDE F0F1          	movff	postinc2,vfpfcnvrt@f+2
  1973  001420  CFDE F0F2          	movff	postinc2,vfpfcnvrt@f+3
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             ret
      +                          urn efgtoa(fp, f, c);
  1977  001424  C0E1  F09D         	movff	vfpfcnvrt@fp,efgtoa@fp
  1978  001428  C0E2  F09E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1979  00142C  C0EF  F09F         	movff	vfpfcnvrt@f,efgtoa@f
  1980  001430  C0F0  F0A0         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1981  001434  C0F1  F0A1         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1982  001438  C0F2  F0A2         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1983  00143C  C0F6  F0A3         	movff	vfpfcnvrt@c,efgtoa@c
  1984  001440  EC17  F004         	call	_efgtoa	;wreg free
  1985  001444  C09D  F0E1         	movff	?_efgtoa,?_vfpfcnvrt
  1986  001448  C09E  F0E2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1987  00144C  0012               	return	
  1988  00144E                     l4987:
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1992  00144E  0EF3               	movlw	low vfpfcnvrt@ct
  1993  001450  6F60               	movwf	strncmp@_l& (0+255),b
  1994  001452  0E00               	movlw	high vfpfcnvrt@ct
  1995  001454  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  1996  001456  0E29               	movlw	low STR_10
  1997  001458  6F62               	movwf	strncmp@_r& (0+255),b
  1998  00145A  0E08               	movlw	high STR_10
  1999  00145C  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  2000  00145E  0E00               	movlw	0
  2001  001460  6F65               	movwf	(strncmp@n+1)& (0+255),b
  2002  001462  0E02               	movlw	2
  2003  001464  6F64               	movwf	strncmp@n& (0+255),b
  2004  001466  ECBB  F015         	call	_strncmp	;wreg free
  2005  00146A  0100               	movlb	0	; () banked
  2006  00146C  5160               	movf	?_strncmp& (0+255),w,b
  2007  00146E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  2008  001470  A4D8               	btfss	status,2,c
  2009  001472  D069               	goto	l5003
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2013  001474  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2014  001478  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2015  00147C  CFDE F0E7          	movff	postinc2,??_vfpfcnvrt
  2016  001480  CFDD F0E8          	movff	postdec2,??_vfpfcnvrt+1
  2017  001484  0E01               	movlw	1
  2018  001486  27E7               	addwf	??_vfpfcnvrt& (0+255),f,b
  2019  001488  0E00               	movlw	0
  2020  00148A  23E8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2021  00148C  C0E7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2022  001490  C0E8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2023  001494                     	if	0	;tblptru may be non-zero
  2024  001494                     	endif
  2025  001494                     	if	0	;tblptru may be non-zero
  2026  001494                     	endif
  2027  001494  0008               	tblrd		*
  2028  001496  CFF5 F0F6          	movff	tablat,vfpfcnvrt@c
  2029  00149A  0EBF               	movlw	191
  2030  00149C  6FE7               	movwf	??_vfpfcnvrt& (0+255),b
  2031  00149E  0EFF               	movlw	255
  2032  0014A0  6FE8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2033  0014A2  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2034  0014A6  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2035  0014AA  CFDE FFF6          	movff	postinc2,tblptrl
  2036  0014AE  CFDD FFF7          	movff	postdec2,tblptrh
  2037  0014B2                     	if	0	;tblptru may be non-zero
  2038  0014B2                     	endif
  2039  0014B2                     	if	0	;tblptru may be non-zero
  2040  0014B2                     	endif
  2041  0014B2  0008               	tblrd		*
  2042  0014B4  50F5               	movf	tablat,w,c
  2043  0014B6  6FE9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2044  0014B8  6BEA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2045  0014BA  51E7               	movf	??_vfpfcnvrt& (0+255),w,b
  2046  0014BC  27E9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2047  0014BE  51E8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2048  0014C0  23EA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2049  0014C2  51EA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2050  0014C4  E106               	bnz	u5350
  2051  0014C6  0E1A               	movlw	26
  2052  0014C8  5DE9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2053  0014CA  B0D8               	btfsc	status,0,c
  2054  0014CC  D002               	goto	u5350
  2055  0014CE  0E01               	movlw	1
  2056  0014D0  D001               	goto	u5360
  2057  0014D2                     u5350:
  2058  0014D2  0E00               	movlw	0
  2059  0014D4                     u5360:
  2060  0014D4  6FED               	movwf	_vfpfcnvrt$2021& (0+255),b
  2061  0014D6  6BEE               	clrf	(_vfpfcnvrt$2021+1)& (0+255),b
  2062                           
  2063                           ; BSR set to: 0
  2064  0014D8  51ED               	movf	_vfpfcnvrt$2021& (0+255),w,b
  2065  0014DA  11EE               	iorwf	(_vfpfcnvrt$2021+1)& (0+255),w,b
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2069                           
  2070                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } e
      +                          lse {
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2074  0014DC  C0E5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2075  0014E0  C0E6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2076  0014E4  CFDF F0E7          	movff	indf2,??_vfpfcnvrt
  2077  0014E8  0E04               	movlw	4
  2078  0014EA  26DE               	addwf	postinc2,f,c
  2079  0014EC  CFDF F0E8          	movff	indf2,??_vfpfcnvrt+1
  2080  0014F0  0E00               	movlw	0
  2081  0014F2  22DD               	addwfc	postdec2,f,c
  2082  0014F4  C0E7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2083  0014F8  C0E8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2084  0014FC  CFDE F0EF          	movff	postinc2,vfpfcnvrt@f
  2085  001500  CFDE F0F0          	movff	postinc2,vfpfcnvrt@f+1
  2086  001504  CFDE F0F1          	movff	postinc2,vfpfcnvrt@f+2
  2087  001508  CFDE F0F2          	movff	postinc2,vfpfcnvrt@f+3
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2091                           
  2092                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  2093  00150C  0E02               	movlw	2
  2094  00150E  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2095  001512  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2096  001516  26DE               	addwf	postinc2,f,c
  2097  001518  0E00               	movlw	0
  2098  00151A  22DD               	addwfc	postdec2,f,c
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 938:             ret
      +                          urn efgtoa(fp, f, c);
  2102  00151C  C0E1  F09D         	movff	vfpfcnvrt@fp,efgtoa@fp
  2103  001520  C0E2  F09E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2104  001524  C0EF  F09F         	movff	vfpfcnvrt@f,efgtoa@f
  2105  001528  C0F0  F0A0         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2106  00152C  C0F1  F0A1         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2107  001530  C0F2  F0A2         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2108  001534  C0F6  F0A3         	movff	vfpfcnvrt@c,efgtoa@c
  2109  001538  EC17  F004         	call	_efgtoa	;wreg free
  2110  00153C  C09D  F0E1         	movff	?_efgtoa,?_vfpfcnvrt
  2111  001540  C09E  F0E2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2112  001544  0012               	return	
  2113  001546                     l5003:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  2117  001546  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2118  00154A  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2119  00154E  CFDE FFF6          	movff	postinc2,tblptrl
  2120  001552  CFDD FFF7          	movff	postdec2,tblptrh
  2121  001556                     	if	0	;tblptru may be non-zero
  2122  001556                     	endif
  2123  001556                     	if	0	;tblptru may be non-zero
  2124  001556                     	endif
  2125  001556  0008               	tblrd		*
  2126  001558  50F5               	movf	tablat,w,c
  2127  00155A  0A25               	xorlw	37
  2128  00155C  A4D8               	btfss	status,2,c
  2129  00155E  D017               	goto	l5013
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  2133  001560  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2134  001564  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2135  001568  2ADE               	incf	postinc2,f,c
  2136  00156A  0E00               	movlw	0
  2137  00156C  22DD               	addwfc	postdec2,f,c
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  2141  00156E  0E00               	movlw	0
  2142  001570  6F63               	movwf	(fputc@c+1)& (0+255),b
  2143  001572  0E25               	movlw	37
  2144  001574  6F62               	movwf	fputc@c& (0+255),b
  2145  001576  C0E1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  2146  00157A  C0E2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2147  00157E  ECB0  F017         	call	_fputc	;wreg free
  2148  001582                     l5009:
  2149                           
  2150                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  2151  001582  0E00               	movlw	0
  2152  001584  0100               	movlb	0	; () banked
  2153  001586  6FE2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2154  001588  0E01               	movlw	1
  2155  00158A  6FE1               	movwf	?_vfpfcnvrt& (0+255),b
  2156  00158C  0012               	return	
  2157  00158E                     l5013:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  2161  00158E  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  001592  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  001596  2ADE               	incf	postinc2,f,c
  2164  001598  0E00               	movlw	0
  2165  00159A  22DD               	addwfc	postdec2,f,c
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  2169  00159C  0E00               	movlw	0
  2170  00159E  6FE2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2171  0015A0  0E00               	movlw	0
  2172  0015A2  6FE1               	movwf	?_vfpfcnvrt& (0+255),b
  2173  0015A4  0012               	return	
  2174  0015A6                     l5019:
  2175                           
  2176                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  2177  0015A6  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  0015AA  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  0015AE  CFDE FFF6          	movff	postinc2,tblptrl
  2180  0015B2  CFDD FFF7          	movff	postdec2,tblptrh
  2181  0015B6                     	if	0	;tblptru may be non-zero
  2182  0015B6                     	endif
  2183  0015B6                     	if	0	;tblptru may be non-zero
  2184  0015B6                     	endif
  2185  0015B6  0008               	tblrd		*
  2186  0015B8  50F5               	movf	tablat,w,c
  2187  0015BA  0100               	movlb	0	; () banked
  2188  0015BC  6F62               	movwf	fputc@c& (0+255),b
  2189  0015BE  6B63               	clrf	(fputc@c+1)& (0+255),b
  2190  0015C0  C0E1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  2191  0015C4  C0E2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2192  0015C8  ECB0  F017         	call	_fputc	;wreg free
  2193                           
  2194                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2195  0015CC  C0E3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2196  0015D0  C0E4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2197  0015D4  2ADE               	incf	postinc2,f,c
  2198  0015D6  0E00               	movlw	0
  2199  0015D8  22DD               	addwfc	postdec2,f,c
  2200  0015DA  D7D3               	goto	l5009
  2201  0015DC                     __end_of_vfpfcnvrt:
  2202                           	opt callstack 0
  2203                           
  2204 ;; *************** function _strncmp *****************
  2205 ;; Defined at:
  2206 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  2209 ;;		 -> vfpfcnvrt@ct(3), 
  2210 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  2211 ;;		 -> STR_12(3), 
  2212 ;;  n               2    4[BANK0 ] unsigned int 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  2215 ;;		 -> STR_12(3), 
  2216 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  2217 ;;		 -> vfpfcnvrt@ct(3), 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  2    0[BANK0 ] int 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2227 ;;      Params:         0       6       0       0       0       0       0       0       0
  2228 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2229 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2230 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2231 ;;Total ram usage:       11 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    5
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_vfpfcnvrt
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text4
  2242  002B76                     __ptext4:
  2243                           	opt callstack 0
  2244  002B76                     _strncmp:
  2245                           	opt callstack 22
  2246                           
  2247                           ;incstack = 0
  2248  002B76  C060  F067         	movff	strncmp@_l,strncmp@l
  2249  002B7A  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  2250  002B7E  C062  F069         	movff	strncmp@_r,strncmp@r
  2251  002B82  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  2252  002B86  0100               	movlb	0	; () banked
  2253  002B88  0764               	decf	strncmp@n& (0+255),f,b
  2254  002B8A  A0D8               	btfss	status,0,c
  2255  002B8C  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2256  002B8E  2964               	incf	strncmp@n& (0+255),w,b
  2257  002B90  E10F               	bnz	l4865
  2258  002B92  2965               	incf	(strncmp@n+1)& (0+255),w,b
  2259  002B94  A4D8               	btfss	status,2,c
  2260  002B96  D00C               	goto	l4865
  2261                           
  2262                           ; BSR set to: 0
  2263  002B98  0E00               	movlw	0
  2264  002B9A  6F61               	movwf	(?_strncmp+1)& (0+255),b
  2265  002B9C  0E00               	movlw	0
  2266  002B9E  6F60               	movwf	?_strncmp& (0+255),b
  2267  002BA0  0012               	return	
  2268  002BA2                     l4863:
  2269                           
  2270                           ; BSR set to: 0
  2271  002BA2  4B67               	infsnz	strncmp@l& (0+255),f,b
  2272  002BA4  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  2273  002BA6  4B69               	infsnz	strncmp@r& (0+255),f,b
  2274  002BA8  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  2275  002BAA  0764               	decf	strncmp@n& (0+255),f,b
  2276  002BAC  A0D8               	btfss	status,0,c
  2277  002BAE  0765               	decf	(strncmp@n+1)& (0+255),f,b
  2278  002BB0                     l4865:
  2279                           
  2280                           ; BSR set to: 0
  2281  002BB0  C067  FFD9         	movff	strncmp@l,fsr2l
  2282  002BB4  C068  FFDA         	movff	strncmp@l+1,fsr2h
  2283  002BB8  50DF               	movf	indf2,w,c
  2284  002BBA  B4D8               	btfsc	status,2,c
  2285  002BBC  D01C               	goto	u5220
  2286                           
  2287                           ; BSR set to: 0
  2288  002BBE  C069  FFF6         	movff	strncmp@r,tblptrl
  2289  002BC2  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  2290  002BC6                     	if	0	;tblptru may be non-zero
  2291  002BC6                     	endif
  2292  002BC6                     	if	0	;tblptru may be non-zero
  2293  002BC6                     	endif
  2294  002BC6  0008               	tblrd		*
  2295  002BC8  50F5               	movf	tablat,w,c
  2296  002BCA  0900               	iorlw	0
  2297  002BCC  B4D8               	btfsc	status,2,c
  2298  002BCE  D013               	goto	u5220
  2299                           
  2300                           ; BSR set to: 0
  2301  002BD0  5164               	movf	strncmp@n& (0+255),w,b
  2302  002BD2  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  2303  002BD4  B4D8               	btfsc	status,2,c
  2304  002BD6  D00F               	goto	u5220
  2305                           
  2306                           ; BSR set to: 0
  2307  002BD8  C067  FFD9         	movff	strncmp@l,fsr2l
  2308  002BDC  C068  FFDA         	movff	strncmp@l+1,fsr2h
  2309  002BE0  50DF               	movf	indf2,w,c
  2310  002BE2  6F66               	movwf	??_strncmp& (0+255),b
  2311  002BE4  C069  FFF6         	movff	strncmp@r,tblptrl
  2312  002BE8  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  2313  002BEC                     	if	0	;tblptru may be non-zero
  2314  002BEC                     	endif
  2315  002BEC                     	if	0	;tblptru may be non-zero
  2316  002BEC                     	endif
  2317  002BEC  0008               	tblrd		*
  2318  002BEE  50F5               	movf	tablat,w,c
  2319  002BF0  1966               	xorwf	??_strncmp& (0+255),w,b
  2320  002BF2  B4D8               	btfsc	status,2,c
  2321  002BF4  D7D6               	goto	l4863
  2322  002BF6                     u5220:
  2323                           
  2324                           ; BSR set to: 0
  2325  002BF6  C067  FFD9         	movff	strncmp@l,fsr2l
  2326  002BFA  C068  FFDA         	movff	strncmp@l+1,fsr2h
  2327  002BFE  50DF               	movf	indf2,w,c
  2328  002C00  6F66               	movwf	??_strncmp& (0+255),b
  2329  002C02  C069  FFF6         	movff	strncmp@r,tblptrl
  2330  002C06  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  2331  002C0A                     	if	0	;tblptru may be non-zero
  2332  002C0A                     	endif
  2333  002C0A                     	if	0	;tblptru may be non-zero
  2334  002C0A                     	endif
  2335  002C0A  0008               	tblrd		*
  2336  002C0C  50F5               	movf	tablat,w,c
  2337  002C0E  5D66               	subwf	??_strncmp& (0+255),w,b
  2338  002C10  6F60               	movwf	?_strncmp& (0+255),b
  2339  002C12  6B61               	clrf	(?_strncmp+1)& (0+255),b
  2340  002C14  A0D8               	btfss	status,0,c
  2341  002C16  0761               	decf	(?_strncmp+1)& (0+255),f,b
  2342                           
  2343                           ; BSR set to: 0
  2344  002C18  0012               	return		;funcret
  2345  002C1A                     __end_of_strncmp:
  2346                           	opt callstack 0
  2347                           
  2348 ;; *************** function _efgtoa *****************
  2349 ;; Defined at:
  2350 ;;		line 319 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  2353 ;;		 -> NULL(0), 
  2354 ;;  f               4   63[BANK0 ] PTR struct _IO_FILE
  2355 ;;  c               1   67[BANK0 ] unsigned char 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  u               4  125[BANK0 ] unsigned char 
  2358 ;;  g               4  117[BANK0 ] unsigned char 
  2359 ;;  l               4  111[BANK0 ] unsigned char 
  2360 ;;  h               4  107[BANK0 ] unsigned char 
  2361 ;;  ou              4   73[BANK0 ] unsigned char 
  2362 ;;  n               2  123[BANK0 ] int 
  2363 ;;  e               2  121[BANK0 ] int 
  2364 ;;  i               2  115[BANK0 ] int 
  2365 ;;  w               2  104[BANK0 ] int 
  2366 ;;  p               2  101[BANK0 ] int 
  2367 ;;  sign            2   99[BANK0 ] int 
  2368 ;;  d               2   97[BANK0 ] int 
  2369 ;;  ne              2   95[BANK0 ] int 
  2370 ;;  m               2   93[BANK0 ] int 
  2371 ;;  pp              2   91[BANK0 ] int 
  2372 ;;  t               2   89[BANK0 ] int 
  2373 ;;  mode            1  106[BANK0 ] unsigned char 
  2374 ;;  nmode           1  103[BANK0 ] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  2   61[BANK0 ] int 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2384 ;;      Params:         0       7       0       0       0       0       0       0       0
  2385 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2386 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2387 ;;      Totals:         0      68       0       0       0       0       0       0       0
  2388 ;;Total ram usage:       68 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:   10
  2391 ;; This function calls:
  2392 ;;		___awdiv
  2393 ;;		___awmod
  2394 ;;		___fladd
  2395 ;;		___fldiv
  2396 ;;		___fleq
  2397 ;;		___flge
  2398 ;;		___flmul
  2399 ;;		___flneg
  2400 ;;		___flsub
  2401 ;;		___fltol
  2402 ;;		___fpclassifyf
  2403 ;;		_floorf
  2404 ;;		_isupper
  2405 ;;		_pad
  2406 ;;		_strcpy
  2407 ;;		_tolower
  2408 ;; This function is called by:
  2409 ;;		_vfpfcnvrt
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text5
  2414  00082E                     __ptext5:
  2415                           	opt callstack 0
  2416  00082E                     _efgtoa:
  2417                           	opt callstack 17
  2418                           
  2419                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 320: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c:
      +                           321:     char mode, nmode;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dop
      +                          rnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 323:     long double g, h, l, ou, u;
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;incstack = 0
  2423  00082E  0E00               	movlw	0
  2424  000830  0100               	movlb	0	; () banked
  2425  000832  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  2426  000834  0E00               	movlw	0
  2427  000836  6FC3               	movwf	efgtoa@sign& (0+255),b
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2431  000838  C09F  F0D5         	movff	efgtoa@f,efgtoa@g
  2432  00083C  C0A0  F0D6         	movff	efgtoa@f+1,efgtoa@g+1
  2433  000840  C0A1  F0D7         	movff	efgtoa@f+2,efgtoa@g+2
  2434  000844  C0A2  F0D8         	movff	efgtoa@f+3,efgtoa@g+3
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0
      +                          ) {
  2438  000848  AFD8               	btfss	(efgtoa@g+3)& (0+255),7,b
  2439  00084A  D016               	goto	l4527
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 
      +                          1;
  2443  00084C  0E00               	movlw	0
  2444  00084E  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  2445  000850  0E01               	movlw	1
  2446  000852  6FC3               	movwf	efgtoa@sign& (0+255),b
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2450  000854  C0D5  F060         	movff	efgtoa@g,___flneg@f1
  2451  000858  C0D6  F061         	movff	efgtoa@g+1,___flneg@f1+1
  2452  00085C  C0D7  F062         	movff	efgtoa@g+2,___flneg@f1+2
  2453  000860  C0D8  F063         	movff	efgtoa@g+3,___flneg@f1+3
  2454  000864  EC2F  F01A         	call	___flneg	;wreg free
  2455  000868  C060  F0D5         	movff	?___flneg,efgtoa@g
  2456  00086C  C061  F0D6         	movff	?___flneg+1,efgtoa@g+1
  2457  000870  C062  F0D7         	movff	?___flneg+2,efgtoa@g+2
  2458  000874  C063  F0D8         	movff	?___flneg+3,efgtoa@g+3
  2459  000878                     l4527:
  2460                           
  2461                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2462  000878  0E00               	movlw	0
  2463  00087A  0100               	movlb	0	; () banked
  2464  00087C  6FDC               	movwf	(efgtoa@n+1)& (0+255),b
  2465  00087E  0E00               	movlw	0
  2466  000880  6FDB               	movwf	efgtoa@n& (0+255),b
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2470  000882  C04A  F0C8         	movff	_width,efgtoa@w
  2471  000886  C04B  F0C9         	movff	_width+1,efgtoa@w+1
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign ||
      +                           (flags & (1 << 2))) {
  2475  00088A  51C3               	movf	efgtoa@sign& (0+255),w,b
  2476  00088C  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2477  00088E  A4D8               	btfss	status,2,c
  2478  000890  D002               	goto	u4610
  2479                           
  2480                           ; BSR set to: 0
  2481  000892  A44E               	btfss	_flags,2,c
  2482  000894  D013               	goto	l4547
  2483  000896                     u4610:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n]
      +                           = sign ? '-' : '+';
  2487  000896  51C3               	movf	efgtoa@sign& (0+255),w,b
  2488  000898  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2489  00089A  A4D8               	btfss	status,2,c
  2490  00089C  D004               	goto	l4539
  2491                           
  2492                           ; BSR set to: 0
  2493  00089E  0E00               	movlw	0
  2494  0008A0  6FAE               	movwf	(_efgtoa$1991+1)& (0+255),b
  2495  0008A2  0E2B               	movlw	43
  2496  0008A4  D003               	goto	L1
  2497  0008A6                     l4539:
  2498                           
  2499                           ; BSR set to: 0
  2500  0008A6  0E00               	movlw	0
  2501  0008A8  6FAE               	movwf	(_efgtoa$1991+1)& (0+255),b
  2502  0008AA  0E2D               	movlw	45
  2503  0008AC                     L1:
  2504  0008AC  6FAD               	movwf	_efgtoa$1991& (0+255),b
  2505                           
  2506                           ; BSR set to: 0
  2507  0008AE  C0AD  F118         	movff	_efgtoa$1991,_dbuf
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2511  0008B2  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  2512  0008B4  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  2516  0008B6  07C8               	decf	efgtoa@w& (0+255),f,b
  2517  0008B8  A0D8               	btfss	status,0,c
  2518  0008BA  07C9               	decf	(efgtoa@w+1)& (0+255),f,b
  2519  0008BC                     l4547:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2523  0008BC  C0D5  F060         	movff	efgtoa@g,___fpclassifyf@x
  2524  0008C0  C0D6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2525  0008C4  C0D7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2526  0008C8  C0D8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2527  0008CC  ECF6  F014         	call	___fpclassifyf	;wreg free
  2528  0008D0  0100               	movlb	0	; () banked
  2529  0008D2  0560               	decf	?___fpclassifyf& (0+255),w,b
  2530  0008D4  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2531  0008D6  A4D8               	btfss	status,2,c
  2532  0008D8  D04B               	goto	l4565
  2533                           
  2534                           ; BSR set to: 0
  2535  0008DA  0EBF               	movlw	191
  2536  0008DC  6FA4               	movwf	??_efgtoa& (0+255),b
  2537  0008DE  0EFF               	movlw	255
  2538  0008E0  6FA5               	movwf	(??_efgtoa+1)& (0+255),b
  2539  0008E2  51A3               	movf	efgtoa@c& (0+255),w,b
  2540  0008E4  6FA6               	movwf	(??_efgtoa+2)& (0+255),b
  2541  0008E6  6BA7               	clrf	(??_efgtoa+3)& (0+255),b
  2542  0008E8  51A4               	movf	??_efgtoa& (0+255),w,b
  2543  0008EA  27A6               	addwf	(??_efgtoa+2)& (0+255),f,b
  2544  0008EC  51A5               	movf	(??_efgtoa+1)& (0+255),w,b
  2545  0008EE  23A7               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2546  0008F0  51A7               	movf	(??_efgtoa+3)& (0+255),w,b
  2547  0008F2  E106               	bnz	u4640
  2548  0008F4  0E1A               	movlw	26
  2549  0008F6  5DA6               	subwf	(??_efgtoa+2)& (0+255),w,b
  2550  0008F8  B0D8               	btfsc	status,0,c
  2551  0008FA  D002               	goto	u4640
  2552  0008FC  0E01               	movlw	1
  2553  0008FE  D001               	goto	u4650
  2554  000900                     u4640:
  2555  000900  0E00               	movlw	0
  2556  000902                     u4650:
  2557  000902  6FAF               	movwf	_efgtoa$1992& (0+255),b
  2558  000904  6BB0               	clrf	(_efgtoa$1992+1)& (0+255),b
  2559                           
  2560                           ; BSR set to: 0
  2561  000906  51AF               	movf	_efgtoa$1992& (0+255),w,b
  2562  000908  11B0               	iorwf	(_efgtoa$1992+1)& (0+255),w,b
  2563  00090A  B4D8               	btfsc	status,2,c
  2564  00090C  D00D               	goto	l4557
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             str
      +                          cpy(&dbuf[n], "INF");
  2568  00090E  0E18               	movlw	low _dbuf
  2569  000910  25DB               	addwf	efgtoa@n& (0+255),w,b
  2570  000912  6F60               	movwf	strcpy@dest& (0+255),b
  2571  000914  0E01               	movlw	high _dbuf
  2572  000916  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2573  000918  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2574  00091A  0E19               	movlw	low STR_2
  2575  00091C  6F62               	movwf	strcpy@src& (0+255),b
  2576  00091E  0E08               	movlw	high STR_2
  2577  000920  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2578  000922  EC7A  F018         	call	_strcpy	;wreg free
  2579                           
  2580                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else 
      +                          {
  2581  000926  D00C               	goto	l4559
  2582  000928                     l4557:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             str
      +                          cpy(&dbuf[n], "inf");
  2586  000928  0E18               	movlw	low _dbuf
  2587  00092A  25DB               	addwf	efgtoa@n& (0+255),w,b
  2588  00092C  6F60               	movwf	strcpy@dest& (0+255),b
  2589  00092E  0E01               	movlw	high _dbuf
  2590  000930  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2591  000932  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2592  000934  0E21               	movlw	low STR_3
  2593  000936  6F62               	movwf	strcpy@src& (0+255),b
  2594  000938  0E08               	movlw	high STR_3
  2595  00093A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2596  00093C  EC7A  F018         	call	_strcpy	;wreg free
  2597  000940                     l4559:
  2598                           
  2599                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2600  000940  0100               	movlb	0	; () banked
  2601  000942  0EFD               	movlw	253
  2602  000944  27C8               	addwf	efgtoa@w& (0+255),f,b
  2603  000946  0EFF               	movlw	255
  2604  000948  23C9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return 
      +                          pad(fp, &dbuf[0], w);
  2608  00094A  C09D  F072         	movff	efgtoa@fp,pad@fp
  2609  00094E  C09E  F073         	movff	efgtoa@fp+1,pad@fp+1
  2610  000952  0E18               	movlw	low _dbuf
  2611  000954  6F74               	movwf	pad@buf& (0+255),b
  2612  000956  0E01               	movlw	high _dbuf
  2613  000958  6F75               	movwf	(pad@buf+1)& (0+255),b
  2614  00095A  C0C8  F076         	movff	efgtoa@w,pad@p
  2615  00095E  C0C9  F077         	movff	efgtoa@w+1,pad@p+1
  2616  000962  EC5D  F016         	call	_pad	;wreg free
  2617  000966  C072  F09D         	movff	?_pad,?_efgtoa
  2618  00096A  C073  F09E         	movff	?_pad+1,?_efgtoa+1
  2619  00096E  0012               	return	
  2620  000970                     l4565:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2624  000970  C0D5  F060         	movff	efgtoa@g,___fpclassifyf@x
  2625  000974  C0D6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2626  000978  C0D7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2627  00097C  C0D8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2628  000980  ECF6  F014         	call	___fpclassifyf	;wreg free
  2629  000984  0100               	movlb	0	; () banked
  2630  000986  5160               	movf	?___fpclassifyf& (0+255),w,b
  2631  000988  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2632  00098A  A4D8               	btfss	status,2,c
  2633  00098C  D04B               	goto	l4583
  2634                           
  2635                           ; BSR set to: 0
  2636  00098E  0EBF               	movlw	191
  2637  000990  6FA4               	movwf	??_efgtoa& (0+255),b
  2638  000992  0EFF               	movlw	255
  2639  000994  6FA5               	movwf	(??_efgtoa+1)& (0+255),b
  2640  000996  51A3               	movf	efgtoa@c& (0+255),w,b
  2641  000998  6FA6               	movwf	(??_efgtoa+2)& (0+255),b
  2642  00099A  6BA7               	clrf	(??_efgtoa+3)& (0+255),b
  2643  00099C  51A4               	movf	??_efgtoa& (0+255),w,b
  2644  00099E  27A6               	addwf	(??_efgtoa+2)& (0+255),f,b
  2645  0009A0  51A5               	movf	(??_efgtoa+1)& (0+255),w,b
  2646  0009A2  23A7               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2647  0009A4  51A7               	movf	(??_efgtoa+3)& (0+255),w,b
  2648  0009A6  E106               	bnz	u4680
  2649  0009A8  0E1A               	movlw	26
  2650  0009AA  5DA6               	subwf	(??_efgtoa+2)& (0+255),w,b
  2651  0009AC  B0D8               	btfsc	status,0,c
  2652  0009AE  D002               	goto	u4680
  2653  0009B0  0E01               	movlw	1
  2654  0009B2  D001               	goto	u4690
  2655  0009B4                     u4680:
  2656  0009B4  0E00               	movlw	0
  2657  0009B6                     u4690:
  2658  0009B6  6FB1               	movwf	_efgtoa$1997& (0+255),b
  2659  0009B8  6BB2               	clrf	(_efgtoa$1997+1)& (0+255),b
  2660                           
  2661                           ; BSR set to: 0
  2662  0009BA  51B1               	movf	_efgtoa$1997& (0+255),w,b
  2663  0009BC  11B2               	iorwf	(_efgtoa$1997+1)& (0+255),w,b
  2664  0009BE  B4D8               	btfsc	status,2,c
  2665  0009C0  D00D               	goto	l4575
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             str
      +                          cpy(&dbuf[n], "NAN");
  2669  0009C2  0E18               	movlw	low _dbuf
  2670  0009C4  25DB               	addwf	efgtoa@n& (0+255),w,b
  2671  0009C6  6F60               	movwf	strcpy@dest& (0+255),b
  2672  0009C8  0E01               	movlw	high _dbuf
  2673  0009CA  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2674  0009CC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2675  0009CE  0E1D               	movlw	low STR_6
  2676  0009D0  6F62               	movwf	strcpy@src& (0+255),b
  2677  0009D2  0E08               	movlw	high STR_6
  2678  0009D4  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2679  0009D6  EC7A  F018         	call	_strcpy	;wreg free
  2680                           
  2681                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else 
      +                          {
  2682  0009DA  D00C               	goto	l4577
  2683  0009DC                     l4575:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             str
      +                          cpy(&dbuf[n], "nan");
  2687  0009DC  0E18               	movlw	low _dbuf
  2688  0009DE  25DB               	addwf	efgtoa@n& (0+255),w,b
  2689  0009E0  6F60               	movwf	strcpy@dest& (0+255),b
  2690  0009E2  0E01               	movlw	high _dbuf
  2691  0009E4  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2692  0009E6  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2693  0009E8  0E25               	movlw	low STR_7
  2694  0009EA  6F62               	movwf	strcpy@src& (0+255),b
  2695  0009EC  0E08               	movlw	high STR_7
  2696  0009EE  6F63               	movwf	(strcpy@src+1)& (0+255),b
  2697  0009F0  EC7A  F018         	call	_strcpy	;wreg free
  2698  0009F4                     l4577:
  2699                           
  2700                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 358:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2701  0009F4  0100               	movlb	0	; () banked
  2702  0009F6  0EFD               	movlw	253
  2703  0009F8  27C8               	addwf	efgtoa@w& (0+255),f,b
  2704  0009FA  0EFF               	movlw	255
  2705  0009FC  23C9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 359:         return 
      +                          pad(fp, &dbuf[0], w);
  2709  0009FE  C09D  F072         	movff	efgtoa@fp,pad@fp
  2710  000A02  C09E  F073         	movff	efgtoa@fp+1,pad@fp+1
  2711  000A06  0E18               	movlw	low _dbuf
  2712  000A08  6F74               	movwf	pad@buf& (0+255),b
  2713  000A0A  0E01               	movlw	high _dbuf
  2714  000A0C  6F75               	movwf	(pad@buf+1)& (0+255),b
  2715  000A0E  C0C8  F076         	movff	efgtoa@w,pad@p
  2716  000A12  C0C9  F077         	movff	efgtoa@w+1,pad@p+1
  2717  000A16  EC5D  F016         	call	_pad	;wreg free
  2718  000A1A  C072  F09D         	movff	?_pad,?_efgtoa
  2719  000A1E  C073  F09E         	movff	?_pad+1,?_efgtoa+1
  2720  000A22  0012               	return	
  2721  000A24                     l4583:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2725  000A24  0E00               	movlw	0
  2726  000A26  6FDD               	movwf	efgtoa@u& (0+255),b
  2727  000A28  0E00               	movlw	0
  2728  000A2A  6FDE               	movwf	(efgtoa@u+1)& (0+255),b
  2729  000A2C  0E80               	movlw	128
  2730  000A2E  6FDF               	movwf	(efgtoa@u+2)& (0+255),b
  2731  000A30  0E3F               	movlw	63
  2732  000A32  6FE0               	movwf	(efgtoa@u+3)& (0+255),b
  2733                           
  2734                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2735  000A34  0E00               	movlw	0
  2736  000A36  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  2737  000A38  0E00               	movlw	0
  2738  000A3A  6FD9               	movwf	efgtoa@e& (0+255),b
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 
      +                          0.0)) {
  2742  000A3C  C0D5  F060         	movff	efgtoa@g,___fleq@ff1
  2743  000A40  C0D6  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  2744  000A44  C0D7  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  2745  000A48  C0D8  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  2746  000A4C  0E00               	movlw	0
  2747  000A4E  6F64               	movwf	___fleq@ff2& (0+255),b
  2748  000A50  0E00               	movlw	0
  2749  000A52  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  2750  000A54  0E00               	movlw	0
  2751  000A56  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  2752  000A58  0E00               	movlw	0
  2753  000A5A  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  2754  000A5C  ECAB  F016         	call	___fleq	;wreg free
  2755  000A60  0100               	movlb	0	; () banked
  2756  000A62  A0D8               	btfss	status,0,c
  2757  000A64  D01E               	goto	l4593
  2758  000A66  D078               	goto	u4730
  2759  000A68                     l4589:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u =
      +                           u*10.0;
  2763  000A68  C0DD  F060         	movff	efgtoa@u,___flmul@b
  2764  000A6C  C0DE  F061         	movff	efgtoa@u+1,___flmul@b+1
  2765  000A70  C0DF  F062         	movff	efgtoa@u+2,___flmul@b+2
  2766  000A74  C0E0  F063         	movff	efgtoa@u+3,___flmul@b+3
  2767  000A78  0E00               	movlw	0
  2768  000A7A  6F64               	movwf	___flmul@a& (0+255),b
  2769  000A7C  0E00               	movlw	0
  2770  000A7E  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2771  000A80  0E20               	movlw	32
  2772  000A82  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2773  000A84  0E41               	movlw	65
  2774  000A86  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2775  000A88  ECEE  F00A         	call	___flmul	;wreg free
  2776  000A8C  C060  F0DD         	movff	?___flmul,efgtoa@u
  2777  000A90  C061  F0DE         	movff	?___flmul+1,efgtoa@u+1
  2778  000A94  C062  F0DF         	movff	?___flmul+2,efgtoa@u+2
  2779  000A98  C063  F0E0         	movff	?___flmul+3,efgtoa@u+3
  2780                           
  2781                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e
      +                          ;
  2782  000A9C  0100               	movlb	0	; () banked
  2783  000A9E  4BD9               	infsnz	efgtoa@e& (0+255),f,b
  2784  000AA0  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  2785  000AA2                     l4593:
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (
      +                          !(g < (u*10.0))) {
  2789  000AA2  C0D5  F079         	movff	efgtoa@g,___flge@ff1
  2790  000AA6  C0D6  F07A         	movff	efgtoa@g+1,___flge@ff1+1
  2791  000AAA  C0D7  F07B         	movff	efgtoa@g+2,___flge@ff1+2
  2792  000AAE  C0D8  F07C         	movff	efgtoa@g+3,___flge@ff1+3
  2793  000AB2  0E00               	movlw	0
  2794  000AB4  6F64               	movwf	___flmul@a& (0+255),b
  2795  000AB6  0E00               	movlw	0
  2796  000AB8  6F65               	movwf	(___flmul@a+1)& (0+255),b
  2797  000ABA  0E20               	movlw	32
  2798  000ABC  6F66               	movwf	(___flmul@a+2)& (0+255),b
  2799  000ABE  0E41               	movlw	65
  2800  000AC0  6F67               	movwf	(___flmul@a+3)& (0+255),b
  2801  000AC2  C0DD  F060         	movff	efgtoa@u,___flmul@b
  2802  000AC6  C0DE  F061         	movff	efgtoa@u+1,___flmul@b+1
  2803  000ACA  C0DF  F062         	movff	efgtoa@u+2,___flmul@b+2
  2804  000ACE  C0E0  F063         	movff	efgtoa@u+3,___flmul@b+3
  2805  000AD2  ECEE  F00A         	call	___flmul	;wreg free
  2806  000AD6  C060  F07D         	movff	?___flmul,___flge@ff2
  2807  000ADA  C061  F07E         	movff	?___flmul+1,___flge@ff2+1
  2808  000ADE  C062  F07F         	movff	?___flmul+2,___flge@ff2+2
  2809  000AE2  C063  F080         	movff	?___flmul+3,___flge@ff2+3
  2810  000AE6  EC8D  F014         	call	___flge	;wreg free
  2811  000AEA  0100               	movlb	0	; () banked
  2812  000AEC  A0D8               	btfss	status,0,c
  2813  000AEE  D01F               	goto	l4599
  2814  000AF0  D7BB               	goto	l4589
  2815  000AF2                     l4595:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u =
      +                           u/10.0;
  2819  000AF2  C0DD  F070         	movff	efgtoa@u,___fldiv@b
  2820  000AF6  C0DE  F071         	movff	efgtoa@u+1,___fldiv@b+1
  2821  000AFA  C0DF  F072         	movff	efgtoa@u+2,___fldiv@b+2
  2822  000AFE  C0E0  F073         	movff	efgtoa@u+3,___fldiv@b+3
  2823  000B02  0E00               	movlw	0
  2824  000B04  6F74               	movwf	___fldiv@a& (0+255),b
  2825  000B06  0E00               	movlw	0
  2826  000B08  6F75               	movwf	(___fldiv@a+1)& (0+255),b
  2827  000B0A  0E20               	movlw	32
  2828  000B0C  6F76               	movwf	(___fldiv@a+2)& (0+255),b
  2829  000B0E  0E41               	movlw	65
  2830  000B10  6F77               	movwf	(___fldiv@a+3)& (0+255),b
  2831  000B12  ECC8  F00F         	call	___fldiv	;wreg free
  2832  000B16  C070  F0DD         	movff	?___fldiv,efgtoa@u
  2833  000B1A  C071  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  2834  000B1E  C072  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  2835  000B22  C073  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  2836                           
  2837                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e
      +                          ;
  2838  000B26  0100               	movlb	0	; () banked
  2839  000B28  07D9               	decf	efgtoa@e& (0+255),f,b
  2840  000B2A  A0D8               	btfss	status,0,c
  2841  000B2C  07DA               	decf	(efgtoa@e+1)& (0+255),f,b
  2842  000B2E                     l4599:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (
      +                          g < u) {
  2846  000B2E  C0D5  F079         	movff	efgtoa@g,___flge@ff1
  2847  000B32  C0D6  F07A         	movff	efgtoa@g+1,___flge@ff1+1
  2848  000B36  C0D7  F07B         	movff	efgtoa@g+2,___flge@ff1+2
  2849  000B3A  C0D8  F07C         	movff	efgtoa@g+3,___flge@ff1+3
  2850  000B3E  C0DD  F07D         	movff	efgtoa@u,___flge@ff2
  2851  000B42  C0DE  F07E         	movff	efgtoa@u+1,___flge@ff2+1
  2852  000B46  C0DF  F07F         	movff	efgtoa@u+2,___flge@ff2+2
  2853  000B4A  C0E0  F080         	movff	efgtoa@u+3,___flge@ff2+3
  2854  000B4E  EC8D  F014         	call	___flge	;wreg free
  2855  000B52  0100               	movlb	0	; () banked
  2856  000B54  A0D8               	btfss	status,0,c
  2857  000B56  D7CD               	goto	l4595
  2858  000B58                     u4730:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolo
      +                          wer((int)c);
  2862  000B58  C0A3  F066         	movff	efgtoa@c,tolower@c
  2863  000B5C  6B67               	clrf	(tolower@c+1)& (0+255),b
  2864  000B5E  ECA4  F018         	call	_tolower	;wreg free
  2865  000B62  0100               	movlb	0	; () banked
  2866  000B64  5166               	movf	?_tolower& (0+255),w,b
  2867  000B66  6FCA               	movwf	efgtoa@mode& (0+255),b
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mod
      +                          e;
  2871  000B68  C0CA  F0C7         	movff	efgtoa@mode,efgtoa@nmode
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode ==
      +                           'g') {
  2875  000B6C  0E67               	movlw	103
  2876  000B6E  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  2877  000B70  A4D8               	btfss	status,2,c
  2878  000B72  D019               	goto	l4615
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0
      +                          ) {
  2882  000B74  504C               	movf	_prec,w,c
  2883  000B76  104D               	iorwf	_prec+1,w,c
  2884  000B78  A4D8               	btfss	status,2,c
  2885  000B7A  D004               	goto	l4611
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  2889  000B7C  0E00               	movlw	0
  2890  000B7E  6E4D               	movwf	_prec+1,c
  2891  000B80  0E01               	movlw	1
  2892  000B82  6E4C               	movwf	_prec,c
  2893  000B84                     l4611:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 
      +                          < prec) ? prec : 6;
  2897  000B84  BE4D               	btfsc	_prec+1,7,c
  2898  000B86  D005               	goto	u4760
  2899  000B88  504D               	movf	_prec+1,w,c
  2900  000B8A  E108               	bnz	l779
  2901  000B8C  044C               	decf	_prec,w,c
  2902  000B8E  B0D8               	btfsc	status,0,c
  2903  000B90  D005               	goto	l779
  2904  000B92                     u4760:
  2905                           
  2906                           ; BSR set to: 0
  2907  000B92  0E00               	movlw	0
  2908  000B94  6FC6               	movwf	(efgtoa@p+1)& (0+255),b
  2909  000B96  0E06               	movlw	6
  2910  000B98  6FC5               	movwf	efgtoa@p& (0+255),b
  2911  000B9A  D008               	goto	l4621
  2912  000B9C                     l779:
  2913                           
  2914                           ; BSR set to: 0
  2915  000B9C  C04C  F0C5         	movff	_prec,efgtoa@p
  2916  000BA0  C04D  F0C6         	movff	_prec+1,efgtoa@p+1
  2917  000BA4  D003               	goto	l4621
  2918  000BA6                     l4615:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (pr
      +                          ec < 0) ? 6 : prec;
  2922  000BA6  AE4D               	btfss	_prec+1,7,c
  2923  000BA8  D7F9               	goto	l779
  2924  000BAA  D7F3               	goto	u4760
  2925  000BAC                     l4621:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode ==
      +                           'g') {
  2929  000BAC  0E67               	movlw	103
  2930  000BAE  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  2931  000BB0  A4D8               	btfss	status,2,c
  2932  000BB2  D022               	goto	l4631
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  2936  000BB4  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  2937  000BB6  D006               	goto	u4790
  2938  000BB8  0EFC               	movlw	252
  2939  000BBA  5DD9               	subwf	efgtoa@e& (0+255),w,b
  2940  000BBC  0EFF               	movlw	255
  2941  000BBE  59DA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2942  000BC0  A0D8               	btfss	status,0,c
  2943  000BC2  D018               	goto	l4629
  2944  000BC4                     u4790:
  2945                           
  2946                           ; BSR set to: 0
  2947  000BC4  0EFF               	movlw	255
  2948  000BC6  6FA4               	movwf	??_efgtoa& (0+255),b
  2949  000BC8  0EFF               	movlw	255
  2950  000BCA  6FA5               	movwf	(??_efgtoa+1)& (0+255),b
  2951  000BCC  C0C5  F0A6         	movff	efgtoa@p,??_efgtoa+2
  2952  000BD0  C0C6  F0A7         	movff	efgtoa@p+1,??_efgtoa+3
  2953  000BD4  51A4               	movf	??_efgtoa& (0+255),w,b
  2954  000BD6  27A6               	addwf	(??_efgtoa+2)& (0+255),f,b
  2955  000BD8  51A5               	movf	(??_efgtoa+1)& (0+255),w,b
  2956  000BDA  23A7               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2957  000BDC  51D9               	movf	efgtoa@e& (0+255),w,b
  2958  000BDE  5DA6               	subwf	(??_efgtoa+2)& (0+255),w,b
  2959  000BE0  51A7               	movf	(??_efgtoa+3)& (0+255),w,b
  2960  000BE2  0A80               	xorlw	128
  2961  000BE4  6FA8               	movwf	(??_efgtoa+4)& (0+255),b
  2962  000BE6  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  2963  000BE8  0A80               	xorlw	128
  2964  000BEA  59A8               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2965  000BEC  A0D8               	btfss	status,0,c
  2966  000BEE  D002               	goto	l4629
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmo
      +                          de = 'f';
  2970  000BF0  0E66               	movlw	102
  2971  000BF2  D001               	goto	L2
  2972  000BF4                     l4629:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmo
      +                          de = 'e';
  2976  000BF4  0E65               	movlw	101
  2977  000BF6                     L2:
  2978  000BF6  6FC7               	movwf	efgtoa@nmode& (0+255),b
  2979  000BF8                     l4631:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  2983  000BF8  C0C5  F0BD         	movff	efgtoa@p,efgtoa@m
  2984  000BFC  C0C6  F0BE         	movff	efgtoa@p+1,efgtoa@m+1
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  2988  000C00  0E67               	movlw	103
  2989  000C02  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  2990  000C04  A4D8               	btfss	status,2,c
  2991  000C06  D005               	goto	u4830
  2992                           
  2993                           ; BSR set to: 0
  2994  000C08  0E66               	movlw	102
  2995  000C0A  19C7               	xorwf	efgtoa@nmode& (0+255),w,b
  2996  000C0C  B4D8               	btfsc	status,2,c
  2997                           
  2998                           ; BSR set to: 0
  2999  000C0E  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3000  000C10  D002               	goto	l4641
  3001  000C12                     u4830:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3005  000C12  4BBD               	infsnz	efgtoa@m& (0+255),f,b
  3006  000C14  2BBE               	incf	(efgtoa@m+1)& (0+255),f,b
  3007  000C16                     l4641:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode =
      +                          = 'f') {
  3011  000C16  0E66               	movlw	102
  3012  000C18  19C7               	xorwf	efgtoa@nmode& (0+255),w,b
  3013  000C1A  A4D8               	btfss	status,2,c
  3014  000C1C  D016               	goto	l4651
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e <
      +                           0) {
  3018  000C1E  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3019  000C20  D00C               	goto	l4647
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u =
      +                           1.0;
  3023  000C22  0E00               	movlw	0
  3024  000C24  6FDD               	movwf	efgtoa@u& (0+255),b
  3025  000C26  0E00               	movlw	0
  3026  000C28  6FDE               	movwf	(efgtoa@u+1)& (0+255),b
  3027  000C2A  0E80               	movlw	128
  3028  000C2C  6FDF               	movwf	(efgtoa@u+2)& (0+255),b
  3029  000C2E  0E3F               	movlw	63
  3030  000C30  6FE0               	movwf	(efgtoa@u+3)& (0+255),b
  3031                           
  3032                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e =
      +                           0;
  3033  000C32  0E00               	movlw	0
  3034  000C34  6FDA               	movwf	(efgtoa@e+1)& (0+255),b
  3035  000C36  0E00               	movlw	0
  3036  000C38  6FD9               	movwf	efgtoa@e& (0+255),b
  3037  000C3A                     l4647:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(m
      +                          ode == 'g')) {
  3041  000C3A  0E67               	movlw	103
  3042  000C3C  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  3043  000C3E  B4D8               	btfsc	status,2,c
  3044  000C40  D004               	goto	l4651
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m +
      +                          = e;
  3048  000C42  51D9               	movf	efgtoa@e& (0+255),w,b
  3049  000C44  27BD               	addwf	efgtoa@m& (0+255),f,b
  3050  000C46  51DA               	movf	(efgtoa@e+1)& (0+255),w,b
  3051  000C48  23BE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3052  000C4A                     l4651:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3056  000C4A  0E00               	movlw	0
  3057  000C4C  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  3058  000C4E  0E00               	movlw	0
  3059  000C50  6FD3               	movwf	efgtoa@i& (0+255),b
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3063  000C52  C0D5  F0CB         	movff	efgtoa@g,efgtoa@h
  3064  000C56  C0D6  F0CC         	movff	efgtoa@g+1,efgtoa@h+1
  3065  000C5A  C0D7  F0CD         	movff	efgtoa@g+2,efgtoa@h+2
  3066  000C5E  C0D8  F0CE         	movff	efgtoa@g+3,efgtoa@h+3
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3070  000C62  C0DD  F0A9         	movff	efgtoa@u,efgtoa@ou
  3071  000C66  C0DE  F0AA         	movff	efgtoa@u+1,efgtoa@ou+1
  3072  000C6A  C0DF  F0AB         	movff	efgtoa@u+2,efgtoa@ou+2
  3073  000C6E  C0E0  F0AC         	movff	efgtoa@u+3,efgtoa@ou+3
  3074                           
  3075                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  3076  000C72  D07C               	goto	l4665
  3077  000C74                     l4657:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = flo
      +                          orf(h/u);
  3081  000C74  C0CB  F070         	movff	efgtoa@h,___fldiv@b
  3082  000C78  C0CC  F071         	movff	efgtoa@h+1,___fldiv@b+1
  3083  000C7C  C0CD  F072         	movff	efgtoa@h+2,___fldiv@b+2
  3084  000C80  C0CE  F073         	movff	efgtoa@h+3,___fldiv@b+3
  3085  000C84  C0DD  F074         	movff	efgtoa@u,___fldiv@a
  3086  000C88  C0DE  F075         	movff	efgtoa@u+1,___fldiv@a+1
  3087  000C8C  C0DF  F076         	movff	efgtoa@u+2,___fldiv@a+2
  3088  000C90  C0E0  F077         	movff	efgtoa@u+3,___fldiv@a+3
  3089  000C94  ECC8  F00F         	call	___fldiv	;wreg free
  3090  000C98  C070  F089         	movff	?___fldiv,floorf@x
  3091  000C9C  C071  F08A         	movff	?___fldiv+1,floorf@x+1
  3092  000CA0  C072  F08B         	movff	?___fldiv+2,floorf@x+2
  3093  000CA4  C073  F08C         	movff	?___fldiv+3,floorf@x+3
  3094  000CA8  ECFC  F011         	call	_floorf	;wreg free
  3095  000CAC  C089  F0CF         	movff	?_floorf,efgtoa@l
  3096  000CB0  C08A  F0D0         	movff	?_floorf+1,efgtoa@l+1
  3097  000CB4  C08B  F0D1         	movff	?_floorf+2,efgtoa@l+2
  3098  000CB8  C08C  F0D2         	movff	?_floorf+3,efgtoa@l+3
  3099                           
  3100                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (in
      +                          t)l;
  3101  000CBC  C0CF  F060         	movff	efgtoa@l,___fltol@f1
  3102  000CC0  C0D0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3103  000CC4  C0D1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3104  000CC8  C0D2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3105  000CCC  EC5D  F015         	call	___fltol	;wreg free
  3106  000CD0  C060  F0C1         	movff	?___fltol,efgtoa@d
  3107  000CD4  C061  F0C2         	movff	?___fltol+1,efgtoa@d+1
  3108                           
  3109                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*
      +                          u;
  3110  000CD8  C0CB  F079         	movff	efgtoa@h,___flsub@b
  3111  000CDC  C0CC  F07A         	movff	efgtoa@h+1,___flsub@b+1
  3112  000CE0  C0CD  F07B         	movff	efgtoa@h+2,___flsub@b+2
  3113  000CE4  C0CE  F07C         	movff	efgtoa@h+3,___flsub@b+3
  3114  000CE8  C0DD  F064         	movff	efgtoa@u,___flmul@a
  3115  000CEC  C0DE  F065         	movff	efgtoa@u+1,___flmul@a+1
  3116  000CF0  C0DF  F066         	movff	efgtoa@u+2,___flmul@a+2
  3117  000CF4  C0E0  F067         	movff	efgtoa@u+3,___flmul@a+3
  3118  000CF8  C0CF  F060         	movff	efgtoa@l,___flmul@b
  3119  000CFC  C0D0  F061         	movff	efgtoa@l+1,___flmul@b+1
  3120  000D00  C0D1  F062         	movff	efgtoa@l+2,___flmul@b+2
  3121  000D04  C0D2  F063         	movff	efgtoa@l+3,___flmul@b+3
  3122  000D08  ECEE  F00A         	call	___flmul	;wreg free
  3123  000D0C  C060  F07D         	movff	?___flmul,___flsub@a
  3124  000D10  C061  F07E         	movff	?___flmul+1,___flsub@a+1
  3125  000D14  C062  F07F         	movff	?___flmul+2,___flsub@a+2
  3126  000D18  C063  F080         	movff	?___flmul+3,___flsub@a+3
  3127  000D1C  ECEF  F018         	call	___flsub	;wreg free
  3128  000D20  C079  F0CB         	movff	?___flsub,efgtoa@h
  3129  000D24  C07A  F0CC         	movff	?___flsub+1,efgtoa@h+1
  3130  000D28  C07B  F0CD         	movff	?___flsub+2,efgtoa@h+2
  3131  000D2C  C07C  F0CE         	movff	?___flsub+3,efgtoa@h+3
  3132                           
  3133                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/1
      +                          0.0;
  3134  000D30  C0DD  F070         	movff	efgtoa@u,___fldiv@b
  3135  000D34  C0DE  F071         	movff	efgtoa@u+1,___fldiv@b+1
  3136  000D38  C0DF  F072         	movff	efgtoa@u+2,___fldiv@b+2
  3137  000D3C  C0E0  F073         	movff	efgtoa@u+3,___fldiv@b+3
  3138  000D40  0E00               	movlw	0
  3139  000D42  0100               	movlb	0	; () banked
  3140  000D44  6F74               	movwf	___fldiv@a& (0+255),b
  3141  000D46  0E00               	movlw	0
  3142  000D48  6F75               	movwf	(___fldiv@a+1)& (0+255),b
  3143  000D4A  0E20               	movlw	32
  3144  000D4C  6F76               	movwf	(___fldiv@a+2)& (0+255),b
  3145  000D4E  0E41               	movlw	65
  3146  000D50  6F77               	movwf	(___fldiv@a+3)& (0+255),b
  3147  000D52  ECC8  F00F         	call	___fldiv	;wreg free
  3148  000D56  C070  F0DD         	movff	?___fldiv,efgtoa@u
  3149  000D5A  C071  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  3150  000D5E  C072  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  3151  000D62  C073  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  3152                           
  3153                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3154  000D66  0100               	movlb	0	; () banked
  3155  000D68  4BD3               	infsnz	efgtoa@i& (0+255),f,b
  3156  000D6A  2BD4               	incf	(efgtoa@i+1)& (0+255),f,b
  3157  000D6C                     l4665:
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  3161  000D6C  51BD               	movf	efgtoa@m& (0+255),w,b
  3162  000D6E  5DD3               	subwf	efgtoa@i& (0+255),w,b
  3163  000D70  51D4               	movf	(efgtoa@i+1)& (0+255),w,b
  3164  000D72  0A80               	xorlw	128
  3165  000D74  6FA4               	movwf	??_efgtoa& (0+255),b
  3166  000D76  51BE               	movf	(efgtoa@m+1)& (0+255),w,b
  3167  000D78  0A80               	xorlw	128
  3168  000D7A  59A4               	subwfb	??_efgtoa& (0+255),w,b
  3169  000D7C  A0D8               	btfss	status,0,c
  3170  000D7E  D77A               	goto	l4657
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3174  000D80  C0DD  F060         	movff	efgtoa@u,___flmul@b
  3175  000D84  C0DE  F061         	movff	efgtoa@u+1,___flmul@b+1
  3176  000D88  C0DF  F062         	movff	efgtoa@u+2,___flmul@b+2
  3177  000D8C  C0E0  F063         	movff	efgtoa@u+3,___flmul@b+3
  3178  000D90  0E00               	movlw	0
  3179  000D92  6F64               	movwf	___flmul@a& (0+255),b
  3180  000D94  0E00               	movlw	0
  3181  000D96  6F65               	movwf	(___flmul@a+1)& (0+255),b
  3182  000D98  0EA0               	movlw	160
  3183  000D9A  6F66               	movwf	(___flmul@a+2)& (0+255),b
  3184  000D9C  0E40               	movlw	64
  3185  000D9E  6F67               	movwf	(___flmul@a+3)& (0+255),b
  3186  000DA0  ECEE  F00A         	call	___flmul	;wreg free
  3187  000DA4  C060  F0CF         	movff	?___flmul,efgtoa@l
  3188  000DA8  C061  F0D0         	movff	?___flmul+1,efgtoa@l+1
  3189  000DAC  C062  F0D1         	movff	?___flmul+2,efgtoa@l+2
  3190  000DB0  C063  F0D2         	movff	?___flmul+3,efgtoa@l+3
  3191                           
  3192                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) 
      +                          {
  3193  000DB4  C0CB  F079         	movff	efgtoa@h,___flge@ff1
  3194  000DB8  C0CC  F07A         	movff	efgtoa@h+1,___flge@ff1+1
  3195  000DBC  C0CD  F07B         	movff	efgtoa@h+2,___flge@ff1+2
  3196  000DC0  C0CE  F07C         	movff	efgtoa@h+3,___flge@ff1+3
  3197  000DC4  C0CF  F07D         	movff	efgtoa@l,___flge@ff2
  3198  000DC8  C0D0  F07E         	movff	efgtoa@l+1,___flge@ff2+1
  3199  000DCC  C0D1  F07F         	movff	efgtoa@l+2,___flge@ff2+2
  3200  000DD0  C0D2  F080         	movff	efgtoa@l+3,___flge@ff2+3
  3201  000DD4  EC8D  F014         	call	___flge	;wreg free
  3202  000DD8  0100               	movlb	0	; () banked
  3203  000DDA  A0D8               	btfss	status,0,c
  3204  000DDC  D016               	goto	u4900
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h 
      +                          == l) && !(d % 2)) {
  3208                           
  3209                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 430:     } else {
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0
      +                          ;
  3213  000DDE  C0CB  F060         	movff	efgtoa@h,___fleq@ff1
  3214  000DE2  C0CC  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  3215  000DE6  C0CD  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  3216  000DEA  C0CE  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  3217  000DEE  C0CF  F064         	movff	efgtoa@l,___fleq@ff2
  3218  000DF2  C0D0  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  3219  000DF6  C0D1  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  3220  000DFA  C0D2  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  3221  000DFE  ECAB  F016         	call	___fleq	;wreg free
  3222  000E02  0100               	movlb	0	; () banked
  3223  000E04  B0D8               	btfsc	status,0,c
  3224                           
  3225                           ; BSR set to: 0
  3226  000E06  B1C1               	btfsc	efgtoa@d& (0+255),0,b
  3227  000E08  D008               	goto	l4679
  3228  000E0A                     u4900:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l =
      +                           0.0;
  3232  000E0A  0E00               	movlw	0
  3233  000E0C  6FCF               	movwf	efgtoa@l& (0+255),b
  3234  000E0E  0E00               	movlw	0
  3235  000E10  6FD0               	movwf	(efgtoa@l+1)& (0+255),b
  3236  000E12  0E00               	movlw	0
  3237  000E14  6FD1               	movwf	(efgtoa@l+2)& (0+255),b
  3238  000E16  0E00               	movlw	0
  3239  000E18  6FD2               	movwf	(efgtoa@l+3)& (0+255),b
  3240  000E1A                     l4679:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3244  000E1A  C0D5  F060         	movff	efgtoa@g,___fladd@b
  3245  000E1E  C0D6  F061         	movff	efgtoa@g+1,___fladd@b+1
  3246  000E22  C0D7  F062         	movff	efgtoa@g+2,___fladd@b+2
  3247  000E26  C0D8  F063         	movff	efgtoa@g+3,___fladd@b+3
  3248  000E2A  C0CF  F064         	movff	efgtoa@l,___fladd@a
  3249  000E2E  C0D0  F065         	movff	efgtoa@l+1,___fladd@a+1
  3250  000E32  C0D1  F066         	movff	efgtoa@l+2,___fladd@a+2
  3251  000E36  C0D2  F067         	movff	efgtoa@l+3,___fladd@a+3
  3252  000E3A  EC41  F00E         	call	___fladd	;wreg free
  3253  000E3E  C060  F0CB         	movff	?___fladd,efgtoa@h
  3254  000E42  C061  F0CC         	movff	?___fladd+1,efgtoa@h+1
  3255  000E46  C062  F0CD         	movff	?___fladd+2,efgtoa@h+2
  3256  000E4A  C063  F0CE         	movff	?___fladd+3,efgtoa@h+3
  3257                           
  3258                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  3259  000E4E  C0A9  F0DD         	movff	efgtoa@ou,efgtoa@u
  3260  000E52  C0AA  F0DE         	movff	efgtoa@ou+1,efgtoa@u+1
  3261  000E56  C0AB  F0DF         	movff	efgtoa@ou+2,efgtoa@u+2
  3262  000E5A  C0AC  F0E0         	movff	efgtoa@ou+3,efgtoa@u+3
  3263                           
  3264                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode
      +                           == 'e') ? 0 : e;
  3265  000E5E  0E65               	movlw	101
  3266  000E60  0100               	movlb	0	; () banked
  3267  000E62  19C7               	xorwf	efgtoa@nmode& (0+255),w,b
  3268  000E64  B4D8               	btfsc	status,2,c
  3269  000E66  D005               	goto	l4687
  3270                           
  3271                           ; BSR set to: 0
  3272  000E68  C0D9  F0BF         	movff	efgtoa@e,efgtoa@ne
  3273  000E6C  C0DA  F0C0         	movff	efgtoa@e+1,efgtoa@ne+1
  3274  000E70  D004               	goto	l805
  3275  000E72                     l4687:
  3276                           
  3277                           ; BSR set to: 0
  3278  000E72  0E00               	movlw	0
  3279  000E74  6FC0               	movwf	(efgtoa@ne+1)& (0+255),b
  3280  000E76  0E00               	movlw	0
  3281  000E78  6FBF               	movwf	efgtoa@ne& (0+255),b
  3282  000E7A                     l805:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3286  000E7A  0E00               	movlw	0
  3287  000E7C  6FBC               	movwf	(efgtoa@pp+1)& (0+255),b
  3288  000E7E  0E00               	movlw	0
  3289  000E80  6FBB               	movwf	efgtoa@pp& (0+255),b
  3290                           
  3291                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3292  000E82  0E00               	movlw	0
  3293  000E84  6FBA               	movwf	(efgtoa@t+1)& (0+255),b
  3294  000E86  0E00               	movlw	0
  3295  000E88  6FB9               	movwf	efgtoa@t& (0+255),b
  3296                           
  3297                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3298  000E8A  0E00               	movlw	0
  3299  000E8C  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  3300  000E8E  0E00               	movlw	0
  3301  000E90  6FD3               	movwf	efgtoa@i& (0+255),b
  3302                           
  3303                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  3304  000E92  D0C8               	goto	l4737
  3305  000E94                     l4689:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = flo
      +                          orf(h/u);
  3309  000E94  C0CB  F070         	movff	efgtoa@h,___fldiv@b
  3310  000E98  C0CC  F071         	movff	efgtoa@h+1,___fldiv@b+1
  3311  000E9C  C0CD  F072         	movff	efgtoa@h+2,___fldiv@b+2
  3312  000EA0  C0CE  F073         	movff	efgtoa@h+3,___fldiv@b+3
  3313  000EA4  C0DD  F074         	movff	efgtoa@u,___fldiv@a
  3314  000EA8  C0DE  F075         	movff	efgtoa@u+1,___fldiv@a+1
  3315  000EAC  C0DF  F076         	movff	efgtoa@u+2,___fldiv@a+2
  3316  000EB0  C0E0  F077         	movff	efgtoa@u+3,___fldiv@a+3
  3317  000EB4  ECC8  F00F         	call	___fldiv	;wreg free
  3318  000EB8  C070  F089         	movff	?___fldiv,floorf@x
  3319  000EBC  C071  F08A         	movff	?___fldiv+1,floorf@x+1
  3320  000EC0  C072  F08B         	movff	?___fldiv+2,floorf@x+2
  3321  000EC4  C073  F08C         	movff	?___fldiv+3,floorf@x+3
  3322  000EC8  ECFC  F011         	call	_floorf	;wreg free
  3323  000ECC  C089  F0CF         	movff	?_floorf,efgtoa@l
  3324  000ED0  C08A  F0D0         	movff	?_floorf+1,efgtoa@l+1
  3325  000ED4  C08B  F0D1         	movff	?_floorf+2,efgtoa@l+2
  3326  000ED8  C08C  F0D2         	movff	?_floorf+3,efgtoa@l+3
  3327                           
  3328                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (in
      +                          t)l;
  3329  000EDC  C0CF  F060         	movff	efgtoa@l,___fltol@f1
  3330  000EE0  C0D0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3331  000EE4  C0D1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3332  000EE8  C0D2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3333  000EEC  EC5D  F015         	call	___fltol	;wreg free
  3334  000EF0  C060  F0C1         	movff	?___fltol,efgtoa@d
  3335  000EF4  C061  F0C2         	movff	?___fltol+1,efgtoa@d+1
  3336                           
  3337                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3338  000EF8  B84E               	btfsc	_flags,4,c
  3339  000EFA  D00D               	goto	l4701
  3340  000EFC  0100               	movlb	0	; () banked
  3341  000EFE  51C1               	movf	efgtoa@d& (0+255),w,b
  3342  000F00  11C2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3343  000F02  A4D8               	btfss	status,2,c
  3344  000F04  D008               	goto	l4701
  3345                           
  3346                           ; BSR set to: 0
  3347  000F06  0E67               	movlw	103
  3348  000F08  19CA               	xorwf	efgtoa@mode& (0+255),w,b
  3349  000F0A  B4D8               	btfsc	status,2,c
  3350                           
  3351                           ; BSR set to: 0
  3352  000F0C  AFC0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3353  000F0E  D003               	goto	l4701
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t
      +                          ;
  3357  000F10  4BB9               	infsnz	efgtoa@t& (0+255),f,b
  3358  000F12  2BBA               	incf	(efgtoa@t+1)& (0+255),f,b
  3359                           
  3360                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else 
      +                          {
  3361  000F14  D03A               	goto	l4729
  3362  000F16                     l4701:
  3363                           
  3364                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if 
      +                          (!pp && (ne < 0)) {
  3365  000F16  0100               	movlb	0	; () banked
  3366  000F18  51BB               	movf	efgtoa@pp& (0+255),w,b
  3367  000F1A  11BC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3368  000F1C  B4D8               	btfsc	status,2,c
  3369                           
  3370                           ; BSR set to: 0
  3371  000F1E  AFC0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3372  000F20  D022               	goto	l4721
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                
      +                           dbuf[n++] = '.';
  3376  000F22  0E18               	movlw	low _dbuf
  3377  000F24  25DB               	addwf	efgtoa@n& (0+255),w,b
  3378  000F26  6ED9               	movwf	fsr2l,c
  3379  000F28  0E01               	movlw	high _dbuf
  3380  000F2A  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3381  000F2C  6EDA               	movwf	fsr2h,c
  3382  000F2E  0E2E               	movlw	46
  3383  000F30  6EDF               	movwf	indf2,c
  3384                           
  3385                           ; BSR set to: 0
  3386  000F32  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  3387  000F34  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                
      +                           --w;
  3391  000F36  07C8               	decf	efgtoa@w& (0+255),f,b
  3392  000F38  A0D8               	btfss	status,0,c
  3393  000F3A  07C9               	decf	(efgtoa@w+1)& (0+255),f,b
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                
      +                           pp = 1;
  3397  000F3C  0E00               	movlw	0
  3398  000F3E  6FBC               	movwf	(efgtoa@pp+1)& (0+255),b
  3399  000F40  0E01               	movlw	1
  3400  000F42  6FBB               	movwf	efgtoa@pp& (0+255),b
  3401  000F44  D010               	goto	l4721
  3402  000F46                     l4713:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                
      +                           dbuf[n++] = '0';
  3406  000F46  0E18               	movlw	low _dbuf
  3407  000F48  25DB               	addwf	efgtoa@n& (0+255),w,b
  3408  000F4A  6ED9               	movwf	fsr2l,c
  3409  000F4C  0E01               	movlw	high _dbuf
  3410  000F4E  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3411  000F50  6EDA               	movwf	fsr2h,c
  3412  000F52  0E30               	movlw	48
  3413  000F54  6EDF               	movwf	indf2,c
  3414                           
  3415                           ; BSR set to: 0
  3416  000F56  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  3417  000F58  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                
      +                           --w;
  3421  000F5A  07C8               	decf	efgtoa@w& (0+255),f,b
  3422  000F5C  A0D8               	btfss	status,0,c
  3423  000F5E  07C9               	decf	(efgtoa@w+1)& (0+255),f,b
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                
      +                           --t;
  3427  000F60  07B9               	decf	efgtoa@t& (0+255),f,b
  3428  000F62  A0D8               	btfss	status,0,c
  3429  000F64  07BA               	decf	(efgtoa@t+1)& (0+255),f,b
  3430  000F66                     l4721:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             whi
      +                          le (t) {
  3434  000F66  51B9               	movf	efgtoa@t& (0+255),w,b
  3435  000F68  11BA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3436  000F6A  A4D8               	btfss	status,2,c
  3437  000F6C  D7EC               	goto	l4713
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbu
      +                          f[n++] = '0' + d;
  3441  000F6E  0E18               	movlw	low _dbuf
  3442  000F70  25DB               	addwf	efgtoa@n& (0+255),w,b
  3443  000F72  6ED9               	movwf	fsr2l,c
  3444  000F74  0E01               	movlw	high _dbuf
  3445  000F76  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3446  000F78  6EDA               	movwf	fsr2h,c
  3447  000F7A  51C1               	movf	efgtoa@d& (0+255),w,b
  3448  000F7C  0F30               	addlw	48
  3449  000F7E  6EDF               	movwf	indf2,c
  3450                           
  3451                           ; BSR set to: 0
  3452  000F80  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  3453  000F82  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w
      +                          ;
  3457  000F84  07C8               	decf	efgtoa@w& (0+255),f,b
  3458  000F86  A0D8               	btfss	status,0,c
  3459  000F88  07C9               	decf	(efgtoa@w+1)& (0+255),f,b
  3460  000F8A                     l4729:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*
      +                          u;
  3464  000F8A  C0CB  F079         	movff	efgtoa@h,___flsub@b
  3465  000F8E  C0CC  F07A         	movff	efgtoa@h+1,___flsub@b+1
  3466  000F92  C0CD  F07B         	movff	efgtoa@h+2,___flsub@b+2
  3467  000F96  C0CE  F07C         	movff	efgtoa@h+3,___flsub@b+3
  3468  000F9A  C0DD  F064         	movff	efgtoa@u,___flmul@a
  3469  000F9E  C0DE  F065         	movff	efgtoa@u+1,___flmul@a+1
  3470  000FA2  C0DF  F066         	movff	efgtoa@u+2,___flmul@a+2
  3471  000FA6  C0E0  F067         	movff	efgtoa@u+3,___flmul@a+3
  3472  000FAA  C0CF  F060         	movff	efgtoa@l,___flmul@b
  3473  000FAE  C0D0  F061         	movff	efgtoa@l+1,___flmul@b+1
  3474  000FB2  C0D1  F062         	movff	efgtoa@l+2,___flmul@b+2
  3475  000FB6  C0D2  F063         	movff	efgtoa@l+3,___flmul@b+3
  3476  000FBA  ECEE  F00A         	call	___flmul	;wreg free
  3477  000FBE  C060  F07D         	movff	?___flmul,___flsub@a
  3478  000FC2  C061  F07E         	movff	?___flmul+1,___flsub@a+1
  3479  000FC6  C062  F07F         	movff	?___flmul+2,___flsub@a+2
  3480  000FCA  C063  F080         	movff	?___flmul+3,___flsub@a+3
  3481  000FCE  ECEF  F018         	call	___flsub	;wreg free
  3482  000FD2  C079  F0CB         	movff	?___flsub,efgtoa@h
  3483  000FD6  C07A  F0CC         	movff	?___flsub+1,efgtoa@h+1
  3484  000FDA  C07B  F0CD         	movff	?___flsub+2,efgtoa@h+2
  3485  000FDE  C07C  F0CE         	movff	?___flsub+3,efgtoa@h+3
  3486                           
  3487                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/1
      +                          0.0;
  3488  000FE2  C0DD  F070         	movff	efgtoa@u,___fldiv@b
  3489  000FE6  C0DE  F071         	movff	efgtoa@u+1,___fldiv@b+1
  3490  000FEA  C0DF  F072         	movff	efgtoa@u+2,___fldiv@b+2
  3491  000FEE  C0E0  F073         	movff	efgtoa@u+3,___fldiv@b+3
  3492  000FF2  0E00               	movlw	0
  3493  000FF4  0100               	movlb	0	; () banked
  3494  000FF6  6F74               	movwf	___fldiv@a& (0+255),b
  3495  000FF8  0E00               	movlw	0
  3496  000FFA  6F75               	movwf	(___fldiv@a+1)& (0+255),b
  3497  000FFC  0E20               	movlw	32
  3498  000FFE  6F76               	movwf	(___fldiv@a+2)& (0+255),b
  3499  001000  0E41               	movlw	65
  3500  001002  6F77               	movwf	(___fldiv@a+3)& (0+255),b
  3501  001004  ECC8  F00F         	call	___fldiv	;wreg free
  3502  001008  C070  F0DD         	movff	?___fldiv,efgtoa@u
  3503  00100C  C071  F0DE         	movff	?___fldiv+1,efgtoa@u+1
  3504  001010  C072  F0DF         	movff	?___fldiv+2,efgtoa@u+2
  3505  001014  C073  F0E0         	movff	?___fldiv+3,efgtoa@u+3
  3506                           
  3507                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3508  001018  0100               	movlb	0	; () banked
  3509  00101A  07BF               	decf	efgtoa@ne& (0+255),f,b
  3510  00101C  A0D8               	btfss	status,0,c
  3511  00101E  07C0               	decf	(efgtoa@ne+1)& (0+255),f,b
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3515  001020  4BD3               	infsnz	efgtoa@i& (0+255),f,b
  3516  001022  2BD4               	incf	(efgtoa@i+1)& (0+255),f,b
  3517  001024                     l4737:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  3521  001024  51BD               	movf	efgtoa@m& (0+255),w,b
  3522  001026  5DD3               	subwf	efgtoa@i& (0+255),w,b
  3523  001028  51D4               	movf	(efgtoa@i+1)& (0+255),w,b
  3524  00102A  0A80               	xorlw	128
  3525  00102C  6FA4               	movwf	??_efgtoa& (0+255),b
  3526  00102E  51BE               	movf	(efgtoa@m+1)& (0+255),w,b
  3527  001030  0A80               	xorlw	128
  3528  001032  59A4               	subwfb	??_efgtoa& (0+255),w,b
  3529  001034  B0D8               	btfsc	status,0,c
  3530  001036  D008               	goto	u5000
  3531                           
  3532                           ; BSR set to: 0
  3533  001038  BFDC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3534  00103A  D72C               	goto	l4689
  3535  00103C  51DC               	movf	(efgtoa@n+1)& (0+255),w,b
  3536  00103E  E104               	bnz	u5000
  3537  001040  0E4B               	movlw	75
  3538  001042  5DDB               	subwf	efgtoa@n& (0+255),w,b
  3539  001044  A0D8               	btfss	status,0,c
  3540  001046  D726               	goto	l4689
  3541  001048                     u5000:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && 
      +                          (flags & (1 << 4))) {
  3545  001048  51BB               	movf	efgtoa@pp& (0+255),w,b
  3546  00104A  11BC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3547  00104C  B4D8               	btfsc	status,2,c
  3548                           
  3549                           ; BSR set to: 0
  3550  00104E  A84E               	btfss	_flags,4,c
  3551  001050  D00A               	goto	l4749
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n+
      +                          +] = '.';
  3555  001052  0E18               	movlw	low _dbuf
  3556  001054  25DB               	addwf	efgtoa@n& (0+255),w,b
  3557  001056  6ED9               	movwf	fsr2l,c
  3558  001058  0E01               	movlw	high _dbuf
  3559  00105A  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3560  00105C  6EDA               	movwf	fsr2h,c
  3561  00105E  0E2E               	movlw	46
  3562  001060  6EDF               	movwf	indf2,c
  3563                           
  3564                           ; BSR set to: 0
  3565  001062  4BDB               	infsnz	efgtoa@n& (0+255),f,b
  3566  001064  2BDC               	incf	(efgtoa@n+1)& (0+255),f,b
  3567  001066                     l4749:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '
      +                          \0';
  3571  001066  0E18               	movlw	low _dbuf
  3572  001068  25DB               	addwf	efgtoa@n& (0+255),w,b
  3573  00106A  6ED9               	movwf	fsr2l,c
  3574  00106C  0E01               	movlw	high _dbuf
  3575  00106E  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3576  001070  6EDA               	movwf	fsr2h,c
  3577  001072  0E00               	movlw	0
  3578  001074  6EDF               	movwf	indf2,c
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode =
      +                          = 'e') {
  3582  001076  0E65               	movlw	101
  3583  001078  19C7               	xorwf	efgtoa@nmode& (0+255),w,b
  3584  00107A  A4D8               	btfss	status,2,c
  3585  00107C  D0AE               	goto	l4811
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = siz
      +                          eof(dbuf) - 1;
  3589  00107E  0E00               	movlw	0
  3590  001080  6FD4               	movwf	(efgtoa@i+1)& (0+255),b
  3591  001082  0E4F               	movlw	79
  3592  001084  6FD3               	movwf	efgtoa@i& (0+255),b
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i]
      +                           = '\0';
  3596  001086  0E18               	movlw	low _dbuf
  3597  001088  25D3               	addwf	efgtoa@i& (0+255),w,b
  3598  00108A  6ED9               	movwf	fsr2l,c
  3599  00108C  0E01               	movlw	high _dbuf
  3600  00108E  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3601  001090  6EDA               	movwf	fsr2h,c
  3602  001092  0E00               	movlw	0
  3603  001094  6EDF               	movwf	indf2,c
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 
      +                          0;
  3607  001096  0E00               	movlw	0
  3608  001098  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  3609  00109A  0E00               	movlw	0
  3610  00109C  6FC3               	movwf	efgtoa@sign& (0+255),b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e <
      +                           0) {
  3614  00109E  AFDA               	btfss	(efgtoa@e+1)& (0+255),7,b
  3615  0010A0  D008               	goto	l4765
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sig
      +                          n = 1;
  3619  0010A2  0E00               	movlw	0
  3620  0010A4  6FC4               	movwf	(efgtoa@sign+1)& (0+255),b
  3621  0010A6  0E01               	movlw	1
  3622  0010A8  6FC3               	movwf	efgtoa@sign& (0+255),b
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e =
      +                           -e;
  3626  0010AA  6DD9               	negf	efgtoa@e& (0+255),b
  3627  0010AC  1FDA               	comf	(efgtoa@e+1)& (0+255),f,b
  3628  0010AE  B0D8               	btfsc	status,0,c
  3629  0010B0  2BDA               	incf	(efgtoa@e+1)& (0+255),f,b
  3630  0010B2                     l4765:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3634  0010B2  0E00               	movlw	0
  3635  0010B4  6FC6               	movwf	(efgtoa@p+1)& (0+255),b
  3636  0010B6  0E02               	movlw	2
  3637  0010B8  6FC5               	movwf	efgtoa@p& (0+255),b
  3638                           
  3639                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  3640  0010BA  D02C               	goto	l4777
  3641  0010BC                     l4767:
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i
      +                          ;
  3645  0010BC  07D3               	decf	efgtoa@i& (0+255),f,b
  3646  0010BE  A0D8               	btfss	status,0,c
  3647  0010C0  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbu
      +                          f[i] = '0' + (e % 10);
  3651  0010C2  0E18               	movlw	low _dbuf
  3652  0010C4  25D3               	addwf	efgtoa@i& (0+255),w,b
  3653  0010C6  6ED9               	movwf	fsr2l,c
  3654  0010C8  0E01               	movlw	high _dbuf
  3655  0010CA  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3656  0010CC  6EDA               	movwf	fsr2h,c
  3657  0010CE  C0D9  F060         	movff	efgtoa@e,___awmod@dividend
  3658  0010D2  C0DA  F061         	movff	efgtoa@e+1,___awmod@dividend+1
  3659  0010D6  0E00               	movlw	0
  3660  0010D8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3661  0010DA  0E0A               	movlw	10
  3662  0010DC  6F62               	movwf	___awmod@divisor& (0+255),b
  3663  0010DE  EC77  F017         	call	___awmod	;wreg free
  3664  0010E2  0100               	movlb	0	; () banked
  3665  0010E4  5160               	movf	?___awmod& (0+255),w,b
  3666  0010E6  0F30               	addlw	48
  3667  0010E8  6EDF               	movwf	indf2,c
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e =
      +                           e / 10;
  3671  0010EA  C0D9  F060         	movff	efgtoa@e,___awdiv@dividend
  3672  0010EE  C0DA  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
  3673  0010F2  0E00               	movlw	0
  3674  0010F4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3675  0010F6  0E0A               	movlw	10
  3676  0010F8  6F62               	movwf	___awdiv@divisor& (0+255),b
  3677  0010FA  ECF1  F016         	call	___awdiv	;wreg free
  3678  0010FE  C060  F0D9         	movff	?___awdiv,efgtoa@e
  3679  001102  C061  F0DA         	movff	?___awdiv+1,efgtoa@e+1
  3680                           
  3681                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p
      +                          ;
  3682  001106  0100               	movlb	0	; () banked
  3683  001108  07C5               	decf	efgtoa@p& (0+255),f,b
  3684  00110A  A0D8               	btfss	status,0,c
  3685  00110C  07C6               	decf	(efgtoa@p+1)& (0+255),f,b
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w
      +                          ;
  3689  00110E  07C8               	decf	efgtoa@w& (0+255),f,b
  3690  001110  A0D8               	btfss	status,0,c
  3691  001112  07C9               	decf	(efgtoa@w+1)& (0+255),f,b
  3692  001114                     l4777:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  3696  001114  51D9               	movf	efgtoa@e& (0+255),w,b
  3697  001116  11DA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3698  001118  A4D8               	btfss	status,2,c
  3699  00111A  D7D0               	goto	l4767
  3700                           
  3701                           ; BSR set to: 0
  3702  00111C  BFC6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3703  00111E  D005               	goto	u5060
  3704  001120  51C6               	movf	(efgtoa@p+1)& (0+255),w,b
  3705  001122  E1CC               	bnz	l4767
  3706  001124  05C5               	decf	efgtoa@p& (0+255),w,b
  3707  001126  B0D8               	btfsc	status,0,c
  3708  001128  D7C9               	goto	l4767
  3709  00112A                     u5060:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  3713  00112A  07D3               	decf	efgtoa@i& (0+255),f,b
  3714  00112C  A0D8               	btfss	status,0,c
  3715  00112E  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i]
      +                           = sign ? '-' : '+';
  3719  001130  51C3               	movf	efgtoa@sign& (0+255),w,b
  3720  001132  11C4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3721  001134  A4D8               	btfss	status,2,c
  3722  001136  D004               	goto	l4787
  3723                           
  3724                           ; BSR set to: 0
  3725  001138  0E00               	movlw	0
  3726  00113A  6FB4               	movwf	(_efgtoa$2001+1)& (0+255),b
  3727  00113C  0E2B               	movlw	43
  3728  00113E  D003               	goto	L3
  3729  001140                     l4787:
  3730                           
  3731                           ; BSR set to: 0
  3732  001140  0E00               	movlw	0
  3733  001142  6FB4               	movwf	(_efgtoa$2001+1)& (0+255),b
  3734  001144  0E2D               	movlw	45
  3735  001146                     L3:
  3736  001146  6FB3               	movwf	_efgtoa$2001& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739  001148  0E18               	movlw	low _dbuf
  3740  00114A  25D3               	addwf	efgtoa@i& (0+255),w,b
  3741  00114C  6ED9               	movwf	fsr2l,c
  3742  00114E  0E01               	movlw	high _dbuf
  3743  001150  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3744  001152  6EDA               	movwf	fsr2h,c
  3745  001154  C0B3  FFDF         	movff	_efgtoa$2001,indf2
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  3749  001158  07C8               	decf	efgtoa@w& (0+255),f,b
  3750  00115A  A0D8               	btfss	status,0,c
  3751  00115C  07C9               	decf	(efgtoa@w+1)& (0+255),f,b
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3755  00115E  07D3               	decf	efgtoa@i& (0+255),f,b
  3756  001160  A0D8               	btfss	status,0,c
  3757  001162  07D4               	decf	(efgtoa@i+1)& (0+255),f,b
  3758                           
  3759                           ; BSR set to: 0
  3760  001164  0EBF               	movlw	191
  3761  001166  6FA4               	movwf	??_efgtoa& (0+255),b
  3762  001168  0EFF               	movlw	255
  3763  00116A  6FA5               	movwf	(??_efgtoa+1)& (0+255),b
  3764  00116C  51A3               	movf	efgtoa@c& (0+255),w,b
  3765  00116E  6FA6               	movwf	(??_efgtoa+2)& (0+255),b
  3766  001170  6BA7               	clrf	(??_efgtoa+3)& (0+255),b
  3767  001172  51A4               	movf	??_efgtoa& (0+255),w,b
  3768  001174  27A6               	addwf	(??_efgtoa+2)& (0+255),f,b
  3769  001176  51A5               	movf	(??_efgtoa+1)& (0+255),w,b
  3770  001178  23A7               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3771  00117A  51A7               	movf	(??_efgtoa+3)& (0+255),w,b
  3772  00117C  E106               	bnz	u5080
  3773  00117E  0E1A               	movlw	26
  3774  001180  5DA6               	subwf	(??_efgtoa+2)& (0+255),w,b
  3775  001182  B0D8               	btfsc	status,0,c
  3776  001184  D002               	goto	u5080
  3777  001186  0E01               	movlw	1
  3778  001188  D001               	goto	u5090
  3779  00118A                     u5080:
  3780  00118A  0E00               	movlw	0
  3781  00118C                     u5090:
  3782  00118C  6FB7               	movwf	_efgtoa$2003& (0+255),b
  3783  00118E  6BB8               	clrf	(_efgtoa$2003+1)& (0+255),b
  3784                           
  3785                           ; BSR set to: 0
  3786  001190  51B7               	movf	_efgtoa$2003& (0+255),w,b
  3787  001192  11B8               	iorwf	(_efgtoa$2003+1)& (0+255),w,b
  3788  001194  A4D8               	btfss	status,2,c
  3789  001196  D004               	goto	l4803
  3790                           
  3791                           ; BSR set to: 0
  3792  001198  0E00               	movlw	0
  3793  00119A  6FB6               	movwf	(_efgtoa$2002+1)& (0+255),b
  3794  00119C  0E65               	movlw	101
  3795  00119E  D003               	goto	L4
  3796  0011A0                     l4803:
  3797                           
  3798                           ; BSR set to: 0
  3799  0011A0  0E00               	movlw	0
  3800  0011A2  6FB6               	movwf	(_efgtoa$2002+1)& (0+255),b
  3801  0011A4  0E45               	movlw	69
  3802  0011A6                     L4:
  3803  0011A6  6FB5               	movwf	_efgtoa$2002& (0+255),b
  3804                           
  3805                           ; BSR set to: 0
  3806  0011A8  0E18               	movlw	low _dbuf
  3807  0011AA  25D3               	addwf	efgtoa@i& (0+255),w,b
  3808  0011AC  6ED9               	movwf	fsr2l,c
  3809  0011AE  0E01               	movlw	high _dbuf
  3810  0011B0  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3811  0011B2  6EDA               	movwf	fsr2h,c
  3812  0011B4  C0B5  FFDF         	movff	_efgtoa$2002,indf2
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  3816  0011B8  07C8               	decf	efgtoa@w& (0+255),f,b
  3817  0011BA  A0D8               	btfss	status,0,c
  3818  0011BC  07C9               	decf	(efgtoa@w+1)& (0+255),f,b
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  3822  0011BE  0E18               	movlw	low _dbuf
  3823  0011C0  25DB               	addwf	efgtoa@n& (0+255),w,b
  3824  0011C2  6F60               	movwf	strcpy@dest& (0+255),b
  3825  0011C4  0E01               	movlw	high _dbuf
  3826  0011C6  21DC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3827  0011C8  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3828  0011CA  0E18               	movlw	low _dbuf
  3829  0011CC  25D3               	addwf	efgtoa@i& (0+255),w,b
  3830  0011CE  6F62               	movwf	strcpy@src& (0+255),b
  3831  0011D0  0E01               	movlw	high _dbuf
  3832  0011D2  21D4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3833  0011D4  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3834  0011D6  EC7A  F018         	call	_strcpy	;wreg free
  3835  0011DA                     l4811:
  3836                           
  3837                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 502:     return pad(
      +                          fp, &dbuf[0], w);
  3838  0011DA  C09D  F072         	movff	efgtoa@fp,pad@fp
  3839  0011DE  C09E  F073         	movff	efgtoa@fp+1,pad@fp+1
  3840  0011E2  0E18               	movlw	low _dbuf
  3841  0011E4  0100               	movlb	0	; () banked
  3842  0011E6  6F74               	movwf	pad@buf& (0+255),b
  3843  0011E8  0E01               	movlw	high _dbuf
  3844  0011EA  6F75               	movwf	(pad@buf+1)& (0+255),b
  3845  0011EC  C0C8  F076         	movff	efgtoa@w,pad@p
  3846  0011F0  C0C9  F077         	movff	efgtoa@w+1,pad@p+1
  3847  0011F4  EC5D  F016         	call	_pad	;wreg free
  3848  0011F8  C072  F09D         	movff	?_pad,?_efgtoa
  3849  0011FC  C073  F09E         	movff	?_pad+1,?_efgtoa+1
  3850  001200  0012               	return		;funcret
  3851  001202                     __end_of_efgtoa:
  3852                           	opt callstack 0
  3853                           
  3854 ;; *************** function _tolower *****************
  3855 ;; Defined at:
  3856 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  c               2    6[BANK0 ] int 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  2    6[BANK0 ] int 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3870 ;;      Params:         0       2       0       0       0       0       0       0       0
  3871 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3872 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3873 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3874 ;;Total ram usage:        8 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    6
  3877 ;; This function calls:
  3878 ;;		_isupper
  3879 ;; This function is called by:
  3880 ;;		_efgtoa
  3881 ;;		_vfpfcnvrt
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text6
  3886  003148                     __ptext6:
  3887                           	opt callstack 0
  3888  003148                     _tolower:
  3889                           	opt callstack 21
  3890                           
  3891                           ;incstack = 0
  3892  003148  0EBF               	movlw	191
  3893  00314A  0100               	movlb	0	; () banked
  3894  00314C  6F68               	movwf	??_tolower& (0+255),b
  3895  00314E  0EFF               	movlw	255
  3896  003150  6F69               	movwf	(??_tolower+1)& (0+255),b
  3897  003152  C066  F06A         	movff	tolower@c,??_tolower+2
  3898  003156  C067  F06B         	movff	tolower@c+1,??_tolower+3
  3899  00315A  5168               	movf	??_tolower& (0+255),w,b
  3900  00315C  276A               	addwf	(??_tolower+2)& (0+255),f,b
  3901  00315E  5169               	movf	(??_tolower+1)& (0+255),w,b
  3902  003160  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  3903  003162  516B               	movf	(??_tolower+3)& (0+255),w,b
  3904  003164  E106               	bnz	u3720
  3905  003166  0E1A               	movlw	26
  3906  003168  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  3907  00316A  B0D8               	btfsc	status,0,c
  3908  00316C  D002               	goto	u3720
  3909  00316E  0E01               	movlw	1
  3910  003170  D001               	goto	u3730
  3911  003172                     u3720:
  3912  003172  0E00               	movlw	0
  3913  003174                     u3730:
  3914  003174  6F6C               	movwf	_tolower$2597& (0+255),b
  3915  003176  6B6D               	clrf	(_tolower$2597+1)& (0+255),b
  3916                           
  3917                           ; BSR set to: 0
  3918  003178  516C               	movf	_tolower$2597& (0+255),w,b
  3919  00317A  116D               	iorwf	(_tolower$2597+1)& (0+255),w,b
  3920  00317C  B4D8               	btfsc	status,2,c
  3921  00317E  D006               	goto	l1667
  3922                           
  3923                           ; BSR set to: 0
  3924  003180  0E20               	movlw	32
  3925  003182  1166               	iorwf	tolower@c& (0+255),w,b
  3926  003184  6F66               	movwf	?_tolower& (0+255),b
  3927  003186  5167               	movf	(tolower@c+1)& (0+255),w,b
  3928  003188  6F67               	movwf	(?_tolower+1)& (0+255),b
  3929  00318A  0012               	return	
  3930  00318C                     l1667:
  3931                           
  3932                           ; BSR set to: 0
  3933  00318C  C066  F066         	movff	tolower@c,?_tolower
  3934  003190  C067  F067         	movff	tolower@c+1,?_tolower+1
  3935                           
  3936                           ; BSR set to: 0
  3937  003194  0012               	return		;funcret
  3938  003196                     __end_of_tolower:
  3939                           	opt callstack 0
  3940                           
  3941 ;; *************** function _isupper *****************
  3942 ;; Defined at:
  3943 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  c               2    0[BANK0 ] int 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2    0[BANK0 ] int 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3957 ;;      Params:         0       2       0       0       0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3959 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3960 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3961 ;;Total ram usage:        6 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    5
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_efgtoa
  3968 ;;		_vfpfcnvrt
  3969 ;;		_tolower
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text7
  3974  0033C8                     __ptext7:
  3975                           	opt callstack 0
  3976  0033C8                     _isupper:
  3977                           	opt callstack 21
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;incstack = 0
  3981  0033C8  0EBF               	movlw	191
  3982  0033CA  0100               	movlb	0	; () banked
  3983  0033CC  6F62               	movwf	??_isupper& (0+255),b
  3984  0033CE  0EFF               	movlw	255
  3985  0033D0  6F63               	movwf	(??_isupper+1)& (0+255),b
  3986  0033D2  C060  F064         	movff	isupper@c,??_isupper+2
  3987  0033D6  C061  F065         	movff	isupper@c+1,??_isupper+3
  3988  0033DA  5162               	movf	??_isupper& (0+255),w,b
  3989  0033DC  2764               	addwf	(??_isupper+2)& (0+255),f,b
  3990  0033DE  5163               	movf	(??_isupper+1)& (0+255),w,b
  3991  0033E0  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  3992  0033E2  5165               	movf	(??_isupper+3)& (0+255),w,b
  3993  0033E4  E106               	bnz	u3180
  3994  0033E6  0E1A               	movlw	26
  3995  0033E8  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  3996  0033EA  B0D8               	btfsc	status,0,c
  3997  0033EC  D002               	goto	u3180
  3998  0033EE  0E01               	movlw	1
  3999  0033F0  D001               	goto	u3190
  4000  0033F2                     u3180:
  4001  0033F2  0E00               	movlw	0
  4002  0033F4                     u3190:
  4003  0033F4  6F60               	movwf	?_isupper& (0+255),b
  4004  0033F6  6B61               	clrf	(?_isupper+1)& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007  0033F8  0012               	return		;funcret
  4008  0033FA                     __end_of_isupper:
  4009                           	opt callstack 0
  4010                           
  4011 ;; *************** function _strcpy *****************
  4012 ;; Defined at:
  4013 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4016 ;;		 -> dbuf(80), 
  4017 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  4018 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4019 ;;		 -> dbuf(80), 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  d               2    8[BANK0 ] PTR unsigned char 
  4022 ;;		 -> dbuf(80), 
  4023 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  4024 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4025 ;;		 -> dbuf(80), 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  2    0[BANK0 ] PTR unsigned char 
  4028 ;; Registers used:
  4029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4035 ;;      Params:         0       4       0       0       0       0       0       0       0
  4036 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4037 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4038 ;;      Totals:         0      10       0       0       0       0       0       0       0
  4039 ;;Total ram usage:       10 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    5
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_efgtoa
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text8
  4050  0030F4                     __ptext8:
  4051                           	opt callstack 0
  4052  0030F4                     _strcpy:
  4053                           	opt callstack 21
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;incstack = 0
  4057  0030F4  C062  F066         	movff	strcpy@src,strcpy@s
  4058  0030F8  C063  F067         	movff	strcpy@src+1,strcpy@s+1
  4059  0030FC  C060  F068         	movff	strcpy@dest,strcpy@d
  4060  003100  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
  4061  003104                     l4011:
  4062  003104  0100               	movlb	0	; () banked
  4063  003106  5166               	movf	strcpy@s& (0+255),w,b
  4064  003108  6F64               	movwf	??_strcpy& (0+255),b
  4065  00310A  5167               	movf	(strcpy@s+1)& (0+255),w,b
  4066  00310C  6F65               	movwf	(??_strcpy+1)& (0+255),b
  4067  00310E  4B66               	infsnz	strcpy@s& (0+255),f,b
  4068  003110  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  4069  003112  C064  FFF6         	movff	??_strcpy,tblptrl
  4070  003116  C065  FFF7         	movff	??_strcpy+1,tblptrh
  4071  00311A  6AF8               	clrf	tblptru,c
  4072  00311C  C068  FFD9         	movff	strcpy@d,fsr2l
  4073  003120  C069  FFDA         	movff	strcpy@d+1,fsr2h
  4074  003124  4B68               	infsnz	strcpy@d& (0+255),f,b
  4075  003126  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  4076  003128  0E07               	movlw	(high __ramtop+-1)
  4077  00312A  64F7               	cpfsgt	tblptrh,c
  4078  00312C  D003               	bra	u3707
  4079  00312E  0008               	tblrd		*
  4080  003130  50F5               	movf	tablat,w,c
  4081  003132  D005               	bra	u3700
  4082  003134                     u3707:
  4083  003134  CFF6 FFE1          	movff	tblptrl,fsr1l
  4084  003138  CFF7 FFE2          	movff	tblptrh,fsr1h
  4085  00313C  50E7               	movf	indf1,w,c
  4086  00313E                     u3700:
  4087  00313E  6EDF               	movwf	indf2,c
  4088  003140  50DF               	movf	indf2,w,c
  4089  003142  B4D8               	btfsc	status,2,c
  4090  003144  0012               	return	
  4091  003146  D7DE               	goto	l4011
  4092  003148                     __end_of_strcpy:
  4093                           	opt callstack 0
  4094                           
  4095 ;; *************** function _pad *****************
  4096 ;; Defined at:
  4097 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  4100 ;;		 -> NULL(0), 
  4101 ;;  buf             2   20[BANK0 ] PTR unsigned char 
  4102 ;;		 -> dbuf(80), 
  4103 ;;  p               2   22[BANK0 ] int 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  w               2   27[BANK0 ] int 
  4106 ;;  i               2   25[BANK0 ] int 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  2   18[BANK0 ] int 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4116 ;;      Params:         0       6       0       0       0       0       0       0       0
  4117 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4118 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4119 ;;      Totals:         0      11       0       0       0       0       0       0       0
  4120 ;;Total ram usage:       11 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    9
  4123 ;; This function calls:
  4124 ;;		_fputc
  4125 ;;		_fputs
  4126 ;;		_strlen
  4127 ;; This function is called by:
  4128 ;;		_efgtoa
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text9
  4133  002CBA                     __ptext9:
  4134                           	opt callstack 0
  4135  002CBA                     _pad:
  4136                           	opt callstack 17
  4137                           
  4138                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  4139                           
  4140                           ;incstack = 0
  4141  002CBA  A04E               	btfss	_flags,0,c
  4142  002CBC  D00A               	goto	l3969
  4143                           
  4144                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  4145  002CBE  C074  F06B         	movff	pad@buf,fputs@s
  4146  002CC2  C075  F06C         	movff	pad@buf+1,fputs@s+1
  4147  002CC6  C072  F06D         	movff	pad@fp,fputs@fp
  4148  002CCA  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  4149  002CCE  EC56  F019         	call	_fputs	;wreg free
  4150  002CD2                     l3969:
  4151                           
  4152                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  4153  002CD2  0100               	movlb	0	; () banked
  4154  002CD4  BF77               	btfsc	(pad@p+1)& (0+255),7,b
  4155  002CD6  D005               	goto	l3973
  4156                           
  4157                           ; BSR set to: 0
  4158  002CD8  C076  F07B         	movff	pad@p,pad@w
  4159  002CDC  C077  F07C         	movff	pad@p+1,pad@w+1
  4160  002CE0  D004               	goto	l738
  4161  002CE2                     l3973:
  4162                           
  4163                           ; BSR set to: 0
  4164  002CE2  0E00               	movlw	0
  4165  002CE4  6F7C               	movwf	(pad@w+1)& (0+255),b
  4166  002CE6  0E00               	movlw	0
  4167  002CE8  6F7B               	movwf	pad@w& (0+255),b
  4168  002CEA                     l738:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4172  002CEA  0E00               	movlw	0
  4173  002CEC  6F7A               	movwf	(pad@i+1)& (0+255),b
  4174  002CEE  0E00               	movlw	0
  4175  002CF0  6F79               	movwf	pad@i& (0+255),b
  4176                           
  4177                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  4178  002CF2  D00D               	goto	l3979
  4179  002CF4                     l3975:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  4183  002CF4  0E00               	movlw	0
  4184  002CF6  6F63               	movwf	(fputc@c+1)& (0+255),b
  4185  002CF8  0E20               	movlw	32
  4186  002CFA  6F62               	movwf	fputc@c& (0+255),b
  4187  002CFC  C072  F064         	movff	pad@fp,fputc@fp
  4188  002D00  C073  F065         	movff	pad@fp+1,fputc@fp+1
  4189  002D04  ECB0  F017         	call	_fputc	;wreg free
  4190                           
  4191                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4192  002D08  0100               	movlb	0	; () banked
  4193  002D0A  4B79               	infsnz	pad@i& (0+255),f,b
  4194  002D0C  2B7A               	incf	(pad@i+1)& (0+255),f,b
  4195  002D0E                     l3979:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  4199  002D0E  517B               	movf	pad@w& (0+255),w,b
  4200  002D10  5D79               	subwf	pad@i& (0+255),w,b
  4201  002D12  517A               	movf	(pad@i+1)& (0+255),w,b
  4202  002D14  0A80               	xorlw	128
  4203  002D16  6F78               	movwf	??_pad& (0+255),b
  4204  002D18  517C               	movf	(pad@w+1)& (0+255),w,b
  4205  002D1A  0A80               	xorlw	128
  4206  002D1C  5978               	subwfb	??_pad& (0+255),w,b
  4207  002D1E  A0D8               	btfss	status,0,c
  4208  002D20  D7E9               	goto	l3975
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  4212  002D22  B04E               	btfsc	_flags,0,c
  4213  002D24  D00A               	goto	l3983
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  4217  002D26  C074  F06B         	movff	pad@buf,fputs@s
  4218  002D2A  C075  F06C         	movff	pad@buf+1,fputs@s+1
  4219  002D2E  C072  F06D         	movff	pad@fp,fputs@fp
  4220  002D32  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  4221  002D36  EC56  F019         	call	_fputs	;wreg free
  4222  002D3A                     l3983:
  4223                           
  4224                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  4225  002D3A  C074  F060         	movff	pad@buf,strlen@s
  4226  002D3E  C075  F061         	movff	pad@buf+1,strlen@s+1
  4227  002D42  EC8F  F01A         	call	_strlen	;wreg free
  4228  002D46  0100               	movlb	0	; () banked
  4229  002D48  517B               	movf	pad@w& (0+255),w,b
  4230  002D4A  2560               	addwf	?_strlen& (0+255),w,b
  4231  002D4C  6F72               	movwf	?_pad& (0+255),b
  4232  002D4E  517C               	movf	(pad@w+1)& (0+255),w,b
  4233  002D50  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  4234  002D52  6F73               	movwf	(?_pad+1)& (0+255),b
  4235                           
  4236                           ; BSR set to: 0
  4237  002D54  0012               	return		;funcret
  4238  002D56                     __end_of_pad:
  4239                           	opt callstack 0
  4240                           
  4241 ;; *************** function _strlen *****************
  4242 ;; Defined at:
  4243 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4246 ;;		 -> dbuf(80), 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  4249 ;;		 -> dbuf(80), 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  2    0[BANK0 ] unsigned int 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4259 ;;      Params:         0       2       0       0       0       0       0       0       0
  4260 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4262 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4263 ;;Total ram usage:        4 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    5
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_pad
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text10
  4274  00351E                     __ptext10:
  4275                           	opt callstack 0
  4276  00351E                     _strlen:
  4277                           	opt callstack 20
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;incstack = 0
  4281  00351E  C060  F062         	movff	strlen@s,strlen@a
  4282  003522  C061  F063         	movff	strlen@s+1,strlen@a+1
  4283  003526  D003               	goto	l3753
  4284  003528                     l3751:
  4285  003528  0100               	movlb	0	; () banked
  4286  00352A  4B60               	infsnz	strlen@s& (0+255),f,b
  4287  00352C  2B61               	incf	(strlen@s+1)& (0+255),f,b
  4288  00352E                     l3753:
  4289  00352E  C060  FFD9         	movff	strlen@s,fsr2l
  4290  003532  C061  FFDA         	movff	strlen@s+1,fsr2h
  4291  003536  50DF               	movf	indf2,w,c
  4292  003538  A4D8               	btfss	status,2,c
  4293  00353A  D7F6               	goto	l3751
  4294  00353C  0100               	movlb	0	; () banked
  4295  00353E  5162               	movf	strlen@a& (0+255),w,b
  4296  003540  5D60               	subwf	strlen@s& (0+255),w,b
  4297  003542  6F60               	movwf	?_strlen& (0+255),b
  4298  003544  5163               	movf	(strlen@a+1)& (0+255),w,b
  4299  003546  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  4300  003548  6F61               	movwf	(?_strlen+1)& (0+255),b
  4301                           
  4302                           ; BSR set to: 0
  4303  00354A  0012               	return		;funcret
  4304  00354C                     __end_of_strlen:
  4305                           	opt callstack 0
  4306                           
  4307 ;; *************** function _fputs *****************
  4308 ;; Defined at:
  4309 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  s               2   11[BANK0 ] PTR const unsigned char 
  4312 ;;		 -> dbuf(80), 
  4313 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  4314 ;;		 -> NULL(0), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  i               2   16[BANK0 ] int 
  4317 ;;  c               1   15[BANK0 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2   11[BANK0 ] int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         0       4       0       0       0       0       0       0       0
  4328 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4330 ;;      Totals:         0       7       0       0       0       0       0       0       0
  4331 ;;Total ram usage:        7 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    8
  4334 ;; This function calls:
  4335 ;;		_fputc
  4336 ;; This function is called by:
  4337 ;;		_pad
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text11
  4342  0032AC                     __ptext11:
  4343                           	opt callstack 0
  4344  0032AC                     _fputs:
  4345                           	opt callstack 17
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;incstack = 0
  4349  0032AC  0E00               	movlw	0
  4350  0032AE  0100               	movlb	0	; () banked
  4351  0032B0  6F71               	movwf	(fputs@i+1)& (0+255),b
  4352  0032B2  0E00               	movlw	0
  4353  0032B4  6F70               	movwf	fputs@i& (0+255),b
  4354  0032B6  D00C               	goto	l3747
  4355  0032B8                     l3743:
  4356                           
  4357                           ; BSR set to: 0
  4358  0032B8  C06F  F062         	movff	fputs@c,fputc@c
  4359  0032BC  6B63               	clrf	(fputc@c+1)& (0+255),b
  4360  0032BE  C06D  F064         	movff	fputs@fp,fputc@fp
  4361  0032C2  C06E  F065         	movff	fputs@fp+1,fputc@fp+1
  4362  0032C6  ECB0  F017         	call	_fputc	;wreg free
  4363  0032CA  0100               	movlb	0	; () banked
  4364  0032CC  4B70               	infsnz	fputs@i& (0+255),f,b
  4365  0032CE  2B71               	incf	(fputs@i+1)& (0+255),f,b
  4366  0032D0                     l3747:
  4367                           
  4368                           ; BSR set to: 0
  4369  0032D0  5170               	movf	fputs@i& (0+255),w,b
  4370  0032D2  256B               	addwf	fputs@s& (0+255),w,b
  4371  0032D4  6ED9               	movwf	fsr2l,c
  4372  0032D6  5171               	movf	(fputs@i+1)& (0+255),w,b
  4373  0032D8  216C               	addwfc	(fputs@s+1)& (0+255),w,b
  4374  0032DA  6EDA               	movwf	fsr2h,c
  4375  0032DC  50DF               	movf	indf2,w,c
  4376  0032DE  6F6F               	movwf	fputs@c& (0+255),b
  4377  0032E0  516F               	movf	fputs@c& (0+255),w,b
  4378  0032E2  B4D8               	btfsc	status,2,c
  4379  0032E4  0012               	return	
  4380  0032E6  D7E8               	goto	l3743
  4381  0032E8                     __end_of_fputs:
  4382                           	opt callstack 0
  4383                           
  4384 ;; *************** function _fputc *****************
  4385 ;; Defined at:
  4386 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  c               2    2[BANK0 ] int 
  4389 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  4390 ;;		 -> NULL(0), 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2    2[BANK0 ] int 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4402 ;;      Params:         0       4       0       0       0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4404 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4405 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4406 ;;Total ram usage:        9 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    7
  4409 ;; This function calls:
  4410 ;;		_putch
  4411 ;; This function is called by:
  4412 ;;		_pad
  4413 ;;		_vfpfcnvrt
  4414 ;;		_fputs
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text12
  4419  002F60                     __ptext12:
  4420                           	opt callstack 0
  4421  002F60                     _fputc:
  4422                           	opt callstack 20
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;incstack = 0
  4426  002F60  0100               	movlb	0	; () banked
  4427  002F62  5164               	movf	fputc@fp& (0+255),w,b
  4428  002F64  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  4429  002F66  B4D8               	btfsc	status,2,c
  4430  002F68  D004               	goto	u3130
  4431                           
  4432                           ; BSR set to: 0
  4433  002F6A  5164               	movf	fputc@fp& (0+255),w,b
  4434  002F6C  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  4435  002F6E  A4D8               	btfss	status,2,c
  4436  002F70  D004               	goto	l3733
  4437  002F72                     u3130:
  4438                           
  4439                           ; BSR set to: 0
  4440  002F72  5162               	movf	fputc@c& (0+255),w,b
  4441  002F74  ECC4  F01B         	call	_putch
  4442  002F78  0012               	return	
  4443  002F7A                     l3733:
  4444                           
  4445                           ; BSR set to: 0
  4446  002F7A  EE20 F004          	lfsr	2,4
  4447  002F7E  5164               	movf	fputc@fp& (0+255),w,b
  4448  002F80  26D9               	addwf	fsr2l,f,c
  4449  002F82  5165               	movf	(fputc@fp+1)& (0+255),w,b
  4450  002F84  22DA               	addwfc	fsr2h,f,c
  4451  002F86  50DE               	movf	postinc2,w,c
  4452  002F88  10DE               	iorwf	postinc2,w,c
  4453  002F8A  B4D8               	btfsc	status,2,c
  4454  002F8C  D016               	goto	u3150
  4455                           
  4456                           ; BSR set to: 0
  4457  002F8E  EE20 F004          	lfsr	2,4
  4458  002F92  5164               	movf	fputc@fp& (0+255),w,b
  4459  002F94  26D9               	addwf	fsr2l,f,c
  4460  002F96  5165               	movf	(fputc@fp+1)& (0+255),w,b
  4461  002F98  22DA               	addwfc	fsr2h,f,c
  4462  002F9A  EE10 F002          	lfsr	1,2
  4463  002F9E  5164               	movf	fputc@fp& (0+255),w,b
  4464  002FA0  26E1               	addwf	fsr1l,f,c
  4465  002FA2  5165               	movf	(fputc@fp+1)& (0+255),w,b
  4466  002FA4  22E2               	addwfc	fsr1h,f,c
  4467  002FA6  50DE               	movf	postinc2,w,c
  4468  002FA8  5CE6               	subwf	postinc1,w,c
  4469  002FAA  50E6               	movf	postinc1,w,c
  4470  002FAC  0A80               	xorlw	128
  4471  002FAE  6F6A               	movwf	(??_fputc+4)& (0+255),b
  4472  002FB0  50DE               	movf	postinc2,w,c
  4473  002FB2  0A80               	xorlw	128
  4474  002FB4  596A               	subwfb	(??_fputc+4)& (0+255),w,b
  4475  002FB6  B0D8               	btfsc	status,0,c
  4476  002FB8  0012               	return	
  4477  002FBA                     u3150:
  4478                           
  4479                           ; BSR set to: 0
  4480  002FBA  EE20 F002          	lfsr	2,2
  4481  002FBE  5164               	movf	fputc@fp& (0+255),w,b
  4482  002FC0  26D9               	addwf	fsr2l,f,c
  4483  002FC2  5165               	movf	(fputc@fp+1)& (0+255),w,b
  4484  002FC4  22DA               	addwfc	fsr2h,f,c
  4485  002FC6  2ADE               	incf	postinc2,f,c
  4486  002FC8  0E00               	movlw	0
  4487  002FCA  22DD               	addwfc	postdec2,f,c
  4488  002FCC  0012               	return		;funcret
  4489  002FCE                     __end_of_fputc:
  4490                           	opt callstack 0
  4491                           
  4492 ;; *************** function _putch *****************
  4493 ;; Defined at:
  4494 ;;		line 198 in file "mcc_generated_files/eusart1.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  txData          1    wreg     unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  txData          1    1[BANK0 ] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      void 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4508 ;;      Params:         0       0       0       0       0       0       0       0       0
  4509 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4511 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4512 ;;Total ram usage:        1 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    6
  4515 ;; This function calls:
  4516 ;;		_EUSART1_Write
  4517 ;; This function is called by:
  4518 ;;		_fputc
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text13
  4523  003788                     __ptext13:
  4524                           	opt callstack 0
  4525  003788                     _putch:
  4526                           	opt callstack 20
  4527                           
  4528                           ;incstack = 0
  4529                           ;putch@txData stored from wreg
  4530  003788  0100               	movlb	0	; () banked
  4531  00378A  6F61               	movwf	putch@txData& (0+255),b
  4532                           
  4533                           ;mcc_generated_files/eusart1.c: 198: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 199: {;mcc_generated_files/eusart1.c: 200:     EUSART1_Write(txData);
  4534  00378C  0100               	movlb	0	; () banked
  4535  00378E  5161               	movf	putch@txData& (0+255),w,b
  4536  003790  EC92  F019         	call	_EUSART1_Write
  4537  003794  0012               	return		;funcret
  4538  003796                     __end_of_putch:
  4539                           	opt callstack 0
  4540                           
  4541 ;; *************** function _EUSART1_Write *****************
  4542 ;; Defined at:
  4543 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  txData          1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  txData          1    0[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0
  4558 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4560 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4561 ;;Total ram usage:        1 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    5
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_putch
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text14
  4572  003324                     __ptext14:
  4573                           	opt callstack 0
  4574  003324                     _EUSART1_Write:
  4575                           	opt callstack 20
  4576                           
  4577                           ;incstack = 0
  4578                           ;EUSART1_Write@txData stored from wreg
  4579  003324  0100               	movlb	0	; () banked
  4580  003326  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  4581  003328                     
  4582                           ;mcc_generated_files/eusart1.c: 172:     while(0 == eusart1TxBufferRemaining)
  4583                           
  4584                           ;mcc_generated_files/eusart1.c: 170: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 171: {;mcc_generated_files/eusart1.c: 172:     while(0 == eusart1TxBuffer
      +                          Remaining)
  4585  003328  505B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  4586  00332A  B4D8               	btfsc	status,2,c
  4587  00332C  D7FD               	goto	l3707
  4588                           
  4589                           ;mcc_generated_files/eusart1.c: 176:     if(0 == PIE3bits.TX1IE)
  4590  00332E  010E               	movlb	14	; () banked
  4591  003330  B9C0               	btfsc	192,4,b	;volatile
  4592  003332  D003               	goto	l451
  4593                           
  4594                           ; BSR set to: 14
  4595                           ;mcc_generated_files/eusart1.c: 177:     {;mcc_generated_files/eusart1.c: 178:         T
      +                          X1REG = txData;
  4596  003334  C060  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  4597                           
  4598                           ;mcc_generated_files/eusart1.c: 179:     }
  4599  003338  D010               	goto	l3723
  4600  00333A                     l451:
  4601                           
  4602                           ; BSR set to: 14
  4603                           ;mcc_generated_files/eusart1.c: 181:     {;mcc_generated_files/eusart1.c: 182:         P
      +                          IE3bits.TX1IE = 0;
  4604  00333A  99C0               	bcf	192,4,b	;volatile
  4605                           
  4606                           ; BSR set to: 14
  4607                           ;mcc_generated_files/eusart1.c: 183:         eusart1TxBuffer[eusart1TxHead++] = txData;
  4608  00333C  0E10               	movlw	low _eusart1TxBuffer
  4609  00333E  2456               	addwf	_eusart1TxHead,w,c	;volatile
  4610  003340  6ED9               	movwf	fsr2l,c
  4611  003342  6ADA               	clrf	fsr2h,c
  4612  003344  0E01               	movlw	high _eusart1TxBuffer
  4613  003346  22DA               	addwfc	fsr2h,f,c
  4614  003348  C060  FFDF         	movff	EUSART1_Write@txData,indf2
  4615                           
  4616                           ; BSR set to: 14
  4617  00334C  2A56               	incf	_eusart1TxHead,f,c	;volatile
  4618                           
  4619                           ; BSR set to: 14
  4620                           ;mcc_generated_files/eusart1.c: 184:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  4621  00334E  0E07               	movlw	7
  4622  003350  6456               	cpfsgt	_eusart1TxHead,c	;volatile
  4623  003352  D002               	goto	l3721
  4624                           
  4625                           ; BSR set to: 14
  4626                           ;mcc_generated_files/eusart1.c: 185:         {;mcc_generated_files/eusart1.c: 186:      
      +                                 eusart1TxHead = 0;
  4627  003354  0E00               	movlw	0
  4628  003356  6E56               	movwf	_eusart1TxHead,c	;volatile
  4629  003358                     l3721:
  4630                           
  4631                           ; BSR set to: 14
  4632                           ;mcc_generated_files/eusart1.c: 188:         eusart1TxBufferRemaining--;
  4633  003358  065B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  4634  00335A                     l3723:
  4635                           
  4636                           ; BSR set to: 14
  4637                           ;mcc_generated_files/eusart1.c: 190:     PIE3bits.TX1IE = 1;
  4638  00335A  89C0               	bsf	192,4,b	;volatile
  4639                           
  4640                           ; BSR set to: 14
  4641  00335C  0012               	return		;funcret
  4642  00335E                     __end_of_EUSART1_Write:
  4643                           	opt callstack 0
  4644                           
  4645 ;; *************** function _floorf *****************
  4646 ;; Defined at:
  4647 ;;		line 3 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  x               4   41[BANK0 ] float 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  u               4   57[BANK0 ] struct .
  4652 ;;  m               4   51[BANK0 ] unsigned long 
  4653 ;;  e               2   55[BANK0 ] int 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  4   41[BANK0 ] float 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4663 ;;      Params:         0       4       0       0       0       0       0       0       0
  4664 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4665 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4666 ;;      Totals:         0      20       0       0       0       0       0       0       0
  4667 ;;Total ram usage:       20 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    5
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_efgtoa
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text15
  4678  0023F8                     __ptext15:
  4679                           	opt callstack 0
  4680  0023F8                     _floorf:
  4681                           	opt callstack 21
  4682                           
  4683                           ; BSR set to: 14
  4684                           ;incstack = 0
  4685  0023F8  C040  F099         	movff	floorf@F524,floorf@u
  4686  0023FC  C041  F09A         	movff	floorf@F524+1,floorf@u+1
  4687  002400  C042  F09B         	movff	floorf@F524+2,floorf@u+2
  4688  002404  C043  F09C         	movff	floorf@F524+3,floorf@u+3
  4689  002408  C089  F099         	movff	floorf@x,floorf@u
  4690  00240C  C08A  F09A         	movff	floorf@x+1,floorf@u+1
  4691  002410  C08B  F09B         	movff	floorf@x+2,floorf@u+2
  4692  002414  C08C  F09C         	movff	floorf@x+3,floorf@u+3
  4693  002418  0E81               	movlw	129
  4694  00241A  0100               	movlb	0	; () banked
  4695  00241C  6F8D               	movwf	??_floorf& (0+255),b
  4696  00241E  0EFF               	movlw	255
  4697  002420  6F8E               	movwf	(??_floorf+1)& (0+255),b
  4698  002422  C099  F08F         	movff	floorf@u,??_floorf+2
  4699  002426  C09A  F090         	movff	floorf@u+1,??_floorf+3
  4700  00242A  C09B  F091         	movff	floorf@u+2,??_floorf+4
  4701  00242E  C09C  F092         	movff	floorf@u+3,??_floorf+5
  4702  002432  0E18               	movlw	24
  4703  002434  D005               	goto	u3750
  4704  002436                     u3755:
  4705  002436  90D8               	bcf	status,0,c
  4706  002438  3392               	rrcf	(??_floorf+5)& (0+255),f,b
  4707  00243A  3391               	rrcf	(??_floorf+4)& (0+255),f,b
  4708  00243C  3390               	rrcf	(??_floorf+3)& (0+255),f,b
  4709  00243E  338F               	rrcf	(??_floorf+2)& (0+255),f,b
  4710  002440                     u3750:
  4711  002440  2EE8               	decfsz	wreg,f,c
  4712  002442  D7F9               	goto	u3755
  4713  002444  518F               	movf	(??_floorf+2)& (0+255),w,b
  4714  002446  258D               	addwf	??_floorf& (0+255),w,b
  4715  002448  6F97               	movwf	floorf@e& (0+255),b
  4716  00244A  0E00               	movlw	0
  4717  00244C  218E               	addwfc	(??_floorf+1)& (0+255),w,b
  4718  00244E  6F98               	movwf	(floorf@e+1)& (0+255),b
  4719  002450  BF98               	btfsc	(floorf@e+1)& (0+255),7,b
  4720  002452  D00F               	goto	l4029
  4721  002454  5198               	movf	(floorf@e+1)& (0+255),w,b
  4722  002456  E104               	bnz	u3760
  4723  002458  0E17               	movlw	23
  4724  00245A  5D97               	subwf	floorf@e& (0+255),w,b
  4725  00245C  A0D8               	btfss	status,0,c
  4726  00245E  D009               	goto	l4029
  4727  002460                     u3760:
  4728                           
  4729                           ; BSR set to: 0
  4730  002460  C089  F089         	movff	floorf@x,?_floorf
  4731  002464  C08A  F08A         	movff	floorf@x+1,?_floorf+1
  4732  002468  C08B  F08B         	movff	floorf@x+2,?_floorf+2
  4733  00246C  C08C  F08C         	movff	floorf@x+3,?_floorf+3
  4734  002470  0012               	return	
  4735  002472                     l4029:
  4736                           
  4737                           ; BSR set to: 0
  4738  002472  BF98               	btfsc	(floorf@e+1)& (0+255),7,b
  4739  002474  D05F               	goto	l4039
  4740                           
  4741                           ; BSR set to: 0
  4742  002476  C097  F08D         	movff	floorf@e,??_floorf
  4743  00247A  0EFF               	movlw	255
  4744  00247C  6F8E               	movwf	(??_floorf+1)& (0+255),b
  4745  00247E  0EFF               	movlw	255
  4746  002480  6F8F               	movwf	(??_floorf+2)& (0+255),b
  4747  002482  0E7F               	movlw	127
  4748  002484  6F90               	movwf	(??_floorf+3)& (0+255),b
  4749  002486  0E00               	movlw	0
  4750  002488  6F91               	movwf	(??_floorf+4)& (0+255),b
  4751  00248A                     u3785:
  4752  00248A  678D               	tstfsz	??_floorf& (0+255),b
  4753  00248C  D001               	goto	u3786
  4754  00248E  D007               	goto	u3787
  4755  002490                     u3786:
  4756  002490  3591               	rlcf	(??_floorf+4)& (0+255),w,b
  4757  002492  3391               	rrcf	(??_floorf+4)& (0+255),f,b
  4758  002494  3390               	rrcf	(??_floorf+3)& (0+255),f,b
  4759  002496  338F               	rrcf	(??_floorf+2)& (0+255),f,b
  4760  002498  338E               	rrcf	(??_floorf+1)& (0+255),f,b
  4761  00249A  2F8D               	decfsz	??_floorf& (0+255),f,b
  4762  00249C  D7F6               	goto	u3785
  4763  00249E                     u3787:
  4764  00249E  C08E  F093         	movff	??_floorf+1,floorf@m
  4765  0024A2  C08F  F094         	movff	??_floorf+2,floorf@m+1
  4766  0024A6  C090  F095         	movff	??_floorf+3,floorf@m+2
  4767  0024AA  C091  F096         	movff	??_floorf+4,floorf@m+3
  4768  0024AE  0100               	movlb	0	; () banked
  4769  0024B0  5193               	movf	floorf@m& (0+255),w,b
  4770  0024B2  1599               	andwf	floorf@u& (0+255),w,b
  4771  0024B4  6F8D               	movwf	??_floorf& (0+255),b
  4772  0024B6  5194               	movf	(floorf@m+1)& (0+255),w,b
  4773  0024B8  159A               	andwf	(floorf@u+1)& (0+255),w,b
  4774  0024BA  6F8E               	movwf	(??_floorf+1)& (0+255),b
  4775  0024BC  5195               	movf	(floorf@m+2)& (0+255),w,b
  4776  0024BE  159B               	andwf	(floorf@u+2)& (0+255),w,b
  4777  0024C0  6F8F               	movwf	(??_floorf+2)& (0+255),b
  4778  0024C2  5196               	movf	(floorf@m+3)& (0+255),w,b
  4779  0024C4  159C               	andwf	(floorf@u+3)& (0+255),w,b
  4780  0024C6  6F90               	movwf	(??_floorf+3)& (0+255),b
  4781  0024C8  518D               	movf	??_floorf& (0+255),w,b
  4782  0024CA  118E               	iorwf	(??_floorf+1)& (0+255),w,b
  4783  0024CC  118F               	iorwf	(??_floorf+2)& (0+255),w,b
  4784  0024CE  1190               	iorwf	(??_floorf+3)& (0+255),w,b
  4785  0024D0  B4D8               	btfsc	status,2,c
  4786  0024D2  D7C6               	goto	u3760
  4787                           
  4788                           ; BSR set to: 0
  4789  0024D4  C099  F08D         	movff	floorf@u,??_floorf
  4790  0024D8  C09A  F08E         	movff	floorf@u+1,??_floorf+1
  4791  0024DC  C09B  F08F         	movff	floorf@u+2,??_floorf+2
  4792  0024E0  C09C  F090         	movff	floorf@u+3,??_floorf+3
  4793  0024E4  0E20               	movlw	32
  4794  0024E6  D005               	goto	u3800
  4795  0024E8                     u3805:
  4796  0024E8  90D8               	bcf	status,0,c
  4797  0024EA  3390               	rrcf	(??_floorf+3)& (0+255),f,b
  4798  0024EC  338F               	rrcf	(??_floorf+2)& (0+255),f,b
  4799  0024EE  338E               	rrcf	(??_floorf+1)& (0+255),f,b
  4800  0024F0  338D               	rrcf	??_floorf& (0+255),f,b
  4801  0024F2                     u3800:
  4802  0024F2  2EE8               	decfsz	wreg,f,c
  4803  0024F4  D7F9               	goto	u3805
  4804  0024F6  518D               	movf	??_floorf& (0+255),w,b
  4805  0024F8  118E               	iorwf	(??_floorf+1)& (0+255),w,b
  4806  0024FA  118F               	iorwf	(??_floorf+2)& (0+255),w,b
  4807  0024FC  1190               	iorwf	(??_floorf+3)& (0+255),w,b
  4808  0024FE  B4D8               	btfsc	status,2,c
  4809  002500  D008               	goto	l1590
  4810                           
  4811                           ; BSR set to: 0
  4812  002502  5193               	movf	floorf@m& (0+255),w,b
  4813  002504  2799               	addwf	floorf@u& (0+255),f,b
  4814  002506  5194               	movf	(floorf@m+1)& (0+255),w,b
  4815  002508  239A               	addwfc	(floorf@u+1)& (0+255),f,b
  4816  00250A  5195               	movf	(floorf@m+2)& (0+255),w,b
  4817  00250C  239B               	addwfc	(floorf@u+2)& (0+255),f,b
  4818  00250E  5196               	movf	(floorf@m+3)& (0+255),w,b
  4819  002510  239C               	addwfc	(floorf@u+3)& (0+255),f,b
  4820  002512                     l1590:
  4821                           
  4822                           ; BSR set to: 0
  4823  002512  1D93               	comf	floorf@m& (0+255),w,b
  4824  002514  6F8D               	movwf	??_floorf& (0+255),b
  4825  002516  1D94               	comf	(floorf@m+1)& (0+255),w,b
  4826  002518  6F8E               	movwf	(??_floorf+1)& (0+255),b
  4827  00251A  1D95               	comf	(floorf@m+2)& (0+255),w,b
  4828  00251C  6F8F               	movwf	(??_floorf+2)& (0+255),b
  4829  00251E  1D96               	comf	(floorf@m+3)& (0+255),w,b
  4830  002520  6F90               	movwf	(??_floorf+3)& (0+255),b
  4831  002522  518D               	movf	??_floorf& (0+255),w,b
  4832  002524  1799               	andwf	floorf@u& (0+255),f,b
  4833  002526  518E               	movf	(??_floorf+1)& (0+255),w,b
  4834  002528  179A               	andwf	(floorf@u+1)& (0+255),f,b
  4835  00252A  518F               	movf	(??_floorf+2)& (0+255),w,b
  4836  00252C  179B               	andwf	(floorf@u+2)& (0+255),f,b
  4837  00252E  5190               	movf	(??_floorf+3)& (0+255),w,b
  4838  002530  179C               	andwf	(floorf@u+3)& (0+255),f,b
  4839  002532  D036               	goto	l4047
  4840  002534                     l4039:
  4841                           
  4842                           ; BSR set to: 0
  4843  002534  C099  F08D         	movff	floorf@u,??_floorf
  4844  002538  C09A  F08E         	movff	floorf@u+1,??_floorf+1
  4845  00253C  C09B  F08F         	movff	floorf@u+2,??_floorf+2
  4846  002540  C09C  F090         	movff	floorf@u+3,??_floorf+3
  4847  002544  0E20               	movlw	32
  4848  002546  D005               	goto	u3820
  4849  002548                     u3825:
  4850  002548  90D8               	bcf	status,0,c
  4851  00254A  3390               	rrcf	(??_floorf+3)& (0+255),f,b
  4852  00254C  338F               	rrcf	(??_floorf+2)& (0+255),f,b
  4853  00254E  338E               	rrcf	(??_floorf+1)& (0+255),f,b
  4854  002550  338D               	rrcf	??_floorf& (0+255),f,b
  4855  002552                     u3820:
  4856  002552  2EE8               	decfsz	wreg,f,c
  4857  002554  D7F9               	goto	u3825
  4858  002556  518D               	movf	??_floorf& (0+255),w,b
  4859  002558  118E               	iorwf	(??_floorf+1)& (0+255),w,b
  4860  00255A  118F               	iorwf	(??_floorf+2)& (0+255),w,b
  4861  00255C  1190               	iorwf	(??_floorf+3)& (0+255),w,b
  4862  00255E  A4D8               	btfss	status,2,c
  4863  002560  D008               	goto	l4043
  4864                           
  4865                           ; BSR set to: 0
  4866  002562  0E00               	movlw	0
  4867  002564  6F99               	movwf	floorf@u& (0+255),b
  4868  002566  0E00               	movlw	0
  4869  002568  6F9A               	movwf	(floorf@u+1)& (0+255),b
  4870  00256A  0E00               	movlw	0
  4871  00256C  6F9B               	movwf	(floorf@u+2)& (0+255),b
  4872  00256E  0E00               	movlw	0
  4873  002570  D016               	goto	L5
  4874  002572                     l4043:
  4875                           
  4876                           ; BSR set to: 0
  4877  002572  90D8               	bcf	status,0,c
  4878  002574  3599               	rlcf	floorf@u& (0+255),w,b
  4879  002576  6F8D               	movwf	??_floorf& (0+255),b
  4880  002578  359A               	rlcf	(floorf@u+1)& (0+255),w,b
  4881  00257A  6F8E               	movwf	(??_floorf+1)& (0+255),b
  4882  00257C  359B               	rlcf	(floorf@u+2)& (0+255),w,b
  4883  00257E  6F8F               	movwf	(??_floorf+2)& (0+255),b
  4884  002580  359C               	rlcf	(floorf@u+3)& (0+255),w,b
  4885  002582  6F90               	movwf	(??_floorf+3)& (0+255),b
  4886  002584  518D               	movf	??_floorf& (0+255),w,b
  4887  002586  118E               	iorwf	(??_floorf+1)& (0+255),w,b
  4888  002588  118F               	iorwf	(??_floorf+2)& (0+255),w,b
  4889  00258A  1190               	iorwf	(??_floorf+3)& (0+255),w,b
  4890  00258C  B4D8               	btfsc	status,2,c
  4891  00258E  D008               	goto	l4047
  4892                           
  4893                           ; BSR set to: 0
  4894  002590  0E00               	movlw	0
  4895  002592  6F99               	movwf	floorf@u& (0+255),b
  4896  002594  0E00               	movlw	0
  4897  002596  6F9A               	movwf	(floorf@u+1)& (0+255),b
  4898  002598  0E80               	movlw	128
  4899  00259A  6F9B               	movwf	(floorf@u+2)& (0+255),b
  4900  00259C  0EBF               	movlw	191
  4901  00259E                     L5:
  4902  00259E  6F9C               	movwf	(floorf@u+3)& (0+255),b
  4903  0025A0                     l4047:
  4904                           
  4905                           ; BSR set to: 0
  4906  0025A0  C099  F089         	movff	floorf@u,?_floorf
  4907  0025A4  C09A  F08A         	movff	floorf@u+1,?_floorf+1
  4908  0025A8  C09B  F08B         	movff	floorf@u+2,?_floorf+2
  4909  0025AC  C09C  F08C         	movff	floorf@u+3,?_floorf+3
  4910                           
  4911                           ; BSR set to: 0
  4912  0025B0  0012               	return		;funcret
  4913  0025B2                     __end_of_floorf:
  4914                           	opt callstack 0
  4915                           
  4916 ;; *************** function ___fpclassifyf *****************
  4917 ;; Defined at:
  4918 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;  x               4    0[BANK0 ] float 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  u               4   10[BANK0 ] struct .
  4923 ;;  e               2    8[BANK0 ] int 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  2    0[BANK0 ] int 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4933 ;;      Params:         0       4       0       0       0       0       0       0       0
  4934 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4935 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4936 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4937 ;;Total ram usage:       14 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    5
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_efgtoa
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text16
  4948  0029EC                     __ptext16:
  4949                           	opt callstack 0
  4950  0029EC                     ___fpclassifyf:
  4951                           	opt callstack 21
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;incstack = 0
  4955  0029EC  C044  F06A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4956  0029F0  C045  F06B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4957  0029F4  C046  F06C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4958  0029F8  C047  F06D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4959  0029FC  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  4960  002A00  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4961  002A04  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4962  002A08  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4963  002A0C  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  4964  002A10  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4965  002A14  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4966  002A18  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4967  002A1C  0E18               	movlw	24
  4968  002A1E  D006               	goto	u3630
  4969  002A20                     u3635:
  4970  002A20  0100               	movlb	0	; () banked
  4971  002A22  90D8               	bcf	status,0,c
  4972  002A24  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  4973  002A26  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  4974  002A28  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  4975  002A2A  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  4976  002A2C                     u3630:
  4977  002A2C  2EE8               	decfsz	wreg,f,c
  4978  002A2E  D7F8               	goto	u3635
  4979  002A30  5164               	movf	??___fpclassifyf& (0+255),w,b
  4980  002A32  6F68               	movwf	___fpclassifyf@e& (0+255),b
  4981  002A34  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  4982  002A36  5168               	movf	___fpclassifyf@e& (0+255),w,b
  4983  002A38  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4984  002A3A  A4D8               	btfss	status,2,c
  4985  002A3C  D019               	goto	l3999
  4986                           
  4987                           ; BSR set to: 0
  4988  002A3E  90D8               	bcf	status,0,c
  4989  002A40  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  4990  002A42  6F64               	movwf	??___fpclassifyf& (0+255),b
  4991  002A44  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  4992  002A46  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  4993  002A48  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  4994  002A4A  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  4995  002A4C  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  4996  002A4E  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  4997  002A50  5164               	movf	??___fpclassifyf& (0+255),w,b
  4998  002A52  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4999  002A54  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5000  002A56  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5001  002A58  A4D8               	btfss	status,2,c
  5002  002A5A  D005               	goto	l3995
  5003                           
  5004                           ; BSR set to: 0
  5005  002A5C  0E00               	movlw	0
  5006  002A5E  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5007  002A60  0E02               	movlw	2
  5008  002A62  6F60               	movwf	?___fpclassifyf& (0+255),b
  5009  002A64  0012               	return	
  5010  002A66                     l3995:
  5011                           
  5012                           ; BSR set to: 0
  5013  002A66  0E00               	movlw	0
  5014  002A68  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5015  002A6A  0E03               	movlw	3
  5016  002A6C  6F60               	movwf	?___fpclassifyf& (0+255),b
  5017  002A6E  0012               	return	
  5018  002A70                     l3999:
  5019                           
  5020                           ; BSR set to: 0
  5021  002A70  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5022  002A72  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5023  002A74  A4D8               	btfss	status,2,c
  5024  002A76  D01C               	goto	l4005
  5025                           
  5026                           ; BSR set to: 0
  5027  002A78  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5028  002A7C  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5029  002A80  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5030  002A84  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5031  002A88  0E09               	movlw	9
  5032  002A8A                     u3675:
  5033  002A8A  90D8               	bcf	status,0,c
  5034  002A8C  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5035  002A8E  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5036  002A90  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5037  002A92  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5038  002A94  2EE8               	decfsz	wreg,f,c
  5039  002A96  D7F9               	goto	u3675
  5040  002A98  5164               	movf	??___fpclassifyf& (0+255),w,b
  5041  002A9A  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5042  002A9C  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5043  002A9E  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5044  002AA0  A4D8               	btfss	status,2,c
  5045  002AA2  D002               	goto	u3680
  5046  002AA4  0E01               	movlw	1
  5047  002AA6  D001               	goto	u3690
  5048  002AA8                     u3680:
  5049  002AA8  0E00               	movlw	0
  5050  002AAA                     u3690:
  5051  002AAA  6F60               	movwf	?___fpclassifyf& (0+255),b
  5052  002AAC  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5053  002AAE  0012               	return	
  5054  002AB0                     l4005:
  5055                           
  5056                           ; BSR set to: 0
  5057  002AB0  0E00               	movlw	0
  5058  002AB2  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5059  002AB4  0E04               	movlw	4
  5060  002AB6  6F60               	movwf	?___fpclassifyf& (0+255),b
  5061                           
  5062                           ; BSR set to: 0
  5063  002AB8  0012               	return		;funcret
  5064  002ABA                     __end_of___fpclassifyf:
  5065                           	opt callstack 0
  5066                           
  5067 ;; *************** function ___fltol *****************
  5068 ;; Defined at:
  5069 ;;		line 43 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  f1              4    0[BANK0 ] int 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  exp1            1    9[BANK0 ] unsigned char 
  5074 ;;  sign1           1    8[BANK0 ] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  4    0[BANK0 ] long 
  5077 ;; Registers used:
  5078 ;;		wreg, status,2, status,0
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5084 ;;      Params:         0       4       0       0       0       0       0       0       0
  5085 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5086 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5087 ;;      Totals:         0      10       0       0       0       0       0       0       0
  5088 ;;Total ram usage:       10 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    5
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;;		_efgtoa
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text17
  5100  002ABA                     __ptext17:
  5101                           	opt callstack 0
  5102  002ABA                     ___fltol:
  5103                           	opt callstack 21
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;incstack = 0
  5107  002ABA  0100               	movlb	0	; () banked
  5108  002ABC  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5109  002ABE  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5110  002AC0  6F69               	movwf	___fltol@exp1& (0+255),b
  5111  002AC2  5169               	movf	___fltol@exp1& (0+255),w,b
  5112  002AC4  A4D8               	btfss	status,2,c
  5113  002AC6  D009               	goto	l4467
  5114  002AC8                     u4500:
  5115                           
  5116                           ; BSR set to: 0
  5117  002AC8  0E00               	movlw	0
  5118  002ACA  6F60               	movwf	?___fltol& (0+255),b
  5119  002ACC  0E00               	movlw	0
  5120  002ACE  6F61               	movwf	(?___fltol+1)& (0+255),b
  5121  002AD0  0E00               	movlw	0
  5122  002AD2  6F62               	movwf	(?___fltol+2)& (0+255),b
  5123  002AD4  0E00               	movlw	0
  5124  002AD6  6F63               	movwf	(?___fltol+3)& (0+255),b
  5125  002AD8  0012               	return	
  5126  002ADA                     l4467:
  5127                           
  5128                           ; BSR set to: 0
  5129  002ADA  C060  F064         	movff	___fltol@f1,??___fltol
  5130  002ADE  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5131  002AE2  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5132  002AE6  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5133  002AEA  0E20               	movlw	32
  5134  002AEC  D005               	goto	u4510
  5135  002AEE                     u4515:
  5136  002AEE  90D8               	bcf	status,0,c
  5137  002AF0  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5138  002AF2  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5139  002AF4  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5140  002AF6  3364               	rrcf	??___fltol& (0+255),f,b
  5141  002AF8                     u4510:
  5142  002AF8  2EE8               	decfsz	wreg,f,c
  5143  002AFA  D7F9               	goto	u4515
  5144  002AFC  5164               	movf	??___fltol& (0+255),w,b
  5145  002AFE  6F68               	movwf	___fltol@sign1& (0+255),b
  5146                           
  5147                           ; BSR set to: 0
  5148  002B00  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5149                           
  5150                           ; BSR set to: 0
  5151  002B02  0EFF               	movlw	255
  5152  002B04  1760               	andwf	___fltol@f1& (0+255),f,b
  5153  002B06  0EFF               	movlw	255
  5154  002B08  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5155  002B0A  0EFF               	movlw	255
  5156  002B0C  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5157  002B0E  0E00               	movlw	0
  5158  002B10  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5159                           
  5160                           ; BSR set to: 0
  5161  002B12  0E96               	movlw	150
  5162  002B14  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5163                           
  5164                           ; BSR set to: 0
  5165  002B16  AF69               	btfss	___fltol@exp1& (0+255),7,b
  5166  002B18  D00D               	goto	l4487
  5167                           
  5168                           ; BSR set to: 0
  5169  002B1A  5169               	movf	___fltol@exp1& (0+255),w,b
  5170  002B1C  0A80               	xorlw	128
  5171  002B1E  0F97               	addlw	151
  5172  002B20  A0D8               	btfss	status,0,c
  5173  002B22  D7D2               	goto	u4500
  5174  002B24                     l4483:
  5175                           
  5176                           ; BSR set to: 0
  5177  002B24  90D8               	bcf	status,0,c
  5178  002B26  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5179  002B28  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5180  002B2A  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5181  002B2C  3360               	rrcf	___fltol@f1& (0+255),f,b
  5182                           
  5183                           ; BSR set to: 0
  5184  002B2E  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5185  002B30  D7F9               	goto	l4483
  5186  002B32  D00D               	goto	u4550
  5187  002B34                     l4487:
  5188                           
  5189                           ; BSR set to: 0
  5190  002B34  0E1F               	movlw	31
  5191  002B36  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5192  002B38  D007               	goto	l4495
  5193  002B3A  D7C6               	goto	u4500
  5194  002B3C                     l4493:
  5195                           
  5196                           ; BSR set to: 0
  5197  002B3C  90D8               	bcf	status,0,c
  5198  002B3E  3760               	rlcf	___fltol@f1& (0+255),f,b
  5199  002B40  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5200  002B42  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5201  002B44  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5202  002B46  0769               	decf	___fltol@exp1& (0+255),f,b
  5203  002B48                     l4495:
  5204                           
  5205                           ; BSR set to: 0
  5206  002B48  5169               	movf	___fltol@exp1& (0+255),w,b
  5207  002B4A  A4D8               	btfss	status,2,c
  5208  002B4C  D7F7               	goto	l4493
  5209  002B4E                     u4550:
  5210                           
  5211                           ; BSR set to: 0
  5212  002B4E  5168               	movf	___fltol@sign1& (0+255),w,b
  5213  002B50  B4D8               	btfsc	status,2,c
  5214  002B52  D008               	goto	l4501
  5215                           
  5216                           ; BSR set to: 0
  5217  002B54  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5218  002B56  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5219  002B58  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5220  002B5A  6D60               	negf	___fltol@f1& (0+255),b
  5221  002B5C  0E00               	movlw	0
  5222  002B5E  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5223  002B60  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5224  002B62  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5225  002B64                     l4501:
  5226                           
  5227                           ; BSR set to: 0
  5228  002B64  C060  F060         	movff	___fltol@f1,?___fltol
  5229  002B68  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  5230  002B6C  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  5231  002B70  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  5232                           
  5233                           ; BSR set to: 0
  5234  002B74  0012               	return		;funcret
  5235  002B76                     __end_of___fltol:
  5236                           	opt callstack 0
  5237                           
  5238 ;; *************** function ___flsub *****************
  5239 ;; Defined at:
  5240 ;;		line 245 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  b               4   25[BANK0 ] long 
  5243 ;;  a               4   29[BANK0 ] long 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  4   25[BANK0 ] long 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5255 ;;      Params:         0       8       0       0       0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5258 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5259 ;;Total ram usage:        8 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    6
  5262 ;; This function calls:
  5263 ;;		___fladd
  5264 ;; This function is called by:
  5265 ;;		_efgtoa
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text18
  5270  0031DE                     __ptext18:
  5271                           	opt callstack 0
  5272  0031DE                     ___flsub:
  5273                           	opt callstack 20
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;incstack = 0
  5277  0031DE  0E00               	movlw	0
  5278  0031E0  0100               	movlb	0	; () banked
  5279  0031E2  1B7D               	xorwf	___flsub@a& (0+255),f,b
  5280  0031E4  0E00               	movlw	0
  5281  0031E6  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  5282  0031E8  0E00               	movlw	0
  5283  0031EA  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  5284  0031EC  0E80               	movlw	128
  5285  0031EE  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  5286                           
  5287                           ; BSR set to: 0
  5288  0031F0  C079  F060         	movff	___flsub@b,___fladd@b
  5289  0031F4  C07A  F061         	movff	___flsub@b+1,___fladd@b+1
  5290  0031F8  C07B  F062         	movff	___flsub@b+2,___fladd@b+2
  5291  0031FC  C07C  F063         	movff	___flsub@b+3,___fladd@b+3
  5292  003200  C07D  F064         	movff	___flsub@a,___fladd@a
  5293  003204  C07E  F065         	movff	___flsub@a+1,___fladd@a+1
  5294  003208  C07F  F066         	movff	___flsub@a+2,___fladd@a+2
  5295  00320C  C080  F067         	movff	___flsub@a+3,___fladd@a+3
  5296  003210  EC41  F00E         	call	___fladd	;wreg free
  5297  003214  C060  F079         	movff	?___fladd,?___flsub
  5298  003218  C061  F07A         	movff	?___fladd+1,?___flsub+1
  5299  00321C  C062  F07B         	movff	?___fladd+2,?___flsub+2
  5300  003220  C063  F07C         	movff	?___fladd+3,?___flsub+3
  5301  003224  0012               	return		;funcret
  5302  003226                     __end_of___flsub:
  5303                           	opt callstack 0
  5304                           
  5305 ;; *************** function ___fladd *****************
  5306 ;; Defined at:
  5307 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  b               4    0[BANK0 ] long 
  5310 ;;  a               4    4[BANK0 ] long 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  grs             1   15[BANK0 ] unsigned char 
  5313 ;;  bexp            1   14[BANK0 ] unsigned char 
  5314 ;;  aexp            1   13[BANK0 ] unsigned char 
  5315 ;;  signs           1   12[BANK0 ] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  4    0[BANK0 ] unsigned char 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5325 ;;      Params:         0       8       0       0       0       0       0       0       0
  5326 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5327 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5328 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5329 ;;Total ram usage:       16 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    5
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_main
  5336 ;;		_efgtoa
  5337 ;;		___flsub
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text19
  5342  001C82                     __ptext19:
  5343                           	opt callstack 0
  5344  001C82                     ___fladd:
  5345                           	opt callstack 20
  5346                           
  5347                           ;incstack = 0
  5348  001C82  0100               	movlb	0	; () banked
  5349  001C84  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5350  001C86  0B80               	andlw	128
  5351  001C88  6F6C               	movwf	___fladd@signs& (0+255),b
  5352  001C8A  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5353  001C8C  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5354  001C8E  6F6E               	movwf	___fladd@bexp& (0+255),b
  5355                           
  5356                           ; BSR set to: 0
  5357  001C90  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  5358                           
  5359                           ; BSR set to: 0
  5360  001C92  816E               	bsf	___fladd@bexp& (0+255),0,b
  5361                           
  5362                           ; BSR set to: 0
  5363  001C94  516E               	movf	___fladd@bexp& (0+255),w,b
  5364  001C96  B4D8               	btfsc	status,2,c
  5365  001C98  D00D               	goto	l3779
  5366                           
  5367                           ; BSR set to: 0
  5368  001C9A  296E               	incf	___fladd@bexp& (0+255),w,b
  5369  001C9C  A4D8               	btfss	status,2,c
  5370  001C9E  D008               	goto	l3775
  5371                           
  5372                           ; BSR set to: 0
  5373  001CA0  0E00               	movlw	0
  5374  001CA2  6F60               	movwf	___fladd@b& (0+255),b
  5375  001CA4  0E00               	movlw	0
  5376  001CA6  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5377  001CA8  0E00               	movlw	0
  5378  001CAA  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5379  001CAC  0E00               	movlw	0
  5380  001CAE  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5381  001CB0                     l3775:
  5382                           
  5383                           ; BSR set to: 0
  5384  001CB0  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5385  001CB2  D006               	goto	L6
  5386  001CB4                     l3779:
  5387                           
  5388                           ; BSR set to: 0
  5389  001CB4  0E00               	movlw	0
  5390  001CB6  6F60               	movwf	___fladd@b& (0+255),b
  5391  001CB8  0E00               	movlw	0
  5392  001CBA  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5393  001CBC  0E00               	movlw	0
  5394  001CBE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5395  001CC0                     L6:
  5396  001CC0  0E00               	movlw	0
  5397  001CC2  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5398                           
  5399                           ; BSR set to: 0
  5400  001CC4  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5401  001CC6  0B80               	andlw	128
  5402  001CC8  6F6D               	movwf	___fladd@aexp& (0+255),b
  5403                           
  5404                           ; BSR set to: 0
  5405  001CCA  516C               	movf	___fladd@signs& (0+255),w,b
  5406  001CCC  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5407  001CCE  A4D8               	btfss	status,2,c
  5408                           
  5409                           ; BSR set to: 0
  5410  001CD0  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5411                           
  5412                           ; BSR set to: 0
  5413  001CD2  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5414  001CD4  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5415  001CD6  6F6D               	movwf	___fladd@aexp& (0+255),b
  5416                           
  5417                           ; BSR set to: 0
  5418  001CD8  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5419                           
  5420                           ; BSR set to: 0
  5421  001CDA  816D               	bsf	___fladd@aexp& (0+255),0,b
  5422                           
  5423                           ; BSR set to: 0
  5424  001CDC  516D               	movf	___fladd@aexp& (0+255),w,b
  5425  001CDE  B4D8               	btfsc	status,2,c
  5426  001CE0  D00D               	goto	l3803
  5427                           
  5428                           ; BSR set to: 0
  5429  001CE2  296D               	incf	___fladd@aexp& (0+255),w,b
  5430  001CE4  A4D8               	btfss	status,2,c
  5431  001CE6  D008               	goto	l3799
  5432                           
  5433                           ; BSR set to: 0
  5434  001CE8  0E00               	movlw	0
  5435  001CEA  6F64               	movwf	___fladd@a& (0+255),b
  5436  001CEC  0E00               	movlw	0
  5437  001CEE  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5438  001CF0  0E00               	movlw	0
  5439  001CF2  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5440  001CF4  0E00               	movlw	0
  5441  001CF6  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5442  001CF8                     l3799:
  5443                           
  5444                           ; BSR set to: 0
  5445  001CF8  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5446  001CFA  D006               	goto	L7
  5447  001CFC                     l3803:
  5448                           
  5449                           ; BSR set to: 0
  5450  001CFC  0E00               	movlw	0
  5451  001CFE  6F64               	movwf	___fladd@a& (0+255),b
  5452  001D00  0E00               	movlw	0
  5453  001D02  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5454  001D04  0E00               	movlw	0
  5455  001D06  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5456  001D08                     L7:
  5457  001D08  0E00               	movlw	0
  5458  001D0A  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5459                           
  5460                           ; BSR set to: 0
  5461  001D0C  516E               	movf	___fladd@bexp& (0+255),w,b
  5462  001D0E  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5463  001D10  B0D8               	btfsc	status,0,c
  5464  001D12  D022               	goto	l3841
  5465                           
  5466                           ; BSR set to: 0
  5467  001D14  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5468  001D16  D002               	goto	l3811
  5469                           
  5470                           ; BSR set to: 0
  5471  001D18  0E80               	movlw	128
  5472  001D1A  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5473  001D1C                     l3811:
  5474                           
  5475                           ; BSR set to: 0
  5476  001D1C  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  5477                           
  5478                           ; BSR set to: 0
  5479  001D20  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5480                           
  5481                           ; BSR set to: 0
  5482  001D24  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  5483                           
  5484                           ; BSR set to: 0
  5485  001D28  C060  F06F         	movff	___fladd@b,___fladd@grs
  5486                           
  5487                           ; BSR set to: 0
  5488  001D2C  C064  F060         	movff	___fladd@a,___fladd@b
  5489                           
  5490                           ; BSR set to: 0
  5491  001D30  C06F  F064         	movff	___fladd@grs,___fladd@a
  5492                           
  5493                           ; BSR set to: 0
  5494  001D34  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  5495                           
  5496                           ; BSR set to: 0
  5497  001D38  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  5498                           
  5499                           ; BSR set to: 0
  5500  001D3C  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  5501                           
  5502                           ; BSR set to: 0
  5503  001D40  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  5504                           
  5505                           ; BSR set to: 0
  5506  001D44  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  5507                           
  5508                           ; BSR set to: 0
  5509  001D48  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  5510                           
  5511                           ; BSR set to: 0
  5512  001D4C  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  5513                           
  5514                           ; BSR set to: 0
  5515  001D50  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  5516                           
  5517                           ; BSR set to: 0
  5518  001D54  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  5519  001D58                     l3841:
  5520                           
  5521                           ; BSR set to: 0
  5522  001D58  0E00               	movlw	0
  5523  001D5A  6F6F               	movwf	___fladd@grs& (0+255),b
  5524                           
  5525                           ; BSR set to: 0
  5526  001D5C  516E               	movf	___fladd@bexp& (0+255),w,b
  5527  001D5E  C06D  F068         	movff	___fladd@aexp,??___fladd
  5528  001D62  6B69               	clrf	(??___fladd+1)& (0+255),b
  5529  001D64  5F68               	subwf	??___fladd& (0+255),f,b
  5530  001D66  0E00               	movlw	0
  5531  001D68  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5532  001D6A  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5533  001D6C  D02C               	goto	l1397
  5534  001D6E  5169               	movf	(??___fladd+1)& (0+255),w,b
  5535  001D70  E104               	bnz	u3290
  5536  001D72  0E1A               	movlw	26
  5537  001D74  5D68               	subwf	??___fladd& (0+255),w,b
  5538  001D76  A0D8               	btfss	status,0,c
  5539  001D78  D026               	goto	l1397
  5540  001D7A                     u3290:
  5541                           
  5542                           ; BSR set to: 0
  5543  001D7A  5160               	movf	___fladd@b& (0+255),w,b
  5544  001D7C  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5545  001D7E  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5546  001D80  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5547  001D82  B4D8               	btfsc	status,2,c
  5548  001D84  D002               	goto	u3300
  5549  001D86  0E01               	movlw	1
  5550  001D88  D001               	goto	u3310
  5551  001D8A                     u3300:
  5552  001D8A  0E00               	movlw	0
  5553  001D8C                     u3310:
  5554  001D8C  6F6F               	movwf	___fladd@grs& (0+255),b
  5555                           
  5556                           ; BSR set to: 0
  5557  001D8E  0E00               	movlw	0
  5558  001D90  6F60               	movwf	___fladd@b& (0+255),b
  5559  001D92  0E00               	movlw	0
  5560  001D94  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5561  001D96  0E00               	movlw	0
  5562  001D98  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5563  001D9A  0E00               	movlw	0
  5564  001D9C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5565                           
  5566                           ; BSR set to: 0
  5567  001D9E  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5568  001DA2  D015               	goto	u3340
  5569  001DA4                     l1398:
  5570                           
  5571                           ; BSR set to: 0
  5572  001DA4  A16F               	btfss	___fladd@grs& (0+255),0,b
  5573  001DA6  D005               	goto	l3853
  5574                           
  5575                           ; BSR set to: 0
  5576  001DA8  90D8               	bcf	status,0,c
  5577  001DAA  316F               	rrcf	___fladd@grs& (0+255),w,b
  5578  001DAC  0901               	iorlw	1
  5579  001DAE  6F6F               	movwf	___fladd@grs& (0+255),b
  5580  001DB0  D002               	goto	l3855
  5581  001DB2                     l3853:
  5582                           
  5583                           ; BSR set to: 0
  5584  001DB2  90D8               	bcf	status,0,c
  5585  001DB4  336F               	rrcf	___fladd@grs& (0+255),f,b
  5586  001DB6                     l3855:
  5587                           
  5588                           ; BSR set to: 0
  5589  001DB6  B160               	btfsc	___fladd@b& (0+255),0,b
  5590                           
  5591                           ; BSR set to: 0
  5592  001DB8  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5593                           
  5594                           ; BSR set to: 0
  5595  001DBA  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5596  001DBC  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5597  001DBE  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5598  001DC0  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5599  001DC2  3360               	rrcf	___fladd@b& (0+255),f,b
  5600                           
  5601                           ; BSR set to: 0
  5602  001DC4  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5603  001DC6                     l1397:
  5604                           
  5605                           ; BSR set to: 0
  5606  001DC6  516D               	movf	___fladd@aexp& (0+255),w,b
  5607  001DC8  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5608  001DCA  A0D8               	btfss	status,0,c
  5609  001DCC  D7EB               	goto	l1398
  5610  001DCE                     u3340:
  5611                           
  5612                           ; BSR set to: 0
  5613  001DCE  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5614  001DD0  D028               	goto	l3887
  5615                           
  5616                           ; BSR set to: 0
  5617  001DD2  516E               	movf	___fladd@bexp& (0+255),w,b
  5618  001DD4  A4D8               	btfss	status,2,c
  5619  001DD6  D009               	goto	l3869
  5620                           
  5621                           ; BSR set to: 0
  5622  001DD8  0E00               	movlw	0
  5623  001DDA  6F60               	movwf	?___fladd& (0+255),b
  5624  001DDC  0E00               	movlw	0
  5625  001DDE  6F61               	movwf	(?___fladd+1)& (0+255),b
  5626  001DE0  0E00               	movlw	0
  5627  001DE2  6F62               	movwf	(?___fladd+2)& (0+255),b
  5628  001DE4  0E00               	movlw	0
  5629  001DE6  6F63               	movwf	(?___fladd+3)& (0+255),b
  5630  001DE8  0012               	return	
  5631  001DEA                     l3869:
  5632                           
  5633                           ; BSR set to: 0
  5634  001DEA  5164               	movf	___fladd@a& (0+255),w,b
  5635  001DEC  2760               	addwf	___fladd@b& (0+255),f,b
  5636  001DEE  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5637  001DF0  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5638  001DF2  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5639  001DF4  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5640  001DF6  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5641  001DF8  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5642                           
  5643                           ; BSR set to: 0
  5644  001DFA  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5645  001DFC  D071               	goto	u3470
  5646                           
  5647                           ; BSR set to: 0
  5648  001DFE  A16F               	btfss	___fladd@grs& (0+255),0,b
  5649  001E00  D005               	goto	l3877
  5650                           
  5651                           ; BSR set to: 0
  5652  001E02  90D8               	bcf	status,0,c
  5653  001E04  316F               	rrcf	___fladd@grs& (0+255),w,b
  5654  001E06  0901               	iorlw	1
  5655  001E08  6F6F               	movwf	___fladd@grs& (0+255),b
  5656  001E0A  D002               	goto	l3879
  5657  001E0C                     l3877:
  5658                           
  5659                           ; BSR set to: 0
  5660  001E0C  90D8               	bcf	status,0,c
  5661  001E0E  336F               	rrcf	___fladd@grs& (0+255),f,b
  5662  001E10                     l3879:
  5663                           
  5664                           ; BSR set to: 0
  5665  001E10  B160               	btfsc	___fladd@b& (0+255),0,b
  5666                           
  5667                           ; BSR set to: 0
  5668  001E12  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5669                           
  5670                           ; BSR set to: 0
  5671  001E14  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5672  001E16  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5673  001E18  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5674  001E1A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5675  001E1C  3360               	rrcf	___fladd@b& (0+255),f,b
  5676                           
  5677                           ; BSR set to: 0
  5678  001E1E  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5679  001E20  D05F               	goto	u3470
  5680  001E22                     l3887:
  5681                           
  5682                           ; BSR set to: 0
  5683  001E22  5164               	movf	___fladd@a& (0+255),w,b
  5684  001E24  5D60               	subwf	___fladd@b& (0+255),w,b
  5685  001E26  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5686  001E28  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5687  001E2A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5688  001E2C  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5689  001E2E  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5690  001E30  0A80               	xorlw	128
  5691  001E32  6F68               	movwf	??___fladd& (0+255),b
  5692  001E34  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5693  001E36  0A80               	xorlw	128
  5694  001E38  5968               	subwfb	??___fladd& (0+255),w,b
  5695  001E3A  B0D8               	btfsc	status,0,c
  5696  001E3C  D025               	goto	l3897
  5697                           
  5698                           ; BSR set to: 0
  5699  001E3E  5160               	movf	___fladd@b& (0+255),w,b
  5700  001E40  5D64               	subwf	___fladd@a& (0+255),w,b
  5701  001E42  6F68               	movwf	??___fladd& (0+255),b
  5702  001E44  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5703  001E46  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5704  001E48  6F69               	movwf	(??___fladd+1)& (0+255),b
  5705  001E4A  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5706  001E4C  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5707  001E4E  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5708  001E50  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5709  001E52  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5710  001E54  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5711  001E56  0EFF               	movlw	255
  5712  001E58  2568               	addwf	??___fladd& (0+255),w,b
  5713  001E5A  6F60               	movwf	___fladd@b& (0+255),b
  5714  001E5C  0EFF               	movlw	255
  5715  001E5E  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5716  001E60  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5717  001E62  0EFF               	movlw	255
  5718  001E64  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5719  001E66  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5720  001E68  0EFF               	movlw	255
  5721  001E6A  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5722  001E6C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5723  001E6E  0E80               	movlw	128
  5724  001E70  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5725                           
  5726                           ; BSR set to: 0
  5727  001E72  6D6F               	negf	___fladd@grs& (0+255),b
  5728                           
  5729                           ; BSR set to: 0
  5730  001E74  516F               	movf	___fladd@grs& (0+255),w,b
  5731  001E76  A4D8               	btfss	status,2,c
  5732  001E78  D00F               	goto	l1413
  5733                           
  5734                           ; BSR set to: 0
  5735  001E7A  0E01               	movlw	1
  5736  001E7C  2760               	addwf	___fladd@b& (0+255),f,b
  5737  001E7E  0E00               	movlw	0
  5738  001E80  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5739  001E82  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5740  001E84  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5741  001E86  D008               	goto	l1413
  5742  001E88                     l3897:
  5743                           
  5744                           ; BSR set to: 0
  5745  001E88  5164               	movf	___fladd@a& (0+255),w,b
  5746  001E8A  5F60               	subwf	___fladd@b& (0+255),f,b
  5747  001E8C  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5748  001E8E  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5749  001E90  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5750  001E92  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5751  001E94  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5752  001E96  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5753  001E98                     l1413:
  5754                           
  5755                           ; BSR set to: 0
  5756  001E98  5160               	movf	___fladd@b& (0+255),w,b
  5757  001E9A  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5758  001E9C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5759  001E9E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5760  001EA0  A4D8               	btfss	status,2,c
  5761  001EA2  D01C               	goto	l3921
  5762                           
  5763                           ; BSR set to: 0
  5764  001EA4  516F               	movf	___fladd@grs& (0+255),w,b
  5765  001EA6  A4D8               	btfss	status,2,c
  5766  001EA8  D019               	goto	l3921
  5767                           
  5768                           ; BSR set to: 0
  5769  001EAA  0E00               	movlw	0
  5770  001EAC  6F60               	movwf	?___fladd& (0+255),b
  5771  001EAE  0E00               	movlw	0
  5772  001EB0  6F61               	movwf	(?___fladd+1)& (0+255),b
  5773  001EB2  0E00               	movlw	0
  5774  001EB4  6F62               	movwf	(?___fladd+2)& (0+255),b
  5775  001EB6  0E00               	movlw	0
  5776  001EB8  6F63               	movwf	(?___fladd+3)& (0+255),b
  5777  001EBA  0012               	return	
  5778  001EBC                     l3905:
  5779                           
  5780                           ; BSR set to: 0
  5781  001EBC  90D8               	bcf	status,0,c
  5782  001EBE  3760               	rlcf	___fladd@b& (0+255),f,b
  5783  001EC0  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5784  001EC2  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5785  001EC4  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5786                           
  5787                           ; BSR set to: 0
  5788  001EC6  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5789                           
  5790                           ; BSR set to: 0
  5791  001EC8  8160               	bsf	___fladd@b& (0+255),0,b
  5792                           
  5793                           ; BSR set to: 0
  5794  001ECA  A16F               	btfss	___fladd@grs& (0+255),0,b
  5795  001ECC  D002               	goto	l3915
  5796                           
  5797                           ; BSR set to: 0
  5798  001ECE  80D8               	bsf	status,0,c
  5799  001ED0  D001               	goto	L8
  5800  001ED2                     l3915:
  5801                           
  5802                           ; BSR set to: 0
  5803  001ED2  90D8               	bcf	status,0,c
  5804  001ED4                     L8:
  5805  001ED4  376F               	rlcf	___fladd@grs& (0+255),f,b
  5806                           
  5807                           ; BSR set to: 0
  5808  001ED6  516E               	movf	___fladd@bexp& (0+255),w,b
  5809  001ED8  A4D8               	btfss	status,2,c
  5810                           
  5811                           ; BSR set to: 0
  5812  001EDA  076E               	decf	___fladd@bexp& (0+255),f,b
  5813  001EDC                     l3921:
  5814                           
  5815                           ; BSR set to: 0
  5816  001EDC  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5817  001EDE  D7EE               	goto	l3905
  5818  001EE0                     u3470:
  5819                           
  5820                           ; BSR set to: 0
  5821  001EE0  0E00               	movlw	0
  5822  001EE2  6F6D               	movwf	___fladd@aexp& (0+255),b
  5823                           
  5824                           ; BSR set to: 0
  5825  001EE4  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5826  001EE6  D00B               	goto	l1422
  5827                           
  5828                           ; BSR set to: 0
  5829  001EE8  C06F  F068         	movff	___fladd@grs,??___fladd
  5830  001EEC  0E7F               	movlw	127
  5831  001EEE  1768               	andwf	??___fladd& (0+255),f,b
  5832  001EF0  B4D8               	btfsc	status,2,c
  5833  001EF2  D003               	goto	l1423
  5834  001EF4                     u3490:
  5835                           
  5836                           ; BSR set to: 0
  5837  001EF4  0E01               	movlw	1
  5838  001EF6  6F6D               	movwf	___fladd@aexp& (0+255),b
  5839  001EF8  D002               	goto	l1422
  5840  001EFA                     l1423:
  5841                           
  5842                           ; BSR set to: 0
  5843  001EFA  B160               	btfsc	___fladd@b& (0+255),0,b
  5844  001EFC  D7FB               	goto	u3490
  5845  001EFE                     l1422:
  5846                           
  5847                           ; BSR set to: 0
  5848  001EFE  516D               	movf	___fladd@aexp& (0+255),w,b
  5849  001F00  B4D8               	btfsc	status,2,c
  5850  001F02  D020               	goto	l3941
  5851                           
  5852                           ; BSR set to: 0
  5853  001F04  0E01               	movlw	1
  5854  001F06  2760               	addwf	___fladd@b& (0+255),f,b
  5855  001F08  0E00               	movlw	0
  5856  001F0A  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5857  001F0C  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5858  001F0E  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5859                           
  5860                           ; BSR set to: 0
  5861  001F10  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5862  001F12  D018               	goto	l3941
  5863                           
  5864                           ; BSR set to: 0
  5865  001F14  C060  F068         	movff	___fladd@b,??___fladd
  5866  001F18  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5867  001F1C  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5868  001F20  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5869  001F24  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5870  001F26  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5871  001F28  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5872  001F2A  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5873  001F2C  3368               	rrcf	??___fladd& (0+255),f,b
  5874  001F2E  C068  F060         	movff	??___fladd,___fladd@b
  5875  001F32  C069  F061         	movff	??___fladd+1,___fladd@b+1
  5876  001F36  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  5877  001F3A  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  5878  001F3E  296E               	incf	___fladd@bexp& (0+255),w,b
  5879  001F40  A4D8               	btfss	status,2,c
  5880                           
  5881                           ; BSR set to: 0
  5882  001F42  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5883  001F44                     l3941:
  5884                           
  5885                           ; BSR set to: 0
  5886  001F44  296E               	incf	___fladd@bexp& (0+255),w,b
  5887  001F46  B4D8               	btfsc	status,2,c
  5888  001F48  D003               	goto	u3550
  5889                           
  5890                           ; BSR set to: 0
  5891  001F4A  516E               	movf	___fladd@bexp& (0+255),w,b
  5892  001F4C  A4D8               	btfss	status,2,c
  5893  001F4E  D00D               	goto	l3949
  5894  001F50                     u3550:
  5895                           
  5896                           ; BSR set to: 0
  5897  001F50  0E00               	movlw	0
  5898  001F52  6F60               	movwf	___fladd@b& (0+255),b
  5899  001F54  0E00               	movlw	0
  5900  001F56  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5901  001F58  0E00               	movlw	0
  5902  001F5A  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5903  001F5C  0E00               	movlw	0
  5904  001F5E  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5905  001F60  516E               	movf	___fladd@bexp& (0+255),w,b
  5906  001F62  A4D8               	btfss	status,2,c
  5907  001F64  D002               	goto	l3949
  5908                           
  5909                           ; BSR set to: 0
  5910  001F66  0E00               	movlw	0
  5911  001F68  6F6C               	movwf	___fladd@signs& (0+255),b
  5912  001F6A                     l3949:
  5913                           
  5914                           ; BSR set to: 0
  5915  001F6A  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5916  001F6C  D002               	goto	l3953
  5917                           
  5918                           ; BSR set to: 0
  5919  001F6E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5920  001F70  D001               	goto	l3955
  5921  001F72                     l3953:
  5922                           
  5923                           ; BSR set to: 0
  5924  001F72  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5925  001F74                     l3955:
  5926                           
  5927                           ; BSR set to: 0
  5928  001F74  90D8               	bcf	status,0,c
  5929  001F76  316E               	rrcf	___fladd@bexp& (0+255),w,b
  5930  001F78  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5931                           
  5932                           ; BSR set to: 0
  5933  001F7A  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  5934                           
  5935                           ; BSR set to: 0
  5936  001F7C  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5937                           
  5938                           ; BSR set to: 0
  5939  001F7E  C060  F060         	movff	___fladd@b,?___fladd
  5940  001F82  C061  F061         	movff	___fladd@b+1,?___fladd+1
  5941  001F86  C062  F062         	movff	___fladd@b+2,?___fladd+2
  5942  001F8A  C063  F063         	movff	___fladd@b+3,?___fladd+3
  5943                           
  5944                           ; BSR set to: 0
  5945  001F8E  0012               	return		;funcret
  5946  001F90                     __end_of___fladd:
  5947                           	opt callstack 0
  5948                           
  5949 ;; *************** function ___flneg *****************
  5950 ;; Defined at:
  5951 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  f1              4    0[BANK0 ] unsigned char 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  4    0[BANK0 ] unsigned char 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5965 ;;      Params:         0       4       0       0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5968 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5969 ;;Total ram usage:        4 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    5
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_efgtoa
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text20
  5980  00345E                     __ptext20:
  5981                           	opt callstack 0
  5982  00345E                     ___flneg:
  5983                           	opt callstack 21
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;incstack = 0
  5987  00345E  0100               	movlb	0	; () banked
  5988  003460  5160               	movf	___flneg@f1& (0+255),w,b
  5989  003462  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5990  003464  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5991  003466  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5992  003468  B4D8               	btfsc	status,2,c
  5993  00346A  D008               	goto	l4457
  5994                           
  5995                           ; BSR set to: 0
  5996  00346C  0E00               	movlw	0
  5997  00346E  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5998  003470  0E00               	movlw	0
  5999  003472  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6000  003474  0E00               	movlw	0
  6001  003476  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6002  003478  0E80               	movlw	128
  6003  00347A  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6004  00347C                     l4457:
  6005                           
  6006                           ; BSR set to: 0
  6007  00347C  C060  F060         	movff	___flneg@f1,?___flneg
  6008  003480  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  6009  003484  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  6010  003488  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  6011                           
  6012                           ; BSR set to: 0
  6013  00348C  0012               	return		;funcret
  6014  00348E                     __end_of___flneg:
  6015                           	opt callstack 0
  6016                           
  6017 ;; *************** function ___flmul *****************
  6018 ;; Defined at:
  6019 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  b               4    0[BANK0 ] unsigned char 
  6022 ;;  a               4    4[BANK0 ] unsigned char 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;  prod            4   19[BANK0 ] struct .
  6025 ;;  grs             4   13[BANK0 ] unsigned long 
  6026 ;;  temp            2   23[BANK0 ] struct .
  6027 ;;  bexp            1   18[BANK0 ] unsigned char 
  6028 ;;  aexp            1   17[BANK0 ] unsigned char 
  6029 ;;  sign            1   12[BANK0 ] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  4    0[BANK0 ] unsigned char 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0, prodl, prodh
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6039 ;;      Params:         0       8       0       0       0       0       0       0       0
  6040 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6041 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6042 ;;      Totals:         0      25       0       0       0       0       0       0       0
  6043 ;;Total ram usage:       25 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    5
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		_efgtoa
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text21
  6054  0015DC                     __ptext21:
  6055                           	opt callstack 0
  6056  0015DC                     ___flmul:
  6057                           	opt callstack 21
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;incstack = 0
  6061  0015DC  0100               	movlb	0	; () banked
  6062  0015DE  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6063  0015E0  0B80               	andlw	128
  6064  0015E2  6F6C               	movwf	___flmul@sign& (0+255),b
  6065  0015E4  5163               	movf	(___flmul@b+3)& (0+255),w,b
  6066  0015E6  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  6067  0015E8  6F72               	movwf	___flmul@bexp& (0+255),b
  6068                           
  6069                           ; BSR set to: 0
  6070  0015EA  BF62               	btfsc	(___flmul@b+2)& (0+255),7,b
  6071                           
  6072                           ; BSR set to: 0
  6073  0015EC  8172               	bsf	___flmul@bexp& (0+255),0,b
  6074                           
  6075                           ; BSR set to: 0
  6076  0015EE  5172               	movf	___flmul@bexp& (0+255),w,b
  6077  0015F0  B4D8               	btfsc	status,2,c
  6078  0015F2  D00D               	goto	l4213
  6079                           
  6080                           ; BSR set to: 0
  6081  0015F4  2972               	incf	___flmul@bexp& (0+255),w,b
  6082  0015F6  A4D8               	btfss	status,2,c
  6083  0015F8  D008               	goto	l4211
  6084                           
  6085                           ; BSR set to: 0
  6086  0015FA  0E00               	movlw	0
  6087  0015FC  6F60               	movwf	___flmul@b& (0+255),b
  6088  0015FE  0E00               	movlw	0
  6089  001600  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6090  001602  0E00               	movlw	0
  6091  001604  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6092  001606  0E00               	movlw	0
  6093  001608  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6094  00160A                     l4211:
  6095                           
  6096                           ; BSR set to: 0
  6097  00160A  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  6098  00160C  D008               	goto	l4215
  6099  00160E                     l4213:
  6100                           
  6101                           ; BSR set to: 0
  6102  00160E  0E00               	movlw	0
  6103  001610  6F60               	movwf	___flmul@b& (0+255),b
  6104  001612  0E00               	movlw	0
  6105  001614  6F61               	movwf	(___flmul@b+1)& (0+255),b
  6106  001616  0E00               	movlw	0
  6107  001618  6F62               	movwf	(___flmul@b+2)& (0+255),b
  6108  00161A  0E00               	movlw	0
  6109  00161C  6F63               	movwf	(___flmul@b+3)& (0+255),b
  6110  00161E                     l4215:
  6111                           
  6112                           ; BSR set to: 0
  6113  00161E  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6114  001620  0B80               	andlw	128
  6115  001622  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  6116                           
  6117                           ; BSR set to: 0
  6118  001624  5167               	movf	(___flmul@a+3)& (0+255),w,b
  6119  001626  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  6120  001628  6F71               	movwf	___flmul@aexp& (0+255),b
  6121                           
  6122                           ; BSR set to: 0
  6123  00162A  BF66               	btfsc	(___flmul@a+2)& (0+255),7,b
  6124                           
  6125                           ; BSR set to: 0
  6126  00162C  8171               	bsf	___flmul@aexp& (0+255),0,b
  6127                           
  6128                           ; BSR set to: 0
  6129  00162E  5171               	movf	___flmul@aexp& (0+255),w,b
  6130  001630  B4D8               	btfsc	status,2,c
  6131  001632  D00D               	goto	l4231
  6132                           
  6133                           ; BSR set to: 0
  6134  001634  2971               	incf	___flmul@aexp& (0+255),w,b
  6135  001636  A4D8               	btfss	status,2,c
  6136  001638  D008               	goto	l4229
  6137                           
  6138                           ; BSR set to: 0
  6139  00163A  0E00               	movlw	0
  6140  00163C  6F64               	movwf	___flmul@a& (0+255),b
  6141  00163E  0E00               	movlw	0
  6142  001640  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6143  001642  0E00               	movlw	0
  6144  001644  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6145  001646  0E00               	movlw	0
  6146  001648  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6147  00164A                     l4229:
  6148                           
  6149                           ; BSR set to: 0
  6150  00164A  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  6151  00164C  D008               	goto	l1482
  6152  00164E                     l4231:
  6153                           
  6154                           ; BSR set to: 0
  6155  00164E  0E00               	movlw	0
  6156  001650  6F64               	movwf	___flmul@a& (0+255),b
  6157  001652  0E00               	movlw	0
  6158  001654  6F65               	movwf	(___flmul@a+1)& (0+255),b
  6159  001656  0E00               	movlw	0
  6160  001658  6F66               	movwf	(___flmul@a+2)& (0+255),b
  6161  00165A  0E00               	movlw	0
  6162  00165C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  6163  00165E                     l1482:
  6164                           
  6165                           ; BSR set to: 0
  6166  00165E  5171               	movf	___flmul@aexp& (0+255),w,b
  6167  001660  B4D8               	btfsc	status,2,c
  6168  001662  D003               	goto	u4170
  6169                           
  6170                           ; BSR set to: 0
  6171  001664  5172               	movf	___flmul@bexp& (0+255),w,b
  6172  001666  A4D8               	btfss	status,2,c
  6173  001668  D009               	goto	l4239
  6174  00166A                     u4170:
  6175                           
  6176                           ; BSR set to: 0
  6177  00166A  0E00               	movlw	0
  6178  00166C  6F60               	movwf	?___flmul& (0+255),b
  6179  00166E  0E00               	movlw	0
  6180  001670  6F61               	movwf	(?___flmul+1)& (0+255),b
  6181  001672  0E00               	movlw	0
  6182  001674  6F62               	movwf	(?___flmul+2)& (0+255),b
  6183  001676  0E00               	movlw	0
  6184  001678  6F63               	movwf	(?___flmul+3)& (0+255),b
  6185  00167A  0012               	return	
  6186  00167C                     l4239:
  6187                           
  6188                           ; BSR set to: 0
  6189  00167C  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6190  00167E  0360               	mulwf	___flmul@b& (0+255),b
  6191  001680  CFF3 F077          	movff	prodl,___flmul@temp
  6192  001684  CFF4 F078          	movff	prodh,___flmul@temp+1
  6193                           
  6194                           ; BSR set to: 0
  6195  001688  5177               	movf	___flmul@temp& (0+255),w,b
  6196  00168A  6F6D               	movwf	___flmul@grs& (0+255),b
  6197  00168C  6B6E               	clrf	(___flmul@grs+1)& (0+255),b
  6198  00168E  6B6F               	clrf	(___flmul@grs+2)& (0+255),b
  6199  001690  6B70               	clrf	(___flmul@grs+3)& (0+255),b
  6200                           
  6201                           ; BSR set to: 0
  6202  001692  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6203  001694  6F73               	movwf	___flmul@prod& (0+255),b
  6204  001696  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  6205  001698  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  6206  00169A  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  6207  00169C  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6208  00169E  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6209  0016A0  CFF3 F077          	movff	prodl,___flmul@temp
  6210  0016A4  CFF4 F078          	movff	prodh,___flmul@temp+1
  6211                           
  6212                           ; BSR set to: 0
  6213  0016A8  5177               	movf	___flmul@temp& (0+255),w,b
  6214  0016AA  276D               	addwf	___flmul@grs& (0+255),f,b
  6215  0016AC  0E00               	movlw	0
  6216  0016AE  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6217  0016B0  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6218  0016B2  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6219                           
  6220                           ; BSR set to: 0
  6221  0016B4  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6222  0016B6  2773               	addwf	___flmul@prod& (0+255),f,b
  6223  0016B8  0E00               	movlw	0
  6224  0016BA  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6225  0016BC  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6226  0016BE  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6227  0016C0  5164               	movf	___flmul@a& (0+255),w,b
  6228  0016C2  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6229  0016C4  CFF3 F077          	movff	prodl,___flmul@temp
  6230  0016C8  CFF4 F078          	movff	prodh,___flmul@temp+1
  6231                           
  6232                           ; BSR set to: 0
  6233  0016CC  5177               	movf	___flmul@temp& (0+255),w,b
  6234  0016CE  276D               	addwf	___flmul@grs& (0+255),f,b
  6235  0016D0  0E00               	movlw	0
  6236  0016D2  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6237  0016D4  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6238  0016D6  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6239                           
  6240                           ; BSR set to: 0
  6241  0016D8  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6242  0016DA  2773               	addwf	___flmul@prod& (0+255),f,b
  6243  0016DC  0E00               	movlw	0
  6244  0016DE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6245  0016E0  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6246  0016E2  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6247                           
  6248                           ; BSR set to: 0
  6249  0016E4  C06F  F070         	movff	___flmul@grs+2,___flmul@grs+3
  6250  0016E8  C06E  F06F         	movff	___flmul@grs+1,___flmul@grs+2
  6251  0016EC  C06D  F06E         	movff	___flmul@grs,___flmul@grs+1
  6252  0016F0  6B6D               	clrf	___flmul@grs& (0+255),b
  6253                           
  6254                           ; BSR set to: 0
  6255  0016F2  5164               	movf	___flmul@a& (0+255),w,b
  6256  0016F4  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6257  0016F6  CFF3 F077          	movff	prodl,___flmul@temp
  6258  0016FA  CFF4 F078          	movff	prodh,___flmul@temp+1
  6259                           
  6260                           ; BSR set to: 0
  6261  0016FE  5177               	movf	___flmul@temp& (0+255),w,b
  6262  001700  276D               	addwf	___flmul@grs& (0+255),f,b
  6263  001702  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6264  001704  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6265  001706  0E00               	movlw	0
  6266  001708  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6267  00170A  0E00               	movlw	0
  6268  00170C  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6269                           
  6270                           ; BSR set to: 0
  6271  00170E  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6272  001710  0360               	mulwf	___flmul@b& (0+255),b
  6273  001712  CFF3 F077          	movff	prodl,___flmul@temp
  6274  001716  CFF4 F078          	movff	prodh,___flmul@temp+1
  6275                           
  6276                           ; BSR set to: 0
  6277  00171A  5177               	movf	___flmul@temp& (0+255),w,b
  6278  00171C  276D               	addwf	___flmul@grs& (0+255),f,b
  6279  00171E  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6280  001720  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6281  001722  0E00               	movlw	0
  6282  001724  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6283  001726  0E00               	movlw	0
  6284  001728  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6285                           
  6286                           ; BSR set to: 0
  6287  00172A  C06F  F070         	movff	___flmul@grs+2,___flmul@grs+3
  6288  00172E  C06E  F06F         	movff	___flmul@grs+1,___flmul@grs+2
  6289  001732  C06D  F06E         	movff	___flmul@grs,___flmul@grs+1
  6290  001736  6B6D               	clrf	___flmul@grs& (0+255),b
  6291  001738  5164               	movf	___flmul@a& (0+255),w,b
  6292  00173A  0360               	mulwf	___flmul@b& (0+255),b
  6293  00173C  CFF3 F077          	movff	prodl,___flmul@temp
  6294  001740  CFF4 F078          	movff	prodh,___flmul@temp+1
  6295                           
  6296                           ; BSR set to: 0
  6297  001744  5177               	movf	___flmul@temp& (0+255),w,b
  6298  001746  276D               	addwf	___flmul@grs& (0+255),f,b
  6299  001748  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6300  00174A  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6301  00174C  0E00               	movlw	0
  6302  00174E  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6303  001750  0E00               	movlw	0
  6304  001752  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6305                           
  6306                           ; BSR set to: 0
  6307  001754  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6308  001756  0361               	mulwf	(___flmul@b+1)& (0+255),b
  6309  001758  CFF3 F077          	movff	prodl,___flmul@temp
  6310  00175C  CFF4 F078          	movff	prodh,___flmul@temp+1
  6311  001760  5177               	movf	___flmul@temp& (0+255),w,b
  6312  001762  2773               	addwf	___flmul@prod& (0+255),f,b
  6313  001764  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6314  001766  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6315  001768  0E00               	movlw	0
  6316  00176A  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6317  00176C  0E00               	movlw	0
  6318  00176E  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6319                           
  6320                           ; BSR set to: 0
  6321  001770  5165               	movf	(___flmul@a+1)& (0+255),w,b
  6322  001772  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6323  001774  CFF3 F077          	movff	prodl,___flmul@temp
  6324  001778  CFF4 F078          	movff	prodh,___flmul@temp+1
  6325                           
  6326                           ; BSR set to: 0
  6327  00177C  5177               	movf	___flmul@temp& (0+255),w,b
  6328  00177E  2773               	addwf	___flmul@prod& (0+255),f,b
  6329  001780  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6330  001782  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6331  001784  0E00               	movlw	0
  6332  001786  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6333  001788  0E00               	movlw	0
  6334  00178A  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6335  00178C  5166               	movf	(___flmul@a+2)& (0+255),w,b
  6336  00178E  0362               	mulwf	(___flmul@b+2)& (0+255),b
  6337  001790  CFF3 F077          	movff	prodl,___flmul@temp
  6338  001794  CFF4 F078          	movff	prodh,___flmul@temp+1
  6339                           
  6340                           ; BSR set to: 0
  6341  001798  5177               	movf	___flmul@temp& (0+255),w,b
  6342  00179A  6F68               	movwf	??___flmul& (0+255),b
  6343  00179C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6344  00179E  6F69               	movwf	(??___flmul+1)& (0+255),b
  6345  0017A0  6B6A               	clrf	(??___flmul+2)& (0+255),b
  6346  0017A2  6B6B               	clrf	(??___flmul+3)& (0+255),b
  6347  0017A4  C06A  F06B         	movff	??___flmul+2,??___flmul+3
  6348  0017A8  C069  F06A         	movff	??___flmul+1,??___flmul+2
  6349  0017AC  C068  F069         	movff	??___flmul,??___flmul+1
  6350  0017B0  6B68               	clrf	??___flmul& (0+255),b
  6351  0017B2  5168               	movf	??___flmul& (0+255),w,b
  6352  0017B4  2773               	addwf	___flmul@prod& (0+255),f,b
  6353  0017B6  5169               	movf	(??___flmul+1)& (0+255),w,b
  6354  0017B8  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6355  0017BA  516A               	movf	(??___flmul+2)& (0+255),w,b
  6356  0017BC  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6357  0017BE  516B               	movf	(??___flmul+3)& (0+255),w,b
  6358  0017C0  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6359                           
  6360                           ; BSR set to: 0
  6361  0017C2  C06D  F068         	movff	___flmul@grs,??___flmul
  6362  0017C6  C06E  F069         	movff	___flmul@grs+1,??___flmul+1
  6363  0017CA  C06F  F06A         	movff	___flmul@grs+2,??___flmul+2
  6364  0017CE  C070  F06B         	movff	___flmul@grs+3,??___flmul+3
  6365  0017D2  0E19               	movlw	25
  6366  0017D4  D005               	goto	u4180
  6367  0017D6                     u4185:
  6368  0017D6  90D8               	bcf	status,0,c
  6369  0017D8  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6370  0017DA  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6371  0017DC  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6372  0017DE  3368               	rrcf	??___flmul& (0+255),f,b
  6373  0017E0                     u4180:
  6374  0017E0  2EE8               	decfsz	wreg,f,c
  6375  0017E2  D7F9               	goto	u4185
  6376  0017E4  5168               	movf	??___flmul& (0+255),w,b
  6377  0017E6  2773               	addwf	___flmul@prod& (0+255),f,b
  6378  0017E8  5169               	movf	(??___flmul+1)& (0+255),w,b
  6379  0017EA  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6380  0017EC  516A               	movf	(??___flmul+2)& (0+255),w,b
  6381  0017EE  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6382  0017F0  516B               	movf	(??___flmul+3)& (0+255),w,b
  6383  0017F2  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6384                           
  6385                           ; BSR set to: 0
  6386  0017F4  C06F  F070         	movff	___flmul@grs+2,___flmul@grs+3
  6387  0017F8  C06E  F06F         	movff	___flmul@grs+1,___flmul@grs+2
  6388  0017FC  C06D  F06E         	movff	___flmul@grs,___flmul@grs+1
  6389  001800  6B6D               	clrf	___flmul@grs& (0+255),b
  6390                           
  6391                           ; BSR set to: 0
  6392  001802  5171               	movf	___flmul@aexp& (0+255),w,b
  6393  001804  C072  F068         	movff	___flmul@bexp,??___flmul
  6394  001808  6B69               	clrf	(??___flmul+1)& (0+255),b
  6395  00180A  2768               	addwf	??___flmul& (0+255),f,b
  6396  00180C  0E00               	movlw	0
  6397  00180E  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  6398  001810  0E82               	movlw	130
  6399  001812  2568               	addwf	??___flmul& (0+255),w,b
  6400  001814  6F77               	movwf	___flmul@temp& (0+255),b
  6401  001816  0EFF               	movlw	255
  6402  001818  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  6403  00181A  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  6404  00181C  D00F               	goto	l4287
  6405  00181E                     l4281:
  6406                           
  6407                           ; BSR set to: 0
  6408  00181E  90D8               	bcf	status,0,c
  6409  001820  3773               	rlcf	___flmul@prod& (0+255),f,b
  6410  001822  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6411  001824  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6412  001826  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6413                           
  6414                           ; BSR set to: 0
  6415  001828  BF70               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6416                           
  6417                           ; BSR set to: 0
  6418  00182A  8173               	bsf	___flmul@prod& (0+255),0,b
  6419                           
  6420                           ; BSR set to: 0
  6421  00182C  90D8               	bcf	status,0,c
  6422  00182E  376D               	rlcf	___flmul@grs& (0+255),f,b
  6423  001830  376E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6424  001832  376F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6425  001834  3770               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6426  001836  0777               	decf	___flmul@temp& (0+255),f,b
  6427  001838  A0D8               	btfss	status,0,c
  6428  00183A  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  6429  00183C                     l4287:
  6430                           
  6431                           ; BSR set to: 0
  6432  00183C  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  6433  00183E  D7EF               	goto	l4281
  6434                           
  6435                           ; BSR set to: 0
  6436  001840  0E00               	movlw	0
  6437  001842  6F71               	movwf	___flmul@aexp& (0+255),b
  6438                           
  6439                           ; BSR set to: 0
  6440  001844  AF70               	btfss	(___flmul@grs+3)& (0+255),7,b
  6441  001846  D017               	goto	l1491
  6442                           
  6443                           ; BSR set to: 0
  6444  001848  0EFF               	movlw	255
  6445  00184A  156D               	andwf	___flmul@grs& (0+255),w,b
  6446  00184C  6F68               	movwf	??___flmul& (0+255),b
  6447  00184E  0EFF               	movlw	255
  6448  001850  156E               	andwf	(___flmul@grs+1)& (0+255),w,b
  6449  001852  6F69               	movwf	(??___flmul+1)& (0+255),b
  6450  001854  0EFF               	movlw	255
  6451  001856  156F               	andwf	(___flmul@grs+2)& (0+255),w,b
  6452  001858  6F6A               	movwf	(??___flmul+2)& (0+255),b
  6453  00185A  0E7F               	movlw	127
  6454  00185C  1570               	andwf	(___flmul@grs+3)& (0+255),w,b
  6455  00185E  6F6B               	movwf	(??___flmul+3)& (0+255),b
  6456  001860  5168               	movf	??___flmul& (0+255),w,b
  6457  001862  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  6458  001864  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  6459  001866  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  6460  001868  B4D8               	btfsc	status,2,c
  6461  00186A  D003               	goto	l1492
  6462  00186C                     u4220:
  6463                           
  6464                           ; BSR set to: 0
  6465  00186C  0E01               	movlw	1
  6466  00186E  6F71               	movwf	___flmul@aexp& (0+255),b
  6467  001870  D002               	goto	l1491
  6468  001872                     l1492:
  6469                           
  6470                           ; BSR set to: 0
  6471  001872  B173               	btfsc	___flmul@prod& (0+255),0,b
  6472  001874  D7FB               	goto	u4220
  6473  001876                     l1491:
  6474                           
  6475                           ; BSR set to: 0
  6476  001876  5171               	movf	___flmul@aexp& (0+255),w,b
  6477  001878  B4D8               	btfsc	status,2,c
  6478  00187A  D01F               	goto	l4307
  6479                           
  6480                           ; BSR set to: 0
  6481  00187C  0E01               	movlw	1
  6482  00187E  2773               	addwf	___flmul@prod& (0+255),f,b
  6483  001880  0E00               	movlw	0
  6484  001882  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6485  001884  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6486  001886  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6487                           
  6488                           ; BSR set to: 0
  6489  001888  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  6490  00188A  D017               	goto	l4307
  6491                           
  6492                           ; BSR set to: 0
  6493  00188C  C073  F068         	movff	___flmul@prod,??___flmul
  6494  001890  C074  F069         	movff	___flmul@prod+1,??___flmul+1
  6495  001894  C075  F06A         	movff	___flmul@prod+2,??___flmul+2
  6496  001898  C076  F06B         	movff	___flmul@prod+3,??___flmul+3
  6497  00189C  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  6498  00189E  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  6499  0018A0  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  6500  0018A2  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  6501  0018A4  3368               	rrcf	??___flmul& (0+255),f,b
  6502  0018A6  C068  F073         	movff	??___flmul,___flmul@prod
  6503  0018AA  C069  F074         	movff	??___flmul+1,___flmul@prod+1
  6504  0018AE  C06A  F075         	movff	??___flmul+2,___flmul@prod+2
  6505  0018B2  C06B  F076         	movff	??___flmul+3,___flmul@prod+3
  6506                           
  6507                           ; BSR set to: 0
  6508  0018B6  4B77               	infsnz	___flmul@temp& (0+255),f,b
  6509  0018B8  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  6510  0018BA                     l4307:
  6511                           
  6512                           ; BSR set to: 0
  6513  0018BA  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6514  0018BC  D00D               	goto	l4311
  6515  0018BE  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6516  0018C0  E103               	bnz	u4260
  6517  0018C2  2977               	incf	___flmul@temp& (0+255),w,b
  6518  0018C4  A0D8               	btfss	status,0,c
  6519  0018C6  D008               	goto	l4311
  6520  0018C8                     u4260:
  6521                           
  6522                           ; BSR set to: 0
  6523  0018C8  0E00               	movlw	0
  6524  0018CA  6F73               	movwf	___flmul@prod& (0+255),b
  6525  0018CC  0E00               	movlw	0
  6526  0018CE  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6527  0018D0  0E80               	movlw	128
  6528  0018D2  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6529  0018D4  0E7F               	movlw	127
  6530  0018D6  D020               	goto	L9
  6531  0018D8                     l4311:
  6532                           
  6533                           ; BSR set to: 0
  6534  0018D8  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6535  0018DA  D005               	goto	u4270
  6536  0018DC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  6537  0018DE  E10E               	bnz	l1499
  6538  0018E0  0577               	decf	___flmul@temp& (0+255),w,b
  6539  0018E2  B0D8               	btfsc	status,0,c
  6540  0018E4  D00B               	goto	l1499
  6541  0018E6                     u4270:
  6542                           
  6543                           ; BSR set to: 0
  6544  0018E6  0E00               	movlw	0
  6545  0018E8  6F73               	movwf	___flmul@prod& (0+255),b
  6546  0018EA  0E00               	movlw	0
  6547  0018EC  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  6548  0018EE  0E00               	movlw	0
  6549  0018F0  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  6550  0018F2  0E00               	movlw	0
  6551  0018F4  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6552  0018F6  0E00               	movlw	0
  6553  0018F8  6F6C               	movwf	___flmul@sign& (0+255),b
  6554  0018FA  D00F               	goto	l4323
  6555  0018FC                     l1499:
  6556                           
  6557                           ; BSR set to: 0
  6558  0018FC  C077  F072         	movff	___flmul@temp,___flmul@bexp
  6559                           
  6560                           ; BSR set to: 0
  6561  001900  0EFF               	movlw	255
  6562  001902  1773               	andwf	___flmul@prod& (0+255),f,b
  6563  001904  0EFF               	movlw	255
  6564  001906  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  6565  001908  0E7F               	movlw	127
  6566  00190A  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  6567  00190C  0E00               	movlw	0
  6568  00190E  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  6569                           
  6570                           ; BSR set to: 0
  6571  001910  B172               	btfsc	___flmul@bexp& (0+255),0,b
  6572                           
  6573                           ; BSR set to: 0
  6574  001912  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  6575                           
  6576                           ; BSR set to: 0
  6577  001914  90D8               	bcf	status,0,c
  6578  001916  3172               	rrcf	___flmul@bexp& (0+255),w,b
  6579  001918                     L9:
  6580  001918  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  6581  00191A                     l4323:
  6582                           
  6583                           ; BSR set to: 0
  6584  00191A  516C               	movf	___flmul@sign& (0+255),w,b
  6585  00191C  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6586                           
  6587                           ; BSR set to: 0
  6588  00191E  C073  F060         	movff	___flmul@prod,?___flmul
  6589  001922  C074  F061         	movff	___flmul@prod+1,?___flmul+1
  6590  001926  C075  F062         	movff	___flmul@prod+2,?___flmul+2
  6591  00192A  C076  F063         	movff	___flmul@prod+3,?___flmul+3
  6592                           
  6593                           ; BSR set to: 0
  6594  00192E  0012               	return		;funcret
  6595  001930                     __end_of___flmul:
  6596                           	opt callstack 0
  6597                           
  6598 ;; *************** function ___flge *****************
  6599 ;; Defined at:
  6600 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  ff1             4   25[BANK0 ] unsigned char 
  6603 ;;  ff2             4   29[BANK0 ] unsigned char 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;		None               void
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6615 ;;      Params:         0       8       0       0       0       0       0       0       0
  6616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6617 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6618 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6619 ;;Total ram usage:       12 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    5
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_main
  6626 ;;		_efgtoa
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text22
  6631  00291A                     __ptext22:
  6632                           	opt callstack 0
  6633  00291A                     ___flge:
  6634                           	opt callstack 21
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;incstack = 0
  6638  00291A  0E00               	movlw	0
  6639  00291C  0100               	movlb	0	; () banked
  6640  00291E  1579               	andwf	___flge@ff1& (0+255),w,b
  6641  002920  6F81               	movwf	??___flge& (0+255),b
  6642  002922  0E00               	movlw	0
  6643  002924  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  6644  002926  6F82               	movwf	(??___flge+1)& (0+255),b
  6645  002928  0E80               	movlw	128
  6646  00292A  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  6647  00292C  6F83               	movwf	(??___flge+2)& (0+255),b
  6648  00292E  0E7F               	movlw	127
  6649  002930  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  6650  002932  6F84               	movwf	(??___flge+3)& (0+255),b
  6651  002934  5181               	movf	??___flge& (0+255),w,b
  6652  002936  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6653  002938  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6654  00293A  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6655  00293C  A4D8               	btfss	status,2,c
  6656  00293E  D008               	goto	l4435
  6657                           
  6658                           ; BSR set to: 0
  6659  002940  0E00               	movlw	0
  6660  002942  6F79               	movwf	___flge@ff1& (0+255),b
  6661  002944  0E00               	movlw	0
  6662  002946  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  6663  002948  0E00               	movlw	0
  6664  00294A  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  6665  00294C  0E00               	movlw	0
  6666  00294E  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  6667  002950                     l4435:
  6668                           
  6669                           ; BSR set to: 0
  6670  002950  0E00               	movlw	0
  6671  002952  157D               	andwf	___flge@ff2& (0+255),w,b
  6672  002954  6F81               	movwf	??___flge& (0+255),b
  6673  002956  0E00               	movlw	0
  6674  002958  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  6675  00295A  6F82               	movwf	(??___flge+1)& (0+255),b
  6676  00295C  0E80               	movlw	128
  6677  00295E  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  6678  002960  6F83               	movwf	(??___flge+2)& (0+255),b
  6679  002962  0E7F               	movlw	127
  6680  002964  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  6681  002966  6F84               	movwf	(??___flge+3)& (0+255),b
  6682  002968  5181               	movf	??___flge& (0+255),w,b
  6683  00296A  1182               	iorwf	(??___flge+1)& (0+255),w,b
  6684  00296C  1183               	iorwf	(??___flge+2)& (0+255),w,b
  6685  00296E  1184               	iorwf	(??___flge+3)& (0+255),w,b
  6686  002970  A4D8               	btfss	status,2,c
  6687  002972  D008               	goto	l4439
  6688                           
  6689                           ; BSR set to: 0
  6690  002974  0E00               	movlw	0
  6691  002976  6F7D               	movwf	___flge@ff2& (0+255),b
  6692  002978  0E00               	movlw	0
  6693  00297A  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  6694  00297C  0E00               	movlw	0
  6695  00297E  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  6696  002980  0E00               	movlw	0
  6697  002982  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  6698  002984                     l4439:
  6699                           
  6700                           ; BSR set to: 0
  6701  002984  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  6702  002986  D009               	goto	l4443
  6703                           
  6704                           ; BSR set to: 0
  6705  002988  6D79               	negf	___flge@ff1& (0+255),b
  6706  00298A  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  6707  00298C  B0D8               	btfsc	status,0,c
  6708  00298E  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  6709  002990  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  6710  002992  B0D8               	btfsc	status,0,c
  6711  002994  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  6712  002996  0E80               	movlw	128
  6713  002998  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6714  00299A                     l4443:
  6715                           
  6716                           ; BSR set to: 0
  6717  00299A  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  6718  00299C  D009               	goto	l1133
  6719                           
  6720                           ; BSR set to: 0
  6721  00299E  6D7D               	negf	___flge@ff2& (0+255),b
  6722  0029A0  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  6723  0029A2  B0D8               	btfsc	status,0,c
  6724  0029A4  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  6725  0029A6  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  6726  0029A8  B0D8               	btfsc	status,0,c
  6727  0029AA  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  6728  0029AC  0E80               	movlw	128
  6729  0029AE  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6730  0029B0                     l1133:
  6731                           
  6732                           ; BSR set to: 0
  6733  0029B0  0E00               	movlw	0
  6734  0029B2  1B79               	xorwf	___flge@ff1& (0+255),f,b
  6735  0029B4  0E00               	movlw	0
  6736  0029B6  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6737  0029B8  0E00               	movlw	0
  6738  0029BA  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6739  0029BC  0E80               	movlw	128
  6740  0029BE  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6741  0029C0  0E00               	movlw	0
  6742  0029C2  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  6743  0029C4  0E00               	movlw	0
  6744  0029C6  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6745  0029C8  0E00               	movlw	0
  6746  0029CA  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6747  0029CC  0E80               	movlw	128
  6748  0029CE  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6749  0029D0  517D               	movf	___flge@ff2& (0+255),w,b
  6750  0029D2  5D79               	subwf	___flge@ff1& (0+255),w,b
  6751  0029D4  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  6752  0029D6  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6753  0029D8  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  6754  0029DA  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6755  0029DC  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  6756  0029DE  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6757  0029E0  B0D8               	btfsc	status,0,c
  6758  0029E2  D002               	goto	l4449
  6759                           
  6760                           ; BSR set to: 0
  6761  0029E4  90D8               	bcf	status,0,c
  6762  0029E6  0012               	return	
  6763  0029E8                     l4449:
  6764                           
  6765                           ; BSR set to: 0
  6766  0029E8  80D8               	bsf	status,0,c
  6767                           
  6768                           ; BSR set to: 0
  6769  0029EA  0012               	return		;funcret
  6770  0029EC                     __end_of___flge:
  6771                           	opt callstack 0
  6772                           
  6773 ;; *************** function ___fleq *****************
  6774 ;; Defined at:
  6775 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  ff1             4    0[BANK0 ] unsigned char 
  6778 ;;  ff2             4    4[BANK0 ] unsigned char 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;		None               void
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6790 ;;      Params:         0       8       0       0       0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6792 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6793 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6794 ;;Total ram usage:       12 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    5
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_main
  6801 ;;		_efgtoa
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text23
  6806  002D56                     __ptext23:
  6807                           	opt callstack 0
  6808  002D56                     ___fleq:
  6809                           	opt callstack 21
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;incstack = 0
  6813  002D56  0E00               	movlw	0
  6814  002D58  0100               	movlb	0	; () banked
  6815  002D5A  1560               	andwf	___fleq@ff1& (0+255),w,b
  6816  002D5C  6F68               	movwf	??___fleq& (0+255),b
  6817  002D5E  0E00               	movlw	0
  6818  002D60  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6819  002D62  6F69               	movwf	(??___fleq+1)& (0+255),b
  6820  002D64  0E80               	movlw	128
  6821  002D66  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6822  002D68  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6823  002D6A  0E7F               	movlw	127
  6824  002D6C  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6825  002D6E  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6826  002D70  5168               	movf	??___fleq& (0+255),w,b
  6827  002D72  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6828  002D74  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6829  002D76  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6830  002D78  A4D8               	btfss	status,2,c
  6831  002D7A  D008               	goto	l4419
  6832                           
  6833                           ; BSR set to: 0
  6834  002D7C  0E00               	movlw	0
  6835  002D7E  6F60               	movwf	___fleq@ff1& (0+255),b
  6836  002D80  0E00               	movlw	0
  6837  002D82  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6838  002D84  0E00               	movlw	0
  6839  002D86  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6840  002D88  0E00               	movlw	0
  6841  002D8A  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6842  002D8C                     l4419:
  6843                           
  6844                           ; BSR set to: 0
  6845  002D8C  0E00               	movlw	0
  6846  002D8E  1564               	andwf	___fleq@ff2& (0+255),w,b
  6847  002D90  6F68               	movwf	??___fleq& (0+255),b
  6848  002D92  0E00               	movlw	0
  6849  002D94  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6850  002D96  6F69               	movwf	(??___fleq+1)& (0+255),b
  6851  002D98  0E80               	movlw	128
  6852  002D9A  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6853  002D9C  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6854  002D9E  0E7F               	movlw	127
  6855  002DA0  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6856  002DA2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6857  002DA4  5168               	movf	??___fleq& (0+255),w,b
  6858  002DA6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6859  002DA8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6860  002DAA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6861  002DAC  A4D8               	btfss	status,2,c
  6862  002DAE  D008               	goto	l4423
  6863                           
  6864                           ; BSR set to: 0
  6865  002DB0  0E00               	movlw	0
  6866  002DB2  6F64               	movwf	___fleq@ff2& (0+255),b
  6867  002DB4  0E00               	movlw	0
  6868  002DB6  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6869  002DB8  0E00               	movlw	0
  6870  002DBA  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6871  002DBC  0E00               	movlw	0
  6872  002DBE  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6873  002DC0                     l4423:
  6874                           
  6875                           ; BSR set to: 0
  6876  002DC0  5164               	movf	___fleq@ff2& (0+255),w,b
  6877  002DC2  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6878  002DC4  E10A               	bnz	u4430
  6879  002DC6  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6880  002DC8  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6881  002DCA  E107               	bnz	u4430
  6882  002DCC  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6883  002DCE  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6884  002DD0  E104               	bnz	u4430
  6885  002DD2  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6886  002DD4  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6887  002DD6  B4D8               	btfsc	status,2,c
  6888  002DD8  D002               	goto	l4427
  6889  002DDA                     u4430:
  6890                           
  6891                           ; BSR set to: 0
  6892  002DDA  90D8               	bcf	status,0,c
  6893  002DDC  0012               	return	
  6894  002DDE                     l4427:
  6895                           
  6896                           ; BSR set to: 0
  6897  002DDE  80D8               	bsf	status,0,c
  6898                           
  6899                           ; BSR set to: 0
  6900  002DE0  0012               	return		;funcret
  6901  002DE2                     __end_of___fleq:
  6902                           	opt callstack 0
  6903                           
  6904 ;; *************** function ___fldiv *****************
  6905 ;; Defined at:
  6906 ;;		line 11 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  b               4   16[BANK0 ] unsigned char 
  6909 ;;  a               4   20[BANK0 ] unsigned char 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  grs             4   35[BANK0 ] unsigned long 
  6912 ;;  rem             4   28[BANK0 ] unsigned long 
  6913 ;;  new_exp         2   33[BANK0 ] short 
  6914 ;;  aexp            1   40[BANK0 ] unsigned char 
  6915 ;;  bexp            1   39[BANK0 ] unsigned char 
  6916 ;;  sign            1   32[BANK0 ] unsigned char 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  4   16[BANK0 ] unsigned char 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6926 ;;      Params:         0       8       0       0       0       0       0       0       0
  6927 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6928 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6929 ;;      Totals:         0      25       0       0       0       0       0       0       0
  6930 ;;Total ram usage:       25 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    5
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_main
  6937 ;;		_efgtoa
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text24
  6942  001F90                     __ptext24:
  6943                           	opt callstack 0
  6944  001F90                     ___fldiv:
  6945                           	opt callstack 21
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;incstack = 0
  6949  001F90  0100               	movlb	0	; () banked
  6950  001F92  5173               	movf	(___fldiv@b+3)& (0+255),w,b
  6951  001F94  0B80               	andlw	128
  6952  001F96  6F80               	movwf	___fldiv@sign& (0+255),b
  6953  001F98  5173               	movf	(___fldiv@b+3)& (0+255),w,b
  6954  001F9A  2573               	addwf	(___fldiv@b+3)& (0+255),w,b
  6955  001F9C  6F87               	movwf	___fldiv@bexp& (0+255),b
  6956                           
  6957                           ; BSR set to: 0
  6958  001F9E  BF72               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6959                           
  6960                           ; BSR set to: 0
  6961  001FA0  8187               	bsf	___fldiv@bexp& (0+255),0,b
  6962                           
  6963                           ; BSR set to: 0
  6964  001FA2  5187               	movf	___fldiv@bexp& (0+255),w,b
  6965  001FA4  B4D8               	btfsc	status,2,c
  6966  001FA6  D00D               	goto	l4077
  6967                           
  6968                           ; BSR set to: 0
  6969  001FA8  2987               	incf	___fldiv@bexp& (0+255),w,b
  6970  001FAA  A4D8               	btfss	status,2,c
  6971  001FAC  D008               	goto	l4073
  6972                           
  6973                           ; BSR set to: 0
  6974  001FAE  0E00               	movlw	0
  6975  001FB0  6F70               	movwf	___fldiv@b& (0+255),b
  6976  001FB2  0E00               	movlw	0
  6977  001FB4  6F71               	movwf	(___fldiv@b+1)& (0+255),b
  6978  001FB6  0E00               	movlw	0
  6979  001FB8  6F72               	movwf	(___fldiv@b+2)& (0+255),b
  6980  001FBA  0E00               	movlw	0
  6981  001FBC  6F73               	movwf	(___fldiv@b+3)& (0+255),b
  6982  001FBE                     l4073:
  6983                           
  6984                           ; BSR set to: 0
  6985  001FBE  8F72               	bsf	(___fldiv@b+2)& (0+255),7,b
  6986  001FC0  D006               	goto	L10
  6987  001FC2                     l4077:
  6988                           
  6989                           ; BSR set to: 0
  6990  001FC2  0E00               	movlw	0
  6991  001FC4  6F70               	movwf	___fldiv@b& (0+255),b
  6992  001FC6  0E00               	movlw	0
  6993  001FC8  6F71               	movwf	(___fldiv@b+1)& (0+255),b
  6994  001FCA  0E00               	movlw	0
  6995  001FCC  6F72               	movwf	(___fldiv@b+2)& (0+255),b
  6996  001FCE                     L10:
  6997  001FCE  0E00               	movlw	0
  6998  001FD0  6F73               	movwf	(___fldiv@b+3)& (0+255),b
  6999                           
  7000                           ; BSR set to: 0
  7001  001FD2  5177               	movf	(___fldiv@a+3)& (0+255),w,b
  7002  001FD4  0B80               	andlw	128
  7003  001FD6  1B80               	xorwf	___fldiv@sign& (0+255),f,b
  7004                           
  7005                           ; BSR set to: 0
  7006  001FD8  5177               	movf	(___fldiv@a+3)& (0+255),w,b
  7007  001FDA  2577               	addwf	(___fldiv@a+3)& (0+255),w,b
  7008  001FDC  6F88               	movwf	___fldiv@aexp& (0+255),b
  7009                           
  7010                           ; BSR set to: 0
  7011  001FDE  BF76               	btfsc	(___fldiv@a+2)& (0+255),7,b
  7012                           
  7013                           ; BSR set to: 0
  7014  001FE0  8188               	bsf	___fldiv@aexp& (0+255),0,b
  7015                           
  7016                           ; BSR set to: 0
  7017  001FE2  5188               	movf	___fldiv@aexp& (0+255),w,b
  7018  001FE4  B4D8               	btfsc	status,2,c
  7019  001FE6  D00D               	goto	l4097
  7020                           
  7021                           ; BSR set to: 0
  7022  001FE8  2988               	incf	___fldiv@aexp& (0+255),w,b
  7023  001FEA  A4D8               	btfss	status,2,c
  7024  001FEC  D008               	goto	l4093
  7025                           
  7026                           ; BSR set to: 0
  7027  001FEE  0E00               	movlw	0
  7028  001FF0  6F74               	movwf	___fldiv@a& (0+255),b
  7029  001FF2  0E00               	movlw	0
  7030  001FF4  6F75               	movwf	(___fldiv@a+1)& (0+255),b
  7031  001FF6  0E00               	movlw	0
  7032  001FF8  6F76               	movwf	(___fldiv@a+2)& (0+255),b
  7033  001FFA  0E00               	movlw	0
  7034  001FFC  6F77               	movwf	(___fldiv@a+3)& (0+255),b
  7035  001FFE                     l4093:
  7036                           
  7037                           ; BSR set to: 0
  7038  001FFE  8F76               	bsf	(___fldiv@a+2)& (0+255),7,b
  7039  002000  D006               	goto	L11
  7040  002002                     l4097:
  7041                           
  7042                           ; BSR set to: 0
  7043  002002  0E00               	movlw	0
  7044  002004  6F74               	movwf	___fldiv@a& (0+255),b
  7045  002006  0E00               	movlw	0
  7046  002008  6F75               	movwf	(___fldiv@a+1)& (0+255),b
  7047  00200A  0E00               	movlw	0
  7048  00200C  6F76               	movwf	(___fldiv@a+2)& (0+255),b
  7049  00200E                     L11:
  7050  00200E  0E00               	movlw	0
  7051  002010  6F77               	movwf	(___fldiv@a+3)& (0+255),b
  7052                           
  7053                           ; BSR set to: 0
  7054  002012  5174               	movf	___fldiv@a& (0+255),w,b
  7055  002014  1175               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7056  002016  1176               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7057  002018  1177               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7058  00201A  A4D8               	btfss	status,2,c
  7059  00201C  D017               	goto	l4111
  7060                           
  7061                           ; BSR set to: 0
  7062  00201E  0E00               	movlw	0
  7063  002020  6F70               	movwf	___fldiv@b& (0+255),b
  7064  002022  0E00               	movlw	0
  7065  002024  6F71               	movwf	(___fldiv@b+1)& (0+255),b
  7066  002026  0E00               	movlw	0
  7067  002028  6F72               	movwf	(___fldiv@b+2)& (0+255),b
  7068  00202A  0E00               	movlw	0
  7069  00202C  6F73               	movwf	(___fldiv@b+3)& (0+255),b
  7070                           
  7071                           ; BSR set to: 0
  7072  00202E  0E80               	movlw	128
  7073  002030  1372               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7074  002032  0E7F               	movlw	127
  7075  002034  1373               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7076  002036                     l4105:
  7077                           
  7078                           ; BSR set to: 0
  7079  002036  5180               	movf	___fldiv@sign& (0+255),w,b
  7080  002038  1373               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7081                           
  7082                           ; BSR set to: 0
  7083  00203A  C070  F070         	movff	___fldiv@b,?___fldiv
  7084  00203E  C071  F071         	movff	___fldiv@b+1,?___fldiv+1
  7085  002042  C072  F072         	movff	___fldiv@b+2,?___fldiv+2
  7086  002046  C073  F073         	movff	___fldiv@b+3,?___fldiv+3
  7087  00204A  0012               	return	
  7088  00204C                     l4111:
  7089                           
  7090                           ; BSR set to: 0
  7091  00204C  5187               	movf	___fldiv@bexp& (0+255),w,b
  7092  00204E  A4D8               	btfss	status,2,c
  7093  002050  D009               	goto	l4119
  7094                           
  7095                           ; BSR set to: 0
  7096                           
  7097                           ; BSR set to: 0
  7098  002052  0E00               	movlw	0
  7099  002054  6F70               	movwf	?___fldiv& (0+255),b
  7100  002056  0E00               	movlw	0
  7101  002058  6F71               	movwf	(?___fldiv+1)& (0+255),b
  7102  00205A  0E00               	movlw	0
  7103  00205C  6F72               	movwf	(?___fldiv+2)& (0+255),b
  7104  00205E  0E00               	movlw	0
  7105  002060  6F73               	movwf	(?___fldiv+3)& (0+255),b
  7106  002062  0012               	return	
  7107  002064                     l4119:
  7108                           
  7109                           ; BSR set to: 0
  7110  002064  5188               	movf	___fldiv@aexp& (0+255),w,b
  7111  002066  C087  F078         	movff	___fldiv@bexp,??___fldiv
  7112  00206A  6B79               	clrf	(??___fldiv+1)& (0+255),b
  7113  00206C  5F78               	subwf	??___fldiv& (0+255),f,b
  7114  00206E  0E00               	movlw	0
  7115  002070  5B79               	subwfb	(??___fldiv+1)& (0+255),f,b
  7116  002072  0E7F               	movlw	127
  7117  002074  2578               	addwf	??___fldiv& (0+255),w,b
  7118  002076  6F81               	movwf	___fldiv@new_exp& (0+255),b
  7119  002078  0E00               	movlw	0
  7120  00207A  2179               	addwfc	(??___fldiv+1)& (0+255),w,b
  7121  00207C  6F82               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7122                           
  7123                           ; BSR set to: 0
  7124  00207E  C070  F07C         	movff	___fldiv@b,___fldiv@rem
  7125  002082  C071  F07D         	movff	___fldiv@b+1,___fldiv@rem+1
  7126  002086  C072  F07E         	movff	___fldiv@b+2,___fldiv@rem+2
  7127  00208A  C073  F07F         	movff	___fldiv@b+3,___fldiv@rem+3
  7128                           
  7129                           ; BSR set to: 0
  7130  00208E  0E00               	movlw	0
  7131  002090  6F70               	movwf	___fldiv@b& (0+255),b
  7132  002092  0E00               	movlw	0
  7133  002094  6F71               	movwf	(___fldiv@b+1)& (0+255),b
  7134  002096  0E00               	movlw	0
  7135  002098  6F72               	movwf	(___fldiv@b+2)& (0+255),b
  7136  00209A  0E00               	movlw	0
  7137  00209C  6F73               	movwf	(___fldiv@b+3)& (0+255),b
  7138                           
  7139                           ; BSR set to: 0
  7140  00209E  0E00               	movlw	0
  7141  0020A0  6F83               	movwf	___fldiv@grs& (0+255),b
  7142  0020A2  0E00               	movlw	0
  7143  0020A4  6F84               	movwf	(___fldiv@grs+1)& (0+255),b
  7144  0020A6  0E00               	movlw	0
  7145  0020A8  6F85               	movwf	(___fldiv@grs+2)& (0+255),b
  7146  0020AA  0E00               	movlw	0
  7147  0020AC  6F86               	movwf	(___fldiv@grs+3)& (0+255),b
  7148                           
  7149                           ; BSR set to: 0
  7150  0020AE  0E00               	movlw	0
  7151  0020B0  6F88               	movwf	___fldiv@aexp& (0+255),b
  7152  0020B2  D028               	goto	l1452
  7153  0020B4                     l4129:
  7154                           
  7155                           ; BSR set to: 0
  7156  0020B4  5188               	movf	___fldiv@aexp& (0+255),w,b
  7157  0020B6  B4D8               	btfsc	status,2,c
  7158  0020B8  D011               	goto	l4137
  7159                           
  7160                           ; BSR set to: 0
  7161  0020BA  90D8               	bcf	status,0,c
  7162  0020BC  377C               	rlcf	___fldiv@rem& (0+255),f,b
  7163  0020BE  377D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7164  0020C0  377E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7165  0020C2  377F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7166  0020C4  90D8               	bcf	status,0,c
  7167  0020C6  3770               	rlcf	___fldiv@b& (0+255),f,b
  7168  0020C8  3771               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7169  0020CA  3772               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7170  0020CC  3773               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7171                           
  7172                           ; BSR set to: 0
  7173  0020CE  BF86               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7174                           
  7175                           ; BSR set to: 0
  7176  0020D0  8170               	bsf	___fldiv@b& (0+255),0,b
  7177                           
  7178                           ; BSR set to: 0
  7179  0020D2  90D8               	bcf	status,0,c
  7180  0020D4  3783               	rlcf	___fldiv@grs& (0+255),f,b
  7181  0020D6  3784               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7182  0020D8  3785               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7183  0020DA  3786               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7184  0020DC                     l4137:
  7185                           
  7186                           ; BSR set to: 0
  7187  0020DC  5174               	movf	___fldiv@a& (0+255),w,b
  7188  0020DE  5D7C               	subwf	___fldiv@rem& (0+255),w,b
  7189  0020E0  5175               	movf	(___fldiv@a+1)& (0+255),w,b
  7190  0020E2  597D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7191  0020E4  5176               	movf	(___fldiv@a+2)& (0+255),w,b
  7192  0020E6  597E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7193  0020E8  5177               	movf	(___fldiv@a+3)& (0+255),w,b
  7194  0020EA  597F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7195  0020EC  A0D8               	btfss	status,0,c
  7196  0020EE  D009               	goto	l4143
  7197                           
  7198                           ; BSR set to: 0
  7199  0020F0  8D86               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7200                           
  7201                           ; BSR set to: 0
  7202  0020F2  5174               	movf	___fldiv@a& (0+255),w,b
  7203  0020F4  5F7C               	subwf	___fldiv@rem& (0+255),f,b
  7204  0020F6  5175               	movf	(___fldiv@a+1)& (0+255),w,b
  7205  0020F8  5B7D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7206  0020FA  5176               	movf	(___fldiv@a+2)& (0+255),w,b
  7207  0020FC  5B7E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7208  0020FE  5177               	movf	(___fldiv@a+3)& (0+255),w,b
  7209  002100  5B7F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7210  002102                     l4143:
  7211                           
  7212                           ; BSR set to: 0
  7213  002102  2B88               	incf	___fldiv@aexp& (0+255),f,b
  7214  002104                     l1452:
  7215                           
  7216                           ; BSR set to: 0
  7217  002104  0E19               	movlw	25
  7218  002106  6588               	cpfsgt	___fldiv@aexp& (0+255),b
  7219  002108  D7D5               	goto	l4129
  7220                           
  7221                           ; BSR set to: 0
  7222  00210A  517C               	movf	___fldiv@rem& (0+255),w,b
  7223  00210C  117D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7224  00210E  117E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7225  002110  117F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7226  002112  B4D8               	btfsc	status,2,c
  7227  002114  D011               	goto	l4155
  7228                           
  7229                           ; BSR set to: 0
  7230  002116  8183               	bsf	___fldiv@grs& (0+255),0,b
  7231  002118  D00F               	goto	l4155
  7232  00211A                     l4149:
  7233                           
  7234                           ; BSR set to: 0
  7235  00211A  90D8               	bcf	status,0,c
  7236  00211C  3770               	rlcf	___fldiv@b& (0+255),f,b
  7237  00211E  3771               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7238  002120  3772               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7239  002122  3773               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7240                           
  7241                           ; BSR set to: 0
  7242  002124  BF86               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7243                           
  7244                           ; BSR set to: 0
  7245  002126  8170               	bsf	___fldiv@b& (0+255),0,b
  7246                           
  7247                           ; BSR set to: 0
  7248  002128  90D8               	bcf	status,0,c
  7249  00212A  3783               	rlcf	___fldiv@grs& (0+255),f,b
  7250  00212C  3784               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7251  00212E  3785               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7252  002130  3786               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7253  002132  0781               	decf	___fldiv@new_exp& (0+255),f,b
  7254  002134  A0D8               	btfss	status,0,c
  7255  002136  0782               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7256  002138                     l4155:
  7257                           
  7258                           ; BSR set to: 0
  7259  002138  AF72               	btfss	(___fldiv@b+2)& (0+255),7,b
  7260  00213A  D7EF               	goto	l4149
  7261                           
  7262                           ; BSR set to: 0
  7263  00213C  0E00               	movlw	0
  7264  00213E  6F88               	movwf	___fldiv@aexp& (0+255),b
  7265                           
  7266                           ; BSR set to: 0
  7267  002140  AF86               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7268  002142  D017               	goto	l1463
  7269                           
  7270                           ; BSR set to: 0
  7271  002144  0EFF               	movlw	255
  7272  002146  1583               	andwf	___fldiv@grs& (0+255),w,b
  7273  002148  6F78               	movwf	??___fldiv& (0+255),b
  7274  00214A  0EFF               	movlw	255
  7275  00214C  1584               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7276  00214E  6F79               	movwf	(??___fldiv+1)& (0+255),b
  7277  002150  0EFF               	movlw	255
  7278  002152  1585               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7279  002154  6F7A               	movwf	(??___fldiv+2)& (0+255),b
  7280  002156  0E7F               	movlw	127
  7281  002158  1586               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7282  00215A  6F7B               	movwf	(??___fldiv+3)& (0+255),b
  7283  00215C  5178               	movf	??___fldiv& (0+255),w,b
  7284  00215E  1179               	iorwf	(??___fldiv+1)& (0+255),w,b
  7285  002160  117A               	iorwf	(??___fldiv+2)& (0+255),w,b
  7286  002162  117B               	iorwf	(??___fldiv+3)& (0+255),w,b
  7287  002164  B4D8               	btfsc	status,2,c
  7288  002166  D003               	goto	l1464
  7289  002168                     u4030:
  7290                           
  7291                           ; BSR set to: 0
  7292  002168  0E01               	movlw	1
  7293  00216A  6F88               	movwf	___fldiv@aexp& (0+255),b
  7294  00216C  D002               	goto	l1463
  7295  00216E                     l1464:
  7296                           
  7297                           ; BSR set to: 0
  7298  00216E  B170               	btfsc	___fldiv@b& (0+255),0,b
  7299  002170  D7FB               	goto	u4030
  7300  002172                     l1463:
  7301                           
  7302                           ; BSR set to: 0
  7303  002172  5188               	movf	___fldiv@aexp& (0+255),w,b
  7304  002174  B4D8               	btfsc	status,2,c
  7305  002176  D01F               	goto	l4175
  7306                           
  7307                           ; BSR set to: 0
  7308  002178  0E01               	movlw	1
  7309  00217A  2770               	addwf	___fldiv@b& (0+255),f,b
  7310  00217C  0E00               	movlw	0
  7311  00217E  2371               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7312  002180  2372               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7313  002182  2373               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7314                           
  7315                           ; BSR set to: 0
  7316  002184  A173               	btfss	(___fldiv@b+3)& (0+255),0,b
  7317  002186  D017               	goto	l4175
  7318                           
  7319                           ; BSR set to: 0
  7320  002188  C070  F078         	movff	___fldiv@b,??___fldiv
  7321  00218C  C071  F079         	movff	___fldiv@b+1,??___fldiv+1
  7322  002190  C072  F07A         	movff	___fldiv@b+2,??___fldiv+2
  7323  002194  C073  F07B         	movff	___fldiv@b+3,??___fldiv+3
  7324  002198  357B               	rlcf	(??___fldiv+3)& (0+255),w,b
  7325  00219A  337B               	rrcf	(??___fldiv+3)& (0+255),f,b
  7326  00219C  337A               	rrcf	(??___fldiv+2)& (0+255),f,b
  7327  00219E  3379               	rrcf	(??___fldiv+1)& (0+255),f,b
  7328  0021A0  3378               	rrcf	??___fldiv& (0+255),f,b
  7329  0021A2  C078  F070         	movff	??___fldiv,___fldiv@b
  7330  0021A6  C079  F071         	movff	??___fldiv+1,___fldiv@b+1
  7331  0021AA  C07A  F072         	movff	??___fldiv+2,___fldiv@b+2
  7332  0021AE  C07B  F073         	movff	??___fldiv+3,___fldiv@b+3
  7333                           
  7334                           ; BSR set to: 0
  7335  0021B2  4B81               	infsnz	___fldiv@new_exp& (0+255),f,b
  7336  0021B4  2B82               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7337  0021B6                     l4175:
  7338                           
  7339                           ; BSR set to: 0
  7340  0021B6  BF82               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7341  0021B8  D010               	goto	l4179
  7342  0021BA  5182               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7343  0021BC  E103               	bnz	u4070
  7344  0021BE  2981               	incf	___fldiv@new_exp& (0+255),w,b
  7345  0021C0  A0D8               	btfss	status,0,c
  7346  0021C2  D00B               	goto	l4179
  7347  0021C4                     u4070:
  7348                           
  7349                           ; BSR set to: 0
  7350  0021C4  0E00               	movlw	0
  7351  0021C6  6F82               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7352  0021C8  6981               	setf	___fldiv@new_exp& (0+255),b
  7353  0021CA  0E00               	movlw	0
  7354  0021CC  6F70               	movwf	___fldiv@b& (0+255),b
  7355  0021CE  0E00               	movlw	0
  7356  0021D0  6F71               	movwf	(___fldiv@b+1)& (0+255),b
  7357  0021D2  0E00               	movlw	0
  7358  0021D4  6F72               	movwf	(___fldiv@b+2)& (0+255),b
  7359  0021D6  0E00               	movlw	0
  7360  0021D8  6F73               	movwf	(___fldiv@b+3)& (0+255),b
  7361  0021DA                     l4179:
  7362                           
  7363                           ; BSR set to: 0
  7364  0021DA  BF82               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7365  0021DC  D005               	goto	u4080
  7366  0021DE  5182               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7367  0021E0  E111               	bnz	l4183
  7368  0021E2  0581               	decf	___fldiv@new_exp& (0+255),w,b
  7369  0021E4  B0D8               	btfsc	status,0,c
  7370  0021E6  D00E               	goto	l4183
  7371  0021E8                     u4080:
  7372                           
  7373                           ; BSR set to: 0
  7374  0021E8  0E00               	movlw	0
  7375  0021EA  6F82               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7376  0021EC  0E00               	movlw	0
  7377  0021EE  6F81               	movwf	___fldiv@new_exp& (0+255),b
  7378  0021F0  0E00               	movlw	0
  7379  0021F2  6F70               	movwf	___fldiv@b& (0+255),b
  7380  0021F4  0E00               	movlw	0
  7381  0021F6  6F71               	movwf	(___fldiv@b+1)& (0+255),b
  7382  0021F8  0E00               	movlw	0
  7383  0021FA  6F72               	movwf	(___fldiv@b+2)& (0+255),b
  7384  0021FC  0E00               	movlw	0
  7385  0021FE  6F73               	movwf	(___fldiv@b+3)& (0+255),b
  7386  002200  0E00               	movlw	0
  7387  002202  6F80               	movwf	___fldiv@sign& (0+255),b
  7388  002204                     l4183:
  7389                           
  7390                           ; BSR set to: 0
  7391  002204  C081  F087         	movff	___fldiv@new_exp,___fldiv@bexp
  7392                           
  7393                           ; BSR set to: 0
  7394  002208  A187               	btfss	___fldiv@bexp& (0+255),0,b
  7395  00220A  D002               	goto	l4189
  7396                           
  7397                           ; BSR set to: 0
  7398  00220C  8F72               	bsf	(___fldiv@b+2)& (0+255),7,b
  7399  00220E  D001               	goto	l4191
  7400  002210                     l4189:
  7401                           
  7402                           ; BSR set to: 0
  7403  002210  9F72               	bcf	(___fldiv@b+2)& (0+255),7,b
  7404  002212                     l4191:
  7405                           
  7406                           ; BSR set to: 0
  7407  002212  90D8               	bcf	status,0,c
  7408  002214  3187               	rrcf	___fldiv@bexp& (0+255),w,b
  7409  002216  6F73               	movwf	(___fldiv@b+3)& (0+255),b
  7410  002218  D70E               	goto	l4105
  7411  00221A                     __end_of___fldiv:
  7412                           	opt callstack 0
  7413                           
  7414 ;; *************** function ___awmod *****************
  7415 ;; Defined at:
  7416 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  dividend        2    0[BANK0 ] int 
  7419 ;;  divisor         2    2[BANK0 ] int 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  sign            1    5[BANK0 ] unsigned char 
  7422 ;;  counter         1    4[BANK0 ] unsigned char 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  2    0[BANK0 ] int 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7432 ;;      Params:         0       4       0       0       0       0       0       0       0
  7433 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7435 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7436 ;;Total ram usage:        6 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    5
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		_efgtoa
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text25
  7447  002EEE                     __ptext25:
  7448                           	opt callstack 0
  7449  002EEE                     ___awmod:
  7450                           	opt callstack 21
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;incstack = 0
  7454  002EEE  0E00               	movlw	0
  7455  002EF0  0100               	movlb	0	; () banked
  7456  002EF2  6F65               	movwf	___awmod@sign& (0+255),b
  7457                           
  7458                           ; BSR set to: 0
  7459  002EF4  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7460  002EF6  D006               	goto	l4387
  7461                           
  7462                           ; BSR set to: 0
  7463  002EF8  6D60               	negf	___awmod@dividend& (0+255),b
  7464  002EFA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7465  002EFC  B0D8               	btfsc	status,0,c
  7466  002EFE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7467                           
  7468                           ; BSR set to: 0
  7469  002F00  0E01               	movlw	1
  7470  002F02  6F65               	movwf	___awmod@sign& (0+255),b
  7471  002F04                     l4387:
  7472                           
  7473                           ; BSR set to: 0
  7474  002F04  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7475  002F06  D004               	goto	l4391
  7476                           
  7477                           ; BSR set to: 0
  7478  002F08  6D62               	negf	___awmod@divisor& (0+255),b
  7479  002F0A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  7480  002F0C  B0D8               	btfsc	status,0,c
  7481  002F0E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  7482  002F10                     l4391:
  7483                           
  7484                           ; BSR set to: 0
  7485  002F10  5162               	movf	___awmod@divisor& (0+255),w,b
  7486  002F12  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7487  002F14  B4D8               	btfsc	status,2,c
  7488  002F16  D018               	goto	l4407
  7489                           
  7490                           ; BSR set to: 0
  7491  002F18  0E01               	movlw	1
  7492  002F1A  6F64               	movwf	___awmod@counter& (0+255),b
  7493  002F1C  D004               	goto	l4397
  7494  002F1E                     l4395:
  7495                           
  7496                           ; BSR set to: 0
  7497  002F1E  90D8               	bcf	status,0,c
  7498  002F20  3762               	rlcf	___awmod@divisor& (0+255),f,b
  7499  002F22  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7500  002F24  2B64               	incf	___awmod@counter& (0+255),f,b
  7501  002F26                     l4397:
  7502                           
  7503                           ; BSR set to: 0
  7504  002F26  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7505  002F28  D7FA               	goto	l4395
  7506  002F2A                     u4380:
  7507                           
  7508                           ; BSR set to: 0
  7509  002F2A  5162               	movf	___awmod@divisor& (0+255),w,b
  7510  002F2C  5D60               	subwf	___awmod@dividend& (0+255),w,b
  7511  002F2E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7512  002F30  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7513  002F32  A0D8               	btfss	status,0,c
  7514  002F34  D004               	goto	l4403
  7515                           
  7516                           ; BSR set to: 0
  7517  002F36  5162               	movf	___awmod@divisor& (0+255),w,b
  7518  002F38  5F60               	subwf	___awmod@dividend& (0+255),f,b
  7519  002F3A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  7520  002F3C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7521  002F3E                     l4403:
  7522                           
  7523                           ; BSR set to: 0
  7524  002F3E  90D8               	bcf	status,0,c
  7525  002F40  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7526  002F42  3362               	rrcf	___awmod@divisor& (0+255),f,b
  7527                           
  7528                           ; BSR set to: 0
  7529  002F44  2F64               	decfsz	___awmod@counter& (0+255),f,b
  7530  002F46  D7F1               	goto	u4380
  7531  002F48                     l4407:
  7532                           
  7533                           ; BSR set to: 0
  7534  002F48  5165               	movf	___awmod@sign& (0+255),w,b
  7535  002F4A  B4D8               	btfsc	status,2,c
  7536  002F4C  D004               	goto	l4411
  7537                           
  7538                           ; BSR set to: 0
  7539  002F4E  6D60               	negf	___awmod@dividend& (0+255),b
  7540  002F50  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  7541  002F52  B0D8               	btfsc	status,0,c
  7542  002F54  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  7543  002F56                     l4411:
  7544                           
  7545                           ; BSR set to: 0
  7546  002F56  C060  F060         	movff	___awmod@dividend,?___awmod
  7547  002F5A  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  7548                           
  7549                           ; BSR set to: 0
  7550  002F5E  0012               	return		;funcret
  7551  002F60                     __end_of___awmod:
  7552                           	opt callstack 0
  7553                           
  7554 ;; *************** function ___awdiv *****************
  7555 ;; Defined at:
  7556 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  dividend        2    0[BANK0 ] int 
  7559 ;;  divisor         2    2[BANK0 ] int 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  quotient        2    6[BANK0 ] int 
  7562 ;;  sign            1    5[BANK0 ] unsigned char 
  7563 ;;  counter         1    4[BANK0 ] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  2    0[BANK0 ] int 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7573 ;;      Params:         0       4       0       0       0       0       0       0       0
  7574 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7576 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7577 ;;Total ram usage:        8 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    5
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		_efgtoa
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text26
  7588  002DE2                     __ptext26:
  7589                           	opt callstack 0
  7590  002DE2                     ___awdiv:
  7591                           	opt callstack 21
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;incstack = 0
  7595  002DE2  0E00               	movlw	0
  7596  002DE4  0100               	movlb	0	; () banked
  7597  002DE6  6F65               	movwf	___awdiv@sign& (0+255),b
  7598                           
  7599                           ; BSR set to: 0
  7600  002DE8  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7601  002DEA  D006               	goto	l4343
  7602                           
  7603                           ; BSR set to: 0
  7604  002DEC  6D62               	negf	___awdiv@divisor& (0+255),b
  7605  002DEE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7606  002DF0  B0D8               	btfsc	status,0,c
  7607  002DF2  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7608                           
  7609                           ; BSR set to: 0
  7610  002DF4  0E01               	movlw	1
  7611  002DF6  6F65               	movwf	___awdiv@sign& (0+255),b
  7612  002DF8                     l4343:
  7613                           
  7614                           ; BSR set to: 0
  7615  002DF8  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7616  002DFA  D006               	goto	l4349
  7617                           
  7618                           ; BSR set to: 0
  7619  002DFC  6D60               	negf	___awdiv@dividend& (0+255),b
  7620  002DFE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7621  002E00  B0D8               	btfsc	status,0,c
  7622  002E02  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7623                           
  7624                           ; BSR set to: 0
  7625  002E04  0E01               	movlw	1
  7626  002E06  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  7627  002E08                     l4349:
  7628                           
  7629                           ; BSR set to: 0
  7630  002E08  0E00               	movlw	0
  7631  002E0A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  7632  002E0C  0E00               	movlw	0
  7633  002E0E  6F66               	movwf	___awdiv@quotient& (0+255),b
  7634                           
  7635                           ; BSR set to: 0
  7636  002E10  5162               	movf	___awdiv@divisor& (0+255),w,b
  7637  002E12  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7638  002E14  B4D8               	btfsc	status,2,c
  7639  002E16  D01C               	goto	l4371
  7640                           
  7641                           ; BSR set to: 0
  7642  002E18  0E01               	movlw	1
  7643  002E1A  6F64               	movwf	___awdiv@counter& (0+255),b
  7644  002E1C  D004               	goto	l4357
  7645  002E1E                     l4355:
  7646                           
  7647                           ; BSR set to: 0
  7648  002E1E  90D8               	bcf	status,0,c
  7649  002E20  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  7650  002E22  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7651  002E24  2B64               	incf	___awdiv@counter& (0+255),f,b
  7652  002E26                     l4357:
  7653                           
  7654                           ; BSR set to: 0
  7655  002E26  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7656  002E28  D7FA               	goto	l4355
  7657  002E2A                     u4320:
  7658                           
  7659                           ; BSR set to: 0
  7660  002E2A  90D8               	bcf	status,0,c
  7661  002E2C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  7662  002E2E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7663                           
  7664                           ; BSR set to: 0
  7665  002E30  5162               	movf	___awdiv@divisor& (0+255),w,b
  7666  002E32  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  7667  002E34  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7668  002E36  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7669  002E38  A0D8               	btfss	status,0,c
  7670  002E3A  D005               	goto	l4367
  7671                           
  7672                           ; BSR set to: 0
  7673  002E3C  5162               	movf	___awdiv@divisor& (0+255),w,b
  7674  002E3E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  7675  002E40  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7676  002E42  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7677                           
  7678                           ; BSR set to: 0
  7679  002E44  8166               	bsf	___awdiv@quotient& (0+255),0,b
  7680  002E46                     l4367:
  7681                           
  7682                           ; BSR set to: 0
  7683  002E46  90D8               	bcf	status,0,c
  7684  002E48  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7685  002E4A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  7686                           
  7687                           ; BSR set to: 0
  7688  002E4C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  7689  002E4E  D7ED               	goto	u4320
  7690  002E50                     l4371:
  7691                           
  7692                           ; BSR set to: 0
  7693  002E50  5165               	movf	___awdiv@sign& (0+255),w,b
  7694  002E52  B4D8               	btfsc	status,2,c
  7695  002E54  D004               	goto	l4375
  7696                           
  7697                           ; BSR set to: 0
  7698  002E56  6D66               	negf	___awdiv@quotient& (0+255),b
  7699  002E58  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7700  002E5A  B0D8               	btfsc	status,0,c
  7701  002E5C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7702  002E5E                     l4375:
  7703                           
  7704                           ; BSR set to: 0
  7705  002E5E  C066  F060         	movff	___awdiv@quotient,?___awdiv
  7706  002E62  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  7707                           
  7708                           ; BSR set to: 0
  7709  002E66  0012               	return		;funcret
  7710  002E68                     __end_of___awdiv:
  7711                           	opt callstack 0
  7712                           
  7713 ;; *************** function _atoi *****************
  7714 ;; Defined at:
  7715 ;;		line 4 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  7718 ;;		 -> STR_1(24), 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  n               2   20[BANK0 ] int 
  7721 ;;  neg             2   13[BANK0 ] int 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  2    7[BANK0 ] int 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7731 ;;      Params:         0       2       0       0       0       0       0       0       0
  7732 ;;      Locals:         0       9       0       0       0       0       0       0       0
  7733 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7734 ;;      Totals:         0      15       0       0       0       0       0       0       0
  7735 ;;Total ram usage:       15 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    6
  7738 ;; This function calls:
  7739 ;;		___wmul
  7740 ;;		_isdigit
  7741 ;;		_isspace
  7742 ;; This function is called by:
  7743 ;;		_vfpfcnvrt
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text27
  7748  0025B2                     __ptext27:
  7749                           	opt callstack 0
  7750  0025B2                     _atoi:
  7751                           	opt callstack 21
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;incstack = 0
  7755  0025B2  0E00               	movlw	0
  7756  0025B4  0100               	movlb	0	; () banked
  7757  0025B6  6F75               	movwf	(atoi@n+1)& (0+255),b
  7758  0025B8  0E00               	movlw	0
  7759  0025BA  6F74               	movwf	atoi@n& (0+255),b
  7760  0025BC  0E00               	movlw	0
  7761  0025BE  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7762  0025C0  0E00               	movlw	0
  7763  0025C2  6F6D               	movwf	atoi@neg& (0+255),b
  7764  0025C4  D002               	goto	l4819
  7765  0025C6                     l4817:
  7766                           
  7767                           ; BSR set to: 0
  7768  0025C6  4B67               	infsnz	atoi@s& (0+255),f,b
  7769  0025C8  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7770  0025CA                     l4819:
  7771                           
  7772                           ; BSR set to: 0
  7773  0025CA  0E01               	movlw	1
  7774  0025CC  6F73               	movwf	_atoi$2493& (0+255),b
  7775                           
  7776                           ; BSR set to: 0
  7777  0025CE  C067  FFF6         	movff	atoi@s,tblptrl
  7778  0025D2  C068  FFF7         	movff	atoi@s+1,tblptrh
  7779  0025D6                     	if	0	;tblptru may be non-zero
  7780  0025D6                     	endif
  7781  0025D6                     	if	0	;tblptru may be non-zero
  7782  0025D6                     	endif
  7783  0025D6  0008               	tblrd		*
  7784  0025D8  50F5               	movf	tablat,w,c
  7785  0025DA  0A20               	xorlw	32
  7786  0025DC  B4D8               	btfsc	status,2,c
  7787  0025DE  D018               	goto	l4827
  7788                           
  7789                           ; BSR set to: 0
  7790  0025E0  0EF7               	movlw	247
  7791  0025E2  6F69               	movwf	??_atoi& (0+255),b
  7792  0025E4  0EFF               	movlw	255
  7793  0025E6  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7794  0025E8  C067  FFF6         	movff	atoi@s,tblptrl
  7795  0025EC  C068  FFF7         	movff	atoi@s+1,tblptrh
  7796  0025F0                     	if	0	;tblptru may be non-zero
  7797  0025F0                     	endif
  7798  0025F0                     	if	0	;tblptru may be non-zero
  7799  0025F0                     	endif
  7800  0025F0  0008               	tblrd		*
  7801  0025F2  50F5               	movf	tablat,w,c
  7802  0025F4  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7803  0025F6  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7804  0025F8  5169               	movf	??_atoi& (0+255),w,b
  7805  0025FA  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7806  0025FC  516A               	movf	(??_atoi+1)& (0+255),w,b
  7807  0025FE  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7808  002600  516C               	movf	(??_atoi+3)& (0+255),w,b
  7809  002602  E104               	bnz	u5120
  7810  002604  0E05               	movlw	5
  7811  002606  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7812  002608  A0D8               	btfss	status,0,c
  7813  00260A  D002               	goto	l4827
  7814  00260C                     u5120:
  7815                           
  7816                           ; BSR set to: 0
  7817  00260C  0E00               	movlw	0
  7818  00260E  6F73               	movwf	_atoi$2493& (0+255),b
  7819  002610                     l4827:
  7820                           
  7821                           ; BSR set to: 0
  7822  002610  C073  F06F         	movff	_atoi$2493,_atoi$2492
  7823  002614  6B70               	clrf	(_atoi$2492+1)& (0+255),b
  7824                           
  7825                           ; BSR set to: 0
  7826  002616  516F               	movf	_atoi$2492& (0+255),w,b
  7827  002618  1170               	iorwf	(_atoi$2492+1)& (0+255),w,b
  7828  00261A  B4D8               	btfsc	status,2,c
  7829  00261C  D008               	goto	l4837
  7830  00261E  D7D3               	goto	l4817
  7831  002620                     l4833:
  7832                           
  7833                           ; BSR set to: 0
  7834  002620  0E00               	movlw	0
  7835  002622  6F6E               	movwf	(atoi@neg+1)& (0+255),b
  7836  002624  0E01               	movlw	1
  7837  002626  6F6D               	movwf	atoi@neg& (0+255),b
  7838  002628                     l4835:
  7839                           
  7840                           ; BSR set to: 0
  7841  002628  4B67               	infsnz	atoi@s& (0+255),f,b
  7842  00262A  2B68               	incf	(atoi@s+1)& (0+255),f,b
  7843  00262C  D02F               	goto	l4843
  7844  00262E                     l4837:
  7845                           
  7846                           ; BSR set to: 0
  7847  00262E  C067  FFF6         	movff	atoi@s,tblptrl
  7848  002632  C068  FFF7         	movff	atoi@s+1,tblptrh
  7849  002636                     	if	0	;tblptru may be non-zero
  7850  002636                     	endif
  7851  002636                     	if	0	;tblptru may be non-zero
  7852  002636                     	endif
  7853  002636  0008               	tblrd		*
  7854  002638  50F5               	movf	tablat,w,c
  7855  00263A  6F69               	movwf	??_atoi& (0+255),b
  7856  00263C  6B6A               	clrf	(??_atoi+1)& (0+255),b
  7857                           
  7858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7859                           ; Switch size 1, requested type "simple"
  7860                           ; Number of cases is 1, Range of values is 0 to 0
  7861                           ; switch strategies available:
  7862                           ; Name         Instructions Cycles
  7863                           ; simple_byte            4     3 (average)
  7864                           ;	Chosen strategy is simple_byte
  7865  00263E  516A               	movf	(??_atoi+1)& (0+255),w,b
  7866  002640  0A00               	xorlw	0	; case 0
  7867  002642  A4D8               	btfss	status,2,c
  7868  002644  D023               	goto	l4843
  7869                           
  7870                           ; BSR set to: 0
  7871                           ; Switch size 1, requested type "simple"
  7872                           ; Number of cases is 2, Range of values is 43 to 45
  7873                           ; switch strategies available:
  7874                           ; Name         Instructions Cycles
  7875                           ; simple_byte            7     4 (average)
  7876                           ;	Chosen strategy is simple_byte
  7877  002646  5169               	movf	??_atoi& (0+255),w,b
  7878  002648  0A2B               	xorlw	43	; case 43
  7879  00264A  B4D8               	btfsc	status,2,c
  7880  00264C  D7ED               	goto	l4835
  7881  00264E  0A06               	xorlw	6	; case 45
  7882  002650  B4D8               	btfsc	status,2,c
  7883  002652  D7E6               	goto	l4833
  7884  002654  D01B               	goto	l4843
  7885  002656                     l4839:
  7886                           
  7887                           ; BSR set to: 0
  7888  002656  C074  F060         	movff	atoi@n,___wmul@multiplier
  7889  00265A  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
  7890  00265E  0E00               	movlw	0
  7891  002660  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7892  002662  0E0A               	movlw	10
  7893  002664  6F62               	movwf	___wmul@multiplicand& (0+255),b
  7894  002666  EC16  F01B         	call	___wmul	;wreg free
  7895  00266A  C067  FFF6         	movff	atoi@s,tblptrl
  7896  00266E  C068  FFF7         	movff	atoi@s+1,tblptrh
  7897  002672                     	if	0	;tblptru may be non-zero
  7898  002672                     	endif
  7899  002672                     	if	0	;tblptru may be non-zero
  7900  002672                     	endif
  7901  002672  0008               	tblrd		*
  7902  002674  50F5               	movf	tablat,w,c
  7903  002676  0100               	movlb	0	; () banked
  7904  002678  5F60               	subwf	?___wmul& (0+255),f,b
  7905  00267A  0E00               	movlw	0
  7906  00267C  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
  7907  00267E  0E30               	movlw	48
  7908  002680  2560               	addwf	?___wmul& (0+255),w,b
  7909  002682  6F74               	movwf	atoi@n& (0+255),b
  7910  002684  0E00               	movlw	0
  7911  002686  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  7912  002688  6F75               	movwf	(atoi@n+1)& (0+255),b
  7913  00268A  D7CE               	goto	l4835
  7914  00268C                     l4843:
  7915                           
  7916                           ; BSR set to: 0
  7917  00268C  0ED0               	movlw	208
  7918  00268E  6F69               	movwf	??_atoi& (0+255),b
  7919  002690  0EFF               	movlw	255
  7920  002692  6F6A               	movwf	(??_atoi+1)& (0+255),b
  7921  002694  C067  FFF6         	movff	atoi@s,tblptrl
  7922  002698  C068  FFF7         	movff	atoi@s+1,tblptrh
  7923  00269C                     	if	0	;tblptru may be non-zero
  7924  00269C                     	endif
  7925  00269C                     	if	0	;tblptru may be non-zero
  7926  00269C                     	endif
  7927  00269C  0008               	tblrd		*
  7928  00269E  50F5               	movf	tablat,w,c
  7929  0026A0  6F6B               	movwf	(??_atoi+2)& (0+255),b
  7930  0026A2  6B6C               	clrf	(??_atoi+3)& (0+255),b
  7931  0026A4  5169               	movf	??_atoi& (0+255),w,b
  7932  0026A6  276B               	addwf	(??_atoi+2)& (0+255),f,b
  7933  0026A8  516A               	movf	(??_atoi+1)& (0+255),w,b
  7934  0026AA  236C               	addwfc	(??_atoi+3)& (0+255),f,b
  7935  0026AC  516C               	movf	(??_atoi+3)& (0+255),w,b
  7936  0026AE  E106               	bnz	u5140
  7937  0026B0  0E0A               	movlw	10
  7938  0026B2  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
  7939  0026B4  B0D8               	btfsc	status,0,c
  7940  0026B6  D002               	goto	u5140
  7941  0026B8  0E01               	movlw	1
  7942  0026BA  D001               	goto	u5150
  7943  0026BC                     u5140:
  7944  0026BC  0E00               	movlw	0
  7945  0026BE                     u5150:
  7946  0026BE  6F71               	movwf	_atoi$2494& (0+255),b
  7947  0026C0  6B72               	clrf	(_atoi$2494+1)& (0+255),b
  7948                           
  7949                           ; BSR set to: 0
  7950  0026C2  5171               	movf	_atoi$2494& (0+255),w,b
  7951  0026C4  1172               	iorwf	(_atoi$2494+1)& (0+255),w,b
  7952  0026C6  A4D8               	btfss	status,2,c
  7953  0026C8  D7C6               	goto	l4839
  7954                           
  7955                           ; BSR set to: 0
  7956  0026CA  516D               	movf	atoi@neg& (0+255),w,b
  7957  0026CC  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
  7958  0026CE  A4D8               	btfss	status,2,c
  7959  0026D0  D00D               	goto	l1578
  7960                           
  7961                           ; BSR set to: 0
  7962  0026D2  C074  F069         	movff	atoi@n,??_atoi
  7963  0026D6  C075  F06A         	movff	atoi@n+1,??_atoi+1
  7964  0026DA  1F69               	comf	??_atoi& (0+255),f,b
  7965  0026DC  1F6A               	comf	(??_atoi+1)& (0+255),f,b
  7966  0026DE  4B69               	infsnz	??_atoi& (0+255),f,b
  7967  0026E0  2B6A               	incf	(??_atoi+1)& (0+255),f,b
  7968  0026E2  C069  F067         	movff	??_atoi,?_atoi
  7969  0026E6  C06A  F068         	movff	??_atoi+1,?_atoi+1
  7970  0026EA  0012               	return	
  7971  0026EC                     l1578:
  7972                           
  7973                           ; BSR set to: 0
  7974  0026EC  C074  F067         	movff	atoi@n,?_atoi
  7975  0026F0  C075  F068         	movff	atoi@n+1,?_atoi+1
  7976                           
  7977                           ; BSR set to: 0
  7978  0026F4  0012               	return		;funcret
  7979  0026F6                     __end_of_atoi:
  7980                           	opt callstack 0
  7981                           
  7982 ;; *************** function _isspace *****************
  7983 ;; Defined at:
  7984 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  c               2    0[BANK0 ] int 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  2    0[BANK0 ] int 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2, status,0
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7998 ;;      Params:         0       2       0       0       0       0       0       0       0
  7999 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8000 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8001 ;;      Totals:         0       7       0       0       0       0       0       0       0
  8002 ;;Total ram usage:        7 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:    5
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_atoi
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text28
  8013  00326C                     __ptext28:
  8014                           	opt callstack 0
  8015  00326C                     _isspace:
  8016                           	opt callstack 21
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;incstack = 0
  8020  00326C  0E01               	movlw	1
  8021  00326E  0100               	movlb	0	; () banked
  8022  003270  6F66               	movwf	_isspace$2523& (0+255),b
  8023                           
  8024                           ; BSR set to: 0
  8025  003272  0E20               	movlw	32
  8026  003274  1960               	xorwf	isspace@c& (0+255),w,b
  8027  003276  1161               	iorwf	(isspace@c+1)& (0+255),w,b
  8028  003278  B4D8               	btfsc	status,2,c
  8029  00327A  D014               	goto	l4513
  8030                           
  8031                           ; BSR set to: 0
  8032  00327C  0EF7               	movlw	247
  8033  00327E  6F62               	movwf	??_isspace& (0+255),b
  8034  003280  0EFF               	movlw	255
  8035  003282  6F63               	movwf	(??_isspace+1)& (0+255),b
  8036  003284  C060  F064         	movff	isspace@c,??_isspace+2
  8037  003288  C061  F065         	movff	isspace@c+1,??_isspace+3
  8038  00328C  5162               	movf	??_isspace& (0+255),w,b
  8039  00328E  2764               	addwf	(??_isspace+2)& (0+255),f,b
  8040  003290  5163               	movf	(??_isspace+1)& (0+255),w,b
  8041  003292  2365               	addwfc	(??_isspace+3)& (0+255),f,b
  8042  003294  5165               	movf	(??_isspace+3)& (0+255),w,b
  8043  003296  E104               	bnz	u4580
  8044  003298  0E05               	movlw	5
  8045  00329A  5D64               	subwf	(??_isspace+2)& (0+255),w,b
  8046  00329C  A0D8               	btfss	status,0,c
  8047  00329E  D002               	goto	l4513
  8048  0032A0                     u4580:
  8049                           
  8050                           ; BSR set to: 0
  8051  0032A0  0E00               	movlw	0
  8052  0032A2  6F66               	movwf	_isspace$2523& (0+255),b
  8053  0032A4                     l4513:
  8054                           
  8055                           ; BSR set to: 0
  8056  0032A4  C066  F060         	movff	_isspace$2523,?_isspace
  8057  0032A8  6B61               	clrf	(?_isspace+1)& (0+255),b
  8058                           
  8059                           ; BSR set to: 0
  8060  0032AA  0012               	return		;funcret
  8061  0032AC                     __end_of_isspace:
  8062                           	opt callstack 0
  8063                           
  8064 ;; *************** function _isdigit *****************
  8065 ;; Defined at:
  8066 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;  c               2    0[BANK0 ] int 
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  2    0[BANK0 ] int 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8080 ;;      Params:         0       2       0       0       0       0       0       0       0
  8081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8082 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8083 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8084 ;;Total ram usage:        6 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    5
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_vfpfcnvrt
  8091 ;;		_atoi
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           	psect	text29
  8096  0033FA                     __ptext29:
  8097                           	opt callstack 0
  8098  0033FA                     _isdigit:
  8099                           	opt callstack 22
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;incstack = 0
  8103  0033FA  0ED0               	movlw	208
  8104  0033FC  0100               	movlb	0	; () banked
  8105  0033FE  6F62               	movwf	??_isdigit& (0+255),b
  8106  003400  0EFF               	movlw	255
  8107  003402  6F63               	movwf	(??_isdigit+1)& (0+255),b
  8108  003404  C060  F064         	movff	isdigit@c,??_isdigit+2
  8109  003408  C061  F065         	movff	isdigit@c+1,??_isdigit+3
  8110  00340C  5162               	movf	??_isdigit& (0+255),w,b
  8111  00340E  2764               	addwf	(??_isdigit+2)& (0+255),f,b
  8112  003410  5163               	movf	(??_isdigit+1)& (0+255),w,b
  8113  003412  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
  8114  003414  5165               	movf	(??_isdigit+3)& (0+255),w,b
  8115  003416  E106               	bnz	u3850
  8116  003418  0E0A               	movlw	10
  8117  00341A  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
  8118  00341C  B0D8               	btfsc	status,0,c
  8119  00341E  D002               	goto	u3850
  8120  003420  0E01               	movlw	1
  8121  003422  D001               	goto	u3860
  8122  003424                     u3850:
  8123  003424  0E00               	movlw	0
  8124  003426                     u3860:
  8125  003426  6F60               	movwf	?_isdigit& (0+255),b
  8126  003428  6B61               	clrf	(?_isdigit+1)& (0+255),b
  8127                           
  8128                           ; BSR set to: 0
  8129  00342A  0012               	return		;funcret
  8130  00342C                     __end_of_isdigit:
  8131                           	opt callstack 0
  8132                           
  8133 ;; *************** function ___wmul *****************
  8134 ;; Defined at:
  8135 ;;		line 15 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8138 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;  product         2    4[BANK0 ] unsigned int 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2    0[BANK0 ] unsigned int 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, prodl, prodh
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8150 ;;      Params:         0       4       0       0       0       0       0       0       0
  8151 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8153 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8154 ;;Total ram usage:        6 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    5
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_atoi
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text30
  8165  00362C                     __ptext30:
  8166                           	opt callstack 0
  8167  00362C                     ___wmul:
  8168                           	opt callstack 21
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;incstack = 0
  8172  00362C  0100               	movlb	0	; () banked
  8173  00362E  5160               	movf	___wmul@multiplier& (0+255),w,b
  8174  003630  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8175  003632  CFF3 F064          	movff	prodl,___wmul@product
  8176  003636  CFF4 F065          	movff	prodh,___wmul@product+1
  8177  00363A  5160               	movf	___wmul@multiplier& (0+255),w,b
  8178  00363C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8179  00363E  50F3               	movf	prodl,w,c
  8180  003640  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8181  003642  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8182  003644  0362               	mulwf	___wmul@multiplicand& (0+255),b
  8183  003646  50F3               	movf	prodl,w,c
  8184  003648  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  8185                           
  8186                           ; BSR set to: 0
  8187  00364A  C064  F060         	movff	___wmul@product,?___wmul
  8188  00364E  C065  F061         	movff	___wmul@product+1,?___wmul+1
  8189                           
  8190                           ; BSR set to: 0
  8191  003652  0012               	return		;funcret
  8192  003654                     __end_of___wmul:
  8193                           	opt callstack 0
  8194                           
  8195 ;; *************** function _ping_send *****************
  8196 ;; Defined at:
  8197 ;;		line 112 in file "ping.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8215 ;;Total ram usage:        0 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    6
  8218 ;; This function calls:
  8219 ;;		_TMR1_SetInterruptHandler
  8220 ;;		_TMR1_StartTimer
  8221 ;;		_TMR1_WriteTimer
  8222 ;; This function is called by:
  8223 ;;		_main
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text31
  8228  00335E                     __ptext31:
  8229                           	opt callstack 0
  8230  00335E                     _ping_send:
  8231                           	opt callstack 24
  8232                           
  8233                           ;ping.c: 113:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;incstack = 0
  8237  00335E  0E35               	movlw	53
  8238  003360                     u6187:
  8239  003360  2EE8               	decfsz	wreg,f,c
  8240  003362  D7FE               	bra	u6187
  8241  003364  F000               	nop	
  8242                           
  8243                           ;ping.c: 114:     if (!status.pingStarted) {
  8244  003366  5037               	movf	_status+5,w,c	;volatile
  8245  003368  A4D8               	btfss	status,2,c
  8246  00336A  0012               	return	
  8247                           
  8248                           ;ping.c: 115:         do { LATCbits.LATC2 = 1; } while(0);
  8249  00336C  8484               	bsf	3972,2,c	;volatile
  8250                           
  8251                           ;ping.c: 116:         do { TRISCbits.TRISC2 = 0; } while(0);
  8252  00336E  9489               	bcf	3977,2,c	;volatile
  8253                           
  8254                           ;ping.c: 117:         TMR1_SetInterruptHandler(ping_TMR1Overflow_isr);
  8255  003370  0E04               	movlw	low _ping_TMR1Overflow_isr
  8256  003372  0100               	movlb	0	; () banked
  8257  003374  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  8258  003376  0E37               	movlw	high _ping_TMR1Overflow_isr
  8259  003378  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8260  00337A  ECD6  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  8261                           
  8262                           ;ping.c: 118:         TMR1_WriteTimer(0xFFFF);
  8263  00337E  0EFF               	movlw	255
  8264  003380  0100               	movlb	0	; () banked
  8265  003382  6F61               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  8266  003384  6960               	setf	TMR1_WriteTimer@timerVal& (0+255),b
  8267  003386  EC72  F01B         	call	_TMR1_WriteTimer	;wreg free
  8268                           
  8269                           ;ping.c: 119:         TMR1_StartTimer();
  8270  00338A  EC0E  F01C         	call	_TMR1_StartTimer	;wreg free
  8271                           
  8272                           ;ping.c: 120:         status.pingStarted = 1;
  8273  00338E  0E01               	movlw	1
  8274  003390  6E37               	movwf	_status+5,c	;volatile
  8275  003392  0012               	return		;funcret
  8276  003394                     __end_of_ping_send:
  8277                           	opt callstack 0
  8278                           
  8279 ;; *************** function _TMR1_WriteTimer *****************
  8280 ;; Defined at:
  8281 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  timerVal        2    0[BANK0 ] unsigned short 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;		None
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8295 ;;      Params:         0       2       0       0       0       0       0       0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8298 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8299 ;;Total ram usage:        2 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    5
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_ping_send
  8306 ;;		_TMR1_Reload
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text32
  8311  0036E4                     __ptext32:
  8312                           	opt callstack 0
  8313  0036E4                     _TMR1_WriteTimer:
  8314                           	opt callstack 24
  8315                           
  8316                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  8317                           
  8318                           ;incstack = 0
  8319  0036E4  A4CE               	btfss	4046,2,c	;volatile
  8320  0036E6  D008               	goto	l5305
  8321                           
  8322                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  8323  0036E8  90CE               	bcf	4046,0,c	;volatile
  8324                           
  8325                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  8326  0036EA  0100               	movlb	0	; () banked
  8327  0036EC  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  8328  0036EE  6ECD               	movwf	4045,c	;volatile
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  8332  0036F0  C060  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  8336  0036F4  80CE               	bsf	4046,0,c	;volatile
  8337                           
  8338                           ;mcc_generated_files/tmr1.c: 140:     }
  8339  0036F6  0012               	return	
  8340  0036F8                     l5305:
  8341                           
  8342                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  8343  0036F8  0100               	movlb	0	; () banked
  8344  0036FA  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  8345  0036FC  6ECD               	movwf	4045,c	;volatile
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  8349  0036FE  C060  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  8350                           
  8351                           ; BSR set to: 0
  8352  003702  0012               	return		;funcret
  8353  003704                     __end_of_TMR1_WriteTimer:
  8354                           	opt callstack 0
  8355                           
  8356 ;; *************** function _TMR1_StartTimer *****************
  8357 ;; Defined at:
  8358 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		None
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8376 ;;Total ram usage:        0 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    5
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_ping_send
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text33
  8387  00381C                     __ptext33:
  8388                           	opt callstack 0
  8389  00381C                     _TMR1_StartTimer:
  8390                           	opt callstack 24
  8391                           
  8392                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;incstack = 0
  8396  00381C  80CE               	bsf	4046,0,c	;volatile
  8397  00381E  0012               	return		;funcret
  8398  003820                     __end_of_TMR1_StartTimer:
  8399                           	opt callstack 0
  8400                           
  8401 ;; *************** function _ping_init *****************
  8402 ;; Defined at:
  8403 ;;		line 97 in file "ping.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0, cstack
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8420 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    6
  8424 ;; This function calls:
  8425 ;;		_CCP1_SetCallBack
  8426 ;;		_IOCCF2_SetInterruptHandler
  8427 ;;		_TMR1_SetInterruptHandler
  8428 ;; This function is called by:
  8429 ;;		_main
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           	psect	text34
  8434  0032E8                     __ptext34:
  8435                           	opt callstack 0
  8436  0032E8                     _ping_init:
  8437                           	opt callstack 24
  8438                           
  8439                           ;incstack = 0
  8440                           ;ping.c: 98:     do { LATCbits.LATC1 = 1; } while(0);
  8441  0032E8  8284               	bsf	3972,1,c	;volatile
  8442                           
  8443                           ;ping.c: 99:     status.readReady = 0;
  8444  0032EA  0E00               	movlw	0
  8445  0032EC  6E32               	movwf	_status,c	;volatile
  8446                           
  8447                           ;ping.c: 100:     status.pingStarted = 0;
  8448  0032EE  0E00               	movlw	0
  8449  0032F0  6E37               	movwf	_status+5,c	;volatile
  8450                           
  8451                           ;ping.c: 101:     PIE6bits.CCP1IE = 0;
  8452  0032F2  010E               	movlb	14	; () banked
  8453  0032F4  91C3               	bcf	195,0,b	;volatile
  8454                           
  8455                           ; BSR set to: 14
  8456                           ;ping.c: 102:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  8457  0032F6  0E2E               	movlw	low _TMR1_DefaultInterruptHandler
  8458  0032F8  0100               	movlb	0	; () banked
  8459  0032FA  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  8460  0032FC  0E38               	movlw	high _TMR1_DefaultInterruptHandler
  8461  0032FE  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8462  003300  ECD6  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  8463                           
  8464                           ;ping.c: 103:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultInterruptHandler);
  8465  003304  0E30               	movlw	low _IOCCF2_DefaultInterruptHandler
  8466  003306  0100               	movlb	0	; () banked
  8467  003308  6F60               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler& (0+255),b
  8468  00330A  0E38               	movlw	high _IOCCF2_DefaultInterruptHandler
  8469  00330C  6F61               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8470  00330E  ECDB  F01B         	call	_IOCCF2_SetInterruptHandler	;wreg free
  8471                           
  8472                           ;ping.c: 104:     CCP1_SetCallBack(ping_CCP1_triggered);
  8473  003312  0E38               	movlw	low _ping_CCP1_triggered
  8474  003314  0100               	movlb	0	; () banked
  8475  003316  6F60               	movwf	CCP1_SetCallBack@customCallBack& (0+255),b
  8476  003318  0E30               	movlw	high _ping_CCP1_triggered
  8477  00331A  6F61               	movwf	(CCP1_SetCallBack@customCallBack+1)& (0+255),b
  8478  00331C  ECF9  F01B         	call	_CCP1_SetCallBack	;wreg free
  8479  003320  9284               	bcf	3972,1,c	;volatile
  8480  003322  0012               	return		;funcret
  8481  003324                     __end_of_ping_init:
  8482                           	opt callstack 0
  8483                           
  8484 ;; *************** function _ping_get *****************
  8485 ;; Defined at:
  8486 ;;		line 129 in file "ping.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  4    0[BANK0 ] float 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8500 ;;      Params:         0       4       0       0       0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8503 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8504 ;;Total ram usage:        4 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    5
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_main
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text35
  8515  00348E                     __ptext35:
  8516                           	opt callstack 0
  8517  00348E                     _ping_get:
  8518                           	opt callstack 25
  8519                           
  8520                           ;ping.c: 130:     if (status.readReady) {
  8521                           
  8522                           ;incstack = 0
  8523  00348E  5032               	movf	_status,w,c	;volatile
  8524  003490  B4D8               	btfsc	status,2,c
  8525  003492  D00B               	goto	l5547
  8526                           
  8527                           ;ping.c: 131:         status.readReady = 0;
  8528  003494  0E00               	movlw	0
  8529  003496  6E32               	movwf	_status,c	;volatile
  8530                           
  8531                           ;ping.c: 132:         return status.measurment;
  8532  003498  C033  F060         	movff	_status+1,?_ping_get	;volatile
  8533  00349C  C034  F061         	movff	_status+2,?_ping_get+1	;volatile
  8534  0034A0  C035  F062         	movff	_status+3,?_ping_get+2	;volatile
  8535  0034A4  C036  F063         	movff	_status+4,?_ping_get+3	;volatile
  8536  0034A8  0012               	return	
  8537  0034AA                     l5547:
  8538                           
  8539                           ;ping.c: 134:         return 0;
  8540  0034AA  0E00               	movlw	0
  8541  0034AC  0100               	movlb	0	; () banked
  8542  0034AE  6F60               	movwf	?_ping_get& (0+255),b
  8543  0034B0  0E00               	movlw	0
  8544  0034B2  6F61               	movwf	(?_ping_get+1)& (0+255),b
  8545  0034B4  0E00               	movlw	0
  8546  0034B6  6F62               	movwf	(?_ping_get+2)& (0+255),b
  8547  0034B8  0E00               	movlw	0
  8548  0034BA  6F63               	movwf	(?_ping_get+3)& (0+255),b
  8549  0034BC  0012               	return		;funcret
  8550  0034BE                     __end_of_ping_get:
  8551                           	opt callstack 0
  8552                           
  8553 ;; *************** function _carcontrol_init *****************
  8554 ;; Defined at:
  8555 ;;		line 27 in file "car_ctrl.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;		None
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  1    wreg      void 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, cstack
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8569 ;;      Params:         0       0       0       0       0       0       0       0       0
  8570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8572 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8573 ;;Total ram usage:        0 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    6
  8576 ;; This function calls:
  8577 ;;		_TMR2_SetInterruptHandler
  8578 ;;		_carcontrol_steering
  8579 ;;		_carcontrol_throttle
  8580 ;; This function is called by:
  8581 ;;		_main
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text36
  8586  0034BE                     __ptext36:
  8587                           	opt callstack 0
  8588  0034BE                     _carcontrol_init:
  8589                           	opt callstack 24
  8590                           
  8591                           ;car_ctrl.c: 28:     carctl.state = state_unset;
  8592                           
  8593                           ;incstack = 0
  8594  0034BE  0E00               	movlw	0
  8595  0034C0  6E3B               	movwf	_carctl+1,c	;volatile
  8596                           
  8597                           ;car_ctrl.c: 29:     carcontrol_throttle(0);
  8598  0034C2  0E00               	movlw	0
  8599  0034C4  ECB9  F01B         	call	_carcontrol_throttle
  8600                           
  8601                           ;car_ctrl.c: 30:     carcontrol_steering(0);
  8602  0034C8  0E00               	movlw	0
  8603  0034CA  EC77  F01A         	call	_carcontrol_steering
  8604                           
  8605                           ;car_ctrl.c: 31:     carctl.servoHighTime = 50;
  8606  0034CE  0E32               	movlw	50
  8607  0034D0  6E3F               	movwf	_carctl+5,c	;volatile
  8608                           
  8609                           ;car_ctrl.c: 33:     TMR2_SetInterruptHandler(carcontrol_ISR);
  8610  0034D2  0E36               	movlw	low _carcontrol_ISR
  8611  0034D4  0100               	movlb	0	; () banked
  8612  0034D6  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  8613  0034D8  0E28               	movlw	high _carcontrol_ISR
  8614  0034DA  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8615  0034DC  ECD1  F01B         	call	_TMR2_SetInterruptHandler	;wreg free
  8616                           
  8617                           ;car_ctrl.c: 34:     stateTime = 0;
  8618  0034E0  0E00               	movlw	0
  8619  0034E2  6E51               	movwf	_stateTime+1,c
  8620  0034E4  0E00               	movlw	0
  8621  0034E6  6E50               	movwf	_stateTime,c
  8622                           
  8623                           ;car_ctrl.c: 35:     carctl.initialized = 1;
  8624  0034E8  0E01               	movlw	1
  8625  0034EA  6E3A               	movwf	_carctl,c	;volatile
  8626  0034EC  0012               	return		;funcret
  8627  0034EE                     __end_of_carcontrol_init:
  8628                           	opt callstack 0
  8629                           
  8630 ;; *************** function _carcontrol_throttle *****************
  8631 ;; Defined at:
  8632 ;;		line 118 in file "car_ctrl.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  throttle        1    wreg     unsigned char 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  throttle        1    0[BANK0 ] unsigned char 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      void 
  8639 ;; Registers used:
  8640 ;;		wreg, status,2, status,0
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8646 ;;      Params:         0       0       0       0       0       0       0       0       0
  8647 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8649 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8650 ;;Total ram usage:        1 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:    5
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_carcontrol_init
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text37
  8661  003772                     __ptext37:
  8662                           	opt callstack 0
  8663  003772                     _carcontrol_throttle:
  8664                           	opt callstack 24
  8665                           
  8666                           ;incstack = 0
  8667                           ;carcontrol_throttle@throttle stored from wreg
  8668  003772  0100               	movlb	0	; () banked
  8669  003774  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  8670                           
  8671                           ;car_ctrl.c: 120:     if (throttle > 100) throttle = 100;
  8672  003776  0E64               	movlw	100
  8673  003778  0100               	movlb	0	; () banked
  8674  00377A  6560               	cpfsgt	carcontrol_throttle@throttle& (0+255),b
  8675  00377C  D002               	goto	l5329
  8676                           
  8677                           ; BSR set to: 0
  8678  00377E  0E64               	movlw	100
  8679  003780  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  8680  003782                     l5329:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;car_ctrl.c: 121:     carctl.throttleHighTime = throttle;
  8684  003782  C060  F03E         	movff	carcontrol_throttle@throttle,_carctl+4	;volatile
  8685                           
  8686                           ; BSR set to: 0
  8687  003786  0012               	return		;funcret
  8688  003788                     __end_of_carcontrol_throttle:
  8689                           	opt callstack 0
  8690                           
  8691 ;; *************** function _carcontrol_steering *****************
  8692 ;; Defined at:
  8693 ;;		line 93 in file "car_ctrl.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  steering        1    wreg     char 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  steering        1    0[BANK0 ] char 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8710 ;;      Totals:         0       1       0       0       0       0       0       0       0
  8711 ;;Total ram usage:        1 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    5
  8714 ;; This function calls:
  8715 ;;		Nothing
  8716 ;; This function is called by:
  8717 ;;		_main
  8718 ;;		_carcontrol_init
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text38
  8723  0034EE                     __ptext38:
  8724                           	opt callstack 0
  8725  0034EE                     _carcontrol_steering:
  8726                           	opt callstack 25
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;incstack = 0
  8730                           ;carcontrol_steering@steering stored from wreg
  8731  0034EE  0100               	movlb	0	; () banked
  8732  0034F0  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  8733                           
  8734                           ;car_ctrl.c: 106:     if (steering < servo_min) steering = servo_min;
  8735  0034F2  0100               	movlb	0	; () banked
  8736  0034F4  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  8737  0034F6  0A80               	xorlw	128
  8738  0034F8  0F9E               	addlw	158
  8739  0034FA  B0D8               	btfsc	status,0,c
  8740  0034FC  D002               	goto	l5317
  8741                           
  8742                           ; BSR set to: 0
  8743  0034FE  0EE2               	movlw	226
  8744  003500  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  8745  003502                     l5317:
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;car_ctrl.c: 107:     if (steering > servo_max) steering = servo_max;
  8749  003502  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  8750  003504  0A80               	xorlw	128
  8751  003506  0F63               	addlw	-157
  8752  003508  A0D8               	btfss	status,0,c
  8753  00350A  D002               	goto	l5321
  8754                           
  8755                           ; BSR set to: 0
  8756  00350C  0E1C               	movlw	28
  8757  00350E  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  8758  003510                     l5321:
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;car_ctrl.c: 109:     steering = steering + servo_trim;
  8762  003510  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  8763  003512  0F11               	addlw	17
  8764  003514  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;car_ctrl.c: 111:     carctl.servoHighTime = steering + 50;
  8768  003516  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  8769  003518  0F32               	addlw	50
  8770  00351A  6E3F               	movwf	_carctl+5,c	;volatile
  8771                           
  8772                           ; BSR set to: 0
  8773  00351C  0012               	return		;funcret
  8774  00351E                     __end_of_carcontrol_steering:
  8775                           	opt callstack 0
  8776                           
  8777 ;; *************** function _SYSTEM_Initialize *****************
  8778 ;; Defined at:
  8779 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, status,2, status,0, cstack
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8793 ;;      Params:         0       0       0       0       0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8796 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8797 ;;Total ram usage:        0 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:    7
  8800 ;; This function calls:
  8801 ;;		_CCP1_Initialize
  8802 ;;		_EUSART1_Initialize
  8803 ;;		_INTERRUPT_Initialize
  8804 ;;		_OSCILLATOR_Initialize
  8805 ;;		_PIN_MANAGER_Initialize
  8806 ;;		_PMD_Initialize
  8807 ;;		_TMR1_Initialize
  8808 ;;		_TMR2_Initialize
  8809 ;; This function is called by:
  8810 ;;		_main
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text39
  8815  0036A0                     __ptext39:
  8816                           	opt callstack 0
  8817  0036A0                     _SYSTEM_Initialize:
  8818                           	opt callstack 23
  8819                           
  8820                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;incstack = 0
  8824  0036A0  EC10  F01C         	call	_INTERRUPT_Initialize	;wreg free
  8825                           
  8826                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8827  0036A4  EC91  F01B         	call	_PMD_Initialize	;wreg free
  8828                           
  8829                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8830  0036A8  ECE7  F017         	call	_PIN_MANAGER_Initialize	;wreg free
  8831                           
  8832                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8833  0036AC  ECAD  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  8834                           
  8835                           ;mcc_generated_files/mcc.c: 56:     CCP1_Initialize();
  8836  0036B0  ECBD  F01A         	call	_CCP1_Initialize	;wreg free
  8837                           
  8838                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  8839  0036B4  ECA6  F01A         	call	_TMR2_Initialize	;wreg free
  8840                           
  8841                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  8842  0036B8  EC13  F019         	call	_TMR1_Initialize	;wreg free
  8843                           
  8844                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  8845  0036BC  EC34  F017         	call	_EUSART1_Initialize	;wreg free
  8846  0036C0  0012               	return		;funcret
  8847  0036C2                     __end_of_SYSTEM_Initialize:
  8848                           	opt callstack 0
  8849                           
  8850 ;; *************** function _TMR2_Initialize *****************
  8851 ;; Defined at:
  8852 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;		None
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;		None
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  1    wreg      void 
  8859 ;; Registers used:
  8860 ;;		wreg, status,2, status,0, cstack
  8861 ;; Tracked objects:
  8862 ;;		On entry : 0/0
  8863 ;;		On exit  : 0/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8866 ;;      Params:         0       0       0       0       0       0       0       0       0
  8867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8869 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8870 ;;Total ram usage:        0 bytes
  8871 ;; Hardware stack levels used:    1
  8872 ;; Hardware stack levels required when called:    6
  8873 ;; This function calls:
  8874 ;;		_TMR2_SetInterruptHandler
  8875 ;; This function is called by:
  8876 ;;		_SYSTEM_Initialize
  8877 ;; This function uses a non-reentrant model
  8878 ;;
  8879                           
  8880                           	psect	text40
  8881  00354C                     __ptext40:
  8882                           	opt callstack 0
  8883  00354C                     _TMR2_Initialize:
  8884                           	opt callstack 23
  8885                           
  8886                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  8887                           
  8888                           ;incstack = 0
  8889  00354C  0E01               	movlw	1
  8890  00354E  6EBE               	movwf	4030,c	;volatile
  8891                           
  8892                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  8893  003550  0E00               	movlw	0
  8894  003552  6EBD               	movwf	4029,c	;volatile
  8895                           
  8896                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  8897  003554  0E00               	movlw	0
  8898  003556  6EBF               	movwf	4031,c	;volatile
  8899                           
  8900                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x00;
  8901  003558  0E00               	movlw	0
  8902  00355A  6EBB               	movwf	4027,c	;volatile
  8903                           
  8904                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  8905  00355C  0E00               	movlw	0
  8906  00355E  6EBA               	movwf	4026,c	;volatile
  8907                           
  8908                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  8909  003560  010E               	movlb	14	; () banked
  8910  003562  93C9               	bcf	201,1,b	;volatile
  8911                           
  8912                           ; BSR set to: 14
  8913                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  8914  003564  83C1               	bsf	193,1,b	;volatile
  8915                           
  8916                           ; BSR set to: 14
  8917                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  8918  003566  0E2C               	movlw	low _TMR2_DefaultInterruptHandler
  8919  003568  0100               	movlb	0	; () banked
  8920  00356A  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  8921  00356C  0E38               	movlw	high _TMR2_DefaultInterruptHandler
  8922  00356E  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  8923  003570  ECD1  F01B         	call	_TMR2_SetInterruptHandler	;wreg free
  8924                           
  8925                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xF0;
  8926  003574  0EF0               	movlw	240
  8927  003576  6EBC               	movwf	4028,c	;volatile
  8928  003578  0012               	return		;funcret
  8929  00357A                     __end_of_TMR2_Initialize:
  8930                           	opt callstack 0
  8931                           
  8932 ;; *************** function _TMR2_SetInterruptHandler *****************
  8933 ;; Defined at:
  8934 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8937 ;;		 -> carcontrol_ISR(1), TMR2_DefaultInterruptHandler(1), 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;		None
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg, status,2, status,0
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8949 ;;      Params:         0       2       0       0       0       0       0       0       0
  8950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8952 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8953 ;;Total ram usage:        2 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; Hardware stack levels required when called:    5
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		_TMR2_Initialize
  8960 ;;		_carcontrol_init
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text41
  8965  0037A2                     __ptext41:
  8966                           	opt callstack 0
  8967  0037A2                     _TMR2_SetInterruptHandler:
  8968                           	opt callstack 24
  8969                           
  8970                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  8971                           
  8972                           ;incstack = 0
  8973  0037A2  C060  F18E         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  8974  0037A6  C061  F18F         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  8975  0037AA  0012               	return		;funcret
  8976  0037AC                     __end_of_TMR2_SetInterruptHandler:
  8977                           	opt callstack 0
  8978                           
  8979 ;; *************** function _TMR1_Initialize *****************
  8980 ;; Defined at:
  8981 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;		None
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;		None
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      void 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0, cstack
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8995 ;;      Params:         0       0       0       0       0       0       0       0       0
  8996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8997 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8998 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8999 ;;Total ram usage:        2 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    6
  9002 ;; This function calls:
  9003 ;;		_TMR1_SetInterruptHandler
  9004 ;; This function is called by:
  9005 ;;		_SYSTEM_Initialize
  9006 ;; This function uses a non-reentrant model
  9007 ;;
  9008                           
  9009                           	psect	text42
  9010  003226                     __ptext42:
  9011                           	opt callstack 0
  9012  003226                     _TMR1_Initialize:
  9013                           	opt callstack 23
  9014                           
  9015                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  9016                           
  9017                           ;incstack = 0
  9018  003226  0E00               	movlw	0
  9019  003228  6ECF               	movwf	4047,c	;volatile
  9020                           
  9021                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  9022  00322A  0E00               	movlw	0
  9023  00322C  6ED0               	movwf	4048,c	;volatile
  9024                           
  9025                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x01;
  9026  00322E  0E01               	movlw	1
  9027  003230  6ED1               	movwf	4049,c	;volatile
  9028                           
  9029                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x63;
  9030  003232  0E63               	movlw	99
  9031  003234  6ECD               	movwf	4045,c	;volatile
  9032                           
  9033                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xC0;
  9034  003236  0EC0               	movlw	192
  9035  003238  6ECC               	movwf	4044,c	;volatile
  9036                           
  9037                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9038  00323A  50CC               	movf	4044,w,c	;volatile
  9039  00323C  CFCD F062          	movff	4045,??_TMR1_Initialize	;volatile
  9040  003240  0100               	movlb	0	; () banked
  9041  003242  6B63               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  9042  003244  C062  F063         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  9043  003248  6B62               	clrf	??_TMR1_Initialize& (0+255),b
  9044  00324A  1162               	iorwf	??_TMR1_Initialize& (0+255),w,b
  9045  00324C  6E57               	movwf	_timer1ReloadVal,c	;volatile
  9046  00324E  5163               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  9047  003250  6E58               	movwf	_timer1ReloadVal+1,c	;volatile
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  9051  003252  010E               	movlb	14	; () banked
  9052  003254  91C9               	bcf	201,0,b	;volatile
  9053                           
  9054                           ; BSR set to: 14
  9055                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  9056  003256  81C1               	bsf	193,0,b	;volatile
  9057                           
  9058                           ; BSR set to: 14
  9059                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  9060  003258  0E2E               	movlw	low _TMR1_DefaultInterruptHandler
  9061  00325A  0100               	movlb	0	; () banked
  9062  00325C  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  9063  00325E  0E38               	movlw	high _TMR1_DefaultInterruptHandler
  9064  003260  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9065  003262  ECD6  F01B         	call	_TMR1_SetInterruptHandler	;wreg free
  9066                           
  9067                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x33;
  9068  003266  0E33               	movlw	51
  9069  003268  6ECE               	movwf	4046,c	;volatile
  9070  00326A  0012               	return		;funcret
  9071  00326C                     __end_of_TMR1_Initialize:
  9072                           	opt callstack 0
  9073                           
  9074 ;; *************** function _TMR1_SetInterruptHandler *****************
  9075 ;; Defined at:
  9076 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9079 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
  9080 ;; Auto vars:     Size  Location     Type
  9081 ;;		None
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  1    wreg      void 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9091 ;;      Params:         0       2       0       0       0       0       0       0       0
  9092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9094 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9095 ;;Total ram usage:        2 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; Hardware stack levels required when called:    5
  9098 ;; This function calls:
  9099 ;;		Nothing
  9100 ;; This function is called by:
  9101 ;;		_TMR1_Initialize
  9102 ;;		_ping_init
  9103 ;;		_ping_send
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text43
  9108  0037AC                     __ptext43:
  9109                           	opt callstack 0
  9110  0037AC                     _TMR1_SetInterruptHandler:
  9111                           	opt callstack 24
  9112                           
  9113                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  9114                           
  9115                           ;incstack = 0
  9116  0037AC  C060  F18A         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  9117  0037B0  C061  F18B         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  9118  0037B4  0012               	return		;funcret
  9119  0037B6                     __end_of_TMR1_SetInterruptHandler:
  9120                           	opt callstack 0
  9121                           
  9122 ;; *************** function _PMD_Initialize *****************
  9123 ;; Defined at:
  9124 ;;		line 76 in file "mcc_generated_files/mcc.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;		None
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0
  9139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9142 ;;Total ram usage:        0 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    5
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_SYSTEM_Initialize
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           	psect	text44
  9153  003722                     __ptext44:
  9154                           	opt callstack 0
  9155  003722                     _PMD_Initialize:
  9156                           	opt callstack 24
  9157                           
  9158                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  9159                           
  9160                           ;incstack = 0
  9161  003722  0E00               	movlw	0
  9162  003724  010E               	movlb	14	; () banked
  9163  003726  6FDC               	movwf	220,b	;volatile
  9164                           
  9165                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  9166  003728  0E00               	movlw	0
  9167  00372A  6FDD               	movwf	221,b	;volatile
  9168                           
  9169                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  9170  00372C  0E00               	movlw	0
  9171  00372E  6FDE               	movwf	222,b	;volatile
  9172                           
  9173                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  9174  003730  0E00               	movlw	0
  9175  003732  6FDF               	movwf	223,b	;volatile
  9176                           
  9177                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  9178  003734  0E00               	movlw	0
  9179  003736  6FE0               	movwf	224,b	;volatile
  9180                           
  9181                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  9182  003738  0E00               	movlw	0
  9183  00373A  6FE1               	movwf	225,b	;volatile
  9184                           
  9185                           ; BSR set to: 14
  9186  00373C  0012               	return		;funcret
  9187  00373E                     __end_of_PMD_Initialize:
  9188                           	opt callstack 0
  9189                           
  9190 ;; *************** function _PIN_MANAGER_Initialize *****************
  9191 ;; Defined at:
  9192 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      void 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0, cstack
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9206 ;;      Params:         0       0       0       0       0       0       0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9209 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9210 ;;Total ram usage:        0 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; Hardware stack levels required when called:    6
  9213 ;; This function calls:
  9214 ;;		_IOCCF2_SetInterruptHandler
  9215 ;; This function is called by:
  9216 ;;		_SYSTEM_Initialize
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text45
  9221  002FCE                     __ptext45:
  9222                           	opt callstack 0
  9223  002FCE                     _PIN_MANAGER_Initialize:
  9224                           	opt callstack 23
  9225                           
  9226                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9227                           
  9228                           ; BSR set to: 14
  9229                           ;incstack = 0
  9230  002FCE  0E00               	movlw	0
  9231  002FD0  6E82               	movwf	3970,c	;volatile
  9232                           
  9233                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9234  002FD2  0E00               	movlw	0
  9235  002FD4  6E83               	movwf	3971,c	;volatile
  9236                           
  9237                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9238  002FD6  0E00               	movlw	0
  9239  002FD8  6E84               	movwf	3972,c	;volatile
  9240                           
  9241                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xF0;
  9242  002FDA  0EF0               	movlw	240
  9243  002FDC  6E87               	movwf	3975,c	;volatile
  9244                           
  9245                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF9;
  9246  002FDE  0EF9               	movlw	249
  9247  002FE0  6E88               	movwf	3976,c	;volatile
  9248                           
  9249                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x3D;
  9250  002FE2  0E3D               	movlw	61
  9251  002FE4  6E89               	movwf	3977,c	;volatile
  9252                           
  9253                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x3B;
  9254  002FE6  0E3B               	movlw	59
  9255  002FE8  010F               	movlb	15	; () banked
  9256  002FEA  6F1C               	movwf	28,b	;volatile
  9257                           
  9258                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF7;
  9259  002FEC  0EF7               	movlw	247
  9260  002FEE  6F14               	movwf	20,b	;volatile
  9261                           
  9262                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFA;
  9263  002FF0  0EFA               	movlw	250
  9264  002FF2  6F0C               	movwf	12,b	;volatile
  9265                           
  9266                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  9267  002FF4  0E00               	movlw	0
  9268  002FF6  6F28               	movwf	40,b	;volatile
  9269                           
  9270                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  9271  002FF8  0E00               	movlw	0
  9272  002FFA  6F13               	movwf	19,b	;volatile
  9273                           
  9274                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
  9275  002FFC  0E00               	movlw	0
  9276  002FFE  6F0B               	movwf	11,b	;volatile
  9277                           
  9278                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
  9279  003000  0E00               	movlw	0
  9280  003002  6F1B               	movwf	27,b	;volatile
  9281                           
  9282                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  9283  003004  0E00               	movlw	0
  9284  003006  6F0A               	movwf	10,b	;volatile
  9285                           
  9286                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  9287  003008  0E00               	movlw	0
  9288  00300A  6F12               	movwf	18,b	;volatile
  9289                           
  9290                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  9291  00300C  0E00               	movlw	0
  9292  00300E  6F1A               	movwf	26,b	;volatile
  9293                           
  9294                           ; BSR set to: 15
  9295                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  9296  003010  6909               	setf	9,b	;volatile
  9297                           
  9298                           ; BSR set to: 15
  9299                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  9300  003012  6911               	setf	17,b	;volatile
  9301                           
  9302                           ; BSR set to: 15
  9303                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  9304  003014  6919               	setf	25,b	;volatile
  9305                           
  9306                           ; BSR set to: 15
  9307                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF2 = 0;
  9308  003016  9515               	bcf	21,2,b	;volatile
  9309                           
  9310                           ; BSR set to: 15
  9311                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN2 = 0;
  9312  003018  9516               	bcf	22,2,b	;volatile
  9313                           
  9314                           ; BSR set to: 15
  9315                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP2 = 1;
  9316  00301A  8517               	bsf	23,2,b	;volatile
  9317                           
  9318                           ; BSR set to: 15
  9319                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
  9320  00301C  0E30               	movlw	low _IOCCF2_DefaultInterruptHandler
  9321  00301E  0100               	movlb	0	; () banked
  9322  003020  6F60               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler& (0+255),b
  9323  003022  0E38               	movlw	high _IOCCF2_DefaultInterruptHandler
  9324  003024  6F61               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9325  003026  ECDB  F01B         	call	_IOCCF2_SetInterruptHandler	;wreg free
  9326                           
  9327                           ;mcc_generated_files/pin_manager.c: 119:     PIE0bits.IOCIE = 1;
  9328  00302A  010E               	movlb	14	; () banked
  9329  00302C  89BD               	bsf	189,4,b	;volatile
  9330                           
  9331                           ; BSR set to: 14
  9332                           ;mcc_generated_files/pin_manager.c: 122:     CCP1PPS = 0x12;
  9333  00302E  0E12               	movlw	18
  9334  003030  6FAA               	movwf	170,b	;volatile
  9335                           
  9336                           ; BSR set to: 14
  9337                           ;mcc_generated_files/pin_manager.c: 123:     RC6PPS = 0x09;
  9338  003032  0E09               	movlw	9
  9339  003034  6FF8               	movwf	248,b	;volatile
  9340                           
  9341                           ; BSR set to: 14
  9342  003036  0012               	return		;funcret
  9343  003038                     __end_of_PIN_MANAGER_Initialize:
  9344                           	opt callstack 0
  9345                           
  9346 ;; *************** function _IOCCF2_SetInterruptHandler *****************
  9347 ;; Defined at:
  9348 ;;		line 153 in file "mcc_generated_files/pin_manager.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  9351 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, status,2, status,0
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9363 ;;      Params:         0       2       0       0       0       0       0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9366 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9367 ;;Total ram usage:        2 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    5
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_PIN_MANAGER_Initialize
  9374 ;;		_ping_init
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text46
  9379  0037B6                     __ptext46:
  9380                           	opt callstack 0
  9381  0037B6                     _IOCCF2_SetInterruptHandler:
  9382                           	opt callstack 24
  9383                           
  9384                           ;mcc_generated_files/pin_manager.c: 154:     IOCCF2_InterruptHandler = InterruptHandler;
  9385                           
  9386                           ; BSR set to: 14
  9387                           ;incstack = 0
  9388  0037B6  C060  F059         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  9389  0037BA  C061  F05A         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  9390  0037BE  0012               	return		;funcret
  9391  0037C0                     __end_of_IOCCF2_SetInterruptHandler:
  9392                           	opt callstack 0
  9393                           
  9394 ;; *************** function _OSCILLATOR_Initialize *****************
  9395 ;; Defined at:
  9396 ;;		line 62 in file "mcc_generated_files/mcc.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		wreg, status,2
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9410 ;;      Params:         0       0       0       0       0       0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9414 ;;Total ram usage:        0 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    5
  9417 ;; This function calls:
  9418 ;;		Nothing
  9419 ;; This function is called by:
  9420 ;;		_SYSTEM_Initialize
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           	psect	text47
  9425  00375A                     __ptext47:
  9426                           	opt callstack 0
  9427  00375A                     _OSCILLATOR_Initialize:
  9428                           	opt callstack 24
  9429                           
  9430                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  9431                           
  9432                           ;incstack = 0
  9433  00375A  0E60               	movlw	96
  9434  00375C  010E               	movlb	14	; () banked
  9435  00375E  6FD3               	movwf	211,b	;volatile
  9436                           
  9437                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  9438  003760  0E00               	movlw	0
  9439  003762  6FD5               	movwf	213,b	;volatile
  9440                           
  9441                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  9442  003764  0E00               	movlw	0
  9443  003766  6FD7               	movwf	215,b	;volatile
  9444                           
  9445                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
  9446  003768  0E08               	movlw	8
  9447  00376A  6FD9               	movwf	217,b	;volatile
  9448                           
  9449                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  9450  00376C  0E00               	movlw	0
  9451  00376E  6FD8               	movwf	216,b	;volatile
  9452                           
  9453                           ; BSR set to: 14
  9454  003770  0012               	return		;funcret
  9455  003772                     __end_of_OSCILLATOR_Initialize:
  9456                           	opt callstack 0
  9457                           
  9458 ;; *************** function _INTERRUPT_Initialize *****************
  9459 ;; Defined at:
  9460 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;		None
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		None
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9474 ;;      Params:         0       0       0       0       0       0       0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9478 ;;Total ram usage:        0 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    5
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		_SYSTEM_Initialize
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text48
  9489  003820                     __ptext48:
  9490                           	opt callstack 0
  9491  003820                     _INTERRUPT_Initialize:
  9492                           	opt callstack 24
  9493                           
  9494                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  9495                           
  9496                           ; BSR set to: 14
  9497                           ;incstack = 0
  9498  003820  9AF2               	bcf	4082,5,c	;volatile
  9499  003822  0012               	return		;funcret
  9500  003824                     __end_of_INTERRUPT_Initialize:
  9501                           	opt callstack 0
  9502                           
  9503 ;; *************** function _EUSART1_Initialize *****************
  9504 ;; Defined at:
  9505 ;;		line 85 in file "mcc_generated_files/eusart1.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;		None
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      void 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9523 ;;Total ram usage:        0 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    6
  9526 ;; This function calls:
  9527 ;;		_EUSART1_SetErrorHandler
  9528 ;;		_EUSART1_SetFramingErrorHandler
  9529 ;;		_EUSART1_SetOverrunErrorHandler
  9530 ;;		_EUSART1_SetRxInterruptHandler
  9531 ;;		_EUSART1_SetTxInterruptHandler
  9532 ;; This function is called by:
  9533 ;;		_SYSTEM_Initialize
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           	psect	text49
  9538  002E68                     __ptext49:
  9539                           	opt callstack 0
  9540  002E68                     _EUSART1_Initialize:
  9541                           	opt callstack 23
  9542                           
  9543                           ;mcc_generated_files/eusart1.c: 88:     PIE3bits.RC1IE = 0;
  9544                           
  9545                           ;incstack = 0
  9546  002E68  010E               	movlb	14	; () banked
  9547  002E6A  9BC0               	bcf	192,5,b	;volatile
  9548                           
  9549                           ; BSR set to: 14
  9550                           ;mcc_generated_files/eusart1.c: 89:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  9551  002E6C  0E1A               	movlw	low _EUSART1_Receive_ISR
  9552  002E6E  0100               	movlb	0	; () banked
  9553  002E70  6F60               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  9554  002E72  0E2C               	movlw	high _EUSART1_Receive_ISR
  9555  002E74  6F61               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  9556  002E76  ECE5  F01B         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  9557                           
  9558                           ;mcc_generated_files/eusart1.c: 90:     PIE3bits.TX1IE = 0;
  9559  002E7A  010E               	movlb	14	; () banked
  9560  002E7C  99C0               	bcf	192,4,b	;volatile
  9561                           
  9562                           ;mcc_generated_files/eusart1.c: 91:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  9563  002E7E  0ED6               	movlw	low _EUSART1_Transmit_ISR
  9564  002E80  0100               	movlb	0	; () banked
  9565  002E82  6F60               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler& (0+255),b
  9566  002E84  0E35               	movlw	high _EUSART1_Transmit_ISR
  9567  002E86  6F61               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  9568  002E88  ECE0  F01B         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  9569                           
  9570                           ;mcc_generated_files/eusart1.c: 95:     BAUD1CON = 0x08;
  9571  002E8C  0E08               	movlw	8
  9572  002E8E  6E9E               	movwf	3998,c	;volatile
  9573                           
  9574                           ;mcc_generated_files/eusart1.c: 98:     RC1STA = 0x80;
  9575  002E90  0E80               	movlw	128
  9576  002E92  6E9C               	movwf	3996,c	;volatile
  9577                           
  9578                           ;mcc_generated_files/eusart1.c: 101:     TX1STA = 0x24;
  9579  002E94  0E24               	movlw	36
  9580  002E96  6E9D               	movwf	3997,c	;volatile
  9581                           
  9582                           ;mcc_generated_files/eusart1.c: 104:     SP1BRGL = 0x8A;
  9583  002E98  0E8A               	movlw	138
  9584  002E9A  6E9A               	movwf	3994,c	;volatile
  9585                           
  9586                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGH = 0x00;
  9587  002E9C  0E00               	movlw	0
  9588  002E9E  6E9B               	movwf	3995,c	;volatile
  9589                           
  9590                           ;mcc_generated_files/eusart1.c: 110:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  9591  002EA0  0E32               	movlw	low _EUSART1_DefaultFramingErrorHandler
  9592  002EA2  0100               	movlb	0	; () banked
  9593  002EA4  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  9594  002EA6  0E38               	movlw	high _EUSART1_DefaultFramingErrorHandler
  9595  002EA8  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  9596  002EAA  ECEF  F01B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  9597                           
  9598                           ;mcc_generated_files/eusart1.c: 111:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  9599  002EAE  0E10               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  9600  002EB0  0100               	movlb	0	; () banked
  9601  002EB2  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  9602  002EB4  0E38               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  9603  002EB6  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  9604  002EB8  ECEA  F01B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  9605                           
  9606                           ;mcc_generated_files/eusart1.c: 112:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  9607  002EBC  0E16               	movlw	low _EUSART1_DefaultErrorHandler
  9608  002EBE  0100               	movlb	0	; () banked
  9609  002EC0  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  9610  002EC2  0E38               	movlw	high _EUSART1_DefaultErrorHandler
  9611  002EC4  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  9612  002EC6  ECF4  F01B         	call	_EUSART1_SetErrorHandler	;wreg free
  9613                           
  9614                           ;mcc_generated_files/eusart1.c: 114:     eusart1RxLastError.status = 0;
  9615  002ECA  0E00               	movlw	0
  9616  002ECC  6E52               	movwf	_eusart1RxLastError,c	;volatile
  9617                           
  9618                           ;mcc_generated_files/eusart1.c: 117:     eusart1TxHead = 0;
  9619  002ECE  0E00               	movlw	0
  9620  002ED0  6E56               	movwf	_eusart1TxHead,c	;volatile
  9621                           
  9622                           ;mcc_generated_files/eusart1.c: 118:     eusart1TxTail = 0;
  9623  002ED2  0E00               	movlw	0
  9624  002ED4  6E55               	movwf	_eusart1TxTail,c	;volatile
  9625                           
  9626                           ;mcc_generated_files/eusart1.c: 119:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  9627  002ED6  0E08               	movlw	8
  9628  002ED8  6E5B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  9629                           
  9630                           ;mcc_generated_files/eusart1.c: 121:     eusart1RxHead = 0;
  9631  002EDA  0E00               	movlw	0
  9632  002EDC  0100               	movlb	0	; () banked
  9633  002EDE  6FFF               	movwf	_eusart1RxHead& (0+255),b	;volatile
  9634                           
  9635                           ;mcc_generated_files/eusart1.c: 122:     eusart1RxTail = 0;
  9636  002EE0  0E00               	movlw	0
  9637  002EE2  6E54               	movwf	_eusart1RxTail,c	;volatile
  9638                           
  9639                           ;mcc_generated_files/eusart1.c: 123:     eusart1RxCount = 0;
  9640  002EE4  0E00               	movlw	0
  9641  002EE6  6E53               	movwf	_eusart1RxCount,c	;volatile
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;mcc_generated_files/eusart1.c: 126:     PIE3bits.RC1IE = 1;
  9645  002EE8  010E               	movlb	14	; () banked
  9646  002EEA  8BC0               	bsf	192,5,b	;volatile
  9647                           
  9648                           ; BSR set to: 14
  9649  002EEC  0012               	return		;funcret
  9650  002EEE                     __end_of_EUSART1_Initialize:
  9651                           	opt callstack 0
  9652                           
  9653 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  9654 ;; Defined at:
  9655 ;;		line 282 in file "mcc_generated_files/eusart1.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9658 ;;		 -> EUSART1_Transmit_ISR(1), 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;		None
  9661 ;; Return value:  Size  Location     Type
  9662 ;;                  1    wreg      void 
  9663 ;; Registers used:
  9664 ;;		wreg, status,2, status,0
  9665 ;; Tracked objects:
  9666 ;;		On entry : 0/0
  9667 ;;		On exit  : 0/0
  9668 ;;		Unchanged: 0/0
  9669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9670 ;;      Params:         0       2       0       0       0       0       0       0       0
  9671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9673 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9674 ;;Total ram usage:        2 bytes
  9675 ;; Hardware stack levels used:    1
  9676 ;; Hardware stack levels required when called:    5
  9677 ;; This function calls:
  9678 ;;		Nothing
  9679 ;; This function is called by:
  9680 ;;		_EUSART1_Initialize
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text50
  9685  0037C0                     __ptext50:
  9686                           	opt callstack 0
  9687  0037C0                     _EUSART1_SetTxInterruptHandler:
  9688                           	opt callstack 23
  9689                           
  9690                           ;mcc_generated_files/eusart1.c: 283:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9691                           
  9692                           ; BSR set to: 14
  9693                           ;incstack = 0
  9694  0037C0  C060  F192         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  9695  0037C4  C061  F193         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  9696  0037C8  0012               	return		;funcret
  9697  0037CA                     __end_of_EUSART1_SetTxInterruptHandler:
  9698                           	opt callstack 0
  9699                           
  9700 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  9701 ;; Defined at:
  9702 ;;		line 286 in file "mcc_generated_files/eusart1.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9705 ;;		 -> EUSART1_Receive_ISR(1), 
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;		None
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  1    wreg      void 
  9710 ;; Registers used:
  9711 ;;		wreg, status,2, status,0
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9717 ;;      Params:         0       2       0       0       0       0       0       0       0
  9718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9720 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9721 ;;Total ram usage:        2 bytes
  9722 ;; Hardware stack levels used:    1
  9723 ;; Hardware stack levels required when called:    5
  9724 ;; This function calls:
  9725 ;;		Nothing
  9726 ;; This function is called by:
  9727 ;;		_EUSART1_Initialize
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text51
  9732  0037CA                     __ptext51:
  9733                           	opt callstack 0
  9734  0037CA                     _EUSART1_SetRxInterruptHandler:
  9735                           	opt callstack 23
  9736                           
  9737                           ;mcc_generated_files/eusart1.c: 287:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9738                           
  9739                           ;incstack = 0
  9740  0037CA  C060  F190         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  9741  0037CE  C061  F191         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  9742  0037D2  0012               	return		;funcret
  9743  0037D4                     __end_of_EUSART1_SetRxInterruptHandler:
  9744                           	opt callstack 0
  9745                           
  9746 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  9747 ;; Defined at:
  9748 ;;		line 274 in file "mcc_generated_files/eusart1.c"
  9749 ;; Parameters:    Size  Location     Type
  9750 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9751 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  9752 ;; Auto vars:     Size  Location     Type
  9753 ;;		None
  9754 ;; Return value:  Size  Location     Type
  9755 ;;                  1    wreg      void 
  9756 ;; Registers used:
  9757 ;;		wreg, status,2, status,0
  9758 ;; Tracked objects:
  9759 ;;		On entry : 0/0
  9760 ;;		On exit  : 0/0
  9761 ;;		Unchanged: 0/0
  9762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9763 ;;      Params:         0       2       0       0       0       0       0       0       0
  9764 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9766 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9767 ;;Total ram usage:        2 bytes
  9768 ;; Hardware stack levels used:    1
  9769 ;; Hardware stack levels required when called:    5
  9770 ;; This function calls:
  9771 ;;		Nothing
  9772 ;; This function is called by:
  9773 ;;		_EUSART1_Initialize
  9774 ;; This function uses a non-reentrant model
  9775 ;;
  9776                           
  9777                           	psect	text52
  9778  0037D4                     __ptext52:
  9779                           	opt callstack 0
  9780  0037D4                     _EUSART1_SetOverrunErrorHandler:
  9781                           	opt callstack 23
  9782                           
  9783                           ;mcc_generated_files/eusart1.c: 275:     EUSART1_OverrunErrorHandler = interruptHandler;
  9784                           
  9785                           ;incstack = 0
  9786  0037D4  C060  F186         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  9787  0037D8  C061  F187         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  9788  0037DC  0012               	return		;funcret
  9789  0037DE                     __end_of_EUSART1_SetOverrunErrorHandler:
  9790                           	opt callstack 0
  9791                           
  9792 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  9793 ;; Defined at:
  9794 ;;		line 270 in file "mcc_generated_files/eusart1.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9797 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;		None
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, status,2, status,0
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9809 ;;      Params:         0       2       0       0       0       0       0       0       0
  9810 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9812 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9813 ;;Total ram usage:        2 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    5
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_EUSART1_Initialize
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           	psect	text53
  9824  0037DE                     __ptext53:
  9825                           	opt callstack 0
  9826  0037DE                     _EUSART1_SetFramingErrorHandler:
  9827                           	opt callstack 23
  9828                           
  9829                           ;mcc_generated_files/eusart1.c: 271:     EUSART1_FramingErrorHandler = interruptHandler;
  9830                           
  9831                           ;incstack = 0
  9832  0037DE  C060  F188         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  9833  0037E2  C061  F189         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  9834  0037E6  0012               	return		;funcret
  9835  0037E8                     __end_of_EUSART1_SetFramingErrorHandler:
  9836                           	opt callstack 0
  9837                           
  9838 ;; *************** function _EUSART1_SetErrorHandler *****************
  9839 ;; Defined at:
  9840 ;;		line 278 in file "mcc_generated_files/eusart1.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9843 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      void 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9855 ;;      Params:         0       2       0       0       0       0       0       0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9858 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9859 ;;Total ram usage:        2 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    5
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_EUSART1_Initialize
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text54
  9870  0037E8                     __ptext54:
  9871                           	opt callstack 0
  9872  0037E8                     _EUSART1_SetErrorHandler:
  9873                           	opt callstack 23
  9874                           
  9875                           ;mcc_generated_files/eusart1.c: 279:     EUSART1_ErrorHandler = interruptHandler;
  9876                           
  9877                           ;incstack = 0
  9878  0037E8  C060  F184         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  9879  0037EC  C061  F185         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  9880  0037F0  0012               	return		;funcret
  9881  0037F2                     __end_of_EUSART1_SetErrorHandler:
  9882                           	opt callstack 0
  9883                           
  9884 ;; *************** function _CCP1_Initialize *****************
  9885 ;; Defined at:
  9886 ;;		line 65 in file "mcc_generated_files/ccp1.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;		None
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      void 
  9893 ;; Registers used:
  9894 ;;		wreg, status,2, status,0, cstack
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9900 ;;      Params:         0       0       0       0       0       0       0       0       0
  9901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9904 ;;Total ram usage:        0 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; Hardware stack levels required when called:    6
  9907 ;; This function calls:
  9908 ;;		_CCP1_SetCallBack
  9909 ;; This function is called by:
  9910 ;;		_SYSTEM_Initialize
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text55
  9915  00357A                     __ptext55:
  9916                           	opt callstack 0
  9917  00357A                     _CCP1_Initialize:
  9918                           	opt callstack 23
  9919                           
  9920                           ;mcc_generated_files/ccp1.c: 70:  CCP1CON = 0x84;
  9921                           
  9922                           ;incstack = 0
  9923  00357A  0E84               	movlw	132
  9924  00357C  6EAB               	movwf	4011,c	;volatile
  9925                           
  9926                           ;mcc_generated_files/ccp1.c: 73:  CCP1CAP = 0x00;
  9927  00357E  0E00               	movlw	0
  9928  003580  6EAC               	movwf	4012,c	;volatile
  9929                           
  9930                           ;mcc_generated_files/ccp1.c: 76:  CCPR1H = 0x00;
  9931  003582  0E00               	movlw	0
  9932  003584  6EAA               	movwf	4010,c	;volatile
  9933                           
  9934                           ;mcc_generated_files/ccp1.c: 79:  CCPR1L = 0x00;
  9935  003586  0E00               	movlw	0
  9936  003588  6EA9               	movwf	4009,c	;volatile
  9937                           
  9938                           ;mcc_generated_files/ccp1.c: 82:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  9939  00358A  0E34               	movlw	low _CCP1_DefaultCallBack
  9940  00358C  0100               	movlb	0	; () banked
  9941  00358E  6F60               	movwf	CCP1_SetCallBack@customCallBack& (0+255),b
  9942  003590  0E38               	movlw	high _CCP1_DefaultCallBack
  9943  003592  6F61               	movwf	(CCP1_SetCallBack@customCallBack+1)& (0+255),b
  9944  003594  ECF9  F01B         	call	_CCP1_SetCallBack	;wreg free
  9945                           
  9946                           ;mcc_generated_files/ccp1.c: 85:  CCPTMRSbits.C1TSEL = 0x1;
  9947  003598  50AD               	movf	4013,w,c	;volatile
  9948  00359A  0BFC               	andlw	-4
  9949  00359C  0901               	iorlw	1
  9950  00359E  6EAD               	movwf	4013,c	;volatile
  9951                           
  9952                           ;mcc_generated_files/ccp1.c: 88:     PIR6bits.CCP1IF = 0;
  9953  0035A0  010E               	movlb	14	; () banked
  9954  0035A2  91CB               	bcf	203,0,b	;volatile
  9955                           
  9956                           ; BSR set to: 14
  9957                           ;mcc_generated_files/ccp1.c: 91:     PIE6bits.CCP1IE = 1;
  9958  0035A4  81C3               	bsf	195,0,b	;volatile
  9959                           
  9960                           ; BSR set to: 14
  9961  0035A6  0012               	return		;funcret
  9962  0035A8                     __end_of_CCP1_Initialize:
  9963                           	opt callstack 0
  9964                           
  9965 ;; *************** function _CCP1_SetCallBack *****************
  9966 ;; Defined at:
  9967 ;;		line 109 in file "mcc_generated_files/ccp1.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9970 ;;		 -> ping_CCP1_triggered(1), CCP1_DefaultCallBack(1), 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;		None
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, status,2, status,0
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9982 ;;      Params:         0       2       0       0       0       0       0       0       0
  9983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9985 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9986 ;;Total ram usage:        2 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:    5
  9989 ;; This function calls:
  9990 ;;		Nothing
  9991 ;; This function is called by:
  9992 ;;		_CCP1_Initialize
  9993 ;;		_ping_init
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text56
  9998  0037F2                     __ptext56:
  9999                           	opt callstack 0
 10000  0037F2                     _CCP1_SetCallBack:
 10001                           	opt callstack 24
 10002                           
 10003                           ;mcc_generated_files/ccp1.c: 110:     CCP1_CallBack = customCallBack;
 10004                           
 10005                           ; BSR set to: 14
 10006                           ;incstack = 0
 10007  0037F2  C060  F18C         	movff	CCP1_SetCallBack@customCallBack,_CCP1_CallBack
 10008  0037F6  C061  F18D         	movff	CCP1_SetCallBack@customCallBack+1,_CCP1_CallBack+1
 10009  0037FA  0012               	return		;funcret
 10010  0037FC                     __end_of_CCP1_SetCallBack:
 10011                           	opt callstack 0
 10012                           
 10013 ;; *************** function _INTERRUPT_InterruptManager *****************
 10014 ;; Defined at:
 10015 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10029 ;;      Params:         0       0       0       0       0       0       0       0       0
 10030 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10031 ;;      Temps:          6       0       0       0       0       0       0       0       0
 10032 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10033 ;;Total ram usage:        6 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    4
 10036 ;; This function calls:
 10037 ;;		Absolute function
 10038 ;;		_CCP1_CaptureISR
 10039 ;;		_EUSART1_Receive_ISR
 10040 ;;		_EUSART1_Transmit_ISR
 10041 ;;		_PIN_MANAGER_IOC
 10042 ;;		_TMR1_ISR
 10043 ;;		_TMR2_ISR
 10044 ;; This function is called by:
 10045 ;;		Interrupt level 2
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	intcode
 10050  000008                     __pintcode:
 10051                           	opt callstack 0
 10052  000008                     _INTERRUPT_InterruptManager:
 10053                           	opt callstack 17
 10054                           
 10055                           ;incstack = 0
 10056  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10057  00000A  CFFA F02C          	movff	pclath,??_INTERRUPT_InterruptManager
 10058  00000E  CFFB F02D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10059  000012  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10060  000016  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10061  00001A  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+4
 10062  00001E  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+5
 10063                           
 10064                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 10065  000022  010E               	movlb	14	; () banked
 10066  000024  B9BD               	btfsc	189,4,b	;volatile
 10067                           
 10068                           ; BSR set to: 14
 10069  000026  A9C5               	btfss	197,4,b	;volatile
 10070  000028  D003               	goto	i2l245
 10071                           
 10072                           ; BSR set to: 14
 10073                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 10074  00002A  ECCB  F01B         	call	_PIN_MANAGER_IOC	;wreg free
 10075                           
 10076                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 10077  00002E  D02F               	goto	i2l251
 10078  000030                     i2l245:
 10079                           
 10080                           ; BSR set to: 14
 10081  000030  ACF2               	btfss	4082,6,c	;volatile
 10082  000032  D02D               	goto	i2l251
 10083                           
 10084                           ; BSR set to: 14
 10085                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
 10086  000034  B9C0               	btfsc	192,4,b	;volatile
 10087                           
 10088                           ; BSR set to: 14
 10089  000036  A9C8               	btfss	200,4,b	;volatile
 10090  000038  D009               	goto	i2l248
 10091                           
 10092                           ; BSR set to: 14
 10093                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_TxDefaultInterruptHandler();
 10094  00003A  D801               	call	i2u603_48
 10095  00003C  D028               	goto	i2l251
 10096  00003E                     i2u603_48:
 10097  00003E  0005               	push	
 10098  000040  0101               	movlb	1	; () banked
 10099  000042  6EFA               	movwf	pclath,c
 10100  000044  5192               	movf	_EUSART1_TxDefaultInterruptHandler& (0+255),w,b
 10101  000046  6EFD               	movwf	tosl,c
 10102  000048  5193               	movf	(_EUSART1_TxDefaultInterruptHandler+1)& (0+255),w,b
 10103  00004A  D00B               	goto	L12
 10104  00004C                     i2l248:
 10105                           
 10106                           ; BSR set to: 14
 10107  00004C  BBC0               	btfsc	192,5,b	;volatile
 10108                           
 10109                           ; BSR set to: 14
 10110  00004E  ABC8               	btfss	200,5,b	;volatile
 10111  000050  D00D               	goto	i2l250
 10112                           
 10113                           ; BSR set to: 14
 10114                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART1_RxDefaultInterruptHandler();
 10115  000052  D801               	call	i2u606_48
 10116  000054  D01C               	goto	i2l251
 10117  000056                     i2u606_48:
 10118  000056  0005               	push	
 10119  000058  0101               	movlb	1	; () banked
 10120  00005A  6EFA               	movwf	pclath,c
 10121  00005C  5190               	movf	_EUSART1_RxDefaultInterruptHandler& (0+255),w,b
 10122  00005E  6EFD               	movwf	tosl,c
 10123  000060  5191               	movf	(_EUSART1_RxDefaultInterruptHandler+1)& (0+255),w,b
 10124  000062                     L12:
 10125  000062  6EFE               	movwf	tosh,c
 10126  000064  50F8               	movf	tblptru,w,c
 10127  000066  6EFF               	movwf	tosu,c
 10128  000068  50FA               	movf	pclath,w,c
 10129  00006A  0012               	return		;indir
 10130  00006C                     i2l250:
 10131                           
 10132                           ; BSR set to: 14
 10133  00006C  B3C1               	btfsc	193,1,b	;volatile
 10134                           
 10135                           ; BSR set to: 14
 10136  00006E  A3C9               	btfss	201,1,b	;volatile
 10137  000070  D003               	goto	i2l252
 10138                           
 10139                           ; BSR set to: 14
 10140                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
 10141  000072  EC2A  F01B         	call	_TMR2_ISR	;wreg free
 10142                           
 10143                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 10144  000076  D00B               	goto	i2l251
 10145  000078                     i2l252:
 10146                           
 10147                           ; BSR set to: 14
 10148  000078  B1C1               	btfsc	193,0,b	;volatile
 10149                           
 10150                           ; BSR set to: 14
 10151  00007A  A1C9               	btfss	201,0,b	;volatile
 10152  00007C  D003               	goto	i2l254
 10153                           
 10154                           ; BSR set to: 14
 10155                           ;mcc_generated_files/interrupt_manager.c: 80:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             TMR1_ISR();
 10156  00007E  EC16  F01A         	call	_TMR1_ISR	;wreg free
 10157                           
 10158                           ;mcc_generated_files/interrupt_manager.c: 82:         }
 10159  000082  D005               	goto	i2l251
 10160  000084                     i2l254:
 10161                           
 10162                           ; BSR set to: 14
 10163  000084  B1C3               	btfsc	195,0,b	;volatile
 10164                           
 10165                           ; BSR set to: 14
 10166  000086  A1CB               	btfss	203,0,b	;volatile
 10167  000088  D002               	goto	i2l251
 10168                           
 10169                           ; BSR set to: 14
 10170                           ;mcc_generated_files/interrupt_manager.c: 84:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 85:             CCP1_CaptureISR();
 10171  00008A  ECD4  F01A         	call	_CCP1_CaptureISR	;wreg free
 10172  00008E                     i2l251:
 10173                           
 10174                           ; BSR set to: 14
 10175  00008E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 10176  000092  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 10177  000096  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10178  00009A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10179  00009E  C02D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10180  0000A2  C02C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10181  0000A6  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10182  0000A8  0011               	retfie		f
 10183  0000AA                     __end_of_INTERRUPT_InterruptManager:
 10184                           	opt callstack 0
 10185                           
 10186 ;; *************** function _TMR2_ISR *****************
 10187 ;; Defined at:
 10188 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;		None
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;		None
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  1    wreg      void 
 10195 ;; Registers used:
 10196 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10197 ;; Tracked objects:
 10198 ;;		On entry : 0/0
 10199 ;;		On exit  : 0/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10202 ;;      Params:         0       0       0       0       0       0       0       0       0
 10203 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10204 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10205 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10206 ;;Total ram usage:        0 bytes
 10207 ;; Hardware stack levels used:    1
 10208 ;; Hardware stack levels required when called:    1
 10209 ;; This function calls:
 10210 ;;		Absolute function
 10211 ;;		_TMR2_DefaultInterruptHandler
 10212 ;;		_carcontrol_ISR
 10213 ;; This function is called by:
 10214 ;;		_INTERRUPT_InterruptManager
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text58
 10219  003654                     __ptext58:
 10220                           	opt callstack 0
 10221  003654                     _TMR2_ISR:
 10222                           	opt callstack 19
 10223                           
 10224                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 10225                           
 10226                           ;incstack = 0
 10227  003654  010E               	movlb	14	; () banked
 10228  003656  93C9               	bcf	201,1,b	;volatile
 10229                           
 10230                           ; BSR set to: 14
 10231                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 10232  003658  0101               	movlb	1	; () banked
 10233  00365A  518E               	movf	_TMR2_InterruptHandler& (0+255),w,b
 10234  00365C  118F               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 10235  00365E  B4D8               	btfsc	status,2,c
 10236  003660  0012               	return	
 10237                           
 10238                           ; BSR set to: 1
 10239                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 10240  003662  D801               	call	i2u582_48
 10241  003664  0012               	return	
 10242  003666                     i2u582_48:
 10243  003666  0005               	push	
 10244  003668  6EFA               	movwf	pclath,c
 10245  00366A  518E               	movf	_TMR2_InterruptHandler& (0+255),w,b
 10246  00366C  6EFD               	movwf	tosl,c
 10247  00366E  518F               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 10248  003670  6EFE               	movwf	tosh,c
 10249  003672  50F8               	movf	tblptru,w,c
 10250  003674  6EFF               	movwf	tosu,c
 10251  003676  50FA               	movf	pclath,w,c
 10252  003678  0012               	return		;indir
 10253  00367A                     __end_of_TMR2_ISR:
 10254                           	opt callstack 0
 10255                           
 10256 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 10257 ;; Defined at:
 10258 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;		None
 10261 ;; Auto vars:     Size  Location     Type
 10262 ;;		None
 10263 ;; Return value:  Size  Location     Type
 10264 ;;                  1    wreg      void 
 10265 ;; Registers used:
 10266 ;;		None
 10267 ;; Tracked objects:
 10268 ;;		On entry : 0/0
 10269 ;;		On exit  : 0/0
 10270 ;;		Unchanged: 0/0
 10271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10272 ;;      Params:         0       0       0       0       0       0       0       0       0
 10273 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10274 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10275 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10276 ;;Total ram usage:        0 bytes
 10277 ;; Hardware stack levels used:    1
 10278 ;; This function calls:
 10279 ;;		Nothing
 10280 ;; This function is called by:
 10281 ;;		_TMR2_Initialize
 10282 ;;		_TMR2_ISR
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           	psect	text59
 10287  00382C                     __ptext59:
 10288                           	opt callstack 0
 10289  00382C                     _TMR2_DefaultInterruptHandler:
 10290                           	opt callstack 19
 10291                           
 10292                           ;incstack = 0
 10293  00382C  0012               	return		;funcret
 10294  00382E                     __end_of_TMR2_DefaultInterruptHandler:
 10295                           	opt callstack 0
 10296                           
 10297 ;; *************** function _carcontrol_ISR *****************
 10298 ;; Defined at:
 10299 ;;		line 41 in file "car_ctrl.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;		None
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, status,2, status,0
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10313 ;;      Params:         0       0       0       0       0       0       0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10315 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10316 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10317 ;;Total ram usage:        3 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; This function calls:
 10320 ;;		Nothing
 10321 ;; This function is called by:
 10322 ;;		_carcontrol_init
 10323 ;;		_TMR2_ISR
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text60
 10328  002836                     __ptext60:
 10329                           	opt callstack 0
 10330  002836                     _carcontrol_ISR:
 10331                           	opt callstack 19
 10332                           
 10333                           ;car_ctrl.c: 43:     switch (carctl.state) {
 10334                           
 10335                           ;incstack = 0
 10336  002836  D05C               	goto	i2l5375
 10337  002838                     i2l5333:
 10338                           
 10339                           ;car_ctrl.c: 46:             carctl.state = state_high;
 10340  002838  0E01               	movlw	1
 10341  00283A  6E3B               	movwf	_carctl+1,c	;volatile
 10342  00283C  8082               	bsf	3970,0,c	;volatile
 10343  00283E  8282               	bsf	3970,1,c	;volatile
 10344                           
 10345                           ;car_ctrl.c: 49:             stateTime = 0;
 10346  002840  0E00               	movlw	0
 10347  002842  6E51               	movwf	_stateTime+1,c
 10348  002844  0E00               	movlw	0
 10349  002846  6E50               	movwf	_stateTime,c
 10350                           
 10351                           ;car_ctrl.c: 50:         break;
 10352  002848  0012               	return	
 10353  00284A                     i2l5339:
 10354                           
 10355                           ;car_ctrl.c: 52:             stateTime++;
 10356  00284A  4A50               	infsnz	_stateTime,f,c
 10357  00284C  2A51               	incf	_stateTime+1,f,c
 10358  00284E  8082               	bsf	3970,0,c	;volatile
 10359  002850  8282               	bsf	3970,1,c	;volatile
 10360                           
 10361                           ;car_ctrl.c: 55:             if (stateTime >= 100) {
 10362  002852  BE51               	btfsc	_stateTime+1,7,c
 10363  002854  0012               	return	
 10364  002856  5051               	movf	_stateTime+1,w,c
 10365  002858  E104               	bnz	i2u574_40
 10366  00285A  0E64               	movlw	100
 10367  00285C  5C50               	subwf	_stateTime,w,c
 10368  00285E  A0D8               	btfss	status,0,c
 10369  002860  0012               	return	
 10370  002862                     i2u574_40:
 10371                           
 10372                           ;car_ctrl.c: 57:                 carctl.state = state_vary;
 10373  002862  0E02               	movlw	2
 10374  002864  6E3B               	movwf	_carctl+1,c	;volatile
 10375                           
 10376                           ;car_ctrl.c: 58:                 stateTime = 0;
 10377  002866  0E00               	movlw	0
 10378  002868  6E51               	movwf	_stateTime+1,c
 10379  00286A  0E00               	movlw	0
 10380  00286C  6E50               	movwf	_stateTime,c
 10381  00286E  0012               	return	
 10382  002870                     i2l5349:
 10383                           
 10384                           ;car_ctrl.c: 62:             stateTime++;
 10385  002870  4A50               	infsnz	_stateTime,f,c
 10386  002872  2A51               	incf	_stateTime+1,f,c
 10387                           
 10388                           ;car_ctrl.c: 63:             if (stateTime > carctl.throttleHighTime) {
 10389  002874  503E               	movf	_carctl+4,w,c	;volatile
 10390  002876  6E01               	movwf	??_carcontrol_ISR& (0+255),c
 10391  002878  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
 10392  00287A  5050               	movf	_stateTime,w,c
 10393  00287C  5C01               	subwf	??_carcontrol_ISR,w,c
 10394  00287E  5002               	movf	??_carcontrol_ISR+1,w,c
 10395  002880  0A80               	xorlw	128
 10396  002882  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
 10397  002884  5051               	movf	_stateTime+1,w,c
 10398  002886  0A80               	xorlw	128
 10399  002888  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
 10400  00288A  A0D8               	btfss	status,0,c
 10401                           
 10402                           ;car_ctrl.c: 64:                 do { LATAbits.LATA0 = 0; } while(0);
 10403  00288C  9082               	bcf	3970,0,c	;volatile
 10404                           
 10405                           ;car_ctrl.c: 66:             if (stateTime > carctl.servoHighTime) {
 10406  00288E  503F               	movf	_carctl+5,w,c	;volatile
 10407  002890  6E01               	movwf	??_carcontrol_ISR& (0+255),c
 10408  002892  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
 10409  002894  5050               	movf	_stateTime,w,c
 10410  002896  5C01               	subwf	??_carcontrol_ISR,w,c
 10411  002898  5002               	movf	??_carcontrol_ISR+1,w,c
 10412  00289A  0A80               	xorlw	128
 10413  00289C  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
 10414  00289E  5051               	movf	_stateTime+1,w,c
 10415  0028A0  0A80               	xorlw	128
 10416  0028A2  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
 10417  0028A4  A0D8               	btfss	status,0,c
 10418                           
 10419                           ;car_ctrl.c: 67:                 do { LATAbits.LATA1 = 0; } while(0);
 10420  0028A6  9282               	bcf	3970,1,c	;volatile
 10421                           
 10422                           ;car_ctrl.c: 69:             if (stateTime >= 100) {
 10423  0028A8  BE51               	btfsc	_stateTime+1,7,c
 10424  0028AA  0012               	return	
 10425  0028AC  5051               	movf	_stateTime+1,w,c
 10426  0028AE  E104               	bnz	i2u577_40
 10427  0028B0  0E64               	movlw	100
 10428  0028B2  5C50               	subwf	_stateTime,w,c
 10429  0028B4  A0D8               	btfss	status,0,c
 10430  0028B6  0012               	return	
 10431  0028B8                     i2u577_40:
 10432                           
 10433                           ;car_ctrl.c: 70:                 carctl.state = state_low;
 10434  0028B8  0E03               	movlw	3
 10435  0028BA  6E3B               	movwf	_carctl+1,c	;volatile
 10436                           
 10437                           ;car_ctrl.c: 71:                 stateTime = 0;
 10438  0028BC  0E00               	movlw	0
 10439  0028BE  6E51               	movwf	_stateTime+1,c
 10440  0028C0  0E00               	movlw	0
 10441  0028C2  6E50               	movwf	_stateTime,c
 10442  0028C4  0012               	return	
 10443  0028C6                     i2l5359:
 10444                           
 10445                           ;car_ctrl.c: 75:             stateTime++;
 10446  0028C6  4A50               	infsnz	_stateTime,f,c
 10447  0028C8  2A51               	incf	_stateTime+1,f,c
 10448  0028CA  9082               	bcf	3970,0,c	;volatile
 10449  0028CC  9282               	bcf	3970,1,c	;volatile
 10450                           
 10451                           ;car_ctrl.c: 78:             if (stateTime >= 1800) {
 10452  0028CE  BE51               	btfsc	_stateTime+1,7,c
 10453  0028D0  0012               	return	
 10454  0028D2  0E08               	movlw	8
 10455  0028D4  5C50               	subwf	_stateTime,w,c
 10456  0028D6  0E07               	movlw	7
 10457  0028D8  5851               	subwfb	_stateTime+1,w,c
 10458  0028DA  A0D8               	btfss	status,0,c
 10459  0028DC  0012               	return	
 10460                           
 10461                           ;car_ctrl.c: 79:                 carctl.state = state_high;
 10462  0028DE  0E01               	movlw	1
 10463  0028E0  6E3B               	movwf	_carctl+1,c	;volatile
 10464                           
 10465                           ;car_ctrl.c: 80:                 stateTime = 0;
 10466  0028E2  0E00               	movlw	0
 10467  0028E4  6E51               	movwf	_stateTime+1,c
 10468  0028E6  0E00               	movlw	0
 10469  0028E8  6E50               	movwf	_stateTime,c
 10470  0028EA  8082               	bsf	3970,0,c	;volatile
 10471  0028EC  9282               	bcf	3970,1,c	;volatile
 10472  0028EE  0012               	return	
 10473  0028F0                     i2l5375:
 10474  0028F0  503B               	movf	_carctl+1,w,c	;volatile
 10475  0028F2  6E01               	movwf	??_carcontrol_ISR& (0+255),c
 10476  0028F4  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
 10477                           
 10478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10479                           ; Switch size 1, requested type "simple"
 10480                           ; Number of cases is 1, Range of values is 0 to 0
 10481                           ; switch strategies available:
 10482                           ; Name         Instructions Cycles
 10483                           ; simple_byte            4     3 (average)
 10484                           ;	Chosen strategy is simple_byte
 10485  0028F6  5002               	movf	??_carcontrol_ISR+1,w,c
 10486  0028F8  0A00               	xorlw	0	; case 0
 10487  0028FA  A4D8               	btfss	status,2,c
 10488  0028FC  0012               	return	
 10489                           
 10490                           ; Switch size 1, requested type "simple"
 10491                           ; Number of cases is 4, Range of values is 0 to 3
 10492                           ; switch strategies available:
 10493                           ; Name         Instructions Cycles
 10494                           ; simple_byte           13     7 (average)
 10495                           ;	Chosen strategy is simple_byte
 10496  0028FE  5001               	movf	??_carcontrol_ISR,w,c
 10497  002900  0A00               	xorlw	0	; case 0
 10498  002902  B4D8               	btfsc	status,2,c
 10499  002904  D799               	goto	i2l5333
 10500  002906  0A01               	xorlw	1	; case 1
 10501  002908  B4D8               	btfsc	status,2,c
 10502  00290A  D79F               	goto	i2l5339
 10503  00290C  0A03               	xorlw	3	; case 2
 10504  00290E  B4D8               	btfsc	status,2,c
 10505  002910  D7AF               	goto	i2l5349
 10506  002912  0A01               	xorlw	1	; case 3
 10507  002914  A4D8               	btfss	status,2,c
 10508  002916  0012               	return	
 10509  002918  D7D6               	goto	i2l5359
 10510  00291A                     __end_of_carcontrol_ISR:
 10511                           	opt callstack 0
 10512                           
 10513 ;; *************** function _TMR1_ISR *****************
 10514 ;; Defined at:
 10515 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;		None
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;		None
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10529 ;;      Params:         0       0       0       0       0       0       0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10532 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10533 ;;Total ram usage:        0 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    2
 10536 ;; This function calls:
 10537 ;;		Absolute function
 10538 ;;		_TMR1_DefaultInterruptHandler
 10539 ;;		_ping_TMR1Overflow_isr
 10540 ;;		i2_TMR1_WriteTimer
 10541 ;; This function is called by:
 10542 ;;		_INTERRUPT_InterruptManager
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text61
 10547  00342C                     __ptext61:
 10548                           	opt callstack 0
 10549  00342C                     _TMR1_ISR:
 10550                           	opt callstack 18
 10551                           
 10552                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 10553                           
 10554                           ;incstack = 0
 10555  00342C  010E               	movlb	14	; () banked
 10556  00342E  91C9               	bcf	201,0,b	;volatile
 10557                           
 10558                           ; BSR set to: 14
 10559                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 10560  003430  C057  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 10561  003434  C058  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 10562  003438  EC9F  F01B         	call	i2_TMR1_WriteTimer	;wreg free
 10563                           
 10564                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 10565  00343C  0101               	movlb	1	; () banked
 10566  00343E  518A               	movf	_TMR1_InterruptHandler& (0+255),w,b
 10567  003440  118B               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 10568  003442  B4D8               	btfsc	status,2,c
 10569  003444  0012               	return	
 10570                           
 10571                           ; BSR set to: 1
 10572                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 10573  003446  D801               	call	i2u584_48
 10574  003448  0012               	return	
 10575  00344A                     i2u584_48:
 10576  00344A  0005               	push	
 10577  00344C  6EFA               	movwf	pclath,c
 10578  00344E  518A               	movf	_TMR1_InterruptHandler& (0+255),w,b
 10579  003450  6EFD               	movwf	tosl,c
 10580  003452  518B               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 10581  003454  6EFE               	movwf	tosh,c
 10582  003456  50F8               	movf	tblptru,w,c
 10583  003458  6EFF               	movwf	tosu,c
 10584  00345A  50FA               	movf	pclath,w,c
 10585  00345C  0012               	return		;indir
 10586  00345E                     __end_of_TMR1_ISR:
 10587                           	opt callstack 0
 10588                           
 10589 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10590 ;; Defined at:
 10591 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;		None
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  1    wreg      void 
 10598 ;; Registers used:
 10599 ;;		None
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10605 ;;      Params:         0       0       0       0       0       0       0       0       0
 10606 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10608 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10609 ;;Total ram usage:        0 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_TMR1_Initialize
 10615 ;;		_ping_TMR1Overflow_isr
 10616 ;;		_ping_RC2_went_HIGH
 10617 ;;		_ping_init
 10618 ;;		_TMR1_ISR
 10619 ;; This function uses a non-reentrant model
 10620 ;;
 10621                           
 10622                           	psect	text62
 10623  00382E                     __ptext62:
 10624                           	opt callstack 0
 10625  00382E                     _TMR1_DefaultInterruptHandler:
 10626                           	opt callstack 19
 10627                           
 10628                           ;incstack = 0
 10629  00382E  0012               	return		;funcret
 10630  003830                     __end_of_TMR1_DefaultInterruptHandler:
 10631                           	opt callstack 0
 10632                           
 10633 ;; *************** function _ping_TMR1Overflow_isr *****************
 10634 ;; Defined at:
 10635 ;;		line 54 in file "ping.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;		None
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10649 ;;      Params:         0       0       0       0       0       0       0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10652 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10653 ;;Total ram usage:        0 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    1
 10656 ;; This function calls:
 10657 ;;		i2_IOCCF2_SetInterruptHandler
 10658 ;;		i2_TMR1_SetInterruptHandler
 10659 ;; This function is called by:
 10660 ;;		_ping_send
 10661 ;;		_TMR1_ISR
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           	psect	text63
 10666  003704                     __ptext63:
 10667                           	opt callstack 0
 10668  003704                     _ping_TMR1Overflow_isr:
 10669                           	opt callstack 18
 10670                           
 10671                           ;ping.c: 55:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 10672                           
 10673                           ;incstack = 0
 10674  003704  0E2E               	movlw	low _TMR1_DefaultInterruptHandler
 10675  003706  6E01               	movwf	i2TMR1_SetInterruptHandler@InterruptHandler,c
 10676  003708  0E38               	movlw	high _TMR1_DefaultInterruptHandler
 10677  00370A  6E02               	movwf	i2TMR1_SetInterruptHandler@InterruptHandler+1,c
 10678  00370C  ECFE  F01B         	call	i2_TMR1_SetInterruptHandler	;wreg free
 10679  003710  9484               	bcf	3972,2,c	;volatile
 10680  003712  8489               	bsf	3977,2,c	;volatile
 10681                           
 10682                           ;ping.c: 60:     IOCCF2_SetInterruptHandler(ping_RC2_went_HIGH);
 10683  003714  0E94               	movlw	low _ping_RC2_went_HIGH
 10684  003716  6E01               	movwf	i2IOCCF2_SetInterruptHandler@InterruptHandler,c
 10685  003718  0E33               	movlw	high _ping_RC2_went_HIGH
 10686  00371A  6E02               	movwf	i2IOCCF2_SetInterruptHandler@InterruptHandler+1,c
 10687  00371C  EC03  F01C         	call	i2_IOCCF2_SetInterruptHandler	;wreg free
 10688  003720  0012               	return		;funcret
 10689  003722                     __end_of_ping_TMR1Overflow_isr:
 10690                           	opt callstack 0
 10691                           
 10692 ;; *************** function _PIN_MANAGER_IOC *****************
 10693 ;; Defined at:
 10694 ;;		line 126 in file "mcc_generated_files/pin_manager.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      void 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10711 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10712 ;;Total ram usage:        0 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:    3
 10715 ;; This function calls:
 10716 ;;		_IOCCF2_ISR
 10717 ;; This function is called by:
 10718 ;;		_INTERRUPT_InterruptManager
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text64
 10723  003796                     __ptext64:
 10724                           	opt callstack 0
 10725  003796                     _PIN_MANAGER_IOC:
 10726                           	opt callstack 17
 10727                           
 10728                           ;mcc_generated_files/pin_manager.c: 129:     if(IOCCFbits.IOCCF2 == 1)
 10729                           
 10730                           ;incstack = 0
 10731  003796  010F               	movlb	15	; () banked
 10732  003798  A515               	btfss	21,2,b	;volatile
 10733  00379A  0012               	return	
 10734                           
 10735                           ; BSR set to: 15
 10736                           ;mcc_generated_files/pin_manager.c: 130:     {;mcc_generated_files/pin_manager.c: 131:  
      +                                 IOCCF2_ISR();
 10737  00379C  EC3D  F01B         	call	_IOCCF2_ISR	;wreg free
 10738  0037A0  0012               	return		;funcret
 10739  0037A2                     __end_of_PIN_MANAGER_IOC:
 10740                           	opt callstack 0
 10741                           
 10742 ;; *************** function _IOCCF2_ISR *****************
 10743 ;; Defined at:
 10744 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      void 
 10751 ;; Registers used:
 10752 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10758 ;;      Params:         0       0       0       0       0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10761 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10762 ;;Total ram usage:        0 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:    2
 10765 ;; This function calls:
 10766 ;;		Absolute function
 10767 ;;		_IOCCF2_DefaultInterruptHandler
 10768 ;;		_ping_RC2_went_HIGH
 10769 ;; This function is called by:
 10770 ;;		_PIN_MANAGER_IOC
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text65
 10775  00367A                     __ptext65:
 10776                           	opt callstack 0
 10777  00367A                     _IOCCF2_ISR:
 10778                           	opt callstack 17
 10779                           
 10780                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCCF2_InterruptHandler)
 10781                           
 10782                           ;incstack = 0
 10783  00367A  5059               	movf	_IOCCF2_InterruptHandler,w,c
 10784  00367C  105A               	iorwf	_IOCCF2_InterruptHandler+1,w,c
 10785  00367E  B4D8               	btfsc	status,2,c
 10786  003680  D00C               	goto	i2u569_49
 10787                           
 10788                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCCF2_InterruptHandler();
 10789  003682  D801               	call	i2u569_48
 10790  003684  D00A               	goto	i2u569_49
 10791  003686                     i2u569_48:
 10792  003686  0005               	push	
 10793  003688  6EFA               	movwf	pclath,c
 10794  00368A  5059               	movf	_IOCCF2_InterruptHandler,w,c
 10795  00368C  6EFD               	movwf	tosl,c
 10796  00368E  505A               	movf	_IOCCF2_InterruptHandler+1,w,c
 10797  003690  6EFE               	movwf	tosh,c
 10798  003692  50F8               	movf	tblptru,w,c
 10799  003694  6EFF               	movwf	tosu,c
 10800  003696  50FA               	movf	pclath,w,c
 10801  003698  0012               	return		;indir
 10802  00369A                     i2u569_49:
 10803                           
 10804                           ;mcc_generated_files/pin_manager.c: 147:     IOCCFbits.IOCCF2 = 0;
 10805  00369A  010F               	movlb	15	; () banked
 10806  00369C  9515               	bcf	21,2,b	;volatile
 10807                           
 10808                           ; BSR set to: 15
 10809  00369E  0012               	return		;funcret
 10810  0036A0                     __end_of_IOCCF2_ISR:
 10811                           	opt callstack 0
 10812                           
 10813 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
 10814 ;; Defined at:
 10815 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;		None
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      void 
 10822 ;; Registers used:
 10823 ;;		None
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10829 ;;      Params:         0       0       0       0       0       0       0       0       0
 10830 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10832 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10833 ;;Total ram usage:        0 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; This function calls:
 10836 ;;		Nothing
 10837 ;; This function is called by:
 10838 ;;		_PIN_MANAGER_Initialize
 10839 ;;		_ping_RC2_went_HIGH
 10840 ;;		_ping_init
 10841 ;;		_IOCCF2_ISR
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           	psect	text66
 10846  003830                     __ptext66:
 10847                           	opt callstack 0
 10848  003830                     _IOCCF2_DefaultInterruptHandler:
 10849                           	opt callstack 18
 10850                           
 10851                           ; BSR set to: 15
 10852                           ;incstack = 0
 10853  003830  0012               	return		;funcret
 10854  003832                     __end_of_IOCCF2_DefaultInterruptHandler:
 10855                           	opt callstack 0
 10856                           
 10857 ;; *************** function _ping_RC2_went_HIGH *****************
 10858 ;; Defined at:
 10859 ;;		line 66 in file "ping.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;		None
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;		None
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, status,2, status,0, cstack
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10873 ;;      Params:         0       0       0       0       0       0       0       0       0
 10874 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10876 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10877 ;;Total ram usage:        0 bytes
 10878 ;; Hardware stack levels used:    1
 10879 ;; Hardware stack levels required when called:    1
 10880 ;; This function calls:
 10881 ;;		i2_IOCCF2_SetInterruptHandler
 10882 ;;		i2_TMR1_SetInterruptHandler
 10883 ;;		i2_TMR1_StartTimer
 10884 ;;		i2_TMR1_WriteTimer
 10885 ;; This function is called by:
 10886 ;;		_ping_TMR1Overflow_isr
 10887 ;;		_IOCCF2_ISR
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text67
 10892  003394                     __ptext67:
 10893                           	opt callstack 0
 10894  003394                     _ping_RC2_went_HIGH:
 10895                           	opt callstack 17
 10896                           
 10897                           ;ping.c: 67:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultInterruptHandler);
 10898                           
 10899                           ;incstack = 0
 10900  003394  0E30               	movlw	low _IOCCF2_DefaultInterruptHandler
 10901  003396  6E01               	movwf	i2IOCCF2_SetInterruptHandler@InterruptHandler,c
 10902  003398  0E38               	movlw	high _IOCCF2_DefaultInterruptHandler
 10903  00339A  6E02               	movwf	i2IOCCF2_SetInterruptHandler@InterruptHandler+1,c
 10904  00339C  EC03  F01C         	call	i2_IOCCF2_SetInterruptHandler	;wreg free
 10905                           
 10906                           ;ping.c: 68:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 10907  0033A0  0E2E               	movlw	low _TMR1_DefaultInterruptHandler
 10908  0033A2  6E01               	movwf	i2TMR1_SetInterruptHandler@InterruptHandler,c
 10909  0033A4  0E38               	movlw	high _TMR1_DefaultInterruptHandler
 10910  0033A6  6E02               	movwf	i2TMR1_SetInterruptHandler@InterruptHandler+1,c
 10911  0033A8  ECFE  F01B         	call	i2_TMR1_SetInterruptHandler	;wreg free
 10912                           
 10913                           ;ping.c: 70:     TMR1_WriteTimer(0);
 10914  0033AC  0E00               	movlw	0
 10915  0033AE  6E02               	movwf	i2TMR1_WriteTimer@timerVal+1,c
 10916  0033B0  0E00               	movlw	0
 10917  0033B2  6E01               	movwf	i2TMR1_WriteTimer@timerVal,c
 10918  0033B4  EC9F  F01B         	call	i2_TMR1_WriteTimer	;wreg free
 10919                           
 10920                           ;ping.c: 71:     TMR1_StartTimer();
 10921  0033B8  EC12  F01C         	call	i2_TMR1_StartTimer	;wreg free
 10922  0033BC  8482               	bsf	3970,2,c	;volatile
 10923                           
 10924                           ;ping.c: 74:     PIR6 = 0;
 10925  0033BE  0E00               	movlw	0
 10926  0033C0  010E               	movlb	14	; () banked
 10927  0033C2  6FCB               	movwf	203,b	;volatile
 10928                           
 10929                           ; BSR set to: 14
 10930                           ;ping.c: 75:     PIE6bits.CCP1IE = 1;
 10931  0033C4  81C3               	bsf	195,0,b	;volatile
 10932                           
 10933                           ; BSR set to: 14
 10934  0033C6  0012               	return		;funcret
 10935  0033C8                     __end_of_ping_RC2_went_HIGH:
 10936                           	opt callstack 0
 10937                           
 10938 ;; *************** function i2_TMR1_WriteTimer *****************
 10939 ;; Defined at:
 10940 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  timerVal        2    0[COMRAM] unsigned short 
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		wreg, status,2
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10954 ;;      Params:         2       0       0       0       0       0       0       0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10956 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10957 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10958 ;;Total ram usage:        2 bytes
 10959 ;; Hardware stack levels used:    1
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_TMR1_ISR
 10964 ;;		_ping_RC2_went_HIGH
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text68
 10969  00373E                     __ptext68:
 10970                           	opt callstack 0
 10971  00373E                     i2_TMR1_WriteTimer:
 10972                           	opt callstack 19
 10973                           
 10974                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 10975                           
 10976                           ; BSR set to: 14
 10977                           ;incstack = 0
 10978  00373E  A4CE               	btfss	4046,2,c	;volatile
 10979  003740  D007               	goto	i2l4891
 10980                           
 10981                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 10982  003742  90CE               	bcf	4046,0,c	;volatile
 10983                           
 10984                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 10985  003744  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 10986  003746  6ECD               	movwf	4045,c	;volatile
 10987                           
 10988                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 10989  003748  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
 10990                           
 10991                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 10992  00374C  80CE               	bsf	4046,0,c	;volatile
 10993                           
 10994                           ;mcc_generated_files/tmr1.c: 140:     }
 10995  00374E  0012               	return	
 10996  003750                     i2l4891:
 10997                           
 10998                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 10999  003750  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 11000  003752  6ECD               	movwf	4045,c	;volatile
 11001                           
 11002                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 11003  003754  C001  FFCC         	movff	i2TMR1_WriteTimer@timerVal,4044	;volatile
 11004  003758  0012               	return		;funcret
 11005  00375A                     __end_ofi2_TMR1_WriteTimer:
 11006                           	opt callstack 0
 11007                           
 11008 ;; *************** function i2_TMR1_StartTimer *****************
 11009 ;; Defined at:
 11010 ;;		line 99 in file "mcc_generated_files/tmr1.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;		None
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;		None
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		None
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11024 ;;      Params:         0       0       0       0       0       0       0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11026 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11027 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11028 ;;Total ram usage:        0 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; This function calls:
 11031 ;;		Nothing
 11032 ;; This function is called by:
 11033 ;;		_ping_RC2_went_HIGH
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text69
 11038  003824                     __ptext69:
 11039                           	opt callstack 0
 11040  003824                     i2_TMR1_StartTimer:
 11041                           	opt callstack 17
 11042                           
 11043                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
 11044                           
 11045                           ;incstack = 0
 11046  003824  80CE               	bsf	4046,0,c	;volatile
 11047  003826  0012               	return		;funcret
 11048  003828                     __end_ofi2_TMR1_StartTimer:
 11049                           	opt callstack 0
 11050                           
 11051 ;; *************** function i2_TMR1_SetInterruptHandler *****************
 11052 ;; Defined at:
 11053 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 11056 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
 11057 ;; Auto vars:     Size  Location     Type
 11058 ;;		None
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  1    wreg      void 
 11061 ;; Registers used:
 11062 ;;		wreg, status,2, status,0
 11063 ;; Tracked objects:
 11064 ;;		On entry : 0/0
 11065 ;;		On exit  : 0/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11068 ;;      Params:         2       0       0       0       0       0       0       0       0
 11069 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11070 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11071 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11072 ;;Total ram usage:        2 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; This function calls:
 11075 ;;		Nothing
 11076 ;; This function is called by:
 11077 ;;		_ping_TMR1Overflow_isr
 11078 ;;		_ping_RC2_went_HIGH
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           	psect	text70
 11083  0037FC                     __ptext70:
 11084                           	opt callstack 0
 11085  0037FC                     i2_TMR1_SetInterruptHandler:
 11086                           	opt callstack 18
 11087                           
 11088                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 11089                           
 11090                           ;incstack = 0
 11091  0037FC  C001  F18A         	movff	i2TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 11092  003800  C002  F18B         	movff	i2TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 11093  003804  0012               	return		;funcret
 11094  003806                     __end_ofi2_TMR1_SetInterruptHandler:
 11095                           	opt callstack 0
 11096                           
 11097 ;; *************** function i2_IOCCF2_SetInterruptHandler *****************
 11098 ;; Defined at:
 11099 ;;		line 153 in file "mcc_generated_files/pin_manager.c"
 11100 ;; Parameters:    Size  Location     Type
 11101 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
 11102 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		wreg, status,2, status,0
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11114 ;;      Params:         2       0       0       0       0       0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11117 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11118 ;;Total ram usage:        2 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; This function calls:
 11121 ;;		Nothing
 11122 ;; This function is called by:
 11123 ;;		_ping_TMR1Overflow_isr
 11124 ;;		_ping_RC2_went_HIGH
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text71
 11129  003806                     __ptext71:
 11130                           	opt callstack 0
 11131  003806                     i2_IOCCF2_SetInterruptHandler:
 11132                           	opt callstack 18
 11133                           
 11134                           ;mcc_generated_files/pin_manager.c: 154:     IOCCF2_InterruptHandler = InterruptHandler;
 11135                           
 11136                           ;incstack = 0
 11137  003806  C001  F059         	movff	i2IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
 11138  00380A  C002  F05A         	movff	i2IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
 11139  00380E  0012               	return		;funcret
 11140  003810                     __end_ofi2_IOCCF2_SetInterruptHandler:
 11141                           	opt callstack 0
 11142                           
 11143 ;; *************** function _EUSART1_Transmit_ISR *****************
 11144 ;; Defined at:
 11145 ;;		line 203 in file "mcc_generated_files/eusart1.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;		None
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;		None
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0
 11160 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11162 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11163 ;;Total ram usage:        0 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		_EUSART1_Initialize
 11169 ;;		_INTERRUPT_InterruptManager
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           	psect	text72
 11174  0035D6                     __ptext72:
 11175                           	opt callstack 0
 11176  0035D6                     _EUSART1_Transmit_ISR:
 11177                           	opt callstack 20
 11178                           
 11179                           ;mcc_generated_files/eusart1.c: 207:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
 11180                           
 11181                           ;incstack = 0
 11182  0035D6  0E08               	movlw	8
 11183  0035D8  605B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
 11184  0035DA  D010               	goto	i2l463
 11185                           
 11186                           ;mcc_generated_files/eusart1.c: 208:     {;mcc_generated_files/eusart1.c: 209:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
 11187  0035DC  0E10               	movlw	low _eusart1TxBuffer
 11188  0035DE  2455               	addwf	_eusart1TxTail,w,c	;volatile
 11189  0035E0  6ED9               	movwf	fsr2l,c
 11190  0035E2  6ADA               	clrf	fsr2h,c
 11191  0035E4  0E01               	movlw	high _eusart1TxBuffer
 11192  0035E6  22DA               	addwfc	fsr2h,f,c
 11193  0035E8  50DF               	movf	indf2,w,c
 11194  0035EA  6E99               	movwf	3993,c	;volatile
 11195  0035EC  2A55               	incf	_eusart1TxTail,f,c	;volatile
 11196                           
 11197                           ;mcc_generated_files/eusart1.c: 210:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
 11198  0035EE  0E07               	movlw	7
 11199  0035F0  6455               	cpfsgt	_eusart1TxTail,c	;volatile
 11200  0035F2  D002               	goto	i2l5479
 11201                           
 11202                           ;mcc_generated_files/eusart1.c: 211:         {;mcc_generated_files/eusart1.c: 212:      
      +                                 eusart1TxTail = 0;
 11203  0035F4  0E00               	movlw	0
 11204  0035F6  6E55               	movwf	_eusart1TxTail,c	;volatile
 11205  0035F8                     i2l5479:
 11206                           
 11207                           ;mcc_generated_files/eusart1.c: 214:         eusart1TxBufferRemaining++;
 11208  0035F8  2A5B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
 11209                           
 11210                           ;mcc_generated_files/eusart1.c: 215:     }
 11211  0035FA  0012               	return	
 11212  0035FC                     i2l463:
 11213                           
 11214                           ;mcc_generated_files/eusart1.c: 217:     {;mcc_generated_files/eusart1.c: 218:         P
      +                          IE3bits.TX1IE = 0;
 11215  0035FC  010E               	movlb	14	; () banked
 11216  0035FE  99C0               	bcf	192,4,b	;volatile
 11217  003600  0012               	return		;funcret
 11218  003602                     __end_of_EUSART1_Transmit_ISR:
 11219                           	opt callstack 0
 11220                           
 11221 ;; *************** function _EUSART1_Receive_ISR *****************
 11222 ;; Defined at:
 11223 ;;		line 222 in file "mcc_generated_files/eusart1.c"
 11224 ;; Parameters:    Size  Location     Type
 11225 ;;		None
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;		None
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  1    wreg      void 
 11230 ;; Registers used:
 11231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11237 ;;      Params:         0       0       0       0       0       0       0       0       0
 11238 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11239 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11240 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11241 ;;Total ram usage:        0 bytes
 11242 ;; Hardware stack levels used:    1
 11243 ;; Hardware stack levels required when called:    2
 11244 ;; This function calls:
 11245 ;;		Absolute function
 11246 ;;		_EUSART1_DefaultErrorHandler
 11247 ;;		_EUSART1_DefaultFramingErrorHandler
 11248 ;;		_EUSART1_DefaultOverrunErrorHandler
 11249 ;;		_EUSART1_RxDataHandler
 11250 ;; This function is called by:
 11251 ;;		_EUSART1_Initialize
 11252 ;;		_INTERRUPT_InterruptManager
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           
 11256                           	psect	text73
 11257  002C1A                     __ptext73:
 11258                           	opt callstack 0
 11259  002C1A                     _EUSART1_Receive_ISR:
 11260                           	opt callstack 18
 11261                           
 11262                           ;mcc_generated_files/eusart1.c: 225:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
 11263                           
 11264                           ;incstack = 0
 11265  002C1A  0E00               	movlw	low _eusart1RxStatusBuffer
 11266  002C1C  0100               	movlb	0	; () banked
 11267  002C1E  25FF               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 11268  002C20  6ED9               	movwf	fsr2l,c
 11269  002C22  6ADA               	clrf	fsr2h,c
 11270  002C24  0E01               	movlw	high _eusart1RxStatusBuffer
 11271  002C26  22DA               	addwfc	fsr2h,f,c
 11272  002C28  0E00               	movlw	0
 11273  002C2A  6EDF               	movwf	indf2,c
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;mcc_generated_files/eusart1.c: 227:     if(RC1STAbits.FERR){
 11277  002C2C  A49C               	btfss	3996,2,c	;volatile
 11278  002C2E  D014               	goto	i2u591_49
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;mcc_generated_files/eusart1.c: 228:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
 11282  002C30  0E00               	movlw	low _eusart1RxStatusBuffer
 11283  002C32  25FF               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 11284  002C34  6ED9               	movwf	fsr2l,c
 11285  002C36  6ADA               	clrf	fsr2h,c
 11286  002C38  0E01               	movlw	high _eusart1RxStatusBuffer
 11287  002C3A  22DA               	addwfc	fsr2h,f,c
 11288  002C3C  0101               	movlb	1	; () banked
 11289  002C3E  82DF               	bsf	indf2,1,c
 11290                           
 11291                           ; BSR set to: 1
 11292                           ;mcc_generated_files/eusart1.c: 229:         EUSART1_FramingErrorHandler();
 11293  002C40  D801               	call	i2u591_48
 11294  002C42  D00A               	goto	i2u591_49
 11295  002C44                     i2u591_48:
 11296  002C44  0005               	push	
 11297  002C46  6EFA               	movwf	pclath,c
 11298  002C48  5188               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
 11299  002C4A  6EFD               	movwf	tosl,c
 11300  002C4C  5189               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
 11301  002C4E  6EFE               	movwf	tosh,c
 11302  002C50  50F8               	movf	tblptru,w,c
 11303  002C52  6EFF               	movwf	tosu,c
 11304  002C54  50FA               	movf	pclath,w,c
 11305  002C56  0012               	return		;indir
 11306  002C58                     i2u591_49:
 11307                           
 11308                           ;mcc_generated_files/eusart1.c: 232:     if(RC1STAbits.OERR){
 11309  002C58  A29C               	btfss	3996,1,c	;volatile
 11310  002C5A  D015               	goto	i2u593_49
 11311                           
 11312                           ;mcc_generated_files/eusart1.c: 233:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
 11313  002C5C  0E00               	movlw	low _eusart1RxStatusBuffer
 11314  002C5E  0100               	movlb	0	; () banked
 11315  002C60  25FF               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 11316  002C62  6ED9               	movwf	fsr2l,c
 11317  002C64  6ADA               	clrf	fsr2h,c
 11318  002C66  0E01               	movlw	high _eusart1RxStatusBuffer
 11319  002C68  22DA               	addwfc	fsr2h,f,c
 11320  002C6A  0101               	movlb	1	; () banked
 11321  002C6C  84DF               	bsf	indf2,2,c
 11322                           
 11323                           ; BSR set to: 1
 11324                           ;mcc_generated_files/eusart1.c: 234:         EUSART1_OverrunErrorHandler();
 11325  002C6E  D801               	call	i2u593_48
 11326  002C70  D00A               	goto	i2u593_49
 11327  002C72                     i2u593_48:
 11328  002C72  0005               	push	
 11329  002C74  6EFA               	movwf	pclath,c
 11330  002C76  5186               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
 11331  002C78  6EFD               	movwf	tosl,c
 11332  002C7A  5187               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
 11333  002C7C  6EFE               	movwf	tosh,c
 11334  002C7E  50F8               	movf	tblptru,w,c
 11335  002C80  6EFF               	movwf	tosu,c
 11336  002C82  50FA               	movf	pclath,w,c
 11337  002C84  0012               	return		;indir
 11338  002C86                     i2u593_49:
 11339                           
 11340                           ;mcc_generated_files/eusart1.c: 237:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
 11341  002C86  0E00               	movlw	low _eusart1RxStatusBuffer
 11342  002C88  0100               	movlb	0	; () banked
 11343  002C8A  25FF               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 11344  002C8C  6ED9               	movwf	fsr2l,c
 11345  002C8E  6ADA               	clrf	fsr2h,c
 11346  002C90  0E01               	movlw	high _eusart1RxStatusBuffer
 11347  002C92  22DA               	addwfc	fsr2h,f,c
 11348  002C94  50DF               	movf	indf2,w,c
 11349  002C96  B4D8               	btfsc	status,2,c
 11350  002C98  D00D               	goto	i2l5499
 11351                           
 11352                           ; BSR set to: 0
 11353                           ;mcc_generated_files/eusart1.c: 238:         EUSART1_ErrorHandler();
 11354  002C9A  D801               	call	i2u595_48
 11355  002C9C  0012               	return	
 11356  002C9E                     i2u595_48:
 11357  002C9E  0005               	push	
 11358  002CA0  0101               	movlb	1	; () banked
 11359  002CA2  6EFA               	movwf	pclath,c
 11360  002CA4  5184               	movf	_EUSART1_ErrorHandler& (0+255),w,b
 11361  002CA6  6EFD               	movwf	tosl,c
 11362  002CA8  5185               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
 11363  002CAA  6EFE               	movwf	tosh,c
 11364  002CAC  50F8               	movf	tblptru,w,c
 11365  002CAE  6EFF               	movwf	tosu,c
 11366  002CB0  50FA               	movf	pclath,w,c
 11367  002CB2  0012               	return		;indir
 11368  002CB4                     i2l5499:
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;mcc_generated_files/eusart1.c: 240:         EUSART1_RxDataHandler();
 11372  002CB4  EC61  F01B         	call	_EUSART1_RxDataHandler	;wreg free
 11373  002CB8  0012               	return		;funcret
 11374  002CBA                     __end_of_EUSART1_Receive_ISR:
 11375                           	opt callstack 0
 11376                           
 11377 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
 11378 ;; Defined at:
 11379 ;;		line 258 in file "mcc_generated_files/eusart1.c"
 11380 ;; Parameters:    Size  Location     Type
 11381 ;;		None
 11382 ;; Auto vars:     Size  Location     Type
 11383 ;;		None
 11384 ;; Return value:  Size  Location     Type
 11385 ;;                  1    wreg      void 
 11386 ;; Registers used:
 11387 ;;		None
 11388 ;; Tracked objects:
 11389 ;;		On entry : 0/0
 11390 ;;		On exit  : 0/0
 11391 ;;		Unchanged: 0/0
 11392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11393 ;;      Params:         0       0       0       0       0       0       0       0       0
 11394 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11395 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11396 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11397 ;;Total ram usage:        0 bytes
 11398 ;; Hardware stack levels used:    1
 11399 ;; This function calls:
 11400 ;;		Nothing
 11401 ;; This function is called by:
 11402 ;;		_EUSART1_Initialize
 11403 ;;		_EUSART1_Receive_ISR
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text74
 11408  003810                     __ptext74:
 11409                           	opt callstack 0
 11410  003810                     _EUSART1_DefaultOverrunErrorHandler:
 11411                           	opt callstack 19
 11412                           
 11413                           ;mcc_generated_files/eusart1.c: 261:     RC1STAbits.CREN = 0;
 11414                           
 11415                           ;incstack = 0
 11416  003810  989C               	bcf	3996,4,c	;volatile
 11417                           
 11418                           ;mcc_generated_files/eusart1.c: 262:     RC1STAbits.CREN = 1;
 11419  003812  889C               	bsf	3996,4,c	;volatile
 11420  003814  0012               	return		;funcret
 11421  003816                     __end_of_EUSART1_DefaultOverrunErrorHandler:
 11422                           	opt callstack 0
 11423                           
 11424 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
 11425 ;; Defined at:
 11426 ;;		line 256 in file "mcc_generated_files/eusart1.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;		None
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;		None
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		None
 11435 ;; Tracked objects:
 11436 ;;		On entry : 0/0
 11437 ;;		On exit  : 0/0
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11440 ;;      Params:         0       0       0       0       0       0       0       0       0
 11441 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11443 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11444 ;;Total ram usage:        0 bytes
 11445 ;; Hardware stack levels used:    1
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_EUSART1_Initialize
 11450 ;;		_EUSART1_Receive_ISR
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           	psect	text75
 11455  003832                     __ptext75:
 11456                           	opt callstack 0
 11457  003832                     _EUSART1_DefaultFramingErrorHandler:
 11458                           	opt callstack 19
 11459                           
 11460                           ;incstack = 0
 11461  003832  0012               	return		;funcret
 11462  003834                     __end_of_EUSART1_DefaultFramingErrorHandler:
 11463                           	opt callstack 0
 11464                           
 11465 ;; *************** function _EUSART1_DefaultErrorHandler *****************
 11466 ;; Defined at:
 11467 ;;		line 266 in file "mcc_generated_files/eusart1.c"
 11468 ;; Parameters:    Size  Location     Type
 11469 ;;		None
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;		None
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11481 ;;      Params:         0       0       0       0       0       0       0       0       0
 11482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11484 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11485 ;;Total ram usage:        0 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:    1
 11488 ;; This function calls:
 11489 ;;		_EUSART1_RxDataHandler
 11490 ;; This function is called by:
 11491 ;;		_EUSART1_Initialize
 11492 ;;		_EUSART1_Receive_ISR
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text76
 11497  003816                     __ptext76:
 11498                           	opt callstack 0
 11499  003816                     _EUSART1_DefaultErrorHandler:
 11500                           	opt callstack 18
 11501                           
 11502                           ;mcc_generated_files/eusart1.c: 267:     EUSART1_RxDataHandler();
 11503                           
 11504                           ;incstack = 0
 11505  003816  EC61  F01B         	call	_EUSART1_RxDataHandler	;wreg free
 11506  00381A  0012               	return		;funcret
 11507  00381C                     __end_of_EUSART1_DefaultErrorHandler:
 11508                           	opt callstack 0
 11509                           
 11510 ;; *************** function _EUSART1_RxDataHandler *****************
 11511 ;; Defined at:
 11512 ;;		line 246 in file "mcc_generated_files/eusart1.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;		None
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;		None
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      void 
 11519 ;; Registers used:
 11520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11526 ;;      Params:         0       0       0       0       0       0       0       0       0
 11527 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11528 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11529 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11530 ;;Total ram usage:        0 bytes
 11531 ;; Hardware stack levels used:    1
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_EUSART1_Receive_ISR
 11536 ;;		_EUSART1_DefaultErrorHandler
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text77
 11541  0036C2                     __ptext77:
 11542                           	opt callstack 0
 11543  0036C2                     _EUSART1_RxDataHandler:
 11544                           	opt callstack 19
 11545                           
 11546                           ;mcc_generated_files/eusart1.c: 248:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
 11547                           
 11548                           ;incstack = 0
 11549  0036C2  0E08               	movlw	low _eusart1RxBuffer
 11550  0036C4  0100               	movlb	0	; () banked
 11551  0036C6  25FF               	addwf	_eusart1RxHead& (0+255),w,b	;volatile
 11552  0036C8  6ED9               	movwf	fsr2l,c
 11553  0036CA  6ADA               	clrf	fsr2h,c
 11554  0036CC  0E01               	movlw	high _eusart1RxBuffer
 11555  0036CE  22DA               	addwfc	fsr2h,f,c
 11556  0036D0  CF98 FFDF          	movff	3992,indf2	;volatile
 11557                           
 11558                           ; BSR set to: 0
 11559  0036D4  2BFF               	incf	_eusart1RxHead& (0+255),f,b	;volatile
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;mcc_generated_files/eusart1.c: 249:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
 11563  0036D6  0E07               	movlw	7
 11564  0036D8  65FF               	cpfsgt	_eusart1RxHead& (0+255),b	;volatile
 11565  0036DA  D002               	goto	i2l4923
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;mcc_generated_files/eusart1.c: 250:     {;mcc_generated_files/eusart1.c: 251:         e
      +                          usart1RxHead = 0;
 11569  0036DC  0E00               	movlw	0
 11570  0036DE  6FFF               	movwf	_eusart1RxHead& (0+255),b	;volatile
 11571  0036E0                     i2l4923:
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;mcc_generated_files/eusart1.c: 253:     eusart1RxCount++;
 11575  0036E0  2A53               	incf	_eusart1RxCount,f,c	;volatile
 11576                           
 11577                           ; BSR set to: 0
 11578  0036E2  0012               	return		;funcret
 11579  0036E4                     __end_of_EUSART1_RxDataHandler:
 11580                           	opt callstack 0
 11581                           
 11582 ;; *************** function _CCP1_CaptureISR *****************
 11583 ;; Defined at:
 11584 ;;		line 94 in file "mcc_generated_files/ccp1.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;		None
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;  module          2   41[COMRAM] struct CCPR1Reg_tag
 11589 ;; Return value:  Size  Location     Type
 11590 ;;                  1    wreg      void 
 11591 ;; Registers used:
 11592 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11598 ;;      Params:         0       0       0       0       0       0       0       0       0
 11599 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11600 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11601 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11602 ;;Total ram usage:        2 bytes
 11603 ;; Hardware stack levels used:    1
 11604 ;; Hardware stack levels required when called:    2
 11605 ;; This function calls:
 11606 ;;		Absolute function
 11607 ;;		_CCP1_DefaultCallBack
 11608 ;;		_ping_CCP1_triggered
 11609 ;; This function is called by:
 11610 ;;		_INTERRUPT_InterruptManager
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614                           	psect	text78
 11615  0035A8                     __ptext78:
 11616                           	opt callstack 0
 11617  0035A8                     _CCP1_CaptureISR:
 11618                           	opt callstack 18
 11619                           
 11620                           ;mcc_generated_files/ccp1.c: 96:     CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1.
      +                          c: 99:     PIR6bits.CCP1IF = 0;
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;incstack = 0
 11624  0035A8  010E               	movlb	14	; () banked
 11625  0035AA  91CB               	bcf	203,0,b	;volatile
 11626                           
 11627                           ;mcc_generated_files/ccp1.c: 102:     module.ccpr1l = CCPR1L;
 11628  0035AC  CFA9 F02A          	movff	4009,CCP1_CaptureISR@module	;volatile
 11629                           
 11630                           ;mcc_generated_files/ccp1.c: 103:     module.ccpr1h = CCPR1H;
 11631  0035B0  CFAA F02B          	movff	4010,CCP1_CaptureISR@module+1	;volatile
 11632                           
 11633                           ; BSR set to: 14
 11634                           ;mcc_generated_files/ccp1.c: 106:     CCP1_CallBack(module.ccpr1_16Bit);
 11635  0035B4  C02A  F028         	movff	CCP1_CaptureISR@module,ping_CCP1_triggered@timeOfFlight
 11636  0035B8  C02B  F029         	movff	CCP1_CaptureISR@module+1,ping_CCP1_triggered@timeOfFlight+1
 11637  0035BC  D801               	call	i2u585_48
 11638  0035BE  0012               	return	
 11639  0035C0                     i2u585_48:
 11640  0035C0  0005               	push	
 11641  0035C2  0101               	movlb	1	; () banked
 11642  0035C4  6EFA               	movwf	pclath,c
 11643  0035C6  518C               	movf	_CCP1_CallBack& (0+255),w,b
 11644  0035C8  6EFD               	movwf	tosl,c
 11645  0035CA  518D               	movf	(_CCP1_CallBack+1)& (0+255),w,b
 11646  0035CC  6EFE               	movwf	tosh,c
 11647  0035CE  50F8               	movf	tblptru,w,c
 11648  0035D0  6EFF               	movwf	tosu,c
 11649  0035D2  50FA               	movf	pclath,w,c
 11650  0035D4  0012               	return		;indir
 11651  0035D6                     __end_of_CCP1_CaptureISR:
 11652                           	opt callstack 0
 11653                           
 11654 ;; *************** function _CCP1_DefaultCallBack *****************
 11655 ;; Defined at:
 11656 ;;		line 60 in file "mcc_generated_files/ccp1.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  capturedValu    2   39[COMRAM] unsigned short 
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		None
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11670 ;;      Params:         2       0       0       0       0       0       0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11673 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11674 ;;Total ram usage:        2 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; This function calls:
 11677 ;;		Nothing
 11678 ;; This function is called by:
 11679 ;;		_CCP1_Initialize
 11680 ;;		_CCP1_CaptureISR
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text79
 11685  003834                     __ptext79:
 11686                           	opt callstack 0
 11687  003834                     _CCP1_DefaultCallBack:
 11688                           	opt callstack 19
 11689                           
 11690                           ;incstack = 0
 11691  003834  0012               	return		;funcret
 11692  003836                     __end_of_CCP1_DefaultCallBack:
 11693                           	opt callstack 0
 11694                           
 11695 ;; *************** function _ping_CCP1_triggered *****************
 11696 ;; Defined at:
 11697 ;;		line 83 in file "ping.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  timeOfFlight    2   39[COMRAM] unsigned short 
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11711 ;;      Params:         2       0       0       0       0       0       0       0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11714 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11715 ;;Total ram usage:        2 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:    1
 11718 ;; This function calls:
 11719 ;;		___xxtofl
 11720 ;;		i2___flmul
 11721 ;; This function is called by:
 11722 ;;		_ping_init
 11723 ;;		_CCP1_CaptureISR
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           	psect	text80
 11728  003038                     __ptext80:
 11729                           	opt callstack 0
 11730  003038                     _ping_CCP1_triggered:
 11731                           	opt callstack 18
 11732                           
 11733                           ;ping.c: 84:     status.tof = timeOfFlight;
 11734                           
 11735                           ;incstack = 0
 11736  003038  C028  F038         	movff	ping_CCP1_triggered@timeOfFlight,_status+6	;volatile
 11737  00303C  C029  F039         	movff	ping_CCP1_triggered@timeOfFlight+1,_status+7	;volatile
 11738                           
 11739                           ;ping.c: 85:     status.pingStarted = 0;
 11740  003040  0E00               	movlw	0
 11741  003042  6E37               	movwf	_status+5,c	;volatile
 11742                           
 11743                           ;ping.c: 86:     status.readReady = 1;
 11744  003044  0E01               	movlw	1
 11745  003046  6E32               	movwf	_status,c	;volatile
 11746                           
 11747                           ;ping.c: 87:     PIE6bits.CCP1IE = 0;
 11748  003048  010E               	movlb	14	; () banked
 11749  00304A  91C3               	bcf	195,0,b	;volatile
 11750                           
 11751                           ; BSR set to: 14
 11752  00304C  9482               	bcf	3970,2,c	;volatile
 11753                           
 11754                           ; BSR set to: 14
 11755                           ;ping.c: 89:     status.measurment = 0.009 * timeOfFlight;
 11756  00304E  C028  F001         	movff	ping_CCP1_triggered@timeOfFlight,___xxtofl@val
 11757  003052  C029  F002         	movff	ping_CCP1_triggered@timeOfFlight+1,___xxtofl@val+1
 11758  003056  6A03               	clrf	___xxtofl@val+2,c
 11759  003058  6A04               	clrf	___xxtofl@val+3,c
 11760  00305A  0E00               	movlw	0
 11761  00305C  EC7B  F013         	call	___xxtofl
 11762  003060  C001  F00F         	movff	?___xxtofl,i2___flmul@b
 11763  003064  C002  F010         	movff	?___xxtofl+1,i2___flmul@b+1
 11764  003068  C003  F011         	movff	?___xxtofl+2,i2___flmul@b+2
 11765  00306C  C004  F012         	movff	?___xxtofl+3,i2___flmul@b+3
 11766  003070  0EBC               	movlw	188
 11767  003072  6E13               	movwf	i2___flmul@a,c
 11768  003074  0E74               	movlw	116
 11769  003076  6E14               	movwf	i2___flmul@a+1,c
 11770  003078  0E13               	movlw	19
 11771  00307A  6E15               	movwf	i2___flmul@a+2,c
 11772  00307C  0E3C               	movlw	60
 11773  00307E  6E16               	movwf	i2___flmul@a+3,c
 11774  003080  EC98  F00C         	call	i2___flmul	;wreg free
 11775  003084  C00F  F033         	movff	?i2___flmul,_status+1	;volatile
 11776  003088  C010  F034         	movff	?i2___flmul+1,_status+2	;volatile
 11777  00308C  C011  F035         	movff	?i2___flmul+2,_status+3	;volatile
 11778  003090  C012  F036         	movff	?i2___flmul+3,_status+4	;volatile
 11779                           
 11780                           ;ping.c: 90:     status.readReady = 1;
 11781  003094  0E01               	movlw	1
 11782  003096  6E32               	movwf	_status,c	;volatile
 11783                           
 11784                           ;ping.c: 91:     status.pingStarted = 0;
 11785  003098  0E00               	movlw	0
 11786  00309A  6E37               	movwf	_status+5,c	;volatile
 11787  00309C  0012               	return		;funcret
 11788  00309E                     __end_of_ping_CCP1_triggered:
 11789                           	opt callstack 0
 11790                           
 11791 ;; *************** function i2___flmul *****************
 11792 ;; Defined at:
 11793 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  b               4   14[COMRAM] void 
 11796 ;;  a               4   18[COMRAM] void 
 11797 ;; Auto vars:     Size  Location     Type
 11798 ;;  __flmul         4   33[COMRAM] struct .
 11799 ;;  __flmul         4   27[COMRAM] unsigned long 
 11800 ;;  __flmul         2   37[COMRAM] struct .
 11801 ;;  __flmul         1   32[COMRAM] unsigned char 
 11802 ;;  __flmul         1   31[COMRAM] unsigned char 
 11803 ;;  __flmul         1   26[COMRAM] unsigned char 
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  4   14[COMRAM] unsigned char 
 11806 ;; Registers used:
 11807 ;;		wreg, status,2, status,0, prodl, prodh
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11813 ;;      Params:         8       0       0       0       0       0       0       0       0
 11814 ;;      Locals:        13       0       0       0       0       0       0       0       0
 11815 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11816 ;;      Totals:        25       0       0       0       0       0       0       0       0
 11817 ;;Total ram usage:       25 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_ping_CCP1_triggered
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text81
 11827  001930                     __ptext81:
 11828                           	opt callstack 0
 11829  001930                     i2___flmul:
 11830                           	opt callstack 18
 11831                           
 11832                           ;incstack = 0
 11833  001930  5012               	movf	i2___flmul@b+3,w,c
 11834  001932  0B80               	andlw	128
 11835  001934  6E1B               	movwf	i2___flmul@sign,c
 11836  001936  5012               	movf	i2___flmul@b+3,w,c
 11837  001938  2412               	addwf	i2___flmul@b+3,w,c
 11838  00193A  6E21               	movwf	i2___flmul@bexp,c
 11839  00193C  BE11               	btfsc	i2___flmul@b+2,7,c
 11840  00193E  8021               	bsf	i2___flmul@bexp,0,c
 11841  001940  5021               	movf	i2___flmul@bexp,w,c
 11842  001942  B4D8               	btfsc	status,2,c
 11843  001944  D00D               	goto	i2l5087
 11844  001946  2821               	incf	i2___flmul@bexp,w,c
 11845  001948  A4D8               	btfss	status,2,c
 11846  00194A  D008               	goto	i2l5085
 11847  00194C  0E00               	movlw	0
 11848  00194E  6E0F               	movwf	i2___flmul@b,c
 11849  001950  0E00               	movlw	0
 11850  001952  6E10               	movwf	i2___flmul@b+1,c
 11851  001954  0E00               	movlw	0
 11852  001956  6E11               	movwf	i2___flmul@b+2,c
 11853  001958  0E00               	movlw	0
 11854  00195A  6E12               	movwf	i2___flmul@b+3,c
 11855  00195C                     i2l5085:
 11856  00195C  8E11               	bsf	i2___flmul@b+2,7,c
 11857  00195E  D008               	goto	i2l5089
 11858  001960                     i2l5087:
 11859  001960  0E00               	movlw	0
 11860  001962  6E0F               	movwf	i2___flmul@b,c
 11861  001964  0E00               	movlw	0
 11862  001966  6E10               	movwf	i2___flmul@b+1,c
 11863  001968  0E00               	movlw	0
 11864  00196A  6E11               	movwf	i2___flmul@b+2,c
 11865  00196C  0E00               	movlw	0
 11866  00196E  6E12               	movwf	i2___flmul@b+3,c
 11867  001970                     i2l5089:
 11868  001970  5016               	movf	i2___flmul@a+3,w,c
 11869  001972  0B80               	andlw	128
 11870  001974  1A1B               	xorwf	i2___flmul@sign,f,c
 11871  001976  5016               	movf	i2___flmul@a+3,w,c
 11872  001978  2416               	addwf	i2___flmul@a+3,w,c
 11873  00197A  6E20               	movwf	i2___flmul@aexp,c
 11874  00197C  BE15               	btfsc	i2___flmul@a+2,7,c
 11875  00197E  8020               	bsf	i2___flmul@aexp,0,c
 11876  001980  5020               	movf	i2___flmul@aexp,w,c
 11877  001982  B4D8               	btfsc	status,2,c
 11878  001984  D00D               	goto	i2l5105
 11879  001986  2820               	incf	i2___flmul@aexp,w,c
 11880  001988  A4D8               	btfss	status,2,c
 11881  00198A  D008               	goto	i2l5103
 11882  00198C  0E00               	movlw	0
 11883  00198E  6E13               	movwf	i2___flmul@a,c
 11884  001990  0E00               	movlw	0
 11885  001992  6E14               	movwf	i2___flmul@a+1,c
 11886  001994  0E00               	movlw	0
 11887  001996  6E15               	movwf	i2___flmul@a+2,c
 11888  001998  0E00               	movlw	0
 11889  00199A  6E16               	movwf	i2___flmul@a+3,c
 11890  00199C                     i2l5103:
 11891  00199C  8E15               	bsf	i2___flmul@a+2,7,c
 11892  00199E  D008               	goto	i2l1482
 11893  0019A0                     i2l5105:
 11894  0019A0  0E00               	movlw	0
 11895  0019A2  6E13               	movwf	i2___flmul@a,c
 11896  0019A4  0E00               	movlw	0
 11897  0019A6  6E14               	movwf	i2___flmul@a+1,c
 11898  0019A8  0E00               	movlw	0
 11899  0019AA  6E15               	movwf	i2___flmul@a+2,c
 11900  0019AC  0E00               	movlw	0
 11901  0019AE  6E16               	movwf	i2___flmul@a+3,c
 11902  0019B0                     i2l1482:
 11903  0019B0  5020               	movf	i2___flmul@aexp,w,c
 11904  0019B2  B4D8               	btfsc	status,2,c
 11905  0019B4  D003               	goto	i2u556_40
 11906  0019B6  5021               	movf	i2___flmul@bexp,w,c
 11907  0019B8  A4D8               	btfss	status,2,c
 11908  0019BA  D009               	goto	i2l5113
 11909  0019BC                     i2u556_40:
 11910  0019BC  0E00               	movlw	0
 11911  0019BE  6E0F               	movwf	?i2___flmul,c
 11912  0019C0  0E00               	movlw	0
 11913  0019C2  6E10               	movwf	?i2___flmul+1,c
 11914  0019C4  0E00               	movlw	0
 11915  0019C6  6E11               	movwf	?i2___flmul+2,c
 11916  0019C8  0E00               	movlw	0
 11917  0019CA  6E12               	movwf	?i2___flmul+3,c
 11918  0019CC  0012               	return	
 11919  0019CE                     i2l5113:
 11920  0019CE  5015               	movf	i2___flmul@a+2,w,c
 11921  0019D0  020F               	mulwf	i2___flmul@b,c
 11922  0019D2  CFF3 F026          	movff	prodl,i2___flmul@temp
 11923  0019D6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11924  0019DA  5026               	movf	i2___flmul@temp,w,c
 11925  0019DC  6E1C               	movwf	i2___flmul@grs,c
 11926  0019DE  6A1D               	clrf	i2___flmul@grs+1,c
 11927  0019E0  6A1E               	clrf	i2___flmul@grs+2,c
 11928  0019E2  6A1F               	clrf	i2___flmul@grs+3,c
 11929  0019E4  5027               	movf	i2___flmul@temp+1,w,c
 11930  0019E6  6E22               	movwf	i2___flmul@prod,c
 11931  0019E8  6A23               	clrf	i2___flmul@prod+1,c
 11932  0019EA  6A24               	clrf	i2___flmul@prod+2,c
 11933  0019EC  6A25               	clrf	i2___flmul@prod+3,c
 11934  0019EE  5014               	movf	i2___flmul@a+1,w,c
 11935  0019F0  0210               	mulwf	i2___flmul@b+1,c
 11936  0019F2  CFF3 F026          	movff	prodl,i2___flmul@temp
 11937  0019F6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11938  0019FA  5026               	movf	i2___flmul@temp,w,c
 11939  0019FC  261C               	addwf	i2___flmul@grs,f,c
 11940  0019FE  0E00               	movlw	0
 11941  001A00  221D               	addwfc	i2___flmul@grs+1,f,c
 11942  001A02  221E               	addwfc	i2___flmul@grs+2,f,c
 11943  001A04  221F               	addwfc	i2___flmul@grs+3,f,c
 11944  001A06  5027               	movf	i2___flmul@temp+1,w,c
 11945  001A08  2622               	addwf	i2___flmul@prod,f,c
 11946  001A0A  0E00               	movlw	0
 11947  001A0C  2223               	addwfc	i2___flmul@prod+1,f,c
 11948  001A0E  2224               	addwfc	i2___flmul@prod+2,f,c
 11949  001A10  2225               	addwfc	i2___flmul@prod+3,f,c
 11950  001A12  5013               	movf	i2___flmul@a,w,c
 11951  001A14  0211               	mulwf	i2___flmul@b+2,c
 11952  001A16  CFF3 F026          	movff	prodl,i2___flmul@temp
 11953  001A1A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11954  001A1E  5026               	movf	i2___flmul@temp,w,c
 11955  001A20  261C               	addwf	i2___flmul@grs,f,c
 11956  001A22  0E00               	movlw	0
 11957  001A24  221D               	addwfc	i2___flmul@grs+1,f,c
 11958  001A26  221E               	addwfc	i2___flmul@grs+2,f,c
 11959  001A28  221F               	addwfc	i2___flmul@grs+3,f,c
 11960  001A2A  5027               	movf	i2___flmul@temp+1,w,c
 11961  001A2C  2622               	addwf	i2___flmul@prod,f,c
 11962  001A2E  0E00               	movlw	0
 11963  001A30  2223               	addwfc	i2___flmul@prod+1,f,c
 11964  001A32  2224               	addwfc	i2___flmul@prod+2,f,c
 11965  001A34  2225               	addwfc	i2___flmul@prod+3,f,c
 11966  001A36  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11967  001A3A  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11968  001A3E  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 11969  001A42  6A1C               	clrf	i2___flmul@grs,c
 11970  001A44  5013               	movf	i2___flmul@a,w,c
 11971  001A46  0210               	mulwf	i2___flmul@b+1,c
 11972  001A48  CFF3 F026          	movff	prodl,i2___flmul@temp
 11973  001A4C  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11974  001A50  5026               	movf	i2___flmul@temp,w,c
 11975  001A52  261C               	addwf	i2___flmul@grs,f,c
 11976  001A54  5027               	movf	i2___flmul@temp+1,w,c
 11977  001A56  221D               	addwfc	i2___flmul@grs+1,f,c
 11978  001A58  0E00               	movlw	0
 11979  001A5A  221E               	addwfc	i2___flmul@grs+2,f,c
 11980  001A5C  0E00               	movlw	0
 11981  001A5E  221F               	addwfc	i2___flmul@grs+3,f,c
 11982  001A60  5014               	movf	i2___flmul@a+1,w,c
 11983  001A62  020F               	mulwf	i2___flmul@b,c
 11984  001A64  CFF3 F026          	movff	prodl,i2___flmul@temp
 11985  001A68  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 11986  001A6C  5026               	movf	i2___flmul@temp,w,c
 11987  001A6E  261C               	addwf	i2___flmul@grs,f,c
 11988  001A70  5027               	movf	i2___flmul@temp+1,w,c
 11989  001A72  221D               	addwfc	i2___flmul@grs+1,f,c
 11990  001A74  0E00               	movlw	0
 11991  001A76  221E               	addwfc	i2___flmul@grs+2,f,c
 11992  001A78  0E00               	movlw	0
 11993  001A7A  221F               	addwfc	i2___flmul@grs+3,f,c
 11994  001A7C  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11995  001A80  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11996  001A84  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 11997  001A88  6A1C               	clrf	i2___flmul@grs,c
 11998  001A8A  5013               	movf	i2___flmul@a,w,c
 11999  001A8C  020F               	mulwf	i2___flmul@b,c
 12000  001A8E  CFF3 F026          	movff	prodl,i2___flmul@temp
 12001  001A92  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 12002  001A96  5026               	movf	i2___flmul@temp,w,c
 12003  001A98  261C               	addwf	i2___flmul@grs,f,c
 12004  001A9A  5027               	movf	i2___flmul@temp+1,w,c
 12005  001A9C  221D               	addwfc	i2___flmul@grs+1,f,c
 12006  001A9E  0E00               	movlw	0
 12007  001AA0  221E               	addwfc	i2___flmul@grs+2,f,c
 12008  001AA2  0E00               	movlw	0
 12009  001AA4  221F               	addwfc	i2___flmul@grs+3,f,c
 12010  001AA6  5015               	movf	i2___flmul@a+2,w,c
 12011  001AA8  0210               	mulwf	i2___flmul@b+1,c
 12012  001AAA  CFF3 F026          	movff	prodl,i2___flmul@temp
 12013  001AAE  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 12014  001AB2  5026               	movf	i2___flmul@temp,w,c
 12015  001AB4  2622               	addwf	i2___flmul@prod,f,c
 12016  001AB6  5027               	movf	i2___flmul@temp+1,w,c
 12017  001AB8  2223               	addwfc	i2___flmul@prod+1,f,c
 12018  001ABA  0E00               	movlw	0
 12019  001ABC  2224               	addwfc	i2___flmul@prod+2,f,c
 12020  001ABE  0E00               	movlw	0
 12021  001AC0  2225               	addwfc	i2___flmul@prod+3,f,c
 12022  001AC2  5014               	movf	i2___flmul@a+1,w,c
 12023  001AC4  0211               	mulwf	i2___flmul@b+2,c
 12024  001AC6  CFF3 F026          	movff	prodl,i2___flmul@temp
 12025  001ACA  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 12026  001ACE  5026               	movf	i2___flmul@temp,w,c
 12027  001AD0  2622               	addwf	i2___flmul@prod,f,c
 12028  001AD2  5027               	movf	i2___flmul@temp+1,w,c
 12029  001AD4  2223               	addwfc	i2___flmul@prod+1,f,c
 12030  001AD6  0E00               	movlw	0
 12031  001AD8  2224               	addwfc	i2___flmul@prod+2,f,c
 12032  001ADA  0E00               	movlw	0
 12033  001ADC  2225               	addwfc	i2___flmul@prod+3,f,c
 12034  001ADE  5015               	movf	i2___flmul@a+2,w,c
 12035  001AE0  0211               	mulwf	i2___flmul@b+2,c
 12036  001AE2  CFF3 F026          	movff	prodl,i2___flmul@temp
 12037  001AE6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 12038  001AEA  5026               	movf	i2___flmul@temp,w,c
 12039  001AEC  6E17               	movwf	??i2___flmul& (0+255),c
 12040  001AEE  5027               	movf	i2___flmul@temp+1,w,c
 12041  001AF0  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 12042  001AF2  6A19               	clrf	(??i2___flmul+2)& (0+255),c
 12043  001AF4  6A1A               	clrf	(??i2___flmul+3)& (0+255),c
 12044  001AF6  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 12045  001AFA  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 12046  001AFE  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 12047  001B02  6A17               	clrf	??i2___flmul,c
 12048  001B04  5017               	movf	??i2___flmul,w,c
 12049  001B06  2622               	addwf	i2___flmul@prod,f,c
 12050  001B08  5018               	movf	??i2___flmul+1,w,c
 12051  001B0A  2223               	addwfc	i2___flmul@prod+1,f,c
 12052  001B0C  5019               	movf	??i2___flmul+2,w,c
 12053  001B0E  2224               	addwfc	i2___flmul@prod+2,f,c
 12054  001B10  501A               	movf	??i2___flmul+3,w,c
 12055  001B12  2225               	addwfc	i2___flmul@prod+3,f,c
 12056  001B14  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 12057  001B18  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 12058  001B1C  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 12059  001B20  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 12060  001B24  0E19               	movlw	25
 12061  001B26  D005               	goto	i2u557_40
 12062  001B28                     i2u557_45:
 12063  001B28  90D8               	bcf	status,0,c
 12064  001B2A  321A               	rrcf	??i2___flmul+3,f,c
 12065  001B2C  3219               	rrcf	??i2___flmul+2,f,c
 12066  001B2E  3218               	rrcf	??i2___flmul+1,f,c
 12067  001B30  3217               	rrcf	??i2___flmul,f,c
 12068  001B32                     i2u557_40:
 12069  001B32  2EE8               	decfsz	wreg,f,c
 12070  001B34  D7F9               	goto	i2u557_45
 12071  001B36  5017               	movf	??i2___flmul,w,c
 12072  001B38  2622               	addwf	i2___flmul@prod,f,c
 12073  001B3A  5018               	movf	??i2___flmul+1,w,c
 12074  001B3C  2223               	addwfc	i2___flmul@prod+1,f,c
 12075  001B3E  5019               	movf	??i2___flmul+2,w,c
 12076  001B40  2224               	addwfc	i2___flmul@prod+2,f,c
 12077  001B42  501A               	movf	??i2___flmul+3,w,c
 12078  001B44  2225               	addwfc	i2___flmul@prod+3,f,c
 12079  001B46  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 12080  001B4A  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 12081  001B4E  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 12082  001B52  6A1C               	clrf	i2___flmul@grs,c
 12083  001B54  5020               	movf	i2___flmul@aexp,w,c
 12084  001B56  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 12085  001B5A  6A18               	clrf	(??i2___flmul+1)& (0+255),c
 12086  001B5C  2617               	addwf	??i2___flmul,f,c
 12087  001B5E  0E00               	movlw	0
 12088  001B60  2218               	addwfc	??i2___flmul+1,f,c
 12089  001B62  0E82               	movlw	130
 12090  001B64  2417               	addwf	??i2___flmul,w,c
 12091  001B66  6E26               	movwf	i2___flmul@temp,c
 12092  001B68  0EFF               	movlw	255
 12093  001B6A  2018               	addwfc	??i2___flmul+1,w,c
 12094  001B6C  6E27               	movwf	i2___flmul@temp+1,c
 12095  001B6E  D00F               	goto	i2l5161
 12096  001B70                     i2l5155:
 12097  001B70  90D8               	bcf	status,0,c
 12098  001B72  3622               	rlcf	i2___flmul@prod,f,c
 12099  001B74  3623               	rlcf	i2___flmul@prod+1,f,c
 12100  001B76  3624               	rlcf	i2___flmul@prod+2,f,c
 12101  001B78  3625               	rlcf	i2___flmul@prod+3,f,c
 12102  001B7A  BE1F               	btfsc	i2___flmul@grs+3,7,c
 12103  001B7C  8022               	bsf	i2___flmul@prod,0,c
 12104  001B7E  90D8               	bcf	status,0,c
 12105  001B80  361C               	rlcf	i2___flmul@grs,f,c
 12106  001B82  361D               	rlcf	i2___flmul@grs+1,f,c
 12107  001B84  361E               	rlcf	i2___flmul@grs+2,f,c
 12108  001B86  361F               	rlcf	i2___flmul@grs+3,f,c
 12109  001B88  0626               	decf	i2___flmul@temp,f,c
 12110  001B8A  A0D8               	btfss	status,0,c
 12111  001B8C  0627               	decf	i2___flmul@temp+1,f,c
 12112  001B8E                     i2l5161:
 12113  001B8E  AE24               	btfss	i2___flmul@prod+2,7,c
 12114  001B90  D7EF               	goto	i2l5155
 12115  001B92  0E00               	movlw	0
 12116  001B94  6E20               	movwf	i2___flmul@aexp,c
 12117  001B96  AE1F               	btfss	i2___flmul@grs+3,7,c
 12118  001B98  D017               	goto	i2l1491
 12119  001B9A  0EFF               	movlw	255
 12120  001B9C  141C               	andwf	i2___flmul@grs,w,c
 12121  001B9E  6E17               	movwf	??i2___flmul& (0+255),c
 12122  001BA0  0EFF               	movlw	255
 12123  001BA2  141D               	andwf	i2___flmul@grs+1,w,c
 12124  001BA4  6E18               	movwf	(??i2___flmul+1)& (0+255),c
 12125  001BA6  0EFF               	movlw	255
 12126  001BA8  141E               	andwf	i2___flmul@grs+2,w,c
 12127  001BAA  6E19               	movwf	(??i2___flmul+2)& (0+255),c
 12128  001BAC  0E7F               	movlw	127
 12129  001BAE  141F               	andwf	i2___flmul@grs+3,w,c
 12130  001BB0  6E1A               	movwf	(??i2___flmul+3)& (0+255),c
 12131  001BB2  5017               	movf	??i2___flmul,w,c
 12132  001BB4  1018               	iorwf	??i2___flmul+1,w,c
 12133  001BB6  1019               	iorwf	??i2___flmul+2,w,c
 12134  001BB8  101A               	iorwf	??i2___flmul+3,w,c
 12135  001BBA  B4D8               	btfsc	status,2,c
 12136  001BBC  D003               	goto	i2l1492
 12137  001BBE                     i2u561_40:
 12138  001BBE  0E01               	movlw	1
 12139  001BC0  6E20               	movwf	i2___flmul@aexp,c
 12140  001BC2  D002               	goto	i2l1491
 12141  001BC4                     i2l1492:
 12142  001BC4  B022               	btfsc	i2___flmul@prod,0,c
 12143  001BC6  D7FB               	goto	i2u561_40
 12144  001BC8                     i2l1491:
 12145  001BC8  5020               	movf	i2___flmul@aexp,w,c
 12146  001BCA  B4D8               	btfsc	status,2,c
 12147  001BCC  D01F               	goto	i2l5181
 12148  001BCE  0E01               	movlw	1
 12149  001BD0  2622               	addwf	i2___flmul@prod,f,c
 12150  001BD2  0E00               	movlw	0
 12151  001BD4  2223               	addwfc	i2___flmul@prod+1,f,c
 12152  001BD6  2224               	addwfc	i2___flmul@prod+2,f,c
 12153  001BD8  2225               	addwfc	i2___flmul@prod+3,f,c
 12154  001BDA  A025               	btfss	i2___flmul@prod+3,0,c
 12155  001BDC  D017               	goto	i2l5181
 12156  001BDE  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 12157  001BE2  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 12158  001BE6  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 12159  001BEA  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 12160  001BEE  341A               	rlcf	??i2___flmul+3,w,c
 12161  001BF0  321A               	rrcf	??i2___flmul+3,f,c
 12162  001BF2  3219               	rrcf	??i2___flmul+2,f,c
 12163  001BF4  3218               	rrcf	??i2___flmul+1,f,c
 12164  001BF6  3217               	rrcf	??i2___flmul,f,c
 12165  001BF8  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 12166  001BFC  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 12167  001C00  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 12168  001C04  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 12169  001C08  4A26               	infsnz	i2___flmul@temp,f,c
 12170  001C0A  2A27               	incf	i2___flmul@temp+1,f,c
 12171  001C0C                     i2l5181:
 12172  001C0C  BE27               	btfsc	i2___flmul@temp+1,7,c
 12173  001C0E  D00D               	goto	i2l5185
 12174  001C10  5027               	movf	i2___flmul@temp+1,w,c
 12175  001C12  E103               	bnz	i2u565_40
 12176  001C14  2826               	incf	i2___flmul@temp,w,c
 12177  001C16  A0D8               	btfss	status,0,c
 12178  001C18  D008               	goto	i2l5185
 12179  001C1A                     i2u565_40:
 12180  001C1A  0E00               	movlw	0
 12181  001C1C  6E22               	movwf	i2___flmul@prod,c
 12182  001C1E  0E00               	movlw	0
 12183  001C20  6E23               	movwf	i2___flmul@prod+1,c
 12184  001C22  0E80               	movlw	128
 12185  001C24  6E24               	movwf	i2___flmul@prod+2,c
 12186  001C26  0E7F               	movlw	127
 12187  001C28  D020               	goto	L13
 12188  001C2A                     i2l5185:
 12189  001C2A  BE27               	btfsc	i2___flmul@temp+1,7,c
 12190  001C2C  D005               	goto	i2u566_40
 12191  001C2E  5027               	movf	i2___flmul@temp+1,w,c
 12192  001C30  E10E               	bnz	i2l1499
 12193  001C32  0426               	decf	i2___flmul@temp,w,c
 12194  001C34  B0D8               	btfsc	status,0,c
 12195  001C36  D00B               	goto	i2l1499
 12196  001C38                     i2u566_40:
 12197  001C38  0E00               	movlw	0
 12198  001C3A  6E22               	movwf	i2___flmul@prod,c
 12199  001C3C  0E00               	movlw	0
 12200  001C3E  6E23               	movwf	i2___flmul@prod+1,c
 12201  001C40  0E00               	movlw	0
 12202  001C42  6E24               	movwf	i2___flmul@prod+2,c
 12203  001C44  0E00               	movlw	0
 12204  001C46  6E25               	movwf	i2___flmul@prod+3,c
 12205  001C48  0E00               	movlw	0
 12206  001C4A  6E1B               	movwf	i2___flmul@sign,c
 12207  001C4C  D00F               	goto	i2l5197
 12208  001C4E                     i2l1499:
 12209  001C4E  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 12210  001C52  0EFF               	movlw	255
 12211  001C54  1622               	andwf	i2___flmul@prod,f,c
 12212  001C56  0EFF               	movlw	255
 12213  001C58  1623               	andwf	i2___flmul@prod+1,f,c
 12214  001C5A  0E7F               	movlw	127
 12215  001C5C  1624               	andwf	i2___flmul@prod+2,f,c
 12216  001C5E  0E00               	movlw	0
 12217  001C60  1625               	andwf	i2___flmul@prod+3,f,c
 12218  001C62  B021               	btfsc	i2___flmul@bexp,0,c
 12219  001C64  8E24               	bsf	i2___flmul@prod+2,7,c
 12220  001C66  90D8               	bcf	status,0,c
 12221  001C68  3021               	rrcf	i2___flmul@bexp,w,c
 12222  001C6A                     L13:
 12223  001C6A  6E25               	movwf	i2___flmul@prod+3,c
 12224  001C6C                     i2l5197:
 12225  001C6C  501B               	movf	i2___flmul@sign,w,c
 12226  001C6E  1225               	iorwf	i2___flmul@prod+3,f,c
 12227  001C70  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 12228  001C74  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 12229  001C78  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 12230  001C7C  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 12231  001C80  0012               	return		;funcret
 12232  001C82                     __end_ofi2___flmul:
 12233                           	opt callstack 0
 12234                           
 12235 ;; *************** function ___xxtofl *****************
 12236 ;; Defined at:
 12237 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;  sign            1    wreg     unsigned char 
 12240 ;;  val             4    0[COMRAM] long 
 12241 ;; Auto vars:     Size  Location     Type
 12242 ;;  sign            1    8[COMRAM] unsigned char 
 12243 ;;  arg             4   10[COMRAM] unsigned long 
 12244 ;;  exp             1    9[COMRAM] unsigned char 
 12245 ;; Return value:  Size  Location     Type
 12246 ;;                  4    0[COMRAM] unsigned char 
 12247 ;; Registers used:
 12248 ;;		wreg, status,2, status,0
 12249 ;; Tracked objects:
 12250 ;;		On entry : 0/0
 12251 ;;		On exit  : 0/0
 12252 ;;		Unchanged: 0/0
 12253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12254 ;;      Params:         4       0       0       0       0       0       0       0       0
 12255 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12256 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12257 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12258 ;;Total ram usage:       14 bytes
 12259 ;; Hardware stack levels used:    1
 12260 ;; This function calls:
 12261 ;;		Nothing
 12262 ;; This function is called by:
 12263 ;;		_ping_CCP1_triggered
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           	psect	text82
 12268  0026F6                     __ptext82:
 12269                           	opt callstack 0
 12270  0026F6                     ___xxtofl:
 12271                           	opt callstack 18
 12272                           
 12273                           ;incstack = 0
 12274                           ;___xxtofl@sign stored from wreg
 12275  0026F6  6E09               	movwf	___xxtofl@sign,c
 12276  0026F8  5009               	movf	___xxtofl@sign,w,c
 12277  0026FA  A4D8               	btfss	status,2,c
 12278  0026FC  AE04               	btfss	___xxtofl@val+3,7,c
 12279  0026FE  D01A               	goto	i2l1523
 12280  002700  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12281  002704  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12282  002708  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12283  00270C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12284  002710  1E05               	comf	??___xxtofl,f,c
 12285  002712  1E06               	comf	??___xxtofl+1,f,c
 12286  002714  1E07               	comf	??___xxtofl+2,f,c
 12287  002716  1E08               	comf	??___xxtofl+3,f,c
 12288  002718  2A05               	incf	??___xxtofl,f,c
 12289  00271A  0E00               	movlw	0
 12290  00271C  2206               	addwfc	??___xxtofl+1,f,c
 12291  00271E  2207               	addwfc	??___xxtofl+2,f,c
 12292  002720  2208               	addwfc	??___xxtofl+3,f,c
 12293  002722  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12294  002726  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12295  00272A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12296  00272E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12297  002732  D008               	goto	i2l5033
 12298  002734                     i2l1523:
 12299  002734  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12300  002738  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12301  00273C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12302  002740  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12303  002744                     i2l5033:
 12304  002744  5001               	movf	___xxtofl@val,w,c
 12305  002746  1002               	iorwf	___xxtofl@val+1,w,c
 12306  002748  1003               	iorwf	___xxtofl@val+2,w,c
 12307  00274A  1004               	iorwf	___xxtofl@val+3,w,c
 12308  00274C  A4D8               	btfss	status,2,c
 12309  00274E  D009               	goto	i2l5039
 12310  002750  0E00               	movlw	0
 12311  002752  6E01               	movwf	?___xxtofl,c
 12312  002754  0E00               	movlw	0
 12313  002756  6E02               	movwf	?___xxtofl+1,c
 12314  002758  0E00               	movlw	0
 12315  00275A  6E03               	movwf	?___xxtofl+2,c
 12316  00275C  0E00               	movlw	0
 12317  00275E  6E04               	movwf	?___xxtofl+3,c
 12318  002760  0012               	return	
 12319  002762                     i2l5039:
 12320  002762  0E96               	movlw	150
 12321  002764  6E0A               	movwf	___xxtofl@exp,c
 12322  002766  D006               	goto	i2l5043
 12323  002768                     i2l5041:
 12324  002768  2A0A               	incf	___xxtofl@exp,f,c
 12325  00276A  90D8               	bcf	status,0,c
 12326  00276C  320E               	rrcf	___xxtofl@arg+3,f,c
 12327  00276E  320D               	rrcf	___xxtofl@arg+2,f,c
 12328  002770  320C               	rrcf	___xxtofl@arg+1,f,c
 12329  002772  320B               	rrcf	___xxtofl@arg,f,c
 12330  002774                     i2l5043:
 12331  002774  0E00               	movlw	0
 12332  002776  140B               	andwf	___xxtofl@arg,w,c
 12333  002778  6E05               	movwf	??___xxtofl& (0+255),c
 12334  00277A  0E00               	movlw	0
 12335  00277C  140C               	andwf	___xxtofl@arg+1,w,c
 12336  00277E  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 12337  002780  0E00               	movlw	0
 12338  002782  140D               	andwf	___xxtofl@arg+2,w,c
 12339  002784  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 12340  002786  0EFE               	movlw	254
 12341  002788  140E               	andwf	___xxtofl@arg+3,w,c
 12342  00278A  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 12343  00278C  5005               	movf	??___xxtofl,w,c
 12344  00278E  1006               	iorwf	??___xxtofl+1,w,c
 12345  002790  1007               	iorwf	??___xxtofl+2,w,c
 12346  002792  1008               	iorwf	??___xxtofl+3,w,c
 12347  002794  B4D8               	btfsc	status,2,c
 12348  002796  D00D               	goto	i2l1530
 12349  002798  D7E7               	goto	i2l5041
 12350  00279A                     i2l5045:
 12351  00279A  2A0A               	incf	___xxtofl@exp,f,c
 12352  00279C  0E01               	movlw	1
 12353  00279E  260B               	addwf	___xxtofl@arg,f,c
 12354  0027A0  0E00               	movlw	0
 12355  0027A2  220C               	addwfc	___xxtofl@arg+1,f,c
 12356  0027A4  220D               	addwfc	___xxtofl@arg+2,f,c
 12357  0027A6  220E               	addwfc	___xxtofl@arg+3,f,c
 12358  0027A8  90D8               	bcf	status,0,c
 12359  0027AA  320E               	rrcf	___xxtofl@arg+3,f,c
 12360  0027AC  320D               	rrcf	___xxtofl@arg+2,f,c
 12361  0027AE  320C               	rrcf	___xxtofl@arg+1,f,c
 12362  0027B0  320B               	rrcf	___xxtofl@arg,f,c
 12363  0027B2                     i2l1530:
 12364  0027B2  0E00               	movlw	0
 12365  0027B4  140B               	andwf	___xxtofl@arg,w,c
 12366  0027B6  6E05               	movwf	??___xxtofl& (0+255),c
 12367  0027B8  0E00               	movlw	0
 12368  0027BA  140C               	andwf	___xxtofl@arg+1,w,c
 12369  0027BC  6E06               	movwf	(??___xxtofl+1)& (0+255),c
 12370  0027BE  0E00               	movlw	0
 12371  0027C0  140D               	andwf	___xxtofl@arg+2,w,c
 12372  0027C2  6E07               	movwf	(??___xxtofl+2)& (0+255),c
 12373  0027C4  0EFF               	movlw	255
 12374  0027C6  140E               	andwf	___xxtofl@arg+3,w,c
 12375  0027C8  6E08               	movwf	(??___xxtofl+3)& (0+255),c
 12376  0027CA  5005               	movf	??___xxtofl,w,c
 12377  0027CC  1006               	iorwf	??___xxtofl+1,w,c
 12378  0027CE  1007               	iorwf	??___xxtofl+2,w,c
 12379  0027D0  1008               	iorwf	??___xxtofl+3,w,c
 12380  0027D2  B4D8               	btfsc	status,2,c
 12381  0027D4  D007               	goto	i2l5053
 12382  0027D6  D7E1               	goto	i2l5045
 12383  0027D8                     i2l5051:
 12384  0027D8  060A               	decf	___xxtofl@exp,f,c
 12385  0027DA  90D8               	bcf	status,0,c
 12386  0027DC  360B               	rlcf	___xxtofl@arg,f,c
 12387  0027DE  360C               	rlcf	___xxtofl@arg+1,f,c
 12388  0027E0  360D               	rlcf	___xxtofl@arg+2,f,c
 12389  0027E2  360E               	rlcf	___xxtofl@arg+3,f,c
 12390  0027E4                     i2l5053:
 12391  0027E4  BE0D               	btfsc	___xxtofl@arg+2,7,c
 12392  0027E6  D003               	goto	i2u545_40
 12393  0027E8  0E02               	movlw	2
 12394  0027EA  600A               	cpfslt	___xxtofl@exp,c
 12395  0027EC  D7F5               	goto	i2l5051
 12396  0027EE                     i2u545_40:
 12397  0027EE  A00A               	btfss	___xxtofl@exp,0,c
 12398  0027F0  9E0D               	bcf	___xxtofl@arg+2,7,c
 12399  0027F2  90D8               	bcf	status,0,c
 12400  0027F4  320A               	rrcf	___xxtofl@exp,f,c
 12401  0027F6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12402  0027FA  6A06               	clrf	(??___xxtofl+1)& (0+255),c
 12403  0027FC  6A07               	clrf	(??___xxtofl+2)& (0+255),c
 12404  0027FE  6A08               	clrf	(??___xxtofl+3)& (0+255),c
 12405  002800  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12406  002804  6A07               	clrf	??___xxtofl+2,c
 12407  002806  6A06               	clrf	??___xxtofl+1,c
 12408  002808  6A05               	clrf	??___xxtofl,c
 12409  00280A  5005               	movf	??___xxtofl,w,c
 12410  00280C  120B               	iorwf	___xxtofl@arg,f,c
 12411  00280E  5006               	movf	??___xxtofl+1,w,c
 12412  002810  120C               	iorwf	___xxtofl@arg+1,f,c
 12413  002812  5007               	movf	??___xxtofl+2,w,c
 12414  002814  120D               	iorwf	___xxtofl@arg+2,f,c
 12415  002816  5008               	movf	??___xxtofl+3,w,c
 12416  002818  120E               	iorwf	___xxtofl@arg+3,f,c
 12417  00281A  5009               	movf	___xxtofl@sign,w,c
 12418  00281C  A4D8               	btfss	status,2,c
 12419  00281E  AE04               	btfss	___xxtofl@val+3,7,c
 12420  002820  D001               	goto	i2l5069
 12421  002822  8E0E               	bsf	___xxtofl@arg+3,7,c
 12422  002824                     i2l5069:
 12423  002824  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12424  002828  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12425  00282C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12426  002830  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12427  002834  0012               	return		;funcret
 12428  002836                     __end_of___xxtofl:
 12429                           	opt callstack 0
 12430                           
 12431                           	psect	text83
 12432  000000                     __ptext83:
 12433                           	opt callstack 0
 12434                           
 12435                           	psect	rparam
 12436  0000                     
 12437                           	psect	temp
 12438  00005F                     btemp:
 12439                           	opt callstack 0
 12440  00005F                     	ds	1
 12441  0000                     int$flags	set	btemp
 12442  0000                     wtemp8	set	btemp+1
 12443  0000                     ttemp5	set	btemp+1
 12444  0000                     ttemp6	set	btemp+4
 12445  0000                     ttemp7	set	btemp+8
 12446                           tosu	equ	0xFFF
 12447                           tosh	equ	0xFFE
 12448                           tosl	equ	0xFFD
 12449                           stkptr	equ	0xFFC
 12450                           pclatu	equ	0xFFB
 12451                           pclath	equ	0xFFA
 12452                           pcl	equ	0xFF9
 12453                           tblptru	equ	0xFF8
 12454                           tblptrh	equ	0xFF7
 12455                           tblptrl	equ	0xFF6
 12456                           tablat	equ	0xFF5
 12457                           prodh	equ	0xFF4
 12458                           prodl	equ	0xFF3
 12459                           indf0	equ	0xFEF
 12460                           postinc0	equ	0xFEE
 12461                           postdec0	equ	0xFED
 12462                           preinc0	equ	0xFEC
 12463                           plusw0	equ	0xFEB
 12464                           fsr0h	equ	0xFEA
 12465                           fsr0l	equ	0xFE9
 12466                           wreg	equ	0xFE8
 12467                           indf1	equ	0xFE7
 12468                           postinc1	equ	0xFE6
 12469                           postdec1	equ	0xFE5
 12470                           preinc1	equ	0xFE4
 12471                           plusw1	equ	0xFE3
 12472                           fsr1h	equ	0xFE2
 12473                           fsr1l	equ	0xFE1
 12474                           bsr	equ	0xFE0
 12475                           indf2	equ	0xFDF
 12476                           postinc2	equ	0xFDE
 12477                           postdec2	equ	0xFDD
 12478                           preinc2	equ	0xFDC
 12479                           plusw2	equ	0xFDB
 12480                           fsr2h	equ	0xFDA
 12481                           fsr2l	equ	0xFD9
 12482                           status	equ	0xFD8


Data Sizes:
    Strings     43
    Constant    0
    Data        3
    BSS         142
    Persistent  21
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      94
    BANK0           160    159     160
    BANK1           256     28     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2536_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), Absolute function(), IOCCF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _TMR2_ISR->_carcontrol_ISR
    _TMR1_ISR->i2_TMR1_WriteTimer
    _ping_TMR1Overflow_isr->i2_IOCCF2_SetInterruptHandler
    _ping_TMR1Overflow_isr->i2_TMR1_SetInterruptHandler
    _ping_RC2_went_HIGH->i2_IOCCF2_SetInterruptHandler
    _ping_RC2_went_HIGH->i2_TMR1_SetInterruptHandler
    _ping_RC2_went_HIGH->i2_TMR1_WriteTimer
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_CaptureISR->_ping_CCP1_triggered
    _ping_CCP1_triggered->i2___flmul
    i2___flmul->___xxtofl

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___fladd
    _atoi->_isspace
    _ping_send->_TMR1_SetInterruptHandler
    _ping_send->_TMR1_WriteTimer
    _ping_init->_CCP1_SetCallBack
    _ping_init->_IOCCF2_SetInterruptHandler
    _ping_init->_TMR1_SetInterruptHandler
    _carcontrol_init->_TMR2_SetInterruptHandler
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _CCP1_Initialize->_CCP1_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   39370
                                             10 BANK1     18    18      0
                  _SYSTEM_Initialize
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___fltol
                    _carcontrol_init
                _carcontrol_steering
                           _ping_get
                          _ping_init
                          _ping_send
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   28740
                                              0 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28604
                                            151 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   28232
                                            129 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22933
                                             61 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             18 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             11 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      66
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             41 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3193
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2452
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             16 BANK0     25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _ping_send                                            0     0      0     690
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     340
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ping_init                                            0     0      0     798
                   _CCP1_SetCallBack
         _IOCCF2_SetInterruptHandler
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _ping_get                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _carcontrol_init                                      0     0      0     310
           _TMR2_SetInterruptHandler
                _carcontrol_steering
                _carcontrol_throttle
 ---------------------------------------------------------------------------------
 (2) _carcontrol_throttle                                  1     1      0      45
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _carcontrol_steering                                  1     1      0      91
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1462
                    _CCP1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     350
                                              2 BANK0      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     350
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     274
         _IOCCF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _IOCCF2_SetInterruptHandler                           2     0      2     274
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     174
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (2) _CCP1_SetCallBack                                     2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          6     6      0    2636
                                             43 COMRAM     6     6      0
                   Absolute function *
                    _CCP1_CaptureISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                     _carcontrol_ISR *
 ---------------------------------------------------------------------------------
 (12) _carcontrol_ISR                                      3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     288
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
              _ping_TMR1Overflow_isr *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _ping_TMR1Overflow_isr                               0     0      0     148
       i2_IOCCF2_SetInterruptHandler
         i2_TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0     288
                         _IOCCF2_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF2_ISR                                          0     0      0     288
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                 _ping_RC2_went_HIGH *
 ---------------------------------------------------------------------------------
 (13) _ping_RC2_went_HIGH                                  0     0      0     288
       i2_IOCCF2_SetInterruptHandler
         i2_TMR1_SetInterruptHandler
                  i2_TMR1_StartTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2_TMR1_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_TMR1_SetInterruptHandler                          2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_IOCCF2_SetInterruptHandler                        2     0      2      74
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     2     2      0    2060
                                             41 COMRAM     2     2      0
                   Absolute function *
               _CCP1_DefaultCallBack *
                _ping_CCP1_triggered *
 ---------------------------------------------------------------------------------
 (12) _ping_CCP1_triggered                                 2     0      2    2013
                                             39 COMRAM     2     0      2
                           ___xxtofl
                          i2___flmul
 ---------------------------------------------------------------------------------
 (13) i2___flmul                                          25    17      8    1518
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (13) ___xxtofl                                           14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                2     0      2       0
                                             39 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CCP1_Initialize
       _CCP1_SetCallBack
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   ___fladd
   ___fldiv
     ___fladd (ARG)
   ___fleq
   ___flge
     ___flmul (ARG)
   ___fltol
   _carcontrol_init
     _TMR2_SetInterruptHandler
     _carcontrol_steering
     _carcontrol_throttle
   _carcontrol_steering
   _ping_get
   _ping_init
     _CCP1_SetCallBack
     _IOCCF2_SetInterruptHandler
     _TMR1_SetInterruptHandler
   _ping_send
     _TMR1_SetInterruptHandler
     _TMR1_StartTimer
     _TMR1_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___fladd (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___fladd (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
     _ping_CCP1_triggered *
       ___xxtofl
       i2___flmul
         ___xxtofl (ARG)
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _PIN_MANAGER_IOC *
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       _ping_RC2_went_HIGH *
         i2_IOCCF2_SetInterruptHandler
         i2_TMR1_SetInterruptHandler
         i2_TMR1_StartTimer
         i2_TMR1_WriteTimer
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _ping_TMR1Overflow_isr *
       i2_IOCCF2_SetInterruptHandler
       i2_TMR1_SetInterruptHandler
     i2_TMR1_WriteTimer *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _carcontrol_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1C      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5E       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     192      18        0.0%
DATA                 0      0     192       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 23 15:29:47 2019

              __end_of_TMR2_SetInterruptHandler 37AC                        _eusart1TxBufferRemaining 005B  
                             ??_carcontrol_init 0062                                    ___fldiv@aexp 0088  
                                  ___fldiv@bexp 0087                                    ___fldiv@sign 0080  
                                   __CFG_CP$OFF 000000                                    ___awdiv@sign 0065  
                           ___wmul@multiplicand 0062                             _carcontrol_throttle 3772  
                           _carcontrol_steering 34EE                         __end_of_CCP1_Initialize 35A8  
                                   __CFG_LVP$ON 000000                                             l451 333A  
                                           l805 0E7A                                             l738 2CEA  
                                           l779 0B9C                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                 _timer1ReloadVal 0057  
                                           _pad 2CBA                         __size_of_PMD_Initialize 001C  
                                  ___awmod@sign 0065                                 _TMR2_Initialize 354C  
                                           tosl 000FFD                                             wreg 000FE8  
                                   i2___flmul@a 0013                                     i2___flmul@b 000F  
              ??_IOCCF2_DefaultInterruptHandler 0001                 ?_IOCCF2_DefaultInterruptHandler 0001  
                                  ___flmul@aexp 0071                                    ___flmul@bexp 0072  
                                  ___flmul@sign 006C                                    ___flmul@temp 0077  
                                  ___flmul@prod 0073                     carcontrol_steering@steering 0060  
                                  __CFG_ZCD$OFF 000000                                    ___fltol@exp1 0069  
                                          l1133 29B0                                            l1413 1E98  
                                          l1422 1EFE                                            l1423 1EFA  
                                          l4011 3104                                            l1452 2104  
                                          l4005 2AB0                                            l1463 2172  
                                          l4111 204C                                            l1464 216E  
                                          l4105 2036                                            l1482 165E  
                                          l1491 1876                                            l4211 160A  
                                          l4043 2572                                            l5003 1546  
                                          l1492 1872                                            l4213 160E  
                                          l1397 1DC6                                            l4029 2472  
                                          l5013 158E                                            l1398 1DA4  
                                          l1590 2512                                            l4143 2102  
                                          l4119 2064                                            l4311 18D8  
                                          l4231 164E                                            l4215 161E  
                                          l4047 25A0                                            l4039 2534  
                                          l4137 20DC                                            l4129 20B4  
                                          l4073 1FBE                                            l5009 1582  
                                          l1578 26EC                                            l4411 2F56  
                                          l4403 2F3E                                            l4155 2138  
                                          l1499 18FC                                            l4323 191A  
                                          l4307 18BA                                            l1667 318C  
                                          l5019 15A6                                            l4149 211A  
                                          l4093 1FFE                                            l4077 1FC2  
                                          l4229 164A                                            l4501 2B64  
                                          l4343 2DF8                                            l4407 2F48  
                                          l4191 2212                                            l4183 2204  
                                          l4175 21B6                                            l4423 2DC0  
                                          l4239 167C                                            l5321 3510  
                                          l5305 36F8                                            l4513 32A4  
                                          l4097 2002                                            l4281 181E  
                                          l3721 3358                                            l4355 2E1E  
                                          l4371 2E50                                            l4179 21DA  
                                          l4427 2DDE                                            l4419 2D8C  
                                          l4443 299A                                            l4435 2950  
                                          l3811 1D1C                                            l3803 1CFC  
                                          l3723 335A                                            l3707 3328  
                                          l4611 0B84                                            l5317 3502  
                                          l4357 2E26                                            l4349 2E08  
                                          l4189 2210                                            l3733 2F7A  
                                          l4701 0F16                                            l4621 0BAC  
                                          l5405 30B0                                            ?_pad 0072  
                                          l4375 2E5E                                            l4367 2E46  
                                          l4391 2F10                                            l4439 2984  
                                          l4287 183C                                            l3743 32B8  
                                          l3751 3528                                            l4631 0BF8  
                                          l4615 0BA6                                            l4527 0878  
                                          l5407 30D8                                            l5329 3782  
                                          l4449 29E8                                            l4457 347C  
                                          l3905 1EBC                                            l3921 1EDC  
                                          l3841 1D58                                            l3753 352E  
                                          l4713 0F46                                            l4721 0F66  
                                          l4641 0C16                                            l4395 2F1E  
                                          l4387 2F04                                            l3915 1ED2  
                                          l4483 2B24                                            l4467 2ADA  
                                          l3747 32D0                                            l4803 11A0  
                                          l4811 11DA                                            l4651 0C4A  
                                          l4539 08A6                                            l4547 08BC  
                                          l5603 2258                                            l4397 2F26  
                                          l3941 1F44                                            l3853 1DB2  
                                          l4493 2B3C                                            l4629 0BF4  
                                          l4557 0928                                            l4565 0970  
                                          l5621 2382                                            l3855 1DB6  
                                          l3775 1CB0                                            l4495 2B48  
                                          l4487 2B34                                            l4647 0C3A  
                                          l4575 09DC                                            l4583 0A24  
                                          l4559 0940                                            l4833 2620  
                                          l4817 25C6                                            l3953 1F72  
                                          l4729 0F8A                                            l4737 1024  
                                          l4657 0C74                                            l4665 0D6C  
                                          l4593 0AA2                                            l4577 09F4  
                                          l5617 2344                                            l5609 226C  
                                          l5547 34AA                                            l4843 268C  
                                          l4835 2628                                            l4827 2610  
                                          l4819 25CA                                            l3955 1F74  
                                          l3779 1CB4                                            l4595 0AF2  
                                          l4837 262E                                            l3949 1F6A  
                                          l3877 1E0C                                            l3869 1DEA  
                                          l3973 2CE2                                            l4765 10B2  
                                          l4749 1066                                            l4589 0A68  
                                          l4839 2656                                            l3879 1E10  
                                          l3887 1E22                                            l3799 1CF8  
                                          l3983 2D3A                                            l3975 2CF4  
                                          l4767 10BC                                            l4687 0E72  
                                          l4679 0E1A                                            l4599 0B2E  
                                          l4863 2BA2                                            l3897 1E88  
                                          l3969 2CD2                                            l4777 1114  
                                          l4689 0E94                                            l4865 2BB0  
                                          l3995 2A66                                            l3979 2D0E  
                                          l4787 1140                                            l4955 12C0  
                                          l4957 12DE                                            l3999 2A70  
                                          l4975 13C8                                            l4959 12EC  
                                          l4987 144E                                            STR_1 0801  
                                          STR_2 0819                                            STR_3 0821  
                                          STR_6 081D                                            STR_7 0825  
                                          _LATA 000F82                                            _LATB 000F83  
                                          _LATC 000F84                                            u3130 2F72  
                                          u3300 1D8A                                            u4030 2168  
                                          u3310 1D8C                                            u3150 2FBA  
                                          u5000 1048                                            _T2PR 000FBB  
                                          u4220 186C                                            u3340 1DCE  
                                          u3180 33F2                                            u4070 21C4  
                                          u3190 33F4                                            u5120 260C  
                                          u4320 2E2A                                            u4080 21E8  
                                          u4170 166A                                            u3290 1D7A  
                                          u5140 26BC                                            u4260 18C8  
                                          u4180 17E0                                            u4500 2AC8  
                                          u3700 313E                                            u5060 112A  
                                          u5220 2BF6                                            u5300 1334  
                                          u5150 26BE                                            u4430 2DDA  
                                          u4270 18E6                                            u3550 1F50  
                                          u3470 1EE0                                            u4510 2AF8  
                                          u3630 2A2C                                            u3800 24F2  
                                          u3720 3172                                            u5080 118A  
                                          u4185 17D6                                            u3490 1EF4  
                                          u3730 3174                                            u5090 118C  
                                          u4610 0896                                            u4515 2AEE  
                                          u3635 2A20                                            u3707 3134  
                                          u4380 2F2A                                            u3820 2552  
                                          _PMD0 000EDC                                            u3805 24E8  
                                          _PMD1 000EDD                                            u4550 2B4E  
                                          u3750 2440                                            u5350 14D2  
                                          _PMD2 000EDE                                            _PMD3 000EDF  
                                          u3680 2AA8                                            u3760 2460  
                                          u4640 0900                                            u5360 14D4  
                                          u5280 1326                                            _PMD4 000EE0  
                                          u3825 2548                                            _PMD5 000EE1  
                                          u3850 3424                                            u3690 2AAA  
                                          u4730 0B58                                            u4650 0902  
                                          u5290 1328                                            u3675 2A8A  
                                          u3755 2436                                            u3860 3426  
                                          u4580 32A0                                            u4900 0E0A  
                                          u4830 0C12                                            u6167 2236  
                                          u4760 0B92                                            u4680 09B4  
                                          u3785 248A                                            u6177 224C  
                                          u3786 2490                                            u4690 09B6  
                                          u6187 3360                                            u3787 249E  
                                          u4790 0BC4                                            _PIR6 000ECB  
                                          _TMR2 000FBA                                            _WPUA 000F0B  
                                          _WPUB 000F13                                            _WPUC 000F1B  
                                          _WPUE 000F28                            ?_carcontrol_throttle 0001  
                          ?_carcontrol_steering 0001                                   _EUSART1_Write 3324  
                                 __CFG_FCMEN$ON 000000                                            _dbuf 0118  
                                          _atoi 25B2                                            _main 221A  
                                          _prec 004C                                            _nout 0048  
                                          pad@i 0079                                            pad@p 0076  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 007B  
                                          fsr2l 000FD9                                            btemp 005F  
                                 ___fpclassifyf 29EC                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00AA  
                               ___fldiv@new_exp 0081                        __end_of_CCP1_SetCallBack 37FC  
                    ??_TMR1_SetInterruptHandler 0062                                    _tolower$2597 006C  
                                 __CFG_CSWEN$ON 000000                                    ___param_bank 000000  
                              ?_CCP1_CaptureISR 0001                                   __CFG_SCANE$ON 000000  
                                         ??_pad 0078                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 3772                             __size_of_IOCCF2_ISR 0026  
                         _eusart1RxStatusBuffer 0100                                   ___fltol@sign1 0068  
                                         ?_atoi 0067                                 __end_of___fladd 1F90  
                                         ?_main 0001                                 __end_of___fldiv 221A  
                               __end_of___awdiv 2E68                                 __end_of___flneg 348E  
                                         STR_10 0829                                           STR_12 0829  
                                 __CFG_WDTE$OFF 000000                                 __end_of___awmod 2F60  
                               __end_of___flmul 1930                                 __end_of___flsub 3226  
                               __end_of___fltol 2B76                                 _TMR1_StartTimer 381C  
                                         _T1CLK 000FD1                                 ___awdiv@divisor 0062  
                                         _T1CON 000FCE                                           _T2CON 000FBC  
                                         _T2HLT 000FBD                                  __CFG_DEBUG$OFF 000000  
                                         _T2TMR 000FBA                                           _T2RST 000FBF  
                                         i2l250 006C                                           i2l251 008E  
                                         i2l252 0078                                           i2l245 0030  
                                         i2l254 0084                                           i2l248 004C  
                                         i2l463 35FC                                 ___awdiv@counter 0064  
                                         _OSCEN 000ED7                                    vfpfcnvrt@fmt 00E3  
                                  main@last_dis 0178                                           _TMR1H 000FCD  
                                         _TMR1L 000FCC                                           _TRISA 000F87  
                                         _TRISB 000F88                                           _TRISC 000F89  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                                   __CFG_WRT3$OFF 000000  
                          _EUSART1_Transmit_ISR 35D6                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                __end_of_TMR1_ISR 345E  
                              __end_of_TMR2_ISR 367A                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                         __end_of_PIN_MANAGER_IOC 37A2  
                                         _flags 004E                                           _fputc 2F60  
                                         _fputs 32AC                                 __end_of_isdigit 342C  
                            __CFG_MCLRE$EXTMCLR 000000                                           atoi@n 0074  
                                         pad@fp 0072                                           atoi@s 0067  
                                         _width 004A                                           _putch 3788  
                               __end_of_isspace 32AC                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 326C                           ??_carcontrol_throttle 0060  
                         ??_carcontrol_steering 0060                                 __end_of_isupper 33FA  
                                         pclath 000FFA                                           tablat 000FF5  
                                         ttemp5 0060                                           ttemp6 0063  
                                         ttemp7 0067                                           status 000FD8  
                                         wtemp8 0060                                  ?___fpclassifyf 0060  
                               __end_of_tolower 3196                                  _carcontrol_ISR 2836  
                                 i2___flmul@grs 001C                                 __end_of_strncmp 2C1A  
    __end_of_EUSART1_DefaultFramingErrorHandler 3834     __size_of_EUSART1_DefaultFramingErrorHandler 0002  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 3832                                 _TMR1_WriteTimer 36E4  
                            __size_ofi2___flmul 0352                                 __initialization 3196  
                                  __end_of_atoi 26F6                      __end_of_EUSART1_Initialize 2EEE  
                                  __end_of_main 23F8                         __end_of_TMR2_Initialize 357A  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 0069  
                      _TMR2_SetInterruptHandler 37A2                                          ??_main 0172  
                              ?_CCP1_Initialize 0001                                   __activetblptr 000002  
                       _IOCCF2_InterruptHandler 0059                           ?_EUSART1_Transmit_ISR 0001  
                                        ?_fputc 0062                                          ?_fputs 006B  
                                        _CCPR1H 000FAA                                          _CCPR1L 000FA9  
                              ___awdiv@dividend 0060                                          _ANSELA 000F0C  
                                        ?_putch 0001                                          _ANSELB 000F14  
                                        _ANSELC 000F1C                                          _T1GATE 000FD0  
                                        _T1GCON 000FCF                                          _RC1REG 000F98  
                 __size_of_CCP1_DefaultCallBack 0002                                          _RC1STA 000F9C  
                       TMR1_WriteTimer@timerVal 0060                                          _ODCONA 000F0A  
                                        _ODCONB 000F12                                          _ODCONC 000F1A  
                                        _RC6PPS 000EF8                          __end_of_carcontrol_ISR 291A  
                                __CFG_WDTCCS$SC 000000                                          i2l1530 27B2  
                                        i2l1523 2734                                          i2l1482 19B0  
                                        i2l1491 1BC8                                          i2l1492 1BC4  
                                        i2l5103 199C                                          i2l5041 2768  
                                        i2l5033 2744                                          i2l5113 19CE  
                                        i2l5105 19A0                                          i2l5051 27D8  
                                        i2l5043 2774                                          i2l1499 1C4E  
                                        i2l5053 27E4                                          i2l5045 279A  
                                        i2l5039 2762                                          i2l5161 1B8E  
                                        i2l5155 1B70                                          i2l5069 2824  
                                        i2l5181 1C0C                                          i2l5085 195C  
                                        i2l5333 2838                                          i2l5087 1960  
                                        i2l5185 1C2A                                          i2l5089 1970  
                                        i2l5339 284A                                          i2l5197 1C6C  
                                        i2l5349 2870                                          i2l5359 28C6  
                                        i2l5375 28F0                                          i2l4923 36E0  
                                        i2l5479 35F8                                          i2l5499 2CB4  
                                        i2l4891 3750                                          _OSCFRQ 000ED9  
                                        _TX1REG 000F99                                          _TX1STA 000F9D  
                              __end_of___xxtofl 2836                                   _CCP1_CallBack 018C  
                                __CFG_PWRTE$OFF 000000                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 3830           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 382E                                    vfprintf@cfmt 00FD  
                                        ___flge 291A                                          ___fleq 2D56  
                       __end_of_TMR1_StartTimer 3820                                       ??___fladd 0068  
                                        ___wmul 362C                                       ??___fldiv 0078  
                                     ??___awdiv 0064                                       ??___flneg 0064  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0064  
                                     ??___flmul 0068                                          _carctl 003A  
                                     ??___flsub 0081                                       ??___fltol 0064  
                                        _efgtoa 082E                        ?_EUSART1_SetErrorHandler 0060  
                                        _floorf 23F8                                          clear_0 31BA  
                                        clear_1 31CA                                ___awdiv@quotient 0066  
                               ___awmod@divisor 0062                                 ___awmod@counter 0064  
                                        _printf 3602                                          pad@buf 0074  
              ??_EUSART1_SetOverrunErrorHandler 0062                 ?_EUSART1_SetOverrunErrorHandler 0060  
                                        _status 0032                                          _strcpy 30F4  
                                        _strlen 351E                                __end_of_ping_get 34BE  
                   __end_of_ping_CCP1_triggered 309E                                          fputc@c 0062  
                                _PMD_Initialize 3722                                          fputs@c 006F  
                                        fputs@i 0070                                    __pdataCOMRAM 005C  
                                        fputs@s 006B                                       ??_isdigit 0062  
                             __end_ofi2___flmul 1C82                                 ___fpclassifyf@e 0068  
                               ___fpclassifyf@u 006A                                 ___fpclassifyf@x 0060  
                                  __mediumconst 0000                                       ??_isspace 0062  
                                        tblptrh 000FF7                                       ??_isupper 0062  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 30F4                                 ??_EUSART1_Write 0060  
                       ??_ping_TMR1Overflow_isr 0003      i2TMR1_SetInterruptHandler@InterruptHandler 0001  
  i2IOCCF2_SetInterruptHandler@InterruptHandler 0001        TMR1_SetInterruptHandler@InterruptHandler 0060  
      TMR2_SetInterruptHandler@InterruptHandler 0060      IOCCF2_SetInterruptHandler@InterruptHandler 0060  
                              ?_PIN_MANAGER_IOC 0001                                       ??_tolower 0068  
                       __end_of_TMR1_WriteTimer 3704                                 _eusart1RxBuffer 0108  
                                i2___flmul@aexp 0020                                  i2___flmul@bexp 0021  
                                     ??_strncmp 0066                                  i2___flmul@sign 001B  
                                i2___flmul@temp 0026                                  i2___flmul@prod 0022  
                 __size_of_INTERRUPT_Initialize 0004                                    ??_IOCCF2_ISR 0003  
                               _eusart1TxBuffer 0110                     __size_of_ping_RC2_went_HIGH 0034  
                                    ___flge@ff1 0079                                      ___flge@ff2 007D  
                               ??___fpclassifyf 0064                                ?_TMR1_Initialize 0001  
                               ?_carcontrol_ISR 0001                                    ___xxtofl@arg 000B  
                                  ___xxtofl@exp 000A                               _SYSTEM_Initialize 36A0  
                                  ___xxtofl@val 0001                                      ___fleq@ff1 0060  
                                    ___fleq@ff2 0064                                 _carcontrol_init 34BE  
                                    __accesstop 0060                         __end_of__initialization 31D0  
                                    ___flneg@f1 0060                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                      ___fltol@f1 0060  
                __size_of_EUSART1_RxDataHandler 0022                   __end_of_EUSART1_RxDataHandler 36E4  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0064  
                                     ?_TMR1_ISR 0001                                       ?_TMR2_ISR 0001  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 2FCE  
                                 __end_of_fputs 32E8                                   __end_of_putch 3796  
                              ?_TMR2_Initialize 0001                          __end_of_PMD_Initialize 373E  
                            __end_of_IOCCF2_ISR 36A0                          ??_EUSART1_Transmit_ISR 0001  
                   __end_of_EUSART1_Receive_ISR 2CBA                                         ??_fputc 0066  
                     __end_of_SYSTEM_Initialize 36C2                                         ??_fputs 006F  
                                       ??_putch 0061                                   _eusart1RxHead 00FF  
                                 _eusart1TxHead 0056                                   _eusart1RxTail 0054  
                                    __pbssBANK0 00FF                                      __pbssBANK1 0100  
                                 _eusart1TxTail 0055               _EUSART1_TxDefaultInterruptHandler 0192  
               ??_EUSART1_SetRxInterruptHandler 0062                                      __pnvCOMRAM 0057  
        __end_of_IOCCF2_DefaultInterruptHandler 3832         __size_of_IOCCF2_DefaultInterruptHandler 0002  
                _IOCCF2_DefaultInterruptHandler 3830                 __end_of_EUSART1_SetErrorHandler 37F2  
                             ?_CCP1_SetCallBack 0060                                         ?___flge 0079  
                                       ?___fleq 0060                                         ?___wmul 0060  
                              ?_TMR1_StartTimer 0001                                      ??_TMR1_ISR 0003  
                               __CFG_PPS1WAY$ON 000000                                      ??_TMR2_ISR 0004  
                            ??_CCP1_SetCallBack 0062                                         ?_efgtoa 009D  
                            __size_of_ping_init 003C                              __size_of_ping_send 0036  
                                       _CCP1CAP 000FAC                                         _CCP1CON 000FAB  
                                       ?_floorf 0089                                         _CCP1PPS 000EAA  
                                       ?_printf 0168                                 ?_PMD_Initialize 0001  
                                       ?_strcpy 0060                                         ?_strlen 0060  
        __end_of_EUSART1_SetFramingErrorHandler 37E8         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 37DE                    ??i2_TMR1_SetInterruptHandler 0003  
                                     ?___xxtofl 0001                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _SP1BRGH 000F9B                                         _SP1BRGL 000F9A  
                                       _OSCCON1 000ED3                                         _OSCCON3 000ED5  
                            __size_of_vfpfcnvrt 03DA                         __end_of_carcontrol_init 34EE  
                                       _OSCTUNE 000ED8                                         _SLRCONA 000F09  
                                       _SLRCONB 000F11                                         _SLRCONC 000F19  
                              ?_TMR1_WriteTimer 0060               CCP1_DefaultCallBack@capturedValue 0028  
                                     ?_ping_get 0060                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0062  
                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000             __size_ofi2_TMR1_SetInterruptHandler 000A  
                               __size_of___flge 00D2                                 __size_of___fleq 008C  
                                       ___fladd 1C82                                         ___fldiv 1F90  
                                       ___awdiv 2DE2                                         ___flneg 345E  
                                       ___awmod 2EEE                                         ___flmul 15DC  
                                       ___flsub 31DE                                         ___fltol 2ABA  
                               __size_of___wmul 0028                                       ?_vfprintf 00F7  
                                  __psmallconst 0800                                 __size_of_efgtoa 09D4  
                               __size_of_floorf 01BA                                         __pcinit 3196  
                                       __ramtop 0800                                         __ptext0 221A  
                                       __ptext1 3602                                         __ptext2 309E  
                                       __ptext3 1202                                         __ptext4 2B76  
                                       __ptext5 082E                                         __ptext6 3148  
                                       __ptext7 33C8                                         __ptext8 30F4  
                                       __ptext9 2CBA                                 __size_of_printf 002A  
                      __size_of_CCP1_CaptureISR 002E                  ??_TMR1_DefaultInterruptHandler 0001  
                               __size_of_strcpy 0054                                 __size_of_strlen 002E  
                                     _T1CONbits 000FCE                           _OSCILLATOR_Initialize 375A  
                                     _T2CONbits 000FBC                                    __size_of_pad 009C  
                                       _isdigit 33FA                                      ??___xxtofl 0005  
                              ___awmod@dividend 0060               __size_of_TMR1_SetInterruptHandler 000A  
                            _EUSART1_Initialize 2E68                     __end_of_carcontrol_throttle 3788  
                      ??_PIN_MANAGER_Initialize 0062                                         _isspace 326C  
                     ?_TMR1_SetInterruptHandler 0060                     __end_of_carcontrol_steering 351E  
                                     _T2HLTbits 000FBD                                       _IOCCFbits 000F15  
                                       _isupper 33C8                                         efgtoa@c 00A3  
                                       efgtoa@d 00C1                                         efgtoa@e 00D9  
                                       efgtoa@f 009F                                         efgtoa@g 00D5  
                                       efgtoa@h 00CB                                         efgtoa@i 00D3  
                                       efgtoa@l 00CF                                         efgtoa@m 00BD  
                                       efgtoa@n 00DB                                         efgtoa@p 00C5  
                                       efgtoa@t 00B9                                         efgtoa@u 00DD  
                                       efgtoa@w 00C8                                       _IOCCNbits 000F16  
                                     _IOCCPbits 000F17                   ??_EUSART1_DefaultErrorHandler 0001  
                                       atoi@neg 006D                                         main@dis 017C  
                    __size_of_SYSTEM_Initialize 0022                                         _tolower 3148  
                                       _strncmp 2B76                            end_of_initialization 31D0  
                             __end_of_ping_init 3324                                         floorf@e 0097  
                                     _T2RSTbits 000FBF                                         floorf@m 0093  
                             __end_of_ping_send 3394                                         floorf@u 0099  
                                       floorf@x 0089                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0064                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0186                                         fputs@fp 006D  
                                    ??_ping_get 0064           __end_of_EUSART1_SetRxInterruptHandler 37D4  
        __size_of_EUSART1_SetRxInterruptHandler 000A                   _EUSART1_SetRxInterruptHandler 37CA  
                             __end_of_vfpfcnvrt 15DC                                      efgtoa@mode 00CA  
                                    efgtoa@sign 00C3                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                    __end_of_CCP1_DefaultCallBack 3836  
                                    ??_vfprintf 00FD                            ??_EUSART1_Initialize 0062  
                         __CFG_WDTCPS$WDTCPS_31 000000                                         strcpy@d 0068  
                                       strlen@a 0062                                         strcpy@s 0066  
                                       strlen@s 0060                                      _servo_trim 005E  
                                   ___fladd@grs 006F                                   ___xxtofl@sign 0009  
                                     _TRISCbits 000F89                                ??_carcontrol_ISR 0001  
                              ?_carcontrol_init 0001                                     ___fldiv@grs 0083  
                                   ___fldiv@rem 007C                __size_of_EUSART1_SetErrorHandler 000A  
                      __size_of_CCP1_Initialize 002E                    ??_IOCCF2_SetInterruptHandler 0062  
                           EUSART1_Write@txData 0060                                       i2___flmul 1930  
                              __CFG_FEXTOSC$OFF 000000                  __size_of_ping_TMR1Overflow_isr 001E  
                 __end_of_ping_TMR1Overflow_isr 3722                                     ___flmul@grs 006D  
          __size_of_EUSART1_DefaultErrorHandler 0006                    __end_of_INTERRUPT_Initialize 3824  
          __end_of_TMR2_DefaultInterruptHandler 382E           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 382C                                  __end_of___flge 29EC  
                                __end_of___fleq 2DE2                       i2TMR1_WriteTimer@timerVal 0001  
                                   vfpfcnvrt@ap 00E5                                     vfpfcnvrt@ct 00F3  
                                   vfpfcnvrt@fp 00E1                                  __end_of___wmul 3654  
                                 __pidataCOMRAM 3828                                  __end_of_efgtoa 1202  
                             __size_of_TMR1_ISR 0032                               __size_of_TMR2_ISR 0026  
            __end_ofi2_TMR1_SetInterruptHandler 3806                      i2_TMR1_SetInterruptHandler 37FC  
                                __end_of_floorf 25B2                          ?_OSCILLATOR_Initialize 0001  
                                    floorf@F524 0040             __size_of_IOCCF2_SetInterruptHandler 000A  
                                __end_of_printf 362C                                  __end_of_strcpy 3148  
                                __end_of_strlen 354C                             start_initialization 3196  
               __size_of_PIN_MANAGER_Initialize 006A                                     __end_of_pad 2D56  
                    __end_of_ping_RC2_went_HIGH 33C8                               ??_CCP1_CaptureISR 002A  
 EUSART1_SetRxInterruptHandler@interruptHandler 0060   EUSART1_SetTxInterruptHandler@interruptHandler 0060  
                                    ?i2___flmul 000F                    __size_of_ping_CCP1_triggered 0066  
                                   putch@txData 0061                           __end_of_EUSART1_Write 335E  
                         __end_of___fpclassifyf 2ABA                        __size_of_PIN_MANAGER_IOC 000C  
                              __CFG_LPBOREN$OFF 000000                        __size_of_TMR1_Initialize 0046  
                                   vfprintf@fmt 00F9                                        ??___flge 0081  
                                      ??___fleq 0068                                ??_PMD_Initialize 0060  
                                      ??___wmul 0064                           _EUSART1_RxDataHandler 36C2  
                                   _CCPTMRSbits 000FAD                                        ??_efgtoa 00A4  
                ?_EUSART1_SetRxInterruptHandler 0060                                        ??_floorf 008D  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 00FF  
                                      ??_strcpy 0064                                        ??_strlen 0062  
                                _eusart1RxCount 0053                           CCP1_CaptureISR@module 002A  
                                     ___fladd@a 0064                                       ___fladd@b 0060  
                                     ___fldiv@a 0074                                       ___fldiv@b 0070  
          __end_ofi2_IOCCF2_SetInterruptHandler 3810           __size_ofi2_IOCCF2_SetInterruptHandler 000A  
                  i2_IOCCF2_SetInterruptHandler 3806                                       ___flmul@a 0064  
                                     ___flmul@b 0060                                     __pbssCOMRAM 0032  
                     __size_of_CCP1_SetCallBack 000A                                       ___flsub@a 007D  
                                     ___flsub@b 0079               _EUSART1_RxDefaultInterruptHandler 0190  
                 __size_of_EUSART1_Transmit_ISR 002C                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0168                        __size_of_TMR2_Initialize 002E  
                             __size_of___xxtofl 0140                            _CCP1_DefaultCallBack 3834  
               ??_EUSART1_SetTxInterruptHandler 0062                ??_EUSART1_SetFramingErrorHandler 0062  
               ?_EUSART1_SetFramingErrorHandler 0060                    __size_of_EUSART1_Receive_ISR 00A0  
                                     _atoi$2492 006F                                       _atoi$2493 0073  
                                     _atoi$2494 0071                               ??_CCP1_Initialize 0062  
                                     __pnvBANK1 0184                                     _efgtoa$2001 00B3  
                                   _efgtoa$2002 00B5                                     _efgtoa$2003 00B7  
                                   _efgtoa$1991 00AD                                     _efgtoa$1992 00AF  
                                   _efgtoa$1997 00B1                          _PIN_MANAGER_Initialize 2FCE  
                                     __pintcode 0008                               __size_of_ping_get 0030  
              __end_of_TMR1_SetInterruptHandler 37B6                                        ?___fladd 0060  
                                      ?___fldiv 0070                                        ?___awdiv 0060  
                                      ?___flneg 0060                                        ?___awmod 0060  
                                      ?___flmul 0060                                        ?___flsub 0079  
                                      ?___fltol 0060                    ??_INTERRUPT_InterruptManager 002C  
                             __size_of_vfprintf 0056                                        _BAUD1CON 000F9E  
                                   __smallconst 0800                        __size_of_TMR1_StartTimer 0004  
    __end_of_EUSART1_DefaultOverrunErrorHandler 3816     __size_of_EUSART1_DefaultOverrunErrorHandler 0006  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 3810                                        ?_isdigit 0060  
                          _EUSART1_ErrorHandler 0184                                        ?_isspace 0060  
                                      ?_isupper 0060                         _EUSART1_SetErrorHandler 37E8  
            __end_of_IOCCF2_SetInterruptHandler 37C0                   ?i2_IOCCF2_SetInterruptHandler 0001  
                    _IOCCF2_SetInterruptHandler 37B6                                        ?_tolower 0066  
                                   ??i2___flmul 0017                                  __size_of_fputc 006E  
                                      _T2CLKCON 000FBE                                  __size_of_fputs 003C  
                                      ?_strncmp 0060                           ?_CCP1_DefaultCallBack 0028  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 3820  
                                ___wmul@product 0064                                        _LATAbits 000F82  
       EUSART1_SetErrorHandler@interruptHandler 0060                                        _LATCbits 000F84  
                                     _ping_init 32E8                                        _PIE0bits 000EBD  
                                     _ping_send 335E                                        _PIE3bits 000EC0  
                                      _PIE4bits 000EC1                                        _PIE6bits 000EC3  
                      __size_of_TMR1_WriteTimer 0020             __size_of_INTERRUPT_InterruptManager 00A2  
                                      _PIR0bits 000EC5                                        i2u603_48 003E  
                                      _PIR3bits 000EC8                                        i2u606_48 0056  
                                      _PIR4bits 000EC9                                        i2u545_40 27EE  
                                      i2u561_40 1BBE                                        _PIR6bits 000ECB  
                                      i2u556_40 19BC                                        i2u565_40 1C1A  
                                      i2u557_40 1B32                                        i2u557_45 1B28  
                                      i2u566_40 1C38                                        i2u574_40 2862  
                                      i2u582_48 3666                                        i2u591_48 2C44  
                                      i2u591_49 2C58                                        i2u584_48 344A  
                                      i2u577_40 28B8                                        i2u585_48 35C0  
                                      i2u593_48 2C72                                        i2u569_48 3686  
                                      i2u593_49 2C86                                        i2u569_49 369A  
                                      i2u595_48 2C9E                          ?_EUSART1_RxDataHandler 0001  
                                      _TMR1_ISR 342C                                        _TMR2_ISR 3654  
                                     _servo_max 005C                                       _servo_min 005D  
                             ??_PIN_MANAGER_IOC 0003                                       _vfpfcnvrt 1202  
                             ??_TMR1_Initialize 0062                                       _stateTime 0050  
                             ___wmul@multiplier 0060                                       main@angle 0174  
                             i2_TMR1_StartTimer 3824                  ??_TMR2_DefaultInterruptHandler 0001  
             __size_of_TMR2_SetInterruptHandler 000A                       ?_TMR2_SetInterruptHandler 0060  
                                  _isspace$2523 0066                              ?i2_TMR1_StartTimer 0001  
                                    vfpfcnvrt@c 00F6                                      vfpfcnvrt@f 00EF  
                         ?_INTERRUPT_Initialize 0001                    __size_of_carcontrol_throttle 0016  
                  __size_of_carcontrol_steering 0030                               ??_TMR2_Initialize 0062  
                           ??i2_TMR1_StartTimer 0001                                      ?_ping_init 0001  
                                    ?_ping_send 0001           __end_of_EUSART1_SetTxInterruptHandler 37CA  
        __size_of_EUSART1_SetTxInterruptHandler 000A                   _EUSART1_SetTxInterruptHandler 37C0  
                                      __Hrparam 0000                               i2_TMR1_WriteTimer 373E  
                                    vfprintf@ap 00FB                                        __Lrparam 0000  
                                    vfprintf@fp 00F7                              __CFG_BOREN$SBORDIS 000000  
                            ?i2_TMR1_WriteTimer 0001                         ??_OSCILLATOR_Initialize 0060  
                           _ping_CCP1_triggered 3038                                __size_of___fladd 030E  
                              __size_of___fldiv 028A                                __size_of___awdiv 0086  
                              __size_of___flneg 0030                                __size_of___awmod 0072  
                              __size_of___flmul 0354                                __size_of___flsub 0048  
                              __size_of___fltol 00BC                     __size_of_EUSART1_Initialize 0086  
                                    ?_vfpfcnvrt 00E1                                 _CCP1_CaptureISR 35A8  
                   ?i2_TMR1_SetInterruptHandler 0001                        _TMR1_SetInterruptHandler 37AC  
                     __end_ofi2_TMR1_StartTimer 3828                              ___fpclassifyf@F463 0044  
                           ??i2_TMR1_WriteTimer 0003                           _TMR1_InterruptHandler 018A  
                     ??_EUSART1_SetErrorHandler 0062             __end_of_EUSART1_DefaultErrorHandler 381C  
                   _EUSART1_DefaultErrorHandler 3816                                        ___xxtofl 26F6  
                              _CCP1_SetCallBack 37F2                                __size_of_isdigit 0032  
                CCP1_SetCallBack@customCallBack 0060                                __size_of_isspace 0040  
                                      __ptext10 351E                                        __ptext11 32AC  
                                      __ptext20 345E                                        __ptext12 2F60  
                                      __ptext21 15DC                                        __ptext13 3788  
                                    _T1GCONbits 000FCF                                        __ptext30 362C  
                                      __ptext22 291A                                        __ptext14 3324  
                                      __ptext31 335E                                        __ptext23 2D56  
                                      __ptext15 23F8                                        __ptext40 354C  
                                      __ptext32 36E4                                        __ptext24 1F90  
                                      __ptext16 29EC                                        __ptext41 37A2  
                                      __ptext33 381C                                        __ptext25 2EEE  
                                      __ptext17 2ABA                                        __ptext50 37C0  
                                      __ptext42 3226                                        __ptext34 32E8  
                                      __ptext26 2DE2                                        __ptext18 31DE  
                                      __ptext51 37CA                                        __ptext43 37AC  
                                      __ptext35 348E                                        __ptext27 25B2  
                                      __ptext19 1C82                                        __ptext60 2836  
                                      __ptext52 37D4                                        __ptext44 3722  
                                      __ptext36 34BE                                        __ptext28 326C  
                                      __ptext61 342C                                        __ptext53 37DE  
                                      __ptext45 2FCE                                        __ptext37 3772  
                                      __ptext29 33FA                                        __ptext70 37FC  
                                      __ptext62 382E                                        __ptext54 37E8  
                                      __ptext46 37B6                                        __ptext38 34EE  
                                      __ptext71 3806                                        __ptext63 3704  
                                      __ptext55 357A                                        __ptext47 375A  
                                      __ptext39 36A0                                        __ptext80 3038  
                                      __ptext72 35D6                                        __ptext64 3796  
                                      __ptext56 37F2                                        __ptext48 3820  
                                      __ptext81 1930                                        __ptext73 2C1A  
                                      __ptext65 367A                                        __ptext49 2E68  
                                      __ptext82 26F6                                        __ptext74 3810  
                                      __ptext66 3830                                        __ptext58 3654  
                                      __ptext83 0000                                        __ptext75 3832  
                                      __ptext67 3394                                        __ptext59 382C  
                                      __ptext76 3816                                        __ptext68 373E  
                                      __ptext77 36C2                                        __ptext69 3824  
                                      __ptext78 35A8                                        __ptext79 3834  
                        ??_CCP1_DefaultCallBack 002A                                __size_of_isupper 0032  
                          ?_ping_CCP1_triggered 0028                               ??_TMR1_StartTimer 0060  
                              __size_of_tolower 004E                                      _IOCCF2_ISR 367A  
                                    strcpy@dest 0060                                __size_of_strncmp 00A4  
                ??i2_IOCCF2_SetInterruptHandler 0003                                   __size_of_atoi 0144  
                                 __size_of_main 01DE                           _ping_TMR1Overflow_isr 3704  
                      __size_of_carcontrol_init 0030                       __end_ofi2_TMR1_WriteTimer 375A  
                          __CFG_WDTCWS$WDTCWS_7 000000                                        _ping_get 348E  
                            __CFG_BORV$VBOR_190 000000                              _ping_RC2_went_HIGH 3394  
                                    _RC1STAbits 000F9C                                        efgtoa@fp 009D  
                                      efgtoa@ne 00BF                                        efgtoa@pp 00BB  
                                      efgtoa@ou 00A9  EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
               ping_CCP1_triggered@timeOfFlight 0028                                        int$flags 005F  
                                      _vfprintf 309E              __end_of_INTERRUPT_InterruptManager 00AA  
                    _INTERRUPT_InterruptManager 0008                             ?_ping_RC2_went_HIGH 0001  
                                     printf@fmt 0168                               ??_TMR1_WriteTimer 0062  
                                      main@mean 0180                     _EUSART1_FramingErrorHandler 0188  
                           _EUSART1_Receive_ISR 2C1A                                  _vfpfcnvrt$2021 00ED  
                                _vfpfcnvrt$2017 00EB                                      _INTCONbits 000FF2  
                               _CCP1_Initialize 357A                                        isdigit@c 0060  
                        ??_INTERRUPT_Initialize 0060                           ??_ping_CCP1_triggered 002A  
                          ??_ping_RC2_went_HIGH 0003                                        intlevel2 0000  
                          ?_EUSART1_Receive_ISR 0001                                        isspace@c 0060  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
                                   ??_ping_init 0062          __end_of_EUSART1_SetOverrunErrorHandler 37DE  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 37D4  
                       __size_of_carcontrol_ISR 00E4                                     ??_ping_send 0062  
                                     strcpy@src 0062                                        isupper@c 0060  
                  __end_of_EUSART1_Transmit_ISR 3602                                       strncmp@_l 0060  
                                     strncmp@_r 0062                         __end_of_CCP1_CaptureISR 35D6  
                                   efgtoa@nmode 00C7                                        printf@ap 0170  
EUSART1_SetFramingErrorHandler@interruptHandler 0060                  ?_EUSART1_SetTxInterruptHandler 0060  
                                   ??_vfpfcnvrt 00E7                          __size_of_EUSART1_Write 003A  
                            _eusart1RxLastError 0052                     carcontrol_throttle@throttle 0060  
                    __size_ofi2_TMR1_StartTimer 0004                                        tolower@c 0066  
                        __size_of___fpclassifyf 00CE                                        strncmp@l 0067  
                                      strncmp@n 0064                                        strncmp@r 0069  
                   ?_IOCCF2_SetInterruptHandler 0060                                      _TX1STAbits 000F9D  
                                 ___fladd@signs 006C                                     ?_IOCCF2_ISR 0001  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 3038  
                        ?_ping_TMR1Overflow_isr 0001                                    ___fladd@aexp 006D  
                                  ___fladd@bexp 006E                                 _PIN_MANAGER_IOC 3796  
                         _TMR2_InterruptHandler 018E                      __size_ofi2_TMR1_WriteTimer 001C  
                       ??_EUSART1_RxDataHandler 0001                                 _TMR1_Initialize 3226  
