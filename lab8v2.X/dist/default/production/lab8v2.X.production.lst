

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr  2 18:50:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25Q10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           ; Version 2.05
    29                           ; Generated 20/12/2018 GMT
    30                           ; 
    31                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F25Q10 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	nvCOMRAM
    64  000013                     __pnvCOMRAM:
    65                           	opt callstack 0
    66  000013                     _TMR2_InterruptHandler:
    67                           	opt callstack 0
    68  000013                     	ds	2
    69  0000                     _PIE4bits	set	3777
    70  0000                     _PIR4bits	set	3785
    71  0000                     _PMD5	set	3809
    72  0000                     _PMD4	set	3808
    73  0000                     _PMD3	set	3807
    74  0000                     _PMD2	set	3806
    75  0000                     _PMD1	set	3805
    76  0000                     _PMD0	set	3804
    77  0000                     _OSCTUNE	set	3800
    78  0000                     _OSCFRQ	set	3801
    79  0000                     _OSCEN	set	3799
    80  0000                     _OSCCON3	set	3797
    81  0000                     _OSCCON1	set	3795
    82  0000                     _SLRCONC	set	3865
    83  0000                     _SLRCONB	set	3857
    84  0000                     _SLRCONA	set	3849
    85  0000                     _ODCONC	set	3866
    86  0000                     _ODCONB	set	3858
    87  0000                     _ODCONA	set	3850
    88  0000                     _WPUC	set	3867
    89  0000                     _WPUA	set	3851
    90  0000                     _WPUB	set	3859
    91  0000                     _WPUE	set	3880
    92  0000                     _ANSELA	set	3852
    93  0000                     _ANSELB	set	3860
    94  0000                     _ANSELC	set	3868
    95  0000                     _LATAbits	set	3970
    96  0000                     _INTCONbits	set	4082
    97  0000                     _PR2	set	4027
    98  0000                     _TMR2	set	4026
    99  0000                     _T2CONbits	set	4028
   100  0000                     _T2RSTbits	set	4031
   101  0000                     _T2HLTbits	set	4029
   102  0000                     _T2CON	set	4028
   103  0000                     _T2TMR	set	4026
   104  0000                     _T2PR	set	4027
   105  0000                     _T2RST	set	4031
   106  0000                     _T2HLT	set	4029
   107  0000                     _T2CLKCON	set	4030
   108  0000                     _TRISC	set	3977
   109  0000                     _TRISB	set	3976
   110  0000                     _TRISA	set	3975
   111  0000                     _LATC	set	3972
   112  0000                     _LATB	set	3971
   113  0000                     _LATA	set	3970
   114                           
   115                           ; #config settings
   116  0000                     
   117                           	psect	cinit
   118  000264                     __pcinit:
   119                           	opt callstack 0
   120  000264                     start_initialization:
   121                           	opt callstack 0
   122  000264                     __initialization:
   123                           	opt callstack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (7 bytes)
   126  000264  EE00  F00C         	lfsr	0,__pbssCOMRAM
   127  000268  0E07               	movlw	7
   128  00026A                     clear_0:
   129  00026A  6AEE               	clrf	postinc0,c
   130  00026C  06E8               	decf	wreg,f,c
   131  00026E  E1FD               	bnz	clear_0
   132  000270                     end_of_initialization:
   133                           	opt callstack 0
   134  000270                     __end_of__initialization:
   135                           	opt callstack 0
   136  000270  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   137  000272  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   138  000274  0E00               	movlw	low (__Lmediumconst shr (0+16))
   139  000276  6EF8               	movwf	tblptru,c
   140  000278  0100               	movlb	0
   141  00027A  EF7A  F000         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	bssCOMRAM
   144  00000C                     __pbssCOMRAM:
   145                           	opt callstack 0
   146  00000C                     _carctl:
   147                           	opt callstack 0
   148  00000C                     	ds	5
   149  000011                     _stateTime:
   150                           	opt callstack 0
   151  000011                     	ds	2
   152                           
   153                           	psect	cstackCOMRAM
   154  000001                     __pcstackCOMRAM:
   155                           	opt callstack 0
   156  000001                     ??_carcontrol_ISR:
   157  000001                     
   158                           ; 1 bytes @ 0x0
   159  000001                     	ds	3
   160  000004                     ??_INTERRUPT_InterruptManager:
   161                           
   162                           ; 1 bytes @ 0x3
   163  000004                     	ds	2
   164  000006                     carcontrol_throttle@throttle:
   165                           	opt callstack 0
   166  000006                     TMR2_SetInterruptHandler@InterruptHandler:
   167                           	opt callstack 0
   168                           
   169                           ; 2 bytes @ 0x5
   170  000006                     	ds	2
   171  000008                     ??_main:
   172                           
   173                           ; 1 bytes @ 0x7
   174  000008                     	ds	2
   175  00000A                     main@i:
   176                           	opt callstack 0
   177                           
   178                           ; 2 bytes @ 0x9
   179  00000A                     	ds	2
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 50 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;  i               2    9[COMRAM] int 
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   200 ;;      Params:         0       0       0       0       0       0       0       0       0
   201 ;;      Locals:         2       0       0       0       0       0       0       0       0
   202 ;;      Temps:          2       0       0       0       0       0       0       0       0
   203 ;;      Totals:         4       0       0       0       0       0       0       0       0
   204 ;;Total ram usage:        4 bytes
   205 ;; Hardware stack levels required when called:    6
   206 ;; This function calls:
   207 ;;		_SYSTEM_Initialize
   208 ;;		_carcontrol_init
   209 ;;		_carcontrol_throttle
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216  0000F4                     __ptext0:
   217                           	opt callstack 0
   218  0000F4                     _main:
   219                           	opt callstack 25
   220                           
   221                           ;main.c: 53:     SYSTEM_Initialize();
   222                           
   223                           ;incstack = 0
   224  0000F4  EC4B  F001         	call	_SYSTEM_Initialize	;wreg free
   225                           
   226                           ;main.c: 60:     (INTCONbits.GIE = 1);
   227  0000F8  8EF2               	bsf	4082,7,c	;volatile
   228                           
   229                           ;main.c: 66:     (INTCONbits.PEIE = 1);
   230  0000FA  8CF2               	bsf	4082,6,c	;volatile
   231                           
   232                           ;main.c: 71:     carcontrol_init();
   233  0000FC  ECFF  F000         	call	_carcontrol_init	;wreg free
   234                           
   235                           ;main.c: 72:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   236  000100  0E52               	movlw	82
   237  000102  6E09               	movwf	(??_main+1)& (0+255),c
   238  000104  0E2B               	movlw	43
   239  000106  6E08               	movwf	??_main& (0+255),c
   240  000108  0E00               	movlw	0
   241  00010A                     u177:
   242  00010A  2EE8               	decfsz	wreg,f,c
   243  00010C  D7FE               	bra	u177
   244  00010E  2E08               	decfsz	??_main& (0+255),f,c
   245  000110  D7FC               	bra	u177
   246  000112  2E09               	decfsz	(??_main+1)& (0+255),f,c
   247  000114  D7FA               	bra	u177
   248  000116  D000               	nop2	
   249                           
   250                           ;main.c: 74:     int i;;main.c: 75:     for (i=0; i<100; i++) {
   251  000118  0E00               	movlw	0
   252  00011A  6E0B               	movwf	main@i+1,c
   253  00011C  0E00               	movlw	0
   254  00011E  6E0A               	movwf	main@i,c
   255  000120                     l1179:
   256                           
   257                           ;main.c: 76:         carcontrol_throttle(i);
   258  000120  500A               	movf	main@i,w,c
   259  000122  EC56  F001         	call	_carcontrol_throttle
   260                           
   261                           ;main.c: 77:         _delay((unsigned long)((33)*(64000000/4000.0)));
   262  000126  0E03               	movlw	3
   263  000128  6E09               	movwf	(??_main+1)& (0+255),c
   264  00012A  0EAE               	movlw	174
   265  00012C  6E08               	movwf	??_main& (0+255),c
   266  00012E  0EB3               	movlw	179
   267  000130                     u187:
   268  000130  2EE8               	decfsz	wreg,f,c
   269  000132  D7FE               	bra	u187
   270  000134  2E08               	decfsz	??_main& (0+255),f,c
   271  000136  D7FC               	bra	u187
   272  000138  2E09               	decfsz	(??_main+1)& (0+255),f,c
   273  00013A  D7FA               	bra	u187
   274  00013C  F000               	nop	
   275                           
   276                           ;main.c: 78:     }
   277  00013E  4A0A               	infsnz	main@i,f,c
   278  000140  2A0B               	incf	main@i+1,f,c
   279  000142  BE0B               	btfsc	main@i+1,7,c
   280  000144  D7ED               	goto	l1179
   281  000146  500B               	movf	main@i+1,w,c
   282  000148  E104               	bnz	u150
   283  00014A  0E64               	movlw	100
   284  00014C  5C0A               	subwf	main@i,w,c
   285  00014E  A0D8               	btfss	status,0,c
   286  000150  D7E7               	goto	l1179
   287  000152                     u150:
   288                           
   289                           ;main.c: 79:     for (i=0; i<100; i++) {
   290  000152  0E00               	movlw	0
   291  000154  6E0B               	movwf	main@i+1,c
   292  000156  0E00               	movlw	0
   293  000158  6E0A               	movwf	main@i,c
   294  00015A                     l1193:
   295                           
   296                           ;main.c: 80:         carcontrol_throttle(100-i);
   297  00015A  500A               	movf	main@i,w,c
   298  00015C  0864               	sublw	100
   299  00015E  EC56  F001         	call	_carcontrol_throttle
   300                           
   301                           ;main.c: 81:         _delay((unsigned long)((33)*(64000000/4000.0)));
   302  000162  0E03               	movlw	3
   303  000164  6E09               	movwf	(??_main+1)& (0+255),c
   304  000166  0EAE               	movlw	174
   305  000168  6E08               	movwf	??_main& (0+255),c
   306  00016A  0EB3               	movlw	179
   307  00016C                     u197:
   308  00016C  2EE8               	decfsz	wreg,f,c
   309  00016E  D7FE               	bra	u197
   310  000170  2E08               	decfsz	??_main& (0+255),f,c
   311  000172  D7FC               	bra	u197
   312  000174  2E09               	decfsz	(??_main+1)& (0+255),f,c
   313  000176  D7FA               	bra	u197
   314  000178  F000               	nop	
   315                           
   316                           ;main.c: 82:     }
   317  00017A  4A0A               	infsnz	main@i,f,c
   318  00017C  2A0B               	incf	main@i+1,f,c
   319  00017E  BE0B               	btfsc	main@i+1,7,c
   320  000180  D7EC               	goto	l1193
   321  000182  500B               	movf	main@i+1,w,c
   322  000184  E104               	bnz	u160
   323  000186  0E64               	movlw	100
   324  000188  5C0A               	subwf	main@i,w,c
   325  00018A  A0D8               	btfss	status,0,c
   326  00018C  D7E6               	goto	l1193
   327  00018E                     u160:
   328                           
   329                           ;main.c: 85:     while (1)
   330  00018E  D7FF               	goto	u160
   331  000190                     __end_of_main:
   332                           	opt callstack 0
   333                           
   334 ;; *************** function _carcontrol_throttle *****************
   335 ;; Defined at:
   336 ;;		line 101 in file "car_ctrl.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;  throttle        1    wreg     unsigned char 
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  throttle        1    5[COMRAM] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   350 ;;      Params:         0       0       0       0       0       0       0       0       0
   351 ;;      Locals:         1       0       0       0       0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0       0       0       0       0
   353 ;;      Totals:         1       0       0       0       0       0       0       0       0
   354 ;;Total ram usage:        1 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; Hardware stack levels required when called:    3
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text1
   365  0002AC                     __ptext1:
   366                           	opt callstack 0
   367  0002AC                     _carcontrol_throttle:
   368                           	opt callstack 27
   369                           
   370                           ;incstack = 0
   371                           ;carcontrol_throttle@throttle stored from wreg
   372  0002AC  6E06               	movwf	carcontrol_throttle@throttle,c
   373                           
   374                           ;car_ctrl.c: 103:     if (throttle > 100) throttle = 100;
   375  0002AE  0E64               	movlw	100
   376  0002B0  6406               	cpfsgt	carcontrol_throttle@throttle,c
   377  0002B2  D002               	goto	l1045
   378  0002B4  0E64               	movlw	100
   379  0002B6  6E06               	movwf	carcontrol_throttle@throttle,c
   380  0002B8                     l1045:
   381                           
   382                           ;car_ctrl.c: 104:     carctl.throttleHighTime = throttle;
   383  0002B8  C006  F00F         	movff	carcontrol_throttle@throttle,_carctl+3	;volatile
   384  0002BC  0012               	return		;funcret
   385  0002BE                     __end_of_carcontrol_throttle:
   386                           	opt callstack 0
   387                           
   388 ;; *************** function _carcontrol_init *****************
   389 ;; Defined at:
   390 ;;		line 21 in file "car_ctrl.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   404 ;;      Params:         0       0       0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; Hardware stack levels required when called:    4
   411 ;; This function calls:
   412 ;;		_TMR2_SetInterruptHandler
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text2
   419  0001FE                     __ptext2:
   420                           	opt callstack 0
   421  0001FE                     _carcontrol_init:
   422                           	opt callstack 26
   423                           
   424                           ;car_ctrl.c: 22:     carctl.initialized = 1;
   425                           
   426                           ;incstack = 0
   427  0001FE  0E01               	movlw	1
   428  000200  6E0C               	movwf	_carctl,c	;volatile
   429                           
   430                           ;car_ctrl.c: 23:     carctl.state = state_unset;
   431  000202  0E00               	movlw	0
   432  000204  6E0D               	movwf	_carctl+1,c	;volatile
   433                           
   434                           ;car_ctrl.c: 24:     carctl.throttleHighTime = 0;
   435  000206  0E00               	movlw	0
   436  000208  6E0F               	movwf	_carctl+3,c	;volatile
   437                           
   438                           ;car_ctrl.c: 25:     carctl.servoHighTime = 0;
   439  00020A  0E00               	movlw	0
   440  00020C  6E10               	movwf	_carctl+4,c	;volatile
   441                           
   442                           ;car_ctrl.c: 27:     TMR2_SetInterruptHandler(carcontrol_ISR);
   443  00020E  0E32               	movlw	low _carcontrol_ISR
   444  000210  6E06               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   445  000212  0E00               	movlw	high _carcontrol_ISR
   446  000214  6E07               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   447  000216  EC5F  F001         	call	_TMR2_SetInterruptHandler	;wreg free
   448                           
   449                           ;car_ctrl.c: 28:     stateTime = 0;
   450  00021A  0E00               	movlw	0
   451  00021C  6E12               	movwf	_stateTime+1,c
   452  00021E  0E00               	movlw	0
   453  000220  6E11               	movwf	_stateTime,c
   454  000222  0012               	return		;funcret
   455  000224                     __end_of_carcontrol_init:
   456                           	opt callstack 0
   457                           
   458 ;; *************** function _SYSTEM_Initialize *****************
   459 ;; Defined at:
   460 ;;		line 50 in file "mcc_generated_files/mcc.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   474 ;;      Params:         0       0       0       0       0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0
   477 ;;      Totals:         0       0       0       0       0       0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    5
   481 ;; This function calls:
   482 ;;		_INTERRUPT_Initialize
   483 ;;		_OSCILLATOR_Initialize
   484 ;;		_PIN_MANAGER_Initialize
   485 ;;		_PMD_Initialize
   486 ;;		_TMR2_Initialize
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text3
   493  000296                     __ptext3:
   494                           	opt callstack 0
   495  000296                     _SYSTEM_Initialize:
   496                           	opt callstack 25
   497                           
   498                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   499                           
   500                           ;incstack = 0
   501  000296  EC64  F001         	call	_INTERRUPT_Initialize	;wreg free
   502                           
   503                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   504  00029A  EC24  F001         	call	_PMD_Initialize	;wreg free
   505                           
   506                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   507  00029E  ECC8  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   508                           
   509                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   510  0002A2  EC3F  F001         	call	_OSCILLATOR_Initialize	;wreg free
   511                           
   512                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
   513  0002A6  ECE9  F000         	call	_TMR2_Initialize	;wreg free
   514  0002AA  0012               	return		;funcret
   515  0002AC                     __end_of_SYSTEM_Initialize:
   516                           	opt callstack 0
   517                           
   518 ;; *************** function _TMR2_Initialize *****************
   519 ;; Defined at:
   520 ;;		line 64 in file "mcc_generated_files/tmr2.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   534 ;;      Params:         0       0       0       0       0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    4
   541 ;; This function calls:
   542 ;;		_TMR2_SetInterruptHandler
   543 ;; This function is called by:
   544 ;;		_SYSTEM_Initialize
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text4
   549  0001D2                     __ptext4:
   550                           	opt callstack 0
   551  0001D2                     _TMR2_Initialize:
   552                           	opt callstack 25
   553                           
   554                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
   555                           
   556                           ;incstack = 0
   557  0001D2  0E01               	movlw	1
   558  0001D4  6EBE               	movwf	4030,c	;volatile
   559                           
   560                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
   561  0001D6  0E00               	movlw	0
   562  0001D8  6EBD               	movwf	4029,c	;volatile
   563                           
   564                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
   565  0001DA  0E00               	movlw	0
   566  0001DC  6EBF               	movwf	4031,c	;volatile
   567                           
   568                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9F;
   569  0001DE  0E9F               	movlw	159
   570  0001E0  6EBB               	movwf	4027,c	;volatile
   571                           
   572                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
   573  0001E2  0E00               	movlw	0
   574  0001E4  6EBA               	movwf	4026,c	;volatile
   575                           
   576                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
   577  0001E6  010E               	movlb	14	; () banked
   578  0001E8  93C9               	bcf	201,1,b	;volatile
   579                           
   580                           ; BSR set to: 14
   581                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
   582  0001EA  83C1               	bsf	193,1,b	;volatile
   583                           
   584                           ; BSR set to: 14
   585                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
   586  0001EC  0ECC               	movlw	low _TMR2_DefaultInterruptHandler
   587  0001EE  6E06               	movwf	TMR2_SetInterruptHandler@InterruptHandler,c
   588  0001F0  0E02               	movlw	high _TMR2_DefaultInterruptHandler
   589  0001F2  6E07               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1,c
   590  0001F4  EC5F  F001         	call	_TMR2_SetInterruptHandler	;wreg free
   591                           
   592                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0x80;
   593  0001F8  0E80               	movlw	128
   594  0001FA  6EBC               	movwf	4028,c	;volatile
   595  0001FC  0012               	return		;funcret
   596  0001FE                     __end_of_TMR2_Initialize:
   597                           	opt callstack 0
   598                           
   599 ;; *************** function _TMR2_SetInterruptHandler *****************
   600 ;; Defined at:
   601 ;;		line 178 in file "mcc_generated_files/tmr2.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
   604 ;;		 -> carcontrol_ISR(1), TMR2_DefaultInterruptHandler(1), 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   616 ;;      Params:         2       0       0       0       0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0
   619 ;;      Totals:         2       0       0       0       0       0       0       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    3
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_TMR2_Initialize
   627 ;;		_carcontrol_init
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text5
   632  0002BE                     __ptext5:
   633                           	opt callstack 0
   634  0002BE                     _TMR2_SetInterruptHandler:
   635                           	opt callstack 26
   636                           
   637                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
   638                           
   639                           ;incstack = 0
   640  0002BE  C006  F013         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
   641  0002C2  C007  F014         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
   642  0002C6  0012               	return		;funcret
   643  0002C8                     __end_of_TMR2_SetInterruptHandler:
   644                           	opt callstack 0
   645                           
   646 ;; *************** function _PMD_Initialize *****************
   647 ;; Defined at:
   648 ;;		line 73 in file "mcc_generated_files/mcc.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   662 ;;      Params:         0       0       0       0       0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0       0       0       0       0
   665 ;;      Totals:         0       0       0       0       0       0       0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    3
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_SYSTEM_Initialize
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text6
   677  000248                     __ptext6:
   678                           	opt callstack 0
   679  000248                     _PMD_Initialize:
   680                           	opt callstack 26
   681                           
   682                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
   683                           
   684                           ;incstack = 0
   685  000248  0E00               	movlw	0
   686  00024A  010E               	movlb	14	; () banked
   687  00024C  6FDC               	movwf	220,b	;volatile
   688                           
   689                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
   690  00024E  0E00               	movlw	0
   691  000250  6FDD               	movwf	221,b	;volatile
   692                           
   693                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
   694  000252  0E00               	movlw	0
   695  000254  6FDE               	movwf	222,b	;volatile
   696                           
   697                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
   698  000256  0E00               	movlw	0
   699  000258  6FDF               	movwf	223,b	;volatile
   700                           
   701                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
   702  00025A  0E00               	movlw	0
   703  00025C  6FE0               	movwf	224,b	;volatile
   704                           
   705                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
   706  00025E  0E00               	movlw	0
   707  000260  6FE1               	movwf	225,b	;volatile
   708                           
   709                           ; BSR set to: 14
   710  000262  0012               	return		;funcret
   711  000264                     __end_of_PMD_Initialize:
   712                           	opt callstack 0
   713                           
   714 ;; *************** function _PIN_MANAGER_Initialize *****************
   715 ;; Defined at:
   716 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   730 ;;      Params:         0       0       0       0       0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         0       0       0       0       0       0       0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    3
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_SYSTEM_Initialize
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text7
   745  000190                     __ptext7:
   746                           	opt callstack 0
   747  000190                     _PIN_MANAGER_Initialize:
   748                           	opt callstack 26
   749                           
   750                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   751                           
   752                           ; BSR set to: 14
   753                           ;incstack = 0
   754  000190  0E00               	movlw	0
   755  000192  6E82               	movwf	3970,c	;volatile
   756                           
   757                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   758  000194  0E00               	movlw	0
   759  000196  6E83               	movwf	3971,c	;volatile
   760                           
   761                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   762  000198  0E00               	movlw	0
   763  00019A  6E84               	movwf	3972,c	;volatile
   764                           
   765                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFE;
   766  00019C  0EFE               	movlw	254
   767  00019E  6E87               	movwf	3975,c	;volatile
   768                           
   769                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   770  0001A0  6888               	setf	3976,c	;volatile
   771                           
   772                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
   773  0001A2  6889               	setf	3977,c	;volatile
   774                           
   775                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
   776  0001A4  010F               	movlb	15	; () banked
   777  0001A6  691C               	setf	28,b	;volatile
   778                           
   779                           ; BSR set to: 15
   780                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFF;
   781  0001A8  6914               	setf	20,b	;volatile
   782                           
   783                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFE;
   784  0001AA  0EFE               	movlw	254
   785  0001AC  6F0C               	movwf	12,b	;volatile
   786                           
   787                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
   788  0001AE  0E00               	movlw	0
   789  0001B0  6F28               	movwf	40,b	;volatile
   790                           
   791                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
   792  0001B2  0E00               	movlw	0
   793  0001B4  6F13               	movwf	19,b	;volatile
   794                           
   795                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
   796  0001B6  0E00               	movlw	0
   797  0001B8  6F0B               	movwf	11,b	;volatile
   798                           
   799                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
   800  0001BA  0E00               	movlw	0
   801  0001BC  6F1B               	movwf	27,b	;volatile
   802                           
   803                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
   804  0001BE  0E00               	movlw	0
   805  0001C0  6F0A               	movwf	10,b	;volatile
   806                           
   807                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
   808  0001C2  0E00               	movlw	0
   809  0001C4  6F12               	movwf	18,b	;volatile
   810                           
   811                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
   812  0001C6  0E00               	movlw	0
   813  0001C8  6F1A               	movwf	26,b	;volatile
   814                           
   815                           ; BSR set to: 15
   816                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
   817  0001CA  6909               	setf	9,b	;volatile
   818                           
   819                           ; BSR set to: 15
   820                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
   821  0001CC  6911               	setf	17,b	;volatile
   822                           
   823                           ; BSR set to: 15
   824                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
   825  0001CE  6919               	setf	25,b	;volatile
   826                           
   827                           ; BSR set to: 15
   828  0001D0  0012               	return		;funcret
   829  0001D2                     __end_of_PIN_MANAGER_Initialize:
   830                           	opt callstack 0
   831                           
   832 ;; *************** function _OSCILLATOR_Initialize *****************
   833 ;; Defined at:
   834 ;;		line 59 in file "mcc_generated_files/mcc.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   848 ;;      Params:         0       0       0       0       0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    3
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_SYSTEM_Initialize
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text8
   863  00027E                     __ptext8:
   864                           	opt callstack 0
   865  00027E                     _OSCILLATOR_Initialize:
   866                           	opt callstack 26
   867                           
   868                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
   869                           
   870                           ; BSR set to: 15
   871                           ;incstack = 0
   872  00027E  0E60               	movlw	96
   873  000280  010E               	movlb	14	; () banked
   874  000282  6FD3               	movwf	211,b	;volatile
   875                           
   876                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
   877  000284  0E00               	movlw	0
   878  000286  6FD5               	movwf	213,b	;volatile
   879                           
   880                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
   881  000288  0E00               	movlw	0
   882  00028A  6FD7               	movwf	215,b	;volatile
   883                           
   884                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x08;
   885  00028C  0E08               	movlw	8
   886  00028E  6FD9               	movwf	217,b	;volatile
   887                           
   888                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
   889  000290  0E00               	movlw	0
   890  000292  6FD8               	movwf	216,b	;volatile
   891                           
   892                           ; BSR set to: 14
   893  000294  0012               	return		;funcret
   894  000296                     __end_of_OSCILLATOR_Initialize:
   895                           	opt callstack 0
   896                           
   897 ;; *************** function _INTERRUPT_Initialize *****************
   898 ;; Defined at:
   899 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		None
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         0       0       0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    3
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_SYSTEM_Initialize
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text9
   928  0002C8                     __ptext9:
   929                           	opt callstack 0
   930  0002C8                     _INTERRUPT_Initialize:
   931                           	opt callstack 26
   932                           
   933                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
   934                           
   935                           ; BSR set to: 14
   936                           ;incstack = 0
   937  0002C8  9AF2               	bcf	4082,5,c	;volatile
   938  0002CA  0012               	return		;funcret
   939  0002CC                     __end_of_INTERRUPT_Initialize:
   940                           	opt callstack 0
   941                           
   942 ;; *************** function _INTERRUPT_InterruptManager *****************
   943 ;; Defined at:
   944 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         0       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          2       0       0       0       0       0       0       0       0
   961 ;;      Totals:         2       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    2
   965 ;; This function calls:
   966 ;;		_TMR2_ISR
   967 ;; This function is called by:
   968 ;;		Interrupt level 2
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	intcode
   973  000008                     __pintcode:
   974                           	opt callstack 0
   975  000008                     _INTERRUPT_InterruptManager:
   976                           	opt callstack 25
   977                           
   978                           ;incstack = 0
   979  000008  8215               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   980  00000A  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManager
   981  00000E  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManager+1
   982                           
   983                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
   984  000012  ACF2               	btfss	4082,6,c	;volatile
   985  000014  D006               	goto	i2l184
   986                           
   987                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
   988  000016  010E               	movlb	14	; () banked
   989  000018  B3C1               	btfsc	193,1,b	;volatile
   990                           
   991                           ; BSR set to: 14
   992  00001A  A3C9               	btfss	201,1,b	;volatile
   993  00001C  D002               	goto	i2l184
   994                           
   995                           ; BSR set to: 14
   996                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR2_ISR();
   997  00001E  EC12  F001         	call	_TMR2_ISR	;wreg free
   998  000022                     i2l184:
   999  000022  C005  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1000  000026  C004  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1001  00002A  9215               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1002  00002C  0011               	retfie		f
  1003  00002E                     __end_of_INTERRUPT_InterruptManager:
  1004                           	opt callstack 0
  1005                           
  1006 ;; *************** function _TMR2_ISR *****************
  1007 ;; Defined at:
  1008 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1022 ;;      Params:         0       0       0       0       0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; Hardware stack levels required when called:    1
  1029 ;; This function calls:
  1030 ;;		Absolute function
  1031 ;;		_TMR2_DefaultInterruptHandler
  1032 ;;		_carcontrol_ISR
  1033 ;; This function is called by:
  1034 ;;		_INTERRUPT_InterruptManager
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text11
  1039  000224                     __ptext11:
  1040                           	opt callstack 0
  1041  000224                     _TMR2_ISR:
  1042                           	opt callstack 25
  1043                           
  1044                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  1045                           
  1046                           ;incstack = 0
  1047  000224  010E               	movlb	14	; () banked
  1048  000226  93C9               	bcf	201,1,b	;volatile
  1049                           
  1050                           ; BSR set to: 14
  1051                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  1052  000228  5013               	movf	_TMR2_InterruptHandler,w,c
  1053  00022A  1014               	iorwf	_TMR2_InterruptHandler+1,w,c
  1054  00022C  B4D8               	btfsc	status,2,c
  1055  00022E  0012               	return	
  1056                           
  1057                           ; BSR set to: 14
  1058                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  1059  000230  D801               	call	i2u6_48
  1060  000232  0012               	return	
  1061  000234                     i2u6_48:
  1062  000234  0005               	push	
  1063  000236  6EFA               	movwf	pclath,c
  1064  000238  5013               	movf	_TMR2_InterruptHandler,w,c
  1065  00023A  6EFD               	movwf	tosl,c
  1066  00023C  5014               	movf	_TMR2_InterruptHandler+1,w,c
  1067  00023E  6EFE               	movwf	tosh,c
  1068  000240  50F8               	movf	tblptru,w,c
  1069  000242  6EFF               	movwf	tosu,c
  1070  000244  50FA               	movf	pclath,w,c
  1071  000246  0012               	return		;indir
  1072  000248                     __end_of_TMR2_ISR:
  1073                           	opt callstack 0
  1074                           
  1075 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  1076 ;; Defined at:
  1077 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		None
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_TMR2_Initialize
  1101 ;;		_TMR2_ISR
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text12
  1106  0002CC                     __ptext12:
  1107                           	opt callstack 0
  1108  0002CC                     _TMR2_DefaultInterruptHandler:
  1109                           	opt callstack 25
  1110                           
  1111                           ;incstack = 0
  1112  0002CC  0012               	return		;funcret
  1113  0002CE                     __end_of_TMR2_DefaultInterruptHandler:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _carcontrol_ISR *****************
  1117 ;; Defined at:
  1118 ;;		line 34 in file "car_ctrl.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1134 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1136 ;;Total ram usage:        3 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_carcontrol_init
  1142 ;;		_TMR2_ISR
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text13
  1147  000032                     __ptext13:
  1148                           	opt callstack 0
  1149  000032                     _carcontrol_ISR:
  1150                           	opt callstack 25
  1151                           
  1152                           ;car_ctrl.c: 36:     switch (carctl.state) {
  1153                           
  1154                           ;incstack = 0
  1155  000032  D04B               	goto	i2l999
  1156  000034                     i2l967:
  1157                           
  1158                           ;car_ctrl.c: 39:             carctl.state = state_high;
  1159  000034  0E01               	movlw	1
  1160  000036  6E0D               	movwf	_carctl+1,c	;volatile
  1161  000038  8082               	bsf	3970,0,c	;volatile
  1162                           
  1163                           ;car_ctrl.c: 41:             stateTime = 0;
  1164  00003A  0E00               	movlw	0
  1165  00003C  6E12               	movwf	_stateTime+1,c
  1166  00003E  0E00               	movlw	0
  1167  000040  6E11               	movwf	_stateTime,c
  1168                           
  1169                           ;car_ctrl.c: 42:         break;
  1170  000042  0012               	return	
  1171  000044                     i2l971:
  1172                           
  1173                           ;car_ctrl.c: 44:             stateTime++;
  1174  000044  4A11               	infsnz	_stateTime,f,c
  1175  000046  2A12               	incf	_stateTime+1,f,c
  1176  000048  8082               	bsf	3970,0,c	;volatile
  1177                           
  1178                           ;car_ctrl.c: 46:             if (stateTime >= 100) {
  1179  00004A  BE12               	btfsc	_stateTime+1,7,c
  1180  00004C  0012               	return	
  1181  00004E  5012               	movf	_stateTime+1,w,c
  1182  000050  E104               	bnz	i2u1_40
  1183  000052  0E64               	movlw	100
  1184  000054  5C11               	subwf	_stateTime,w,c
  1185  000056  A0D8               	btfss	status,0,c
  1186  000058  0012               	return	
  1187  00005A                     i2u1_40:
  1188                           
  1189                           ;car_ctrl.c: 48:                 carctl.state = state_vary;
  1190  00005A  0E02               	movlw	2
  1191  00005C  6E0D               	movwf	_carctl+1,c	;volatile
  1192                           
  1193                           ;car_ctrl.c: 49:                 stateTime = 0;
  1194  00005E  0E00               	movlw	0
  1195  000060  6E12               	movwf	_stateTime+1,c
  1196  000062  0E00               	movlw	0
  1197  000064  6E11               	movwf	_stateTime,c
  1198  000066  0012               	return	
  1199  000068                     i2l979:
  1200                           
  1201                           ;car_ctrl.c: 53:             stateTime++;
  1202  000068  4A11               	infsnz	_stateTime,f,c
  1203  00006A  2A12               	incf	_stateTime+1,f,c
  1204                           
  1205                           ;car_ctrl.c: 54:             if (stateTime > carctl.throttleHighTime) {
  1206  00006C  500F               	movf	_carctl+3,w,c	;volatile
  1207  00006E  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  1208  000070  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  1209  000072  5011               	movf	_stateTime,w,c
  1210  000074  5C01               	subwf	??_carcontrol_ISR,w,c
  1211  000076  5002               	movf	??_carcontrol_ISR+1,w,c
  1212  000078  0A80               	xorlw	128
  1213  00007A  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
  1214  00007C  5012               	movf	_stateTime+1,w,c
  1215  00007E  0A80               	xorlw	128
  1216  000080  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
  1217  000082  A0D8               	btfss	status,0,c
  1218                           
  1219                           ;car_ctrl.c: 55:                 do { LATAbits.LATA0 = 0; } while(0);
  1220  000084  9082               	bcf	3970,0,c	;volatile
  1221                           
  1222                           ;car_ctrl.c: 57:             if (stateTime >= 100) {
  1223  000086  BE12               	btfsc	_stateTime+1,7,c
  1224  000088  0012               	return	
  1225  00008A  5012               	movf	_stateTime+1,w,c
  1226  00008C  E104               	bnz	i2u3_40
  1227  00008E  0E64               	movlw	100
  1228  000090  5C11               	subwf	_stateTime,w,c
  1229  000092  A0D8               	btfss	status,0,c
  1230  000094  0012               	return	
  1231  000096                     i2u3_40:
  1232                           
  1233                           ;car_ctrl.c: 58:                 carctl.state = state_low;
  1234  000096  0E03               	movlw	3
  1235  000098  6E0D               	movwf	_carctl+1,c	;volatile
  1236                           
  1237                           ;car_ctrl.c: 59:                 stateTime = 0;
  1238  00009A  0E00               	movlw	0
  1239  00009C  6E12               	movwf	_stateTime+1,c
  1240  00009E  0E00               	movlw	0
  1241  0000A0  6E11               	movwf	_stateTime,c
  1242  0000A2  0012               	return	
  1243  0000A4                     i2l987:
  1244                           
  1245                           ;car_ctrl.c: 63:             stateTime++;
  1246  0000A4  4A11               	infsnz	_stateTime,f,c
  1247  0000A6  2A12               	incf	_stateTime+1,f,c
  1248  0000A8  9082               	bcf	3970,0,c	;volatile
  1249                           
  1250                           ;car_ctrl.c: 65:             if (stateTime >= 1800) {
  1251  0000AA  BE12               	btfsc	_stateTime+1,7,c
  1252  0000AC  0012               	return	
  1253  0000AE  0E08               	movlw	8
  1254  0000B0  5C11               	subwf	_stateTime,w,c
  1255  0000B2  0E07               	movlw	7
  1256  0000B4  5812               	subwfb	_stateTime+1,w,c
  1257  0000B6  A0D8               	btfss	status,0,c
  1258  0000B8  0012               	return	
  1259                           
  1260                           ;car_ctrl.c: 66:                 carctl.state = state_high;
  1261  0000BA  0E01               	movlw	1
  1262  0000BC  6E0D               	movwf	_carctl+1,c	;volatile
  1263                           
  1264                           ;car_ctrl.c: 67:                 stateTime = 0;
  1265  0000BE  0E00               	movlw	0
  1266  0000C0  6E12               	movwf	_stateTime+1,c
  1267  0000C2  0E00               	movlw	0
  1268  0000C4  6E11               	movwf	_stateTime,c
  1269  0000C6  8082               	bsf	3970,0,c	;volatile
  1270  0000C8  0012               	return	
  1271  0000CA                     i2l999:
  1272  0000CA  500D               	movf	_carctl+1,w,c	;volatile
  1273  0000CC  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  1274  0000CE  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  1275                           
  1276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1277                           ; Switch size 1, requested type "simple"
  1278                           ; Number of cases is 1, Range of values is 0 to 0
  1279                           ; switch strategies available:
  1280                           ; Name         Instructions Cycles
  1281                           ; simple_byte            4     3 (average)
  1282                           ;	Chosen strategy is simple_byte
  1283  0000D0  5002               	movf	??_carcontrol_ISR+1,w,c
  1284  0000D2  0A00               	xorlw	0	; case 0
  1285  0000D4  A4D8               	btfss	status,2,c
  1286  0000D6  0012               	return	
  1287                           
  1288                           ; Switch size 1, requested type "simple"
  1289                           ; Number of cases is 4, Range of values is 0 to 3
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte           13     7 (average)
  1293                           ;	Chosen strategy is simple_byte
  1294  0000D8  5001               	movf	??_carcontrol_ISR,w,c
  1295  0000DA  0A00               	xorlw	0	; case 0
  1296  0000DC  B4D8               	btfsc	status,2,c
  1297  0000DE  D7AA               	goto	i2l967
  1298  0000E0  0A01               	xorlw	1	; case 1
  1299  0000E2  B4D8               	btfsc	status,2,c
  1300  0000E4  D7AF               	goto	i2l971
  1301  0000E6  0A03               	xorlw	3	; case 2
  1302  0000E8  B4D8               	btfsc	status,2,c
  1303  0000EA  D7BE               	goto	i2l979
  1304  0000EC  0A01               	xorlw	1	; case 3
  1305  0000EE  A4D8               	btfss	status,2,c
  1306  0000F0  0012               	return	
  1307  0000F2  D7D8               	goto	i2l987
  1308  0000F4                     __end_of_carcontrol_ISR:
  1309                           	opt callstack 0
  1310  0000                     
  1311                           	psect	text14
  1312  000000                     __ptext14:
  1313                           	opt callstack 0
  1314                           
  1315                           	psect	rparam
  1316  0000                     
  1317                           	psect	temp
  1318  000015                     btemp:
  1319                           	opt callstack 0
  1320  000015                     	ds	1
  1321  0000                     int$flags	set	btemp
  1322  0000                     wtemp8	set	btemp+1
  1323  0000                     ttemp5	set	btemp+1
  1324  0000                     ttemp6	set	btemp+4
  1325  0000                     ttemp7	set	btemp+8
  1326                           tosu	equ	0xFFF
  1327                           tosh	equ	0xFFE
  1328                           tosl	equ	0xFFD
  1329                           stkptr	equ	0xFFC
  1330                           pclatu	equ	0xFFB
  1331                           pclath	equ	0xFFA
  1332                           pcl	equ	0xFF9
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           indf0	equ	0xFEF
  1340                           postinc0	equ	0xFEE
  1341                           postdec0	equ	0xFED
  1342                           preinc0	equ	0xFEC
  1343                           plusw0	equ	0xFEB
  1344                           fsr0h	equ	0xFEA
  1345                           fsr0l	equ	0xFE9
  1346                           wreg	equ	0xFE8
  1347                           indf1	equ	0xFE7
  1348                           postinc1	equ	0xFE6
  1349                           postdec1	equ	0xFE5
  1350                           preinc1	equ	0xFE4
  1351                           plusw1	equ	0xFE3
  1352                           fsr1h	equ	0xFE2
  1353                           fsr1l	equ	0xFE1
  1354                           bsr	equ	0xFE0
  1355                           indf2	equ	0xFDF
  1356                           postinc2	equ	0xFDE
  1357                           postdec2	equ	0xFDD
  1358                           preinc2	equ	0xFDC
  1359                           plusw2	equ	0xFDB
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _carcontrol_init->_TMR2_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR2_ISR->_carcontrol_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     514
                                              7 COMRAM     4     4      0
                  _SYSTEM_Initialize
                    _carcontrol_init
                _carcontrol_throttle
 ---------------------------------------------------------------------------------
 (1) _carcontrol_throttle                                  1     1      0      30
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _carcontrol_init                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              3 COMRAM     2     2      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                     _carcontrol_ISR *
 ---------------------------------------------------------------------------------
 (6) _carcontrol_ISR                                       3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _carcontrol_init
     _TMR2_SetInterruptHandler
   _carcontrol_throttle

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _carcontrol_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B      14       1       21.3%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      18        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr  2 18:50:56 2019

        __end_of_TMR2_SetInterruptHandler 02C8                         ??_carcontrol_init 0008  
                             __CFG_CP$OFF 000000                       _carcontrol_throttle 02AC  
                             __CFG_LVP$ON 000000                                       u150 0152  
                                     u160 018E                                       _PR2 000FBB  
                                     u177 010A                              __CFG_CPD$OFF 000000  
                                     u187 0130                                       u197 016C  
                 __size_of_PMD_Initialize 001C                           _TMR2_Initialize 01D2  
                                     tosl 000FFD                                       wreg 000FE8  
                            __CFG_ZCD$OFF 000000                                      l1045 02B8  
                                    l1193 015A                                      l1179 0120  
                                    _LATA 000F82                                      _LATB 000F83  
                                    _LATC 000F84                                      _T2PR 000FBB  
                                    _PMD0 000EDC                                      _PMD1 000EDD  
                                    _PMD2 000EDE                                      _PMD3 000EDF  
                                    _PMD4 000EE0                                      _PMD5 000EE1  
                                    _TMR2 000FBA                                      _WPUA 000F0B  
                                    _WPUB 000F13                                      _WPUC 000F1B  
                                    _WPUE 000F28                      ?_carcontrol_throttle 0001  
                           __CFG_FCMEN$ON 000000                                      _main 00F4  
                                    btemp 0015                                      start 002E  
                           __CFG_CSWEN$ON 000000                              ___param_bank 000000  
                           __CFG_SCANE$ON 000000            __size_of_OSCILLATOR_Initialize 0018  
           __end_of_OSCILLATOR_Initialize 0296                                     ?_main 0001  
                           __CFG_WDTE$OFF 000000                                     _T2CON 000FBC  
                                   _T2HLT 000FBD                            __CFG_DEBUG$OFF 000000  
                                   _T2TMR 000FBA                                     _T2RST 000FBF  
                                   i2l184 0022                                     i2l971 0044  
                                   i2l967 0034                                     i2l987 00A4  
                                   i2l979 0068                                     i2l999 00CA  
                                   _OSCEN 000ED7                                     _TRISA 000F87  
                                   _TRISB 000F88                                     _TRISC 000F89  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR2_ISR 0248                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __CFG_MCLRE$EXTMCLR 000000  
                                   main@i 000A                     ??_carcontrol_throttle 0006  
                                   pclath 000FFA                                     ttemp5 0016  
                                   ttemp6 0019                                     ttemp7 001D  
                                   status 000FD8                                     wtemp8 0016  
                          _carcontrol_ISR 0032                           __initialization 0264  
                            __end_of_main 0190                   __end_of_TMR2_Initialize 01FE  
             ?_INTERRUPT_InterruptManager 0001                  _TMR2_SetInterruptHandler 02BE  
                                  ??_main 0008                             __activetblptr 000002  
                                  _ANSELA 000F0C                                    _ANSELB 000F14  
                                  _ANSELC 000F1C                                    _ODCONA 000F0A  
                                  _ODCONB 000F12                                    _ODCONC 000F1A  
                  __end_of_carcontrol_ISR 00F4                            __CFG_WDTCCS$SC 000000  
                                  _OSCFRQ 000ED9                                    i2u1_40 005A  
                                  i2u3_40 0096                                    i2u6_48 0234  
                          __CFG_PWRTE$OFF 000000                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                                    _carctl 000C  
                                  clear_0 026A                            _PMD_Initialize 0248  
                                  tblptru 000FF8  TMR2_SetInterruptHandler@InterruptHandler 0006  
           __size_of_INTERRUPT_Initialize 0004                           ?_carcontrol_ISR 0001  
                       _SYSTEM_Initialize 0296                           _carcontrol_init 01FE  
                              __accesstop 0060                   __end_of__initialization 0270  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0008  
                               ?_TMR2_ISR 0001                          ?_TMR2_Initialize 0001  
                  __end_of_PMD_Initialize 0264                 __end_of_SYSTEM_Initialize 02AC  
                              __pnvCOMRAM 0013                           __CFG_PPS1WAY$ON 000000  
                              ??_TMR2_ISR 0004                           ?_PMD_Initialize 0001  
                                 _OSCCON1 000ED3                                   _OSCCON3 000ED5  
                 __end_of_carcontrol_init 0224                                   _OSCTUNE 000ED8  
                                 _SLRCONA 000F09                                   _SLRCONB 000F11  
                                 _SLRCONC 000F19                                   __Hparam 0000  
                                 __Lparam 0000                ??_TMR2_SetInterruptHandler 0008  
              __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                   __pcinit 0264  
                                 __ramtop 0800                                   __ptext0 00F4  
                                 __ptext1 02AC                                   __ptext2 01FE  
                                 __ptext3 0296                                   __ptext4 01D2  
                                 __ptext5 02BE                                   __ptext6 0248  
                                 __ptext7 0190                                   __ptext8 027E  
                                 __ptext9 02C8                     _OSCILLATOR_Initialize 027E  
                               _T2CONbits 000FBC               __end_of_carcontrol_throttle 02BE  
                ??_PIN_MANAGER_Initialize 0006                                 _T2HLTbits 000FBD  
              __size_of_SYSTEM_Initialize 0016                      end_of_initialization 0270  
                               _T2RSTbits 000FBF                             __Lmediumconst 0000  
                                 postinc0 000FEE                     __CFG_WDTCPS$WDTCPS_31 000000  
                        ??_carcontrol_ISR 0001                          ?_carcontrol_init 0001  
                        __CFG_FEXTOSC$OFF 000000              __end_of_INTERRUPT_Initialize 02CC  
    __end_of_TMR2_DefaultInterruptHandler 02CE     __size_of_TMR2_DefaultInterruptHandler 0002  
            _TMR2_DefaultInterruptHandler 02CC                         __size_of_TMR2_ISR 0024  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 0264  
         __size_of_PIN_MANAGER_Initialize 0042                          __CFG_LPBOREN$OFF 000000  
                        ??_PMD_Initialize 0006             ?_TMR2_DefaultInterruptHandler 0001  
                             __pbssCOMRAM 000C                  __size_of_TMR2_Initialize 002C  
                  _PIN_MANAGER_Initialize 0190                                 __pintcode 0008  
            ??_INTERRUPT_InterruptManager 0004                                  _T2CLKCON 000FBE  
                    _INTERRUPT_Initialize 02C8                                  _LATAbits 000F82  
                                _PIE4bits 000EC1       __size_of_INTERRUPT_InterruptManager 0026  
                                _PIR4bits 000EC9                                  _TMR2_ISR 0224  
                               _stateTime 0011            ??_TMR2_DefaultInterruptHandler 0001  
       __size_of_TMR2_SetInterruptHandler 000A                 ?_TMR2_SetInterruptHandler 0006  
                   ?_INTERRUPT_Initialize 0001              __size_of_carcontrol_throttle 0012  
                       ??_TMR2_Initialize 0008                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                 ??_OSCILLATOR_Initialize 0006                                  __ptext11 0224  
                                __ptext12 02CC                                  __ptext13 0032  
                                __ptext14 0000                             __size_of_main 009C  
                __size_of_carcontrol_init 0026                      __CFG_WDTCWS$WDTCWS_7 000000  
                      __CFG_BORV$VBOR_190 000000                                  int$flags 0015  
      __end_of_INTERRUPT_InterruptManager 002E                _INTERRUPT_InterruptManager 0008  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 0006  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
                       __CFG_CLKOUTEN$OFF 000000                   __size_of_carcontrol_ISR 00C2  
             carcontrol_throttle@throttle 0006            __end_of_PIN_MANAGER_Initialize 01D2  
                   _TMR2_InterruptHandler 0013  
