

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 19:18:52 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25Q10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           ; Version 2.05
    96                           ; Generated 20/12/2018 GMT
    97                           ; 
    98                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F25Q10 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   131  0000                     
   132 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   133  0000                     
   134 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   135  0000                     
   136                           	psect	idataCOMRAM
   137  001F36                     __pidataCOMRAM:
   138                           	opt callstack 0
   139                           
   140                           ;initializer for _timing_val
   141  001F36  FF10               	dw	65296
   142                           
   143                           ;initializer for _servo_max
   144  001F38  1C                 	db	28
   145                           
   146                           ;initializer for _servo_min
   147  001F39  E2                 	db	226
   148                           
   149                           ;initializer for _servo_trim
   150  001F3A  11                 	db	17
   151                           
   152                           	psect	nvCOMRAM
   153  00003A                     __pnvCOMRAM:
   154                           	opt callstack 0
   155  00003A                     _TMR3_InterruptHandler:
   156                           	opt callstack 0
   157  00003A                     	ds	2
   158  00003C                     _timer3ReloadVal:
   159                           	opt callstack 0
   160  00003C                     	ds	2
   161  00003E                     _EUSART1_ErrorHandler:
   162                           	opt callstack 0
   163  00003E                     	ds	2
   164  000040                     _TMR1_InterruptHandler:
   165                           	opt callstack 0
   166  000040                     	ds	2
   167  000042                     _timer1ReloadVal:
   168                           	opt callstack 0
   169  000042                     	ds	2
   170  000044                     _CCP1_CallBack:
   171                           	opt callstack 0
   172  000044                     	ds	2
   173  000046                     _IOCCF2_InterruptHandler:
   174                           	opt callstack 0
   175  000046                     	ds	2
   176                           
   177                           	psect	nvBANK0
   178  0000FA                     __pnvBANK0:
   179                           	opt callstack 0
   180  0000FA                     _EUSART1_OverrunErrorHandler:
   181                           	opt callstack 0
   182  0000FA                     	ds	2
   183  0000FC                     _EUSART1_FramingErrorHandler:
   184                           	opt callstack 0
   185  0000FC                     	ds	2
   186  0000FE                     _TMR2_InterruptHandler:
   187                           	opt callstack 0
   188  0000FE                     	ds	2
   189  0000                     _PIR6	set	3787
   190  0000                     _PIR3bits	set	3784
   191  0000                     _PIR1bits	set	3782
   192  0000                     _PIE1bits	set	3774
   193  0000                     _PIR0bits	set	3781
   194  0000                     _PIR6bits	set	3787
   195  0000                     _PIE6bits	set	3779
   196  0000                     _IPR1bits	set	3766
   197  0000                     _IPR0bits	set	3765
   198  0000                     _IPR6bits	set	3771
   199  0000                     _IPR4bits	set	3769
   200  0000                     _PIE4bits	set	3777
   201  0000                     _PIR4bits	set	3785
   202  0000                     _RC6PPS	set	3832
   203  0000                     _CCP1PPS	set	3754
   204  0000                     _PIE0bits	set	3773
   205  0000                     _PMD5	set	3809
   206  0000                     _PMD4	set	3808
   207  0000                     _PMD3	set	3807
   208  0000                     _PMD2	set	3806
   209  0000                     _PMD1	set	3805
   210  0000                     _PMD0	set	3804
   211  0000                     _OSCTUNE	set	3800
   212  0000                     _OSCFRQ	set	3801
   213  0000                     _OSCEN	set	3799
   214  0000                     _OSCCON3	set	3797
   215  0000                     _OSCCON1	set	3795
   216  0000                     _ADCON1bits	set	3924
   217  0000                     _ADPREVL	set	3932
   218  0000                     _ADPREVH	set	3933
   219  0000                     _ADCON2bits	set	3925
   220  0000                     _ADCON3bits	set	3926
   221  0000                     _ADRESL	set	3934
   222  0000                     _ADRESH	set	3935
   223  0000                     _ADCON0bits	set	3931
   224  0000                     _ADCON0	set	3931
   225  0000                     _ADPCH	set	3930
   226  0000                     _ADACQ	set	3927
   227  0000                     _ADPRE	set	3929
   228  0000                     _ADCAP	set	3928
   229  0000                     _ADREF	set	3923
   230  0000                     _ADCLK	set	3922
   231  0000                     _ADACT	set	3921
   232  0000                     _ADCON3	set	3926
   233  0000                     _ADCON2	set	3925
   234  0000                     _ADCON1	set	3924
   235  0000                     _IOCCPbits	set	3863
   236  0000                     _IOCCNbits	set	3862
   237  0000                     _IOCCFbits	set	3861
   238  0000                     _SLRCONC	set	3865
   239  0000                     _SLRCONB	set	3857
   240  0000                     _SLRCONA	set	3849
   241  0000                     _ODCONC	set	3866
   242  0000                     _ODCONB	set	3858
   243  0000                     _ODCONA	set	3850
   244  0000                     _WPUC	set	3867
   245  0000                     _WPUA	set	3851
   246  0000                     _WPUB	set	3859
   247  0000                     _WPUE	set	3880
   248  0000                     _ANSELA	set	3852
   249  0000                     _ANSELB	set	3860
   250  0000                     _ANSELC	set	3868
   251  0000                     _TRISBbits	set	3976
   252  0000                     _LATBbits	set	3971
   253  0000                     _TRISCbits	set	3977
   254  0000                     _LATCbits	set	3972
   255  0000                     _LATAbits	set	3970
   256  0000                     _T3GCONbits	set	4041
   257  0000                     _T3CONbits	set	4040
   258  0000                     _T3CON	set	4040
   259  0000                     _TMR3L	set	4038
   260  0000                     _TMR3H	set	4039
   261  0000                     _T3CLK	set	4043
   262  0000                     _T3GATE	set	4042
   263  0000                     _T3GCON	set	4041
   264  0000                     _ADERRL	set	3945
   265  0000                     _ADERRH	set	3946
   266  0000                     _ADFLTRL	set	3949
   267  0000                     _ADFLTRH	set	3950
   268  0000                     _ADSTATbits	set	3936
   269  0000                     _ADACCL	set	3947
   270  0000                     _ADACCH	set	3948
   271  0000                     _ADCNT	set	3938
   272  0000                     _ADSTPTH	set	3940
   273  0000                     _ADSTPTL	set	3939
   274  0000                     _ADUTHH	set	3944
   275  0000                     _ADUTHL	set	3943
   276  0000                     _ADLTHH	set	3942
   277  0000                     _ADLTHL	set	3941
   278  0000                     _ADRPT	set	3937
   279  0000                     _ADSTAT	set	3936
   280  0000                     _TX1REG	set	3993
   281  0000                     _RC1REG	set	3992
   282  0000                     _RC1STAbits	set	3996
   283  0000                     _TX1STAbits	set	3997
   284  0000                     _SP1BRGH	set	3995
   285  0000                     _SP1BRGL	set	3994
   286  0000                     _TX1STA	set	3997
   287  0000                     _RC1STA	set	3996
   288  0000                     _BAUD1CON	set	3998
   289  0000                     _T1GCONbits	set	4047
   290  0000                     _T1CONbits	set	4046
   291  0000                     _T1CON	set	4046
   292  0000                     _TMR1L	set	4044
   293  0000                     _TMR1H	set	4045
   294  0000                     _T1CLK	set	4049
   295  0000                     _T1GATE	set	4048
   296  0000                     _T1GCON	set	4047
   297  0000                     _CCPTMRSbits	set	4013
   298  0000                     _CCPR1L	set	4009
   299  0000                     _CCPR1H	set	4010
   300  0000                     _CCP1CAP	set	4012
   301  0000                     _CCP1CON	set	4011
   302  0000                     _INTCONbits	set	4082
   303  0000                     _PR2	set	4027
   304  0000                     _TMR2	set	4026
   305  0000                     _T2CONbits	set	4028
   306  0000                     _T2RSTbits	set	4031
   307  0000                     _T2HLTbits	set	4029
   308  0000                     _T2CON	set	4028
   309  0000                     _T2TMR	set	4026
   310  0000                     _T2PR	set	4027
   311  0000                     _T2RST	set	4031
   312  0000                     _T2HLT	set	4029
   313  0000                     _T2CLKCON	set	4030
   314  0000                     _TRISC	set	3977
   315  0000                     _TRISB	set	3976
   316  0000                     _TRISA	set	3975
   317  0000                     _LATC	set	3972
   318  0000                     _LATB	set	3971
   319  0000                     _LATA	set	3970
   320                           
   321                           	psect	smallconst
   322  000800                     __psmallconst:
   323                           	opt callstack 0
   324  000800  00                 	db	0
   325  000801                     STR_2:
   326  000801  0A                 	db	10
   327  000802  2A                 	db	42
   328  000803  2A                 	db	42
   329  000804  2A                 	db	42
   330  000805  2A                 	db	42
   331  000806  2A                 	db	42
   332  000807  2A                 	db	42
   333  000808  2A                 	db	42
   334  000809  2A                 	db	42
   335  00080A  2A                 	db	42
   336  00080B  2A                 	db	42
   337  00080C  20                 	db	32
   338  00080D  4E                 	db	78	;'N'
   339  00080E  45                 	db	69	;'E'
   340  00080F  57                 	db	87	;'W'
   341  000810  20                 	db	32
   342  000811  53                 	db	83	;'S'
   343  000812  43                 	db	67	;'C'
   344  000813  41                 	db	65	;'A'
   345  000814  4E                 	db	78	;'N'
   346  000815  20                 	db	32
   347  000816  2A                 	db	42
   348  000817  2A                 	db	42
   349  000818  2A                 	db	42
   350  000819  2A                 	db	42
   351  00081A  2A                 	db	42
   352  00081B  2A                 	db	42
   353  00081C  2A                 	db	42
   354  00081D  2A                 	db	42
   355  00081E  2A                 	db	42
   356  00081F  2A                 	db	42
   357  000820  0A                 	db	10
   358  000821  00                 	db	0
   359  000822                     STR_1:
   360  000822  25                 	db	37
   361  000823  64                 	db	100	;'d'
   362  000824  0A                 	db	10
   363  000825  00                 	db	0
   364                           
   365                           ; #config settings
   366  000826  00                 	db	0	; dummy byte at the end
   367  0000                     
   368                           	psect	cinit
   369  0018FA                     __pcinit:
   370                           	opt callstack 0
   371  0018FA                     start_initialization:
   372                           	opt callstack 0
   373  0018FA                     __initialization:
   374                           	opt callstack 0
   375                           
   376                           ; Initialize objects allocated to COMRAM (5 bytes)
   377                           ; load TBLPTR registers with __pidataCOMRAM
   378  0018FA  0E36               	movlw	low __pidataCOMRAM
   379  0018FC  6EF6               	movwf	tblptrl,c
   380  0018FE  0E1F               	movlw	high __pidataCOMRAM
   381  001900  6EF7               	movwf	tblptrh,c
   382  001902  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   383  001904  6EF8               	movwf	tblptru,c
   384  001906  EE00  F052         	lfsr	0,__pdataCOMRAM
   385  00190A  EE10 F005          	lfsr	1,5
   386  00190E                     copy_data0:
   387  00190E  0009               	tblrd		*+
   388  001910  CFF5 FFEE          	movff	tablat,postinc0
   389  001914  50E5               	movf	postdec1,w,c
   390  001916  50E1               	movf	fsr1l,w,c
   391  001918  E1FA               	bnz	copy_data0
   392                           
   393                           ; Clear objects allocated to BIGRAM (260 bytes)
   394  00191A  EE02  F000         	lfsr	0,__pbssBIGRAM
   395  00191E  EE11 F004          	lfsr	1,260
   396  001922                     clear_0:
   397  001922  6AEE               	clrf	postinc0,c
   398  001924  50E5               	movf	postdec1,w,c
   399  001926  50E1               	movf	fsr1l,w,c
   400  001928  E1FC               	bnz	clear_0
   401  00192A  50E2               	movf	fsr1h,w,c
   402  00192C  E1FA               	bnz	clear_0
   403                           
   404                           ; Clear objects allocated to BANK0 (49 bytes)
   405  00192E  EE00  F0C9         	lfsr	0,__pbssBANK0
   406  001932  0E31               	movlw	49
   407  001934                     clear_1:
   408  001934  6AEE               	clrf	postinc0,c
   409  001936  06E8               	decf	wreg,f,c
   410  001938  E1FD               	bnz	clear_1
   411                           
   412                           ; Clear objects allocated to COMRAM (10 bytes)
   413  00193A  EE00  F048         	lfsr	0,__pbssCOMRAM
   414  00193E  0E0A               	movlw	10
   415  001940                     clear_2:
   416  001940  6AEE               	clrf	postinc0,c
   417  001942  06E8               	decf	wreg,f,c
   418  001944  E1FD               	bnz	clear_2
   419  001946                     end_of_initialization:
   420                           	opt callstack 0
   421  001946                     __end_of__initialization:
   422                           	opt callstack 0
   423  001946  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   424  001948  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   425  00194A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   426  00194C  6EF8               	movwf	tblptru,c
   427  00194E  0100               	movlb	0
   428  001950  EFEE  F009         	goto	_main	;jump to C main() function
   429                           
   430                           	psect	bssCOMRAM
   431  000048                     __pbssCOMRAM:
   432                           	opt callstack 0
   433  000048                     _status:
   434                           	opt callstack 0
   435  000048                     	ds	8
   436  000050                     _ADCC_InterruptHandler:
   437                           	opt callstack 0
   438  000050                     	ds	2
   439                           
   440                           	psect	dataCOMRAM
   441  000052                     __pdataCOMRAM:
   442                           	opt callstack 0
   443  000052                     _timing_val:
   444                           	opt callstack 0
   445  000052                     	ds	2
   446  000054                     _servo_max:
   447                           	opt callstack 0
   448  000054                     	ds	1
   449  000055                     _servo_min:
   450                           	opt callstack 0
   451  000055                     	ds	1
   452  000056                     _servo_trim:
   453                           	opt callstack 0
   454  000056                     	ds	1
   455                           
   456                           	psect	bssBANK0
   457  0000C9                     __pbssBANK0:
   458                           	opt callstack 0
   459  0000C9                     _carctl:
   460                           	opt callstack 0
   461  0000C9                     	ds	6
   462  0000CF                     _nout:
   463                           	opt callstack 0
   464  0000CF                     	ds	2
   465  0000D1                     _width:
   466                           	opt callstack 0
   467  0000D1                     	ds	2
   468  0000D3                     _prec:
   469                           	opt callstack 0
   470  0000D3                     	ds	2
   471  0000D5                     _flags:
   472                           	opt callstack 0
   473  0000D5                     	ds	2
   474  0000D7                     _stateTime:
   475                           	opt callstack 0
   476  0000D7                     	ds	2
   477  0000D9                     _eusart1RxLastError:
   478                           	opt callstack 0
   479  0000D9                     	ds	1
   480  0000DA                     _dbuf:
   481                           	opt callstack 0
   482  0000DA                     	ds	32
   483                           
   484                           	psect	bssBIGRAM
   485  000200                     __pbssBIGRAM:
   486                           	opt callstack 0
   487  000200                     _myCam:
   488                           	opt callstack 0
   489  000200                     	ds	260
   490                           
   491                           	psect	cstackBANK1
   492  000100                     __pcstackBANK1:
   493                           	opt callstack 0
   494  000100                     main@cam_pixels:
   495                           	opt callstack 0
   496                           
   497                           ; 256 bytes @ 0x0
   498  000100                     	ds	256
   499                           
   500                           	psect	cstackBANK0
   501  000060                     __pcstackBANK0:
   502                           	opt callstack 0
   503  000060                     ?_strlen:
   504                           	opt callstack 0
   505  000060                     ?___aodiv:
   506                           	opt callstack 0
   507  000060                     ?___aomod:
   508                           	opt callstack 0
   509  000060                     EUSART1_Write@txData:
   510                           	opt callstack 0
   511  000060                     ADCC_SelectChannel@acquisitionDelay:
   512                           	opt callstack 0
   513  000060                     carcontrol_steering@steering:
   514                           	opt callstack 0
   515  000060                     carcontrol_throttle@throttle:
   516                           	opt callstack 0
   517  000060                     IOCCF2_SetInterruptHandler@InterruptHandler:
   518                           	opt callstack 0
   519  000060                     TMR2_SetInterruptHandler@InterruptHandler:
   520                           	opt callstack 0
   521  000060                     CCP1_SetCallBack@customCallBack:
   522                           	opt callstack 0
   523  000060                     TMR1_SetInterruptHandler@InterruptHandler:
   524                           	opt callstack 0
   525  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   526                           	opt callstack 0
   527  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   528                           	opt callstack 0
   529  000060                     EUSART1_SetErrorHandler@interruptHandler:
   530                           	opt callstack 0
   531  000060                     ADCC_SetInterruptHandler@InterruptHandler:
   532                           	opt callstack 0
   533  000060                     TMR3_WriteTimer@timerVal:
   534                           	opt callstack 0
   535  000060                     TMR3_SetInterruptHandler@InterruptHandler:
   536                           	opt callstack 0
   537  000060                     cam_get@pixels:
   538                           	opt callstack 0
   539  000060                     strlen@s:
   540                           	opt callstack 0
   541  000060                     ___aodiv@dividend:
   542                           	opt callstack 0
   543  000060                     ___aomod@dividend:
   544                           	opt callstack 0
   545                           
   546                           ; 8 bytes @ 0x0
   547  000060                     	ds	1
   548  000061                     putch@txData:
   549                           	opt callstack 0
   550  000061                     ADCC_SelectChannel@channel:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0x1
   554  000061                     	ds	1
   555  000062                     ??_TMR3_Initialize:
   556  000062                     ??_TMR1_Initialize:
   557  000062                     ??_cam_start:
   558  000062                     ??_cam_get:
   559  000062                     fputc@c:
   560                           	opt callstack 0
   561  000062                     strlen@a:
   562                           	opt callstack 0
   563                           
   564                           ; 2 bytes @ 0x2
   565  000062                     	ds	2
   566  000064                     cam_get@i:
   567                           	opt callstack 0
   568  000064                     fputc@fp:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x4
   572  000064                     	ds	2
   573  000066                     ??_fputc:
   574  000066                     cam_get@i_2598:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x6
   578  000066                     	ds	2
   579  000068                     ___aodiv@divisor:
   580                           	opt callstack 0
   581  000068                     ___aomod@divisor:
   582                           	opt callstack 0
   583                           
   584                           ; 8 bytes @ 0x8
   585  000068                     	ds	3
   586  00006B                     fputs@s:
   587                           	opt callstack 0
   588                           
   589                           ; 2 bytes @ 0xB
   590  00006B                     	ds	2
   591  00006D                     fputs@fp:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0xD
   595  00006D                     	ds	2
   596  00006F                     fputs@c:
   597                           	opt callstack 0
   598                           
   599                           ; 1 bytes @ 0xF
   600  00006F                     	ds	1
   601  000070                     ___aodiv@counter:
   602                           	opt callstack 0
   603  000070                     ___aomod@counter:
   604                           	opt callstack 0
   605  000070                     fputs@i:
   606                           	opt callstack 0
   607                           
   608                           ; 2 bytes @ 0x10
   609  000070                     	ds	1
   610  000071                     ___aodiv@sign:
   611                           	opt callstack 0
   612  000071                     ___aomod@sign:
   613                           	opt callstack 0
   614                           
   615                           ; 1 bytes @ 0x11
   616  000071                     	ds	1
   617  000072                     ?_abs:
   618                           	opt callstack 0
   619  000072                     ?_pad:
   620                           	opt callstack 0
   621  000072                     pad@fp:
   622                           	opt callstack 0
   623  000072                     abs@a:
   624                           	opt callstack 0
   625  000072                     ___aodiv@quotient:
   626                           	opt callstack 0
   627                           
   628                           ; 8 bytes @ 0x12
   629  000072                     	ds	2
   630  000074                     ??_abs:
   631  000074                     pad@buf:
   632                           	opt callstack 0
   633                           
   634                           ; 2 bytes @ 0x14
   635  000074                     	ds	2
   636  000076                     pad@p:
   637                           	opt callstack 0
   638                           
   639                           ; 2 bytes @ 0x16
   640  000076                     	ds	2
   641  000078                     ??_pad:
   642                           
   643                           ; 1 bytes @ 0x18
   644  000078                     	ds	1
   645  000079                     pad@i:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x19
   649  000079                     	ds	2
   650  00007B                     pad@w:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x1B
   654  00007B                     	ds	2
   655  00007D                     ?_dtoa:
   656                           	opt callstack 0
   657  00007D                     dtoa@fp:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x1D
   661  00007D                     	ds	2
   662  00007F                     dtoa@d:
   663                           	opt callstack 0
   664                           
   665                           ; 8 bytes @ 0x1F
   666  00007F                     	ds	8
   667  000087                     ??_dtoa:
   668                           
   669                           ; 1 bytes @ 0x27
   670  000087                     	ds	8
   671  00008F                     _dtoa$2646:
   672                           	opt callstack 0
   673                           
   674                           ; 2 bytes @ 0x2F
   675  00008F                     	ds	2
   676  000091                     dtoa@p:
   677                           	opt callstack 0
   678                           
   679                           ; 2 bytes @ 0x31
   680  000091                     	ds	2
   681  000093                     dtoa@w:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x33
   685  000093                     	ds	2
   686  000095                     dtoa@s:
   687                           	opt callstack 0
   688                           
   689                           ; 2 bytes @ 0x35
   690  000095                     	ds	2
   691  000097                     dtoa@n:
   692                           	opt callstack 0
   693                           
   694                           ; 8 bytes @ 0x37
   695  000097                     	ds	8
   696  00009F                     dtoa@i:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x3F
   700  00009F                     	ds	2
   701  0000A1                     ?_vfpfcnvrt:
   702                           	opt callstack 0
   703  0000A1                     vfpfcnvrt@fp:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x41
   707  0000A1                     	ds	2
   708  0000A3                     vfpfcnvrt@fmt:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x43
   712  0000A3                     	ds	2
   713  0000A5                     vfpfcnvrt@ap:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x45
   717  0000A5                     	ds	2
   718  0000A7                     ??_vfpfcnvrt:
   719                           
   720                           ; 1 bytes @ 0x47
   721  0000A7                     	ds	2
   722  0000A9                     vfpfcnvrt@ll:
   723                           	opt callstack 0
   724                           
   725                           ; 8 bytes @ 0x49
   726  0000A9                     	ds	8
   727  0000B1                     ?_vfprintf:
   728                           	opt callstack 0
   729  0000B1                     vfprintf@fp:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x51
   733  0000B1                     	ds	2
   734  0000B3                     vfprintf@fmt:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x53
   738  0000B3                     	ds	2
   739  0000B5                     vfprintf@ap:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x55
   743  0000B5                     	ds	2
   744  0000B7                     vfprintf@cfmt:
   745                           	opt callstack 0
   746                           
   747                           ; 2 bytes @ 0x57
   748  0000B7                     	ds	2
   749  0000B9                     ?_printf:
   750                           	opt callstack 0
   751  0000B9                     printf@fmt:
   752                           	opt callstack 0
   753                           
   754                           ; 2 bytes @ 0x59
   755  0000B9                     	ds	4
   756  0000BD                     
   757                           ; 1 bytes @ 0x5D
   758  0000BD                     	ds	2
   759  0000BF                     printf@ap:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x5F
   763  0000BF                     	ds	2
   764  0000C1                     ??_main:
   765                           
   766                           ; 1 bytes @ 0x61
   767  0000C1                     	ds	4
   768  0000C5                     main@i:
   769                           	opt callstack 0
   770                           
   771                           ; 2 bytes @ 0x65
   772  0000C5                     	ds	2
   773  0000C7                     main@i_1989:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x67
   777  0000C7                     	ds	2
   778                           
   779                           	psect	cstackCOMRAM
   780  000001                     __pcstackCOMRAM:
   781                           	opt callstack 0
   782  000001                     ??_carcontrol_ISR:
   783  000001                     
   784                           ; 1 bytes @ 0x0
   785  000001                     	ds	3
   786  000004                     ??_INTERRUPT_InterruptManagerHigh:
   787                           
   788                           ; 1 bytes @ 0x3
   789  000004                     	ds	2
   790  000006                     ?___xxtofl:
   791                           	opt callstack 0
   792  000006                     TMR1_WriteTimer@timerVal:
   793                           	opt callstack 0
   794  000006                     i1IOCCF2_SetInterruptHandler@InterruptHandler:
   795                           	opt callstack 0
   796  000006                     i1TMR1_SetInterruptHandler@InterruptHandler:
   797                           	opt callstack 0
   798  000006                     i1TMR3_WriteTimer@timerVal:
   799                           	opt callstack 0
   800  000006                     i1TMR3_SetInterruptHandler@InterruptHandler:
   801                           	opt callstack 0
   802  000006                     ___xxtofl@val:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0x5
   806  000006                     	ds	2
   807  000008                     ??_timer_ISR:
   808  000008                     ??_adc_ready_ISR:
   809  000008                     
   810                           ; 1 bytes @ 0x7
   811  000008                     	ds	1
   812  000009                     
   813                           ; 1 bytes @ 0x8
   814  000009                     	ds	1
   815  00000A                     ??___xxtofl:
   816                           
   817                           ; 1 bytes @ 0x9
   818  00000A                     	ds	4
   819  00000E                     ___xxtofl@sign:
   820                           	opt callstack 0
   821                           
   822                           ; 1 bytes @ 0xD
   823  00000E                     	ds	1
   824  00000F                     ___xxtofl@exp:
   825                           	opt callstack 0
   826                           
   827                           ; 1 bytes @ 0xE
   828  00000F                     	ds	1
   829  000010                     ___xxtofl@arg:
   830                           	opt callstack 0
   831                           
   832                           ; 4 bytes @ 0xF
   833  000010                     	ds	4
   834  000014                     ?___flmul:
   835                           	opt callstack 0
   836  000014                     ___flmul@b:
   837                           	opt callstack 0
   838                           
   839                           ; 4 bytes @ 0x13
   840  000014                     	ds	4
   841  000018                     ___flmul@a:
   842                           	opt callstack 0
   843                           
   844                           ; 4 bytes @ 0x17
   845  000018                     	ds	4
   846  00001C                     ??___flmul:
   847                           
   848                           ; 1 bytes @ 0x1B
   849  00001C                     	ds	4
   850  000020                     ___flmul@sign:
   851                           	opt callstack 0
   852                           
   853                           ; 1 bytes @ 0x1F
   854  000020                     	ds	1
   855  000021                     ___flmul@grs:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0x20
   859  000021                     	ds	4
   860  000025                     ___flmul@aexp:
   861                           	opt callstack 0
   862                           
   863                           ; 1 bytes @ 0x24
   864  000025                     	ds	1
   865  000026                     ___flmul@bexp:
   866                           	opt callstack 0
   867                           
   868                           ; 1 bytes @ 0x25
   869  000026                     	ds	1
   870  000027                     ___flmul@prod:
   871                           	opt callstack 0
   872                           
   873                           ; 4 bytes @ 0x26
   874  000027                     	ds	4
   875  00002B                     ___flmul@temp:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x2A
   879  00002B                     	ds	2
   880  00002D                     ping_CCP1_triggered@timeOfFlight:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x2C
   884  00002D                     	ds	2
   885  00002F                     CCP1_CaptureISR@module:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0x2E
   889  00002F                     	ds	2
   890  000031                     ??_INTERRUPT_InterruptManagerLow:
   891                           
   892                           ; 1 bytes @ 0x30
   893  000031                     	ds	9
   894                           
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 52 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  i               2  103[BANK0 ] int 
   905 ;;  i               2  101[BANK0 ] int 
   906 ;;  cam_pixels    256    0[BANK1 ] unsigned short [128]
   907 ;;  num             2    0        int 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         0       0       0       0       0       0       0       0       0
   918 ;;      Locals:         0       6     256       0       0       0       0       0       0
   919 ;;      Temps:          0       2       0       0       0       0       0       0       0
   920 ;;      Totals:         0       8     256       0       0       0       0       0       0
   921 ;;Total ram usage:      264 bytes
   922 ;; Hardware stack levels required when called:   17
   923 ;; This function calls:
   924 ;;		_SYSTEM_Initialize
   925 ;;		_cam_get
   926 ;;		_cam_init
   927 ;;		_cam_start
   928 ;;		_carcontrol_init
   929 ;;		_carcontrol_steering
   930 ;;		_carcontrol_throttle
   931 ;;		_printf
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text0
   938  0013DC                     __ptext0:
   939                           	opt callstack 0
   940  0013DC                     _main:
   941                           	opt callstack 14
   942                           
   943                           ;main.c: 55:     SYSTEM_Initialize();
   944                           
   945                           ;incstack = 0
   946  0013DC  EC67  F00E         	call	_SYSTEM_Initialize	;wreg free
   947                           
   948                           ;main.c: 68:     (INTCONbits.GIEL = 1);
   949  0013E0  8CF2               	bsf	4082,6,c	;volatile
   950                           
   951                           ;main.c: 69:     (INTCONbits.GIEH = 1);
   952  0013E2  8EF2               	bsf	4082,7,c	;volatile
   953                           
   954                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   955  0013E4  8CF2               	bsf	4082,6,c	;volatile
   956                           
   957                           ;main.c: 75:     carcontrol_init();
   958  0013E6  EC90  F00D         	call	_carcontrol_init	;wreg free
   959                           
   960                           ;main.c: 76:     cam_init();
   961  0013EA  EC5B  F00D         	call	_cam_init	;wreg free
   962                           
   963                           ;main.c: 78:     carcontrol_throttle(0);
   964  0013EE  0E00               	movlw	0
   965  0013F0  EC2D  F00F         	call	_carcontrol_throttle
   966                           
   967                           ;main.c: 79:     carcontrol_steering(0);
   968  0013F4  0E00               	movlw	0
   969  0013F6  ECC4  F00D         	call	_carcontrol_steering
   970  0013FA                     
   971                           ;main.c: 86:     {;main.c: 87:         for (int i = 0; i < 8; i++) {
   972  0013FA  0E00               	movlw	0
   973  0013FC  0100               	movlb	0	; () banked
   974  0013FE  6FC6               	movwf	(main@i+1)& (0+255),b
   975  001400  0E00               	movlw	0
   976  001402  6FC5               	movwf	main@i& (0+255),b
   977  001404                     l3956:
   978                           
   979                           ; BSR set to: 0
   980                           ;main.c: 88:             cam_start();
   981  001404  ECE7  F00B         	call	_cam_start	;wreg free
   982                           
   983                           ;main.c: 89:             _delay((unsigned long)((50)*(64000000/4000.0)));
   984  001408  0E05               	movlw	5
   985  00140A  0100               	movlb	0	; () banked
   986  00140C  6FC2               	movwf	(??_main+1)& (0+255),b
   987  00140E  0E0F               	movlw	15
   988  001410  6FC1               	movwf	??_main& (0+255),b
   989  001412  0EF1               	movlw	241
   990  001414                     u2587:
   991  001414  2EE8               	decfsz	wreg,f,c
   992  001416  D7FE               	bra	u2587
   993  001418  2FC1               	decfsz	??_main& (0+255),f,b
   994  00141A  D7FC               	bra	u2587
   995  00141C  2FC2               	decfsz	(??_main+1)& (0+255),f,b
   996  00141E  D7FA               	bra	u2587
   997                           
   998                           ;main.c: 90:         }
   999  001420  0100               	movlb	0	; () banked
  1000  001422  4BC5               	infsnz	main@i& (0+255),f,b
  1001  001424  2BC6               	incf	(main@i+1)& (0+255),f,b
  1002                           
  1003                           ; BSR set to: 0
  1004  001426  BFC6               	btfsc	(main@i+1)& (0+255),7,b
  1005  001428  D7ED               	goto	l3956
  1006  00142A  51C6               	movf	(main@i+1)& (0+255),w,b
  1007  00142C  E104               	bnz	u2550
  1008  00142E  0E08               	movlw	8
  1009  001430  5DC5               	subwf	main@i& (0+255),w,b
  1010  001432  A0D8               	btfss	status,0,c
  1011  001434  D7E7               	goto	l3956
  1012  001436                     u2550:
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;main.c: 91:         cam_get(cam_pixels);
  1016  001436  0E00               	movlw	low main@cam_pixels
  1017  001438  6F60               	movwf	cam_get@pixels& (0+255),b
  1018  00143A  0E01               	movlw	high main@cam_pixels
  1019  00143C  6F61               	movwf	(cam_get@pixels+1)& (0+255),b
  1020  00143E  ECA3  F00A         	call	_cam_get	;wreg free
  1021                           
  1022                           ;main.c: 93:             for (int i = 0; i < 128; i=i+2) {
  1023  001442  0E00               	movlw	0
  1024  001444  0100               	movlb	0	; () banked
  1025  001446  6FC8               	movwf	(main@i_1989+1)& (0+255),b
  1026  001448  0E00               	movlw	0
  1027  00144A  6FC7               	movwf	main@i_1989& (0+255),b
  1028  00144C                     l3972:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 94:                 printf("%d\n",cam_pixels[i]);
  1032  00144C  0E22               	movlw	low STR_1
  1033  00144E  6FB9               	movwf	printf@fmt& (0+255),b
  1034  001450  0E08               	movlw	high STR_1
  1035  001452  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  1036  001454  90D8               	bcf	status,0,c
  1037  001456  35C7               	rlcf	main@i_1989& (0+255),w,b
  1038  001458  6ED9               	movwf	fsr2l,c
  1039  00145A  35C8               	rlcf	(main@i_1989+1)& (0+255),w,b
  1040  00145C  6EDA               	movwf	fsr2h,c
  1041  00145E  0E00               	movlw	low main@cam_pixels
  1042  001460  26D9               	addwf	fsr2l,f,c
  1043  001462  0E01               	movlw	high main@cam_pixels
  1044  001464  22DA               	addwfc	fsr2h,f,c
  1045  001466  CFDE F0BB          	movff	postinc2,?_printf+2
  1046  00146A  CFDD F0BC          	movff	postdec2,?_printf+3
  1047  00146E  EC7C  F00E         	call	_printf	;wreg free
  1048                           
  1049                           ;main.c: 95:             }
  1050  001472  0E02               	movlw	2
  1051  001474  0100               	movlb	0	; () banked
  1052  001476  25C7               	addwf	main@i_1989& (0+255),w,b
  1053  001478  6FC7               	movwf	main@i_1989& (0+255),b
  1054  00147A  0E00               	movlw	0
  1055  00147C  21C8               	addwfc	(main@i_1989+1)& (0+255),w,b
  1056  00147E  6FC8               	movwf	(main@i_1989+1)& (0+255),b
  1057                           
  1058                           ; BSR set to: 0
  1059  001480  BFC8               	btfsc	(main@i_1989+1)& (0+255),7,b
  1060  001482  D7E4               	goto	l3972
  1061  001484  51C8               	movf	(main@i_1989+1)& (0+255),w,b
  1062  001486  E104               	bnz	u2560
  1063  001488  0E80               	movlw	128
  1064  00148A  5DC7               	subwf	main@i_1989& (0+255),w,b
  1065  00148C  A0D8               	btfss	status,0,c
  1066  00148E  D7DE               	goto	l3972
  1067  001490                     u2560:
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;main.c: 96:             printf("\n********** NEW SCAN **********\n");
  1071  001490  0E01               	movlw	low STR_2
  1072  001492  6FB9               	movwf	printf@fmt& (0+255),b
  1073  001494  0E08               	movlw	high STR_2
  1074  001496  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  1075  001498  EC7C  F00E         	call	_printf	;wreg free
  1076  00149C  D7AE               	goto	l3948
  1077  00149E                     __end_of_main:
  1078                           	opt callstack 0
  1079                           
  1080 ;; *************** function _printf *****************
  1081 ;; Defined at:
  1082 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1085 ;;		 -> STR_2(33), STR_1(4), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  ap              2   95[BANK0 ] PTR void [1]
  1088 ;;		 -> ?_printf(2), 
  1089 ;;  ret             2    0        int 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  2   89[BANK0 ] int 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1099 ;;      Params:         0       4       0       0       0       0       0       0       0
  1100 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1102 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1103 ;;Total ram usage:        8 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:   16
  1106 ;; This function calls:
  1107 ;;		_vfprintf
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text1
  1114  001CF8                     __ptext1:
  1115                           	opt callstack 0
  1116  001CF8                     _printf:
  1117                           	opt callstack 14
  1118                           
  1119                           ;incstack = 0
  1120  001CF8  0EBB               	movlw	low (?_printf+2)
  1121  001CFA  0100               	movlb	0	; () banked
  1122  001CFC  6FBF               	movwf	printf@ap& (0+255),b
  1123  001CFE  0E00               	movlw	high (?_printf+2)
  1124  001D00  6FC0               	movwf	(printf@ap+1)& (0+255),b
  1125                           
  1126                           ; BSR set to: 0
  1127  001D02  0E00               	movlw	0
  1128  001D04  6FB1               	movwf	vfprintf@fp& (0+255),b
  1129  001D06  0E00               	movlw	0
  1130  001D08  6FB2               	movwf	(vfprintf@fp+1)& (0+255),b
  1131  001D0A  C0B9  F0B3         	movff	printf@fmt,vfprintf@fmt
  1132  001D0E  C0BA  F0B4         	movff	printf@fmt+1,vfprintf@fmt+1
  1133  001D12  0EBF               	movlw	low printf@ap
  1134  001D14  6FB5               	movwf	vfprintf@ap& (0+255),b
  1135  001D16  0E00               	movlw	high printf@ap
  1136  001D18  6FB6               	movwf	(vfprintf@ap+1)& (0+255),b
  1137  001D1A  ECAA  F00C         	call	_vfprintf	;wreg free
  1138  001D1E  0012               	return		;funcret
  1139  001D20                     __end_of_printf:
  1140                           	opt callstack 0
  1141                           
  1142 ;; *************** function _vfprintf *****************
  1143 ;; Defined at:
  1144 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  fp              2   81[BANK0 ] PTR struct _IO_FILE
  1147 ;;		 -> NULL(0), 
  1148 ;;  fmt             2   83[BANK0 ] PTR const unsigned char 
  1149 ;;		 -> STR_2(33), STR_1(4), 
  1150 ;;  ap              2   85[BANK0 ] PTR PTR void 
  1151 ;;		 -> printf@ap(2), 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  cfmt            2   87[BANK0 ] PTR unsigned char 
  1154 ;;		 -> STR_2(33), STR_1(4), 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  2   81[BANK0 ] int 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         0       6       0       0       0       0       0       0       0
  1165 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1167 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1168 ;;Total ram usage:        8 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:   15
  1171 ;; This function calls:
  1172 ;;		_vfpfcnvrt
  1173 ;; This function is called by:
  1174 ;;		_printf
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text2
  1179  001954                     __ptext2:
  1180                           	opt callstack 0
  1181  001954                     _vfprintf:
  1182                           	opt callstack 14
  1183                           
  1184                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  1185                           
  1186                           ;incstack = 0
  1187  001954  C0B3  F0B7         	movff	vfprintf@fmt,vfprintf@cfmt
  1188  001958  C0B4  F0B8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1189                           
  1190                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1191  00195C  0E00               	movlw	0
  1192  00195E  0100               	movlb	0	; () banked
  1193  001960  6FD0               	movwf	(_nout+1)& (0+255),b
  1194  001962  0E00               	movlw	0
  1195  001964  6FCF               	movwf	_nout& (0+255),b
  1196                           
  1197                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1198  001966  D013               	goto	l3760
  1199  001968                     l3758:
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1203  001968  C0B1  F0A1         	movff	vfprintf@fp,vfpfcnvrt@fp
  1204  00196C  C0B2  F0A2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1205  001970  0EB7               	movlw	low vfprintf@cfmt
  1206  001972  6FA3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1207  001974  0E00               	movlw	high vfprintf@cfmt
  1208  001976  6FA4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1209  001978  C0B5  F0A5         	movff	vfprintf@ap,vfpfcnvrt@ap
  1210  00197C  C0B6  F0A6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1211  001980  ECE0  F006         	call	_vfpfcnvrt	;wreg free
  1212  001984  0100               	movlb	0	; () banked
  1213  001986  51A1               	movf	?_vfpfcnvrt& (0+255),w,b
  1214  001988  27CF               	addwf	_nout& (0+255),f,b
  1215  00198A  51A2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1216  00198C  23D0               	addwfc	(_nout+1)& (0+255),f,b
  1217  00198E                     l3760:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1221  00198E  C0B7  FFF6         	movff	vfprintf@cfmt,tblptrl
  1222  001992  C0B8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1223  001996                     	if	0	;tblptru may be non-zero
  1224  001996                     	endif
  1225  001996                     	if	0	;tblptru may be non-zero
  1226  001996                     	endif
  1227  001996  0008               	tblrd		*
  1228  001998  50F5               	movf	tablat,w,c
  1229  00199A  0900               	iorlw	0
  1230  00199C  A4D8               	btfss	status,2,c
  1231  00199E  D7E4               	goto	l3758
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  1235  0019A0  C0CF  F0B1         	movff	_nout,?_vfprintf
  1236  0019A4  C0D0  F0B2         	movff	_nout+1,?_vfprintf+1
  1237                           
  1238                           ; BSR set to: 0
  1239  0019A8  0012               	return		;funcret
  1240  0019AA                     __end_of_vfprintf:
  1241                           	opt callstack 0
  1242                           
  1243 ;; *************** function _vfpfcnvrt *****************
  1244 ;; Defined at:
  1245 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  1248 ;;		 -> NULL(0), 
  1249 ;;  fmt             2   67[BANK0 ] PTR PTR unsigned char 
  1250 ;;		 -> vfprintf@cfmt(2), 
  1251 ;;  ap              2   69[BANK0 ] PTR PTR void 
  1252 ;;		 -> printf@ap(2), 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  ll              8   73[BANK0 ] long long 
  1255 ;;  llu             8    0        unsigned long long 
  1256 ;;  f               4    0        unsigned long long 
  1257 ;;  vp              3    0        PTR void 
  1258 ;;  ct              3    0        unsigned char [3]
  1259 ;;  cp              3    0        PTR unsigned char 
  1260 ;;  i               2    0        int 
  1261 ;;  done            2    0        int 
  1262 ;;  c               1    0        unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2   65[BANK0 ] int 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1272 ;;      Params:         0       6       0       0       0       0       0       0       0
  1273 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1274 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1275 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1276 ;;Total ram usage:       16 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:   14
  1279 ;; This function calls:
  1280 ;;		_dtoa
  1281 ;;		_fputc
  1282 ;; This function is called by:
  1283 ;;		_vfprintf
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text3
  1288  000DC0                     __ptext3:
  1289                           	opt callstack 0
  1290  000DC0                     _vfpfcnvrt:
  1291                           	opt callstack 14
  1292                           
  1293                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;incstack = 0
  1297  000DC0  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1298  000DC4  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1299  000DC8  CFDE FFF6          	movff	postinc2,tblptrl
  1300  000DCC  CFDD FFF7          	movff	postdec2,tblptrh
  1301  000DD0                     	if	0	;tblptru may be non-zero
  1302  000DD0                     	endif
  1303  000DD0                     	if	0	;tblptru may be non-zero
  1304  000DD0                     	endif
  1305  000DD0  0008               	tblrd		*
  1306  000DD2  50F5               	movf	tablat,w,c
  1307  000DD4  0A25               	xorlw	37
  1308  000DD6  A4D8               	btfss	status,2,c
  1309  000DD8  D09B               	goto	l3274
  1310                           
  1311                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1312  000DDA  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313  000DDE  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314  000DE2  2ADE               	incf	postinc2,f,c
  1315  000DE4  0E00               	movlw	0
  1316  000DE6  22DD               	addwfc	postdec2,f,c
  1317                           
  1318                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  1319  000DE8  0E00               	movlw	0
  1320  000DEA  0100               	movlb	0	; () banked
  1321  000DEC  6FD2               	movwf	(_width+1)& (0+255),b
  1322  000DEE  0E00               	movlw	0
  1323  000DF0  6FD1               	movwf	_width& (0+255),b
  1324  000DF2  C0D1  F0D5         	movff	_width,_flags
  1325  000DF6  C0D2  F0D6         	movff	_width+1,_flags+1
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  1329  000DFA  69D3               	setf	_prec& (0+255),b
  1330  000DFC  69D4               	setf	(_prec+1)& (0+255),b
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1334  000DFE  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335  000E02  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336  000E06  CFDE FFF6          	movff	postinc2,tblptrl
  1337  000E0A  CFDD FFF7          	movff	postdec2,tblptrh
  1338  000E0E                     	if	0	;tblptru may be non-zero
  1339  000E0E                     	endif
  1340  000E0E                     	if	0	;tblptru may be non-zero
  1341  000E0E                     	endif
  1342  000E0E  0008               	tblrd		*
  1343  000E10  50F5               	movf	tablat,w,c
  1344  000E12  0A64               	xorlw	100
  1345  000E14  B4D8               	btfsc	status,2,c
  1346  000E16  D00D               	goto	u1750
  1347                           
  1348                           ; BSR set to: 0
  1349  000E18  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1350  000E1C  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1351  000E20  CFDE FFF6          	movff	postinc2,tblptrl
  1352  000E24  CFDD FFF7          	movff	postdec2,tblptrh
  1353  000E28                     	if	0	;tblptru may be non-zero
  1354  000E28                     	endif
  1355  000E28                     	if	0	;tblptru may be non-zero
  1356  000E28                     	endif
  1357  000E28  0008               	tblrd		*
  1358  000E2A  50F5               	movf	tablat,w,c
  1359  000E2C  0A69               	xorlw	105
  1360  000E2E  A4D8               	btfss	status,2,c
  1361  000E30  D03F               	goto	l3258
  1362  000E32                     u1750:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  1366  000E32  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1367  000E36  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1368  000E3A  2ADE               	incf	postinc2,f,c
  1369  000E3C  0E00               	movlw	0
  1370  000E3E  22DD               	addwfc	postdec2,f,c
  1371                           
  1372                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1373  000E40  C0A5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1374  000E44  C0A6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1375  000E48  CFDF F0A7          	movff	indf2,??_vfpfcnvrt
  1376  000E4C  0E02               	movlw	2
  1377  000E4E  26DE               	addwf	postinc2,f,c
  1378  000E50  CFDF F0A8          	movff	indf2,??_vfpfcnvrt+1
  1379  000E54  0E00               	movlw	0
  1380  000E56  22DD               	addwfc	postdec2,f,c
  1381  000E58  C0A7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1382  000E5C  C0A8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1383  000E60  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  1384  000E64  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  1385  000E68  0E00               	movlw	0
  1386  000E6A  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1387  000E6C  0EFF               	movlw	-1
  1388  000E6E  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1389  000E70  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1390  000E72  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1391  000E74  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1392  000E76  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1393  000E78  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  1397  000E7A  C0A1  F07D         	movff	vfpfcnvrt@fp,dtoa@fp
  1398  000E7E  C0A2  F07E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1399  000E82  C0A9  F07F         	movff	vfpfcnvrt@ll,dtoa@d
  1400  000E86  C0AA  F080         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1401  000E8A  C0AB  F081         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1402  000E8E  C0AC  F082         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1403  000E92  C0AD  F083         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1404  000E96  C0AE  F084         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1405  000E9A  C0AF  F085         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1406  000E9E  C0B0  F086         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1407  000EA2  ECBD  F005         	call	_dtoa	;wreg free
  1408  000EA6  C07D  F0A1         	movff	?_dtoa,?_vfpfcnvrt
  1409  000EAA  C07E  F0A2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1410  000EAE  0012               	return	
  1411  000EB0                     l3258:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  1415  000EB0  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1416  000EB4  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1417  000EB8  CFDE FFF6          	movff	postinc2,tblptrl
  1418  000EBC  CFDD FFF7          	movff	postdec2,tblptrh
  1419  000EC0                     	if	0	;tblptru may be non-zero
  1420  000EC0                     	endif
  1421  000EC0                     	if	0	;tblptru may be non-zero
  1422  000EC0                     	endif
  1423  000EC0  0008               	tblrd		*
  1424  000EC2  50F5               	movf	tablat,w,c
  1425  000EC4  0A25               	xorlw	37
  1426  000EC6  A4D8               	btfss	status,2,c
  1427  000EC8  D017               	goto	l3268
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  1431  000ECA  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1432  000ECE  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1433  000ED2  2ADE               	incf	postinc2,f,c
  1434  000ED4  0E00               	movlw	0
  1435  000ED6  22DD               	addwfc	postdec2,f,c
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  1439  000ED8  0E00               	movlw	0
  1440  000EDA  6F63               	movwf	(fputc@c+1)& (0+255),b
  1441  000EDC  0E25               	movlw	37
  1442  000EDE  6F62               	movwf	fputc@c& (0+255),b
  1443  000EE0  C0A1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1444  000EE4  C0A2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1445  000EE8  EC44  F00B         	call	_fputc	;wreg free
  1446  000EEC                     l3264:
  1447                           
  1448                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  1449  000EEC  0E00               	movlw	0
  1450  000EEE  0100               	movlb	0	; () banked
  1451  000EF0  6FA2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1452  000EF2  0E01               	movlw	1
  1453  000EF4  6FA1               	movwf	?_vfpfcnvrt& (0+255),b
  1454  000EF6  0012               	return	
  1455  000EF8                     l3268:
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  1459  000EF8  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1460  000EFC  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1461  000F00  2ADE               	incf	postinc2,f,c
  1462  000F02  0E00               	movlw	0
  1463  000F04  22DD               	addwfc	postdec2,f,c
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  1467  000F06  0E00               	movlw	0
  1468  000F08  6FA2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1469  000F0A  0E00               	movlw	0
  1470  000F0C  6FA1               	movwf	?_vfpfcnvrt& (0+255),b
  1471  000F0E  0012               	return	
  1472  000F10                     l3274:
  1473                           
  1474                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  1475  000F10  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1476  000F14  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1477  000F18  CFDE FFF6          	movff	postinc2,tblptrl
  1478  000F1C  CFDD FFF7          	movff	postdec2,tblptrh
  1479  000F20                     	if	0	;tblptru may be non-zero
  1480  000F20                     	endif
  1481  000F20                     	if	0	;tblptru may be non-zero
  1482  000F20                     	endif
  1483  000F20  0008               	tblrd		*
  1484  000F22  50F5               	movf	tablat,w,c
  1485  000F24  0100               	movlb	0	; () banked
  1486  000F26  6F62               	movwf	fputc@c& (0+255),b
  1487  000F28  6B63               	clrf	(fputc@c+1)& (0+255),b
  1488  000F2A  C0A1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1489  000F2E  C0A2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1490  000F32  EC44  F00B         	call	_fputc	;wreg free
  1491                           
  1492                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1493  000F36  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1494  000F3A  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1495  000F3E  2ADE               	incf	postinc2,f,c
  1496  000F40  0E00               	movlw	0
  1497  000F42  22DD               	addwfc	postdec2,f,c
  1498  000F44  D7D3               	goto	l3264
  1499  000F46                     __end_of_vfpfcnvrt:
  1500                           	opt callstack 0
  1501                           
  1502 ;; *************** function _dtoa *****************
  1503 ;; Defined at:
  1504 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  1507 ;;		 -> NULL(0), 
  1508 ;;  d               8   31[BANK0 ] long long 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  n               8   55[BANK0 ] long long 
  1511 ;;  i               2   63[BANK0 ] int 
  1512 ;;  s               2   53[BANK0 ] int 
  1513 ;;  w               2   51[BANK0 ] int 
  1514 ;;  p               2   49[BANK0 ] int 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  2   29[BANK0 ] int 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         0      10       0       0       0       0       0       0       0
  1525 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1527 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1528 ;;Total ram usage:       36 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:   13
  1531 ;; This function calls:
  1532 ;;		___aodiv
  1533 ;;		___aomod
  1534 ;;		_abs
  1535 ;;		_pad
  1536 ;; This function is called by:
  1537 ;;		_vfpfcnvrt
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text4
  1542  000B7A                     __ptext4:
  1543                           	opt callstack 0
  1544  000B7A                     _dtoa:
  1545                           	opt callstack 14
  1546                           
  1547                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  1548                           
  1549                           ;incstack = 0
  1550  000B7A  C07F  F097         	movff	dtoa@d,dtoa@n
  1551  000B7E  C080  F098         	movff	dtoa@d+1,dtoa@n+1
  1552  000B82  C081  F099         	movff	dtoa@d+2,dtoa@n+2
  1553  000B86  C082  F09A         	movff	dtoa@d+3,dtoa@n+3
  1554  000B8A  C083  F09B         	movff	dtoa@d+4,dtoa@n+4
  1555  000B8E  C084  F09C         	movff	dtoa@d+5,dtoa@n+5
  1556  000B92  C085  F09D         	movff	dtoa@d+6,dtoa@n+6
  1557  000B96  C086  F09E         	movff	dtoa@d+7,dtoa@n+7
  1558                           
  1559                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  1560  000B9A  0100               	movlb	0	; () banked
  1561  000B9C  AF9E               	btfss	(dtoa@n+7)& (0+255),7,b
  1562  000B9E  D002               	goto	u1580
  1563  000BA0  0E01               	movlw	1
  1564  000BA2  D001               	goto	u1590
  1565  000BA4                     u1580:
  1566  000BA4  0E00               	movlw	0
  1567  000BA6                     u1590:
  1568  000BA6  6F95               	movwf	dtoa@s& (0+255),b
  1569  000BA8  6B96               	clrf	(dtoa@s+1)& (0+255),b
  1570                           
  1571                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  1572  000BAA  5195               	movf	dtoa@s& (0+255),w,b
  1573  000BAC  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1574  000BAE  B4D8               	btfsc	status,2,c
  1575  000BB0  D010               	goto	l3152
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  1579  000BB2  1F9E               	comf	(dtoa@n+7)& (0+255),f,b
  1580  000BB4  1F9D               	comf	(dtoa@n+6)& (0+255),f,b
  1581  000BB6  1F9C               	comf	(dtoa@n+5)& (0+255),f,b
  1582  000BB8  1F9B               	comf	(dtoa@n+4)& (0+255),f,b
  1583  000BBA  1F9A               	comf	(dtoa@n+3)& (0+255),f,b
  1584  000BBC  1F99               	comf	(dtoa@n+2)& (0+255),f,b
  1585  000BBE  1F98               	comf	(dtoa@n+1)& (0+255),f,b
  1586  000BC0  6D97               	negf	dtoa@n& (0+255),b
  1587  000BC2  0E00               	movlw	0
  1588  000BC4  2398               	addwfc	(dtoa@n+1)& (0+255),f,b
  1589  000BC6  2399               	addwfc	(dtoa@n+2)& (0+255),f,b
  1590  000BC8  239A               	addwfc	(dtoa@n+3)& (0+255),f,b
  1591  000BCA  239B               	addwfc	(dtoa@n+4)& (0+255),f,b
  1592  000BCC  239C               	addwfc	(dtoa@n+5)& (0+255),f,b
  1593  000BCE  239D               	addwfc	(dtoa@n+6)& (0+255),f,b
  1594  000BD0  239E               	addwfc	(dtoa@n+7)& (0+255),f,b
  1595  000BD2                     l3152:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  1599  000BD2  AFD4               	btfss	(_prec+1)& (0+255),7,b
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  1603  000BD4  93D5               	bcf	_flags& (0+255),1,b
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  1607  000BD6  BFD4               	btfsc	(_prec+1)& (0+255),7,b
  1608  000BD8  D005               	goto	u1620
  1609  000BDA  51D4               	movf	(_prec+1)& (0+255),w,b
  1610  000BDC  E108               	bnz	l1004
  1611  000BDE  05D3               	decf	_prec& (0+255),w,b
  1612  000BE0  B0D8               	btfsc	status,0,c
  1613  000BE2  D005               	goto	l1004
  1614  000BE4                     u1620:
  1615                           
  1616                           ; BSR set to: 0
  1617  000BE4  0E00               	movlw	0
  1618  000BE6  6F92               	movwf	(dtoa@p+1)& (0+255),b
  1619  000BE8  0E01               	movlw	1
  1620  000BEA  6F91               	movwf	dtoa@p& (0+255),b
  1621  000BEC  D004               	goto	l1006
  1622  000BEE                     l1004:
  1623                           
  1624                           ; BSR set to: 0
  1625  000BEE  C0D3  F091         	movff	_prec,dtoa@p
  1626  000BF2  C0D4  F092         	movff	_prec+1,dtoa@p+1
  1627  000BF6                     l1006:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  1631  000BF6  C0D1  F093         	movff	_width,dtoa@w
  1632  000BFA  C0D2  F094         	movff	_width+1,dtoa@w+1
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  1636  000BFE  5195               	movf	dtoa@s& (0+255),w,b
  1637  000C00  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1638  000C02  A4D8               	btfss	status,2,c
  1639  000C04  D002               	goto	u1640
  1640                           
  1641                           ; BSR set to: 0
  1642  000C06  A5D5               	btfss	_flags& (0+255),2,b
  1643  000C08  D003               	goto	l3166
  1644  000C0A                     u1640:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  1648  000C0A  0793               	decf	dtoa@w& (0+255),f,b
  1649  000C0C  A0D8               	btfss	status,0,c
  1650  000C0E  0794               	decf	(dtoa@w+1)& (0+255),f,b
  1651  000C10                     l3166:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  1655  000C10  0E00               	movlw	0
  1656  000C12  6FA0               	movwf	(dtoa@i+1)& (0+255),b
  1657  000C14  0E1F               	movlw	31
  1658  000C16  6F9F               	movwf	dtoa@i& (0+255),b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  1662  000C18  0E00               	movlw	0
  1663  000C1A  6FF9               	movwf	(_dbuf+31)& (0+255),b
  1664                           
  1665                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1666  000C1C  D07D               	goto	l3180
  1667  000C1E                     l3170:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  1671  000C1E  079F               	decf	dtoa@i& (0+255),f,b
  1672  000C20  A0D8               	btfss	status,0,c
  1673  000C22  07A0               	decf	(dtoa@i+1)& (0+255),f,b
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  1677  000C24  0EDA               	movlw	low _dbuf
  1678  000C26  259F               	addwf	dtoa@i& (0+255),w,b
  1679  000C28  6ED9               	movwf	fsr2l,c
  1680  000C2A  0E00               	movlw	high _dbuf
  1681  000C2C  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1682  000C2E  6EDA               	movwf	fsr2h,c
  1683  000C30  C097  F060         	movff	dtoa@n,___aomod@dividend
  1684  000C34  C098  F061         	movff	dtoa@n+1,___aomod@dividend+1
  1685  000C38  C099  F062         	movff	dtoa@n+2,___aomod@dividend+2
  1686  000C3C  C09A  F063         	movff	dtoa@n+3,___aomod@dividend+3
  1687  000C40  C09B  F064         	movff	dtoa@n+4,___aomod@dividend+4
  1688  000C44  C09C  F065         	movff	dtoa@n+5,___aomod@dividend+5
  1689  000C48  C09D  F066         	movff	dtoa@n+6,___aomod@dividend+6
  1690  000C4C  C09E  F067         	movff	dtoa@n+7,___aomod@dividend+7
  1691  000C50  0E0A               	movlw	10
  1692  000C52  6F68               	movwf	___aomod@divisor& (0+255),b
  1693  000C54  0E00               	movlw	0
  1694  000C56  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  1695  000C58  0E00               	movlw	0
  1696  000C5A  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  1697  000C5C  0E00               	movlw	0
  1698  000C5E  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  1699  000C60  0E00               	movlw	0
  1700  000C62  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  1701  000C64  0E00               	movlw	0
  1702  000C66  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  1703  000C68  0E00               	movlw	0
  1704  000C6A  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  1705  000C6C  0E00               	movlw	0
  1706  000C6E  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  1707  000C70  ECE8  F008         	call	___aomod	;wreg free
  1708  000C74  C060  F087         	movff	?___aomod,??_dtoa
  1709  000C78  C061  F088         	movff	?___aomod+1,??_dtoa+1
  1710  000C7C  C062  F089         	movff	?___aomod+2,??_dtoa+2
  1711  000C80  C063  F08A         	movff	?___aomod+3,??_dtoa+3
  1712  000C84  C064  F08B         	movff	?___aomod+4,??_dtoa+4
  1713  000C88  C065  F08C         	movff	?___aomod+5,??_dtoa+5
  1714  000C8C  C066  F08D         	movff	?___aomod+6,??_dtoa+6
  1715  000C90  C067  F08E         	movff	?___aomod+7,??_dtoa+7
  1716  000C94  C087  F072         	movff	??_dtoa,abs@a
  1717  000C98  C089  F073         	movff	??_dtoa+2,abs@a+1
  1718  000C9C  EC76  F00D         	call	_abs	;wreg free
  1719  000CA0  0100               	movlb	0	; () banked
  1720  000CA2  5172               	movf	?_abs& (0+255),w,b
  1721  000CA4  0F30               	addlw	48
  1722  000CA6  6EDF               	movwf	indf2,c
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  1726  000CA8  0791               	decf	dtoa@p& (0+255),f,b
  1727  000CAA  A0D8               	btfss	status,0,c
  1728  000CAC  0792               	decf	(dtoa@p+1)& (0+255),f,b
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  1732  000CAE  0793               	decf	dtoa@w& (0+255),f,b
  1733  000CB0  A0D8               	btfss	status,0,c
  1734  000CB2  0794               	decf	(dtoa@w+1)& (0+255),f,b
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  1738  000CB4  C097  F060         	movff	dtoa@n,___aodiv@dividend
  1739  000CB8  C098  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  1740  000CBC  C099  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  1741  000CC0  C09A  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  1742  000CC4  C09B  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  1743  000CC8  C09C  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  1744  000CCC  C09D  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  1745  000CD0  C09E  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  1746  000CD4  0E0A               	movlw	10
  1747  000CD6  6F68               	movwf	___aodiv@divisor& (0+255),b
  1748  000CD8  0E00               	movlw	0
  1749  000CDA  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  1750  000CDC  0E00               	movlw	0
  1751  000CDE  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  1752  000CE0  0E00               	movlw	0
  1753  000CE2  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  1754  000CE4  0E00               	movlw	0
  1755  000CE6  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  1756  000CE8  0E00               	movlw	0
  1757  000CEA  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  1758  000CEC  0E00               	movlw	0
  1759  000CEE  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  1760  000CF0  0E00               	movlw	0
  1761  000CF2  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  1762  000CF4  ECA3  F007         	call	___aodiv	;wreg free
  1763  000CF8  C060  F097         	movff	?___aodiv,dtoa@n
  1764  000CFC  C061  F098         	movff	?___aodiv+1,dtoa@n+1
  1765  000D00  C062  F099         	movff	?___aodiv+2,dtoa@n+2
  1766  000D04  C063  F09A         	movff	?___aodiv+3,dtoa@n+3
  1767  000D08  C064  F09B         	movff	?___aodiv+4,dtoa@n+4
  1768  000D0C  C065  F09C         	movff	?___aodiv+5,dtoa@n+5
  1769  000D10  C066  F09D         	movff	?___aodiv+6,dtoa@n+6
  1770  000D14  C067  F09E         	movff	?___aodiv+7,dtoa@n+7
  1771  000D18                     l3180:
  1772                           
  1773                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1774  000D18  0100               	movlb	0	; () banked
  1775  000D1A  BFA0               	btfsc	(dtoa@i+1)& (0+255),7,b
  1776  000D1C  D01F               	goto	u1690
  1777  000D1E  51A0               	movf	(dtoa@i+1)& (0+255),w,b
  1778  000D20  E103               	bnz	u1650
  1779  000D22  059F               	decf	dtoa@i& (0+255),w,b
  1780  000D24  A0D8               	btfss	status,0,c
  1781  000D26  D01A               	goto	u1690
  1782  000D28                     u1650:
  1783                           
  1784                           ; BSR set to: 0
  1785  000D28  5197               	movf	dtoa@n& (0+255),w,b
  1786  000D2A  1198               	iorwf	(dtoa@n+1)& (0+255),w,b
  1787  000D2C  1199               	iorwf	(dtoa@n+2)& (0+255),w,b
  1788  000D2E  119A               	iorwf	(dtoa@n+3)& (0+255),w,b
  1789  000D30  119B               	iorwf	(dtoa@n+4)& (0+255),w,b
  1790  000D32  119C               	iorwf	(dtoa@n+5)& (0+255),w,b
  1791  000D34  119D               	iorwf	(dtoa@n+6)& (0+255),w,b
  1792  000D36  119E               	iorwf	(dtoa@n+7)& (0+255),w,b
  1793  000D38  A4D8               	btfss	status,2,c
  1794  000D3A  D771               	goto	l3170
  1795                           
  1796                           ; BSR set to: 0
  1797  000D3C  BF92               	btfsc	(dtoa@p+1)& (0+255),7,b
  1798  000D3E  D005               	goto	u1670
  1799  000D40  5192               	movf	(dtoa@p+1)& (0+255),w,b
  1800  000D42  E102               	bnz	u1671
  1801  000D44  0591               	decf	dtoa@p& (0+255),w,b
  1802  000D46  B0D8               	btfsc	status,0,c
  1803  000D48                     u1671:
  1804  000D48  D76A               	goto	l3170
  1805  000D4A                     u1670:
  1806                           
  1807                           ; BSR set to: 0
  1808  000D4A  BF94               	btfsc	(dtoa@w+1)& (0+255),7,b
  1809  000D4C  D007               	goto	u1690
  1810  000D4E  5194               	movf	(dtoa@w+1)& (0+255),w,b
  1811  000D50  E103               	bnz	u1680
  1812  000D52  0593               	decf	dtoa@w& (0+255),w,b
  1813  000D54  A0D8               	btfss	status,0,c
  1814  000D56  D002               	goto	u1690
  1815  000D58                     u1680:
  1816                           
  1817                           ; BSR set to: 0
  1818  000D58  B3D5               	btfsc	_flags& (0+255),1,b
  1819  000D5A  D761               	goto	l3170
  1820  000D5C                     u1690:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  1824  000D5C  5195               	movf	dtoa@s& (0+255),w,b
  1825  000D5E  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1826  000D60  A4D8               	btfss	status,2,c
  1827  000D62  D002               	goto	u1710
  1828                           
  1829                           ; BSR set to: 0
  1830  000D64  A5D5               	btfss	_flags& (0+255),2,b
  1831  000D66  D017               	goto	l3204
  1832  000D68                     u1710:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  1836  000D68  079F               	decf	dtoa@i& (0+255),f,b
  1837  000D6A  A0D8               	btfss	status,0,c
  1838  000D6C  07A0               	decf	(dtoa@i+1)& (0+255),f,b
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  1842  000D6E  5195               	movf	dtoa@s& (0+255),w,b
  1843  000D70  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1844  000D72  A4D8               	btfss	status,2,c
  1845  000D74  D004               	goto	l3200
  1846                           
  1847                           ; BSR set to: 0
  1848  000D76  0E00               	movlw	0
  1849  000D78  6F90               	movwf	(_dtoa$2646+1)& (0+255),b
  1850  000D7A  0E2B               	movlw	43
  1851  000D7C  D003               	goto	L1
  1852  000D7E                     l3200:
  1853                           
  1854                           ; BSR set to: 0
  1855  000D7E  0E00               	movlw	0
  1856  000D80  6F90               	movwf	(_dtoa$2646+1)& (0+255),b
  1857  000D82  0E2D               	movlw	45
  1858  000D84                     L1:
  1859  000D84  6F8F               	movwf	_dtoa$2646& (0+255),b
  1860                           
  1861                           ; BSR set to: 0
  1862  000D86  0EDA               	movlw	low _dbuf
  1863  000D88  259F               	addwf	dtoa@i& (0+255),w,b
  1864  000D8A  6ED9               	movwf	fsr2l,c
  1865  000D8C  0E00               	movlw	high _dbuf
  1866  000D8E  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1867  000D90  6EDA               	movwf	fsr2h,c
  1868  000D92  C08F  FFDF         	movff	_dtoa$2646,indf2
  1869  000D96                     l3204:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  1873  000D96  C07D  F072         	movff	dtoa@fp,pad@fp
  1874  000D9A  C07E  F073         	movff	dtoa@fp+1,pad@fp+1
  1875  000D9E  0EDA               	movlw	low _dbuf
  1876  000DA0  259F               	addwf	dtoa@i& (0+255),w,b
  1877  000DA2  6F74               	movwf	pad@buf& (0+255),b
  1878  000DA4  0E00               	movlw	high _dbuf
  1879  000DA6  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1880  000DA8  6F75               	movwf	(pad@buf+1)& (0+255),b
  1881  000DAA  C093  F076         	movff	dtoa@w,pad@p
  1882  000DAE  C094  F077         	movff	dtoa@w+1,pad@p+1
  1883  000DB2  ECF5  F00A         	call	_pad	;wreg free
  1884  000DB6  C072  F07D         	movff	?_pad,?_dtoa
  1885  000DBA  C073  F07E         	movff	?_pad+1,?_dtoa+1
  1886  000DBE  0012               	return		;funcret
  1887  000DC0                     __end_of_dtoa:
  1888                           	opt callstack 0
  1889                           
  1890 ;; *************** function _pad *****************
  1891 ;; Defined at:
  1892 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  1895 ;;		 -> NULL(0), 
  1896 ;;  buf             2   20[BANK0 ] PTR unsigned char 
  1897 ;;		 -> dbuf(32), 
  1898 ;;  p               2   22[BANK0 ] int 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  w               2   27[BANK0 ] int 
  1901 ;;  i               2   25[BANK0 ] int 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  2   18[BANK0 ] int 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1911 ;;      Params:         0       6       0       0       0       0       0       0       0
  1912 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1913 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1914 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1915 ;;Total ram usage:       11 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:   12
  1918 ;; This function calls:
  1919 ;;		_fputc
  1920 ;;		_fputs
  1921 ;;		_strlen
  1922 ;; This function is called by:
  1923 ;;		_dtoa
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text5
  1928  0015EA                     __ptext5:
  1929                           	opt callstack 0
  1930  0015EA                     _pad:
  1931                           	opt callstack 14
  1932                           
  1933                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1934                           
  1935                           ;incstack = 0
  1936  0015EA  0100               	movlb	0	; () banked
  1937  0015EC  A1D5               	btfss	_flags& (0+255),0,b
  1938  0015EE  D00A               	goto	l3030
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1942  0015F0  C074  F06B         	movff	pad@buf,fputs@s
  1943  0015F4  C075  F06C         	movff	pad@buf+1,fputs@s+1
  1944  0015F8  C072  F06D         	movff	pad@fp,fputs@fp
  1945  0015FC  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  1946  001600  EC3D  F00D         	call	_fputs	;wreg free
  1947  001604                     l3030:
  1948                           
  1949                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1950  001604  0100               	movlb	0	; () banked
  1951  001606  BF77               	btfsc	(pad@p+1)& (0+255),7,b
  1952  001608  D005               	goto	l3034
  1953                           
  1954                           ; BSR set to: 0
  1955  00160A  C076  F07B         	movff	pad@p,pad@w
  1956  00160E  C077  F07C         	movff	pad@p+1,pad@w+1
  1957  001612  D004               	goto	l993
  1958  001614                     l3034:
  1959                           
  1960                           ; BSR set to: 0
  1961  001614  0E00               	movlw	0
  1962  001616  6F7C               	movwf	(pad@w+1)& (0+255),b
  1963  001618  0E00               	movlw	0
  1964  00161A  6F7B               	movwf	pad@w& (0+255),b
  1965  00161C                     l993:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1969  00161C  0E00               	movlw	0
  1970  00161E  6F7A               	movwf	(pad@i+1)& (0+255),b
  1971  001620  0E00               	movlw	0
  1972  001622  6F79               	movwf	pad@i& (0+255),b
  1973                           
  1974                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1975  001624  D00D               	goto	l3040
  1976  001626                     l3036:
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  1980  001626  0E00               	movlw	0
  1981  001628  6F63               	movwf	(fputc@c+1)& (0+255),b
  1982  00162A  0E20               	movlw	32
  1983  00162C  6F62               	movwf	fputc@c& (0+255),b
  1984  00162E  C072  F064         	movff	pad@fp,fputc@fp
  1985  001632  C073  F065         	movff	pad@fp+1,fputc@fp+1
  1986  001636  EC44  F00B         	call	_fputc	;wreg free
  1987                           
  1988                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1989  00163A  0100               	movlb	0	; () banked
  1990  00163C  4B79               	infsnz	pad@i& (0+255),f,b
  1991  00163E  2B7A               	incf	(pad@i+1)& (0+255),f,b
  1992  001640                     l3040:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  1996  001640  517B               	movf	pad@w& (0+255),w,b
  1997  001642  5D79               	subwf	pad@i& (0+255),w,b
  1998  001644  517A               	movf	(pad@i+1)& (0+255),w,b
  1999  001646  0A80               	xorlw	128
  2000  001648  6F78               	movwf	??_pad& (0+255),b
  2001  00164A  517C               	movf	(pad@w+1)& (0+255),w,b
  2002  00164C  0A80               	xorlw	128
  2003  00164E  5978               	subwfb	??_pad& (0+255),w,b
  2004  001650  A0D8               	btfss	status,0,c
  2005  001652  D7E9               	goto	l3036
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  2009  001654  B1D5               	btfsc	_flags& (0+255),0,b
  2010  001656  D00A               	goto	l3044
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  2014  001658  C074  F06B         	movff	pad@buf,fputs@s
  2015  00165C  C075  F06C         	movff	pad@buf+1,fputs@s+1
  2016  001660  C072  F06D         	movff	pad@fp,fputs@fp
  2017  001664  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  2018  001668  EC3D  F00D         	call	_fputs	;wreg free
  2019  00166C                     l3044:
  2020                           
  2021                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  2022  00166C  C074  F060         	movff	pad@buf,strlen@s
  2023  001670  C075  F061         	movff	pad@buf+1,strlen@s+1
  2024  001674  EC0C  F00E         	call	_strlen	;wreg free
  2025  001678  0100               	movlb	0	; () banked
  2026  00167A  517B               	movf	pad@w& (0+255),w,b
  2027  00167C  2560               	addwf	?_strlen& (0+255),w,b
  2028  00167E  6F72               	movwf	?_pad& (0+255),b
  2029  001680  517C               	movf	(pad@w+1)& (0+255),w,b
  2030  001682  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  2031  001684  6F73               	movwf	(?_pad+1)& (0+255),b
  2032                           
  2033                           ; BSR set to: 0
  2034  001686  0012               	return		;funcret
  2035  001688                     __end_of_pad:
  2036                           	opt callstack 0
  2037                           
  2038 ;; *************** function _strlen *****************
  2039 ;; Defined at:
  2040 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2043 ;;		 -> dbuf(32), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  2046 ;;		 -> dbuf(32), 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  2    0[BANK0 ] unsigned int 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2056 ;;      Params:         0       2       0       0       0       0       0       0       0
  2057 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2059 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2060 ;;Total ram usage:        4 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    8
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_pad
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text6
  2071  001C18                     __ptext6:
  2072                           	opt callstack 0
  2073  001C18                     _strlen:
  2074                           	opt callstack 17
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;incstack = 0
  2078  001C18  C060  F062         	movff	strlen@s,strlen@a
  2079  001C1C  C061  F063         	movff	strlen@s+1,strlen@a+1
  2080  001C20  D003               	goto	l3020
  2081  001C22                     l3018:
  2082  001C22  0100               	movlb	0	; () banked
  2083  001C24  4B60               	infsnz	strlen@s& (0+255),f,b
  2084  001C26  2B61               	incf	(strlen@s+1)& (0+255),f,b
  2085  001C28                     l3020:
  2086  001C28  C060  FFD9         	movff	strlen@s,fsr2l
  2087  001C2C  C061  FFDA         	movff	strlen@s+1,fsr2h
  2088  001C30  50DF               	movf	indf2,w,c
  2089  001C32  A4D8               	btfss	status,2,c
  2090  001C34  D7F6               	goto	l3018
  2091  001C36  0100               	movlb	0	; () banked
  2092  001C38  5162               	movf	strlen@a& (0+255),w,b
  2093  001C3A  5D60               	subwf	strlen@s& (0+255),w,b
  2094  001C3C  6F60               	movwf	?_strlen& (0+255),b
  2095  001C3E  5163               	movf	(strlen@a+1)& (0+255),w,b
  2096  001C40  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  2097  001C42  6F61               	movwf	(?_strlen+1)& (0+255),b
  2098                           
  2099                           ; BSR set to: 0
  2100  001C44  0012               	return		;funcret
  2101  001C46                     __end_of_strlen:
  2102                           	opt callstack 0
  2103                           
  2104 ;; *************** function _fputs *****************
  2105 ;; Defined at:
  2106 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  s               2   11[BANK0 ] PTR const unsigned char 
  2109 ;;		 -> dbuf(32), 
  2110 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  2111 ;;		 -> NULL(0), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  i               2   16[BANK0 ] int 
  2114 ;;  c               1   15[BANK0 ] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2   11[BANK0 ] int 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2124 ;;      Params:         0       4       0       0       0       0       0       0       0
  2125 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2127 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2128 ;;Total ram usage:        7 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:   11
  2131 ;; This function calls:
  2132 ;;		_fputc
  2133 ;; This function is called by:
  2134 ;;		_pad
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           	psect	text7
  2139  001A7A                     __ptext7:
  2140                           	opt callstack 0
  2141  001A7A                     _fputs:
  2142                           	opt callstack 14
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;incstack = 0
  2146  001A7A  0E00               	movlw	0
  2147  001A7C  0100               	movlb	0	; () banked
  2148  001A7E  6F71               	movwf	(fputs@i+1)& (0+255),b
  2149  001A80  0E00               	movlw	0
  2150  001A82  6F70               	movwf	fputs@i& (0+255),b
  2151  001A84  D00C               	goto	l3014
  2152  001A86                     l3010:
  2153                           
  2154                           ; BSR set to: 0
  2155  001A86  C06F  F062         	movff	fputs@c,fputc@c
  2156  001A8A  6B63               	clrf	(fputc@c+1)& (0+255),b
  2157  001A8C  C06D  F064         	movff	fputs@fp,fputc@fp
  2158  001A90  C06E  F065         	movff	fputs@fp+1,fputc@fp+1
  2159  001A94  EC44  F00B         	call	_fputc	;wreg free
  2160  001A98  0100               	movlb	0	; () banked
  2161  001A9A  4B70               	infsnz	fputs@i& (0+255),f,b
  2162  001A9C  2B71               	incf	(fputs@i+1)& (0+255),f,b
  2163  001A9E                     l3014:
  2164                           
  2165                           ; BSR set to: 0
  2166  001A9E  5170               	movf	fputs@i& (0+255),w,b
  2167  001AA0  256B               	addwf	fputs@s& (0+255),w,b
  2168  001AA2  6ED9               	movwf	fsr2l,c
  2169  001AA4  5171               	movf	(fputs@i+1)& (0+255),w,b
  2170  001AA6  216C               	addwfc	(fputs@s+1)& (0+255),w,b
  2171  001AA8  6EDA               	movwf	fsr2h,c
  2172  001AAA  50DF               	movf	indf2,w,c
  2173  001AAC  6F6F               	movwf	fputs@c& (0+255),b
  2174  001AAE  516F               	movf	fputs@c& (0+255),w,b
  2175  001AB0  B4D8               	btfsc	status,2,c
  2176  001AB2  0012               	return	
  2177  001AB4  D7E8               	goto	l3010
  2178  001AB6                     __end_of_fputs:
  2179                           	opt callstack 0
  2180                           
  2181 ;; *************** function _fputc *****************
  2182 ;; Defined at:
  2183 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  c               2    2[BANK0 ] int 
  2186 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  2187 ;;		 -> NULL(0), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  2    2[BANK0 ] int 
  2192 ;; Registers used:
  2193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2199 ;;      Params:         0       4       0       0       0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2201 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2202 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2203 ;;Total ram usage:        9 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:   10
  2206 ;; This function calls:
  2207 ;;		_putch
  2208 ;; This function is called by:
  2209 ;;		_pad
  2210 ;;		_vfpfcnvrt
  2211 ;;		_fputs
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text8
  2216  001688                     __ptext8:
  2217                           	opt callstack 0
  2218  001688                     _fputc:
  2219                           	opt callstack 17
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;incstack = 0
  2223  001688  0100               	movlb	0	; () banked
  2224  00168A  5164               	movf	fputc@fp& (0+255),w,b
  2225  00168C  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  2226  00168E  B4D8               	btfsc	status,2,c
  2227  001690  D004               	goto	u1340
  2228                           
  2229                           ; BSR set to: 0
  2230  001692  5164               	movf	fputc@fp& (0+255),w,b
  2231  001694  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  2232  001696  A4D8               	btfss	status,2,c
  2233  001698  D004               	goto	l3000
  2234  00169A                     u1340:
  2235                           
  2236                           ; BSR set to: 0
  2237  00169A  5162               	movf	fputc@c& (0+255),w,b
  2238  00169C  EC52  F00F         	call	_putch
  2239  0016A0  0012               	return	
  2240  0016A2                     l3000:
  2241                           
  2242                           ; BSR set to: 0
  2243  0016A2  EE20 F004          	lfsr	2,4
  2244  0016A6  5164               	movf	fputc@fp& (0+255),w,b
  2245  0016A8  26D9               	addwf	fsr2l,f,c
  2246  0016AA  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2247  0016AC  22DA               	addwfc	fsr2h,f,c
  2248  0016AE  50DE               	movf	postinc2,w,c
  2249  0016B0  10DE               	iorwf	postinc2,w,c
  2250  0016B2  B4D8               	btfsc	status,2,c
  2251  0016B4  D016               	goto	u1360
  2252                           
  2253                           ; BSR set to: 0
  2254  0016B6  EE20 F004          	lfsr	2,4
  2255  0016BA  5164               	movf	fputc@fp& (0+255),w,b
  2256  0016BC  26D9               	addwf	fsr2l,f,c
  2257  0016BE  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2258  0016C0  22DA               	addwfc	fsr2h,f,c
  2259  0016C2  EE10 F002          	lfsr	1,2
  2260  0016C6  5164               	movf	fputc@fp& (0+255),w,b
  2261  0016C8  26E1               	addwf	fsr1l,f,c
  2262  0016CA  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2263  0016CC  22E2               	addwfc	fsr1h,f,c
  2264  0016CE  50DE               	movf	postinc2,w,c
  2265  0016D0  5CE6               	subwf	postinc1,w,c
  2266  0016D2  50E6               	movf	postinc1,w,c
  2267  0016D4  0A80               	xorlw	128
  2268  0016D6  6F6A               	movwf	(??_fputc+4)& (0+255),b
  2269  0016D8  50DE               	movf	postinc2,w,c
  2270  0016DA  0A80               	xorlw	128
  2271  0016DC  596A               	subwfb	(??_fputc+4)& (0+255),w,b
  2272  0016DE  B0D8               	btfsc	status,0,c
  2273  0016E0  0012               	return	
  2274  0016E2                     u1360:
  2275                           
  2276                           ; BSR set to: 0
  2277  0016E2  EE20 F002          	lfsr	2,2
  2278  0016E6  5164               	movf	fputc@fp& (0+255),w,b
  2279  0016E8  26D9               	addwf	fsr2l,f,c
  2280  0016EA  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2281  0016EC  22DA               	addwfc	fsr2h,f,c
  2282  0016EE  2ADE               	incf	postinc2,f,c
  2283  0016F0  0E00               	movlw	0
  2284  0016F2  22DD               	addwfc	postdec2,f,c
  2285  0016F4  0012               	return		;funcret
  2286  0016F6                     __end_of_fputc:
  2287                           	opt callstack 0
  2288                           
  2289 ;; *************** function _putch *****************
  2290 ;; Defined at:
  2291 ;;		line 145 in file "mcc_generated_files/eusart1.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  txData          1    wreg     unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  txData          1    1[BANK0 ] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2308 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2309 ;;Total ram usage:        1 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    9
  2312 ;; This function calls:
  2313 ;;		_EUSART1_Write
  2314 ;; This function is called by:
  2315 ;;		_fputc
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text9
  2320  001EA4                     __ptext9:
  2321                           	opt callstack 0
  2322  001EA4                     _putch:
  2323                           	opt callstack 17
  2324                           
  2325                           ;incstack = 0
  2326                           ;putch@txData stored from wreg
  2327  001EA4  0100               	movlb	0	; () banked
  2328  001EA6  6F61               	movwf	putch@txData& (0+255),b
  2329                           
  2330                           ;mcc_generated_files/eusart1.c: 145: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 146: {;mcc_generated_files/eusart1.c: 147:     EUSART1_Write(txData);
  2331  001EA8  0100               	movlb	0	; () banked
  2332  001EAA  5161               	movf	putch@txData& (0+255),w,b
  2333  001EAC  EC4A  F00F         	call	_EUSART1_Write
  2334  001EB0  0012               	return		;funcret
  2335  001EB2                     __end_of_putch:
  2336                           	opt callstack 0
  2337                           
  2338 ;; *************** function _EUSART1_Write *****************
  2339 ;; Defined at:
  2340 ;;		line 131 in file "mcc_generated_files/eusart1.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  txData          1    wreg     unsigned char 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  txData          1    0[BANK0 ] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2354 ;;      Params:         0       0       0       0       0       0       0       0       0
  2355 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2357 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2358 ;;Total ram usage:        1 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    8
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_putch
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text10
  2369  001E94                     __ptext10:
  2370                           	opt callstack 0
  2371  001E94                     _EUSART1_Write:
  2372                           	opt callstack 17
  2373                           
  2374                           ;incstack = 0
  2375                           ;EUSART1_Write@txData stored from wreg
  2376  001E94  0100               	movlb	0	; () banked
  2377  001E96  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  2378  001E98                     
  2379                           ;mcc_generated_files/eusart1.c: 133:     while(0 == PIR3bits.TX1IF)
  2380                           
  2381                           ;mcc_generated_files/eusart1.c: 134:     {;mcc_generated_files/eusart1.c: 135:     }
  2382  001E98  010E               	movlb	14	; () banked
  2383  001E9A  A9C8               	btfss	200,4,b	;volatile
  2384  001E9C  D7FD               	goto	l2988
  2385                           
  2386                           ; BSR set to: 14
  2387                           ;mcc_generated_files/eusart1.c: 137:     TX1REG = txData;
  2388  001E9E  C060  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  2389                           
  2390                           ; BSR set to: 14
  2391  001EA2  0012               	return		;funcret
  2392  001EA4                     __end_of_EUSART1_Write:
  2393                           	opt callstack 0
  2394                           
  2395 ;; *************** function _abs *****************
  2396 ;; Defined at:
  2397 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  a               2   18[BANK0 ] int 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  2   18[BANK0 ] int 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2411 ;;      Params:         0       2       0       0       0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2413 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2414 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2415 ;;Total ram usage:        4 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    8
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_dtoa
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text11
  2426  001AEC                     __ptext11:
  2427                           	opt callstack 0
  2428  001AEC                     _abs:
  2429                           	opt callstack 18
  2430                           
  2431                           ; BSR set to: 14
  2432                           ;incstack = 0
  2433  001AEC  0100               	movlb	0	; () banked
  2434  001AEE  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  2435  001AF0  D005               	goto	u1430
  2436  001AF2  5173               	movf	(abs@a+1)& (0+255),w,b
  2437  001AF4  E110               	bnz	l1716
  2438  001AF6  0572               	decf	abs@a& (0+255),w,b
  2439  001AF8  B0D8               	btfsc	status,0,c
  2440  001AFA  D00D               	goto	l1716
  2441  001AFC                     u1430:
  2442                           
  2443                           ; BSR set to: 0
  2444  001AFC  C072  F074         	movff	abs@a,??_abs
  2445  001B00  C073  F075         	movff	abs@a+1,??_abs+1
  2446  001B04  1F74               	comf	??_abs& (0+255),f,b
  2447  001B06  1F75               	comf	(??_abs+1)& (0+255),f,b
  2448  001B08  4B74               	infsnz	??_abs& (0+255),f,b
  2449  001B0A  2B75               	incf	(??_abs+1)& (0+255),f,b
  2450  001B0C  C074  F072         	movff	??_abs,?_abs
  2451  001B10  C075  F073         	movff	??_abs+1,?_abs+1
  2452  001B14  0012               	return	
  2453  001B16                     l1716:
  2454                           
  2455                           ; BSR set to: 0
  2456  001B16  C072  F072         	movff	abs@a,?_abs
  2457  001B1A  C073  F073         	movff	abs@a+1,?_abs+1
  2458                           
  2459                           ; BSR set to: 0
  2460  001B1E  0012               	return		;funcret
  2461  001B20                     __end_of_abs:
  2462                           	opt callstack 0
  2463                           
  2464 ;; *************** function ___aomod *****************
  2465 ;; Defined at:
  2466 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  dividend        8    0[BANK0 ] long long 
  2469 ;;  divisor         8    8[BANK0 ] long long 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  sign            1   17[BANK0 ] unsigned char 
  2472 ;;  counter         1   16[BANK0 ] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  8    0[BANK0 ] long long 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2482 ;;      Params:         0      16       0       0       0       0       0       0       0
  2483 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2485 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2486 ;;Total ram usage:       18 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    8
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_dtoa
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text12
  2497  0011D0                     __ptext12:
  2498                           	opt callstack 0
  2499  0011D0                     ___aomod:
  2500                           	opt callstack 18
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;incstack = 0
  2504  0011D0  0E00               	movlw	0
  2505  0011D2  0100               	movlb	0	; () banked
  2506  0011D4  6F71               	movwf	___aomod@sign& (0+255),b
  2507                           
  2508                           ; BSR set to: 0
  2509  0011D6  AF67               	btfss	(___aomod@dividend+7)& (0+255),7,b
  2510  0011D8  D012               	goto	l3104
  2511                           
  2512                           ; BSR set to: 0
  2513  0011DA  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  2514  0011DC  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  2515  0011DE  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  2516  0011E0  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  2517  0011E2  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  2518  0011E4  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  2519  0011E6  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  2520  0011E8  6D60               	negf	___aomod@dividend& (0+255),b
  2521  0011EA  0E00               	movlw	0
  2522  0011EC  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2523  0011EE  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2524  0011F0  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2525  0011F2  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2526  0011F4  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2527  0011F6  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2528  0011F8  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2529                           
  2530                           ; BSR set to: 0
  2531  0011FA  0E01               	movlw	1
  2532  0011FC  6F71               	movwf	___aomod@sign& (0+255),b
  2533  0011FE                     l3104:
  2534                           
  2535                           ; BSR set to: 0
  2536  0011FE  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2537  001200  D010               	goto	l3108
  2538                           
  2539                           ; BSR set to: 0
  2540  001202  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  2541  001204  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  2542  001206  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  2543  001208  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  2544  00120A  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  2545  00120C  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  2546  00120E  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  2547  001210  6D68               	negf	___aomod@divisor& (0+255),b
  2548  001212  0E00               	movlw	0
  2549  001214  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2550  001216  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2551  001218  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2552  00121A  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2553  00121C  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2554  00121E  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2555  001220  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2556  001222                     l3108:
  2557                           
  2558                           ; BSR set to: 0
  2559  001222  5168               	movf	___aomod@divisor& (0+255),w,b
  2560  001224  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2561  001226  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2562  001228  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2563  00122A  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2564  00122C  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2565  00122E  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2566  001230  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2567  001232  B4D8               	btfsc	status,2,c
  2568  001234  D03C               	goto	l3124
  2569                           
  2570                           ; BSR set to: 0
  2571  001236  0E01               	movlw	1
  2572  001238  6F70               	movwf	___aomod@counter& (0+255),b
  2573  00123A  D00A               	goto	l3114
  2574  00123C                     l3112:
  2575                           
  2576                           ; BSR set to: 0
  2577  00123C  90D8               	bcf	status,0,c
  2578  00123E  3768               	rlcf	___aomod@divisor& (0+255),f,b
  2579  001240  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2580  001242  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2581  001244  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2582  001246  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2583  001248  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2584  00124A  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2585  00124C  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2586  00124E  2B70               	incf	___aomod@counter& (0+255),f,b
  2587  001250                     l3114:
  2588                           
  2589                           ; BSR set to: 0
  2590  001250  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2591  001252  D7F4               	goto	l3112
  2592  001254                     u1540:
  2593                           
  2594                           ; BSR set to: 0
  2595  001254  5168               	movf	___aomod@divisor& (0+255),w,b
  2596  001256  5D60               	subwf	___aomod@dividend& (0+255),w,b
  2597  001258  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  2598  00125A  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2599  00125C  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2600  00125E  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2601  001260  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2602  001262  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2603  001264  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2604  001266  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2605  001268  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2606  00126A  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2607  00126C  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2608  00126E  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2609  001270  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2610  001272  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2611  001274  A0D8               	btfss	status,0,c
  2612  001276  D010               	goto	l3120
  2613                           
  2614                           ; BSR set to: 0
  2615  001278  5168               	movf	___aomod@divisor& (0+255),w,b
  2616  00127A  5F60               	subwf	___aomod@dividend& (0+255),f,b
  2617  00127C  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  2618  00127E  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2619  001280  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2620  001282  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2621  001284  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2622  001286  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2623  001288  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2624  00128A  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2625  00128C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2626  00128E  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2627  001290  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2628  001292  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2629  001294  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2630  001296  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2631  001298                     l3120:
  2632                           
  2633                           ; BSR set to: 0
  2634  001298  90D8               	bcf	status,0,c
  2635  00129A  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2636  00129C  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2637  00129E  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2638  0012A0  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2639  0012A2  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2640  0012A4  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2641  0012A6  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2642  0012A8  3368               	rrcf	___aomod@divisor& (0+255),f,b
  2643                           
  2644                           ; BSR set to: 0
  2645  0012AA  2F70               	decfsz	___aomod@counter& (0+255),f,b
  2646  0012AC  D7D3               	goto	u1540
  2647  0012AE                     l3124:
  2648                           
  2649                           ; BSR set to: 0
  2650  0012AE  5171               	movf	___aomod@sign& (0+255),w,b
  2651  0012B0  B4D8               	btfsc	status,2,c
  2652  0012B2  D010               	goto	l3128
  2653                           
  2654                           ; BSR set to: 0
  2655  0012B4  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  2656  0012B6  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  2657  0012B8  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  2658  0012BA  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  2659  0012BC  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  2660  0012BE  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  2661  0012C0  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  2662  0012C2  6D60               	negf	___aomod@dividend& (0+255),b
  2663  0012C4  0E00               	movlw	0
  2664  0012C6  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2665  0012C8  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2666  0012CA  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2667  0012CC  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2668  0012CE  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2669  0012D0  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2670  0012D2  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2671  0012D4                     l3128:
  2672                           
  2673                           ; BSR set to: 0
  2674  0012D4  C060  F060         	movff	___aomod@dividend,?___aomod
  2675  0012D8  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  2676  0012DC  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  2677  0012E0  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  2678  0012E4  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  2679  0012E8  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  2680  0012EC  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  2681  0012F0  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  2682                           
  2683                           ; BSR set to: 0
  2684  0012F4  0012               	return		;funcret
  2685  0012F6                     __end_of___aomod:
  2686                           	opt callstack 0
  2687                           
  2688 ;; *************** function ___aodiv *****************
  2689 ;; Defined at:
  2690 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  dividend        8    0[BANK0 ] long long 
  2693 ;;  divisor         8    8[BANK0 ] long long 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  quotient        8   18[BANK0 ] long long 
  2696 ;;  sign            1   17[BANK0 ] unsigned char 
  2697 ;;  counter         1   16[BANK0 ] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  8    0[BANK0 ] long long 
  2700 ;; Registers used:
  2701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2707 ;;      Params:         0      16       0       0       0       0       0       0       0
  2708 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2710 ;;      Totals:         0      26       0       0       0       0       0       0       0
  2711 ;;Total ram usage:       26 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    8
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_dtoa
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text13
  2722  000F46                     __ptext13:
  2723                           	opt callstack 0
  2724  000F46                     ___aodiv:
  2725                           	opt callstack 18
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;incstack = 0
  2729  000F46  0E00               	movlw	0
  2730  000F48  0100               	movlb	0	; () banked
  2731  000F4A  6F71               	movwf	___aodiv@sign& (0+255),b
  2732                           
  2733                           ; BSR set to: 0
  2734  000F4C  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2735  000F4E  D012               	goto	l3060
  2736                           
  2737                           ; BSR set to: 0
  2738  000F50  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  2739  000F52  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  2740  000F54  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  2741  000F56  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  2742  000F58  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  2743  000F5A  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  2744  000F5C  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  2745  000F5E  6D68               	negf	___aodiv@divisor& (0+255),b
  2746  000F60  0E00               	movlw	0
  2747  000F62  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  2748  000F64  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  2749  000F66  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  2750  000F68  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  2751  000F6A  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  2752  000F6C  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  2753  000F6E  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  2754                           
  2755                           ; BSR set to: 0
  2756  000F70  0E01               	movlw	1
  2757  000F72  6F71               	movwf	___aodiv@sign& (0+255),b
  2758  000F74                     l3060:
  2759                           
  2760                           ; BSR set to: 0
  2761  000F74  AF67               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  2762  000F76  D012               	goto	l3066
  2763                           
  2764                           ; BSR set to: 0
  2765  000F78  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  2766  000F7A  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  2767  000F7C  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  2768  000F7E  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  2769  000F80  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  2770  000F82  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  2771  000F84  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  2772  000F86  6D60               	negf	___aodiv@dividend& (0+255),b
  2773  000F88  0E00               	movlw	0
  2774  000F8A  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  2775  000F8C  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  2776  000F8E  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  2777  000F90  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  2778  000F92  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  2779  000F94  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  2780  000F96  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  2781                           
  2782                           ; BSR set to: 0
  2783  000F98  0E01               	movlw	1
  2784  000F9A  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  2785  000F9C                     l3066:
  2786                           
  2787                           ; BSR set to: 0
  2788  000F9C  EE20  F072         	lfsr	2,___aodiv@quotient
  2789  000FA0  0E07               	movlw	7
  2790  000FA2                     u1461:
  2791  000FA2  6ADE               	clrf	postinc2,c
  2792  000FA4  06E8               	decf	wreg,f,c
  2793  000FA6  E2FD               	bc	u1461
  2794                           
  2795                           ; BSR set to: 0
  2796  000FA8  5168               	movf	___aodiv@divisor& (0+255),w,b
  2797  000FAA  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  2798  000FAC  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  2799  000FAE  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  2800  000FB0  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  2801  000FB2  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  2802  000FB4  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  2803  000FB6  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  2804  000FB8  B4D8               	btfsc	status,2,c
  2805  000FBA  D046               	goto	l3088
  2806                           
  2807                           ; BSR set to: 0
  2808  000FBC  0E01               	movlw	1
  2809  000FBE  6F70               	movwf	___aodiv@counter& (0+255),b
  2810  000FC0  D00A               	goto	l3074
  2811  000FC2                     l3072:
  2812                           
  2813                           ; BSR set to: 0
  2814  000FC2  90D8               	bcf	status,0,c
  2815  000FC4  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  2816  000FC6  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  2817  000FC8  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  2818  000FCA  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  2819  000FCC  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  2820  000FCE  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  2821  000FD0  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  2822  000FD2  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  2823  000FD4  2B70               	incf	___aodiv@counter& (0+255),f,b
  2824  000FD6                     l3074:
  2825                           
  2826                           ; BSR set to: 0
  2827  000FD6  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2828  000FD8  D7F4               	goto	l3072
  2829  000FDA                     u1480:
  2830                           
  2831                           ; BSR set to: 0
  2832  000FDA  90D8               	bcf	status,0,c
  2833  000FDC  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  2834  000FDE  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  2835  000FE0  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  2836  000FE2  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  2837  000FE4  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  2838  000FE6  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  2839  000FE8  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  2840  000FEA  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  2841                           
  2842                           ; BSR set to: 0
  2843  000FEC  5168               	movf	___aodiv@divisor& (0+255),w,b
  2844  000FEE  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  2845  000FF0  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2846  000FF2  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  2847  000FF4  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2848  000FF6  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  2849  000FF8  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2850  000FFA  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  2851  000FFC  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2852  000FFE  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  2853  001000  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2854  001002  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  2855  001004  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2856  001006  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  2857  001008  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2858  00100A  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  2859  00100C  A0D8               	btfss	status,0,c
  2860  00100E  D011               	goto	l3084
  2861                           
  2862                           ; BSR set to: 0
  2863  001010  5168               	movf	___aodiv@divisor& (0+255),w,b
  2864  001012  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  2865  001014  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2866  001016  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  2867  001018  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2868  00101A  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  2869  00101C  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2870  00101E  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  2871  001020  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2872  001022  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  2873  001024  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2874  001026  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  2875  001028  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2876  00102A  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  2877  00102C  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2878  00102E  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  2879                           
  2880                           ; BSR set to: 0
  2881  001030  8172               	bsf	___aodiv@quotient& (0+255),0,b
  2882  001032                     l3084:
  2883                           
  2884                           ; BSR set to: 0
  2885  001032  90D8               	bcf	status,0,c
  2886  001034  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  2887  001036  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  2888  001038  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  2889  00103A  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  2890  00103C  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  2891  00103E  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  2892  001040  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  2893  001042  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  2894                           
  2895                           ; BSR set to: 0
  2896  001044  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  2897  001046  D7C9               	goto	u1480
  2898  001048                     l3088:
  2899                           
  2900                           ; BSR set to: 0
  2901  001048  5171               	movf	___aodiv@sign& (0+255),w,b
  2902  00104A  B4D8               	btfsc	status,2,c
  2903  00104C  D010               	goto	l3092
  2904                           
  2905                           ; BSR set to: 0
  2906  00104E  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  2907  001050  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  2908  001052  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  2909  001054  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  2910  001056  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  2911  001058  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  2912  00105A  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  2913  00105C  6D72               	negf	___aodiv@quotient& (0+255),b
  2914  00105E  0E00               	movlw	0
  2915  001060  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  2916  001062  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  2917  001064  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  2918  001066  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  2919  001068  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  2920  00106A  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  2921  00106C  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  2922  00106E                     l3092:
  2923                           
  2924                           ; BSR set to: 0
  2925  00106E  C072  F060         	movff	___aodiv@quotient,?___aodiv
  2926  001072  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  2927  001076  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  2928  00107A  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  2929  00107E  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  2930  001082  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  2931  001086  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  2932  00108A  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  2933                           
  2934                           ; BSR set to: 0
  2935  00108E  0012               	return		;funcret
  2936  001090                     __end_of___aodiv:
  2937                           	opt callstack 0
  2938                           
  2939 ;; *************** function _carcontrol_init *****************
  2940 ;; Defined at:
  2941 ;;		line 27 in file "car_ctrl.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2958 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    9
  2962 ;; This function calls:
  2963 ;;		_TMR2_SetInterruptHandler
  2964 ;;		_carcontrol_steering
  2965 ;;		_carcontrol_throttle
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text14
  2972  001B20                     __ptext14:
  2973                           	opt callstack 0
  2974  001B20                     _carcontrol_init:
  2975                           	opt callstack 21
  2976                           
  2977                           ;car_ctrl.c: 28:     carctl.state = state_unset;
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;incstack = 0
  2981  001B20  0E00               	movlw	0
  2982  001B22  0100               	movlb	0	; () banked
  2983  001B24  6FCA               	movwf	(_carctl+1)& (0+255),b	;volatile
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;car_ctrl.c: 29:     carcontrol_throttle(0);
  2987  001B26  0E00               	movlw	0
  2988  001B28  EC2D  F00F         	call	_carcontrol_throttle
  2989                           
  2990                           ;car_ctrl.c: 30:     carcontrol_steering(0);
  2991  001B2C  0E00               	movlw	0
  2992  001B2E  ECC4  F00D         	call	_carcontrol_steering
  2993                           
  2994                           ;car_ctrl.c: 31:     carctl.servoHighTime = 50;
  2995  001B32  0E32               	movlw	50
  2996  001B34  0100               	movlb	0	; () banked
  2997  001B36  6FCE               	movwf	(_carctl+5)& (0+255),b	;volatile
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;car_ctrl.c: 33:     TMR2_SetInterruptHandler(carcontrol_ISR);
  3001  001B38  0EF6               	movlw	low _carcontrol_ISR
  3002  001B3A  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  3003  001B3C  0E12               	movlw	high _carcontrol_ISR
  3004  001B3E  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3005  001B40  EC69  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
  3006                           
  3007                           ;car_ctrl.c: 34:     stateTime = 0;
  3008  001B44  0E00               	movlw	0
  3009  001B46  0100               	movlb	0	; () banked
  3010  001B48  6FD8               	movwf	(_stateTime+1)& (0+255),b
  3011  001B4A  0E00               	movlw	0
  3012  001B4C  6FD7               	movwf	_stateTime& (0+255),b
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;car_ctrl.c: 35:     carctl.initialized = 1;
  3016  001B4E  0E01               	movlw	1
  3017  001B50  6FC9               	movwf	_carctl& (0+255),b	;volatile
  3018                           
  3019                           ; BSR set to: 0
  3020  001B52  0012               	return		;funcret
  3021  001B54                     __end_of_carcontrol_init:
  3022                           	opt callstack 0
  3023                           
  3024 ;; *************** function _carcontrol_throttle *****************
  3025 ;; Defined at:
  3026 ;;		line 118 in file "car_ctrl.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  throttle        1    wreg     unsigned char 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  throttle        1    0[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0
  3041 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3043 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3044 ;;Total ram usage:        1 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    8
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_main
  3051 ;;		_carcontrol_init
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text15
  3056  001E5A                     __ptext15:
  3057                           	opt callstack 0
  3058  001E5A                     _carcontrol_throttle:
  3059                           	opt callstack 22
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;incstack = 0
  3063                           ;carcontrol_throttle@throttle stored from wreg
  3064  001E5A  0100               	movlb	0	; () banked
  3065  001E5C  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  3066                           
  3067                           ;car_ctrl.c: 120:     if (throttle > 100) throttle = 100;
  3068  001E5E  0E64               	movlw	100
  3069  001E60  0100               	movlb	0	; () banked
  3070  001E62  6560               	cpfsgt	carcontrol_throttle@throttle& (0+255),b
  3071  001E64  D002               	goto	l3636
  3072                           
  3073                           ; BSR set to: 0
  3074  001E66  0E64               	movlw	100
  3075  001E68  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  3076  001E6A                     l3636:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;car_ctrl.c: 121:     carctl.throttleHighTime = throttle;
  3080  001E6A  C060  F0CD         	movff	carcontrol_throttle@throttle,_carctl+4	;volatile
  3081                           
  3082                           ; BSR set to: 0
  3083  001E6E  0012               	return		;funcret
  3084  001E70                     __end_of_carcontrol_throttle:
  3085                           	opt callstack 0
  3086                           
  3087 ;; *************** function _carcontrol_steering *****************
  3088 ;; Defined at:
  3089 ;;		line 93 in file "car_ctrl.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  steering        1    wreg     char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  steering        1    0[BANK0 ] char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    8
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;;		_carcontrol_init
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text16
  3119  001B88                     __ptext16:
  3120                           	opt callstack 0
  3121  001B88                     _carcontrol_steering:
  3122                           	opt callstack 22
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;incstack = 0
  3126                           ;carcontrol_steering@steering stored from wreg
  3127  001B88  0100               	movlb	0	; () banked
  3128  001B8A  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3129                           
  3130                           ;car_ctrl.c: 106:     if (steering < servo_min) steering = servo_min;
  3131  001B8C  0100               	movlb	0	; () banked
  3132  001B8E  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3133  001B90  0A80               	xorlw	128
  3134  001B92  0F9E               	addlw	158
  3135  001B94  B0D8               	btfsc	status,0,c
  3136  001B96  D002               	goto	l3642
  3137                           
  3138                           ; BSR set to: 0
  3139  001B98  0EE2               	movlw	226
  3140  001B9A  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3141  001B9C                     l3642:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;car_ctrl.c: 107:     if (steering > servo_max) steering = servo_max;
  3145  001B9C  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3146  001B9E  0A80               	xorlw	128
  3147  001BA0  0F63               	addlw	-157
  3148  001BA2  A0D8               	btfss	status,0,c
  3149  001BA4  D002               	goto	l3646
  3150                           
  3151                           ; BSR set to: 0
  3152  001BA6  0E1C               	movlw	28
  3153  001BA8  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3154  001BAA                     l3646:
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;car_ctrl.c: 109:     steering = steering + servo_trim;
  3158  001BAA  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3159  001BAC  0F11               	addlw	17
  3160  001BAE  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;car_ctrl.c: 111:     carctl.servoHighTime = steering + 50;
  3164  001BB0  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3165  001BB2  0F32               	addlw	50
  3166  001BB4  6FCE               	movwf	(_carctl+5)& (0+255),b	;volatile
  3167                           
  3168                           ; BSR set to: 0
  3169  001BB6  0012               	return		;funcret
  3170  001BB8                     __end_of_carcontrol_steering:
  3171                           	opt callstack 0
  3172                           
  3173 ;; *************** function _cam_start *****************
  3174 ;; Defined at:
  3175 ;;		line 125 in file "cam.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3191 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3192 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    9
  3196 ;; This function calls:
  3197 ;;		_TMR3_SetInterruptHandler
  3198 ;;		_TMR3_StartTimer
  3199 ;;		_TMR3_WriteTimer
  3200 ;; This function is called by:
  3201 ;;		_main
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text17
  3206  0017CE                     __ptext17:
  3207                           	opt callstack 0
  3208  0017CE                     _cam_start:
  3209                           	opt callstack 21
  3210                           
  3211                           ;cam.c: 127:     if (myCam.status == CAM_DONE){
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;incstack = 0
  3215  0017CE  C301  FFE8         	movff	_myCam+257,wreg	;volatile
  3216  0017D2  0A02               	xorlw	2
  3217  0017D4  A4D8               	btfss	status,2,c
  3218  0017D6  0012               	return	
  3219                           
  3220                           ;cam.c: 128:         myCam.status = CAM_START;
  3221  0017D8  0E00               	movlw	0
  3222  0017DA  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  3223                           
  3224                           ;cam.c: 130:         myCam.index = 0;
  3225  0017DE  0E00               	movlw	0
  3226  0017E0  CFE8 F302          	movff	wreg,_myCam+258	;volatile
  3227  0017E4  0E00               	movlw	0
  3228  0017E6  CFE8 F303          	movff	wreg,_myCam+259	;volatile
  3229                           
  3230                           ;cam.c: 131:         myCam.readFromFirst = !myCam.readFromFirst;
  3231  0017EA  EE22  F000         	lfsr	2,_myCam
  3232  0017EE  50DF               	movf	indf2,w,c
  3233  0017F0  A4D8               	btfss	status,2,c
  3234  0017F2  D004               	goto	u2380
  3235  0017F4  0100               	movlb	0	; () banked
  3236  0017F6  6B62               	clrf	??_cam_start& (0+255),b
  3237  0017F8  2B62               	incf	??_cam_start& (0+255),f,b
  3238  0017FA  D002               	goto	u2398
  3239  0017FC                     u2380:
  3240  0017FC  0100               	movlb	0	; () banked
  3241  0017FE  6B62               	clrf	??_cam_start& (0+255),b
  3242  001800                     u2398:
  3243  001800  C062  F200         	movff	??_cam_start,_myCam
  3244                           
  3245                           ; BSR set to: 0
  3246  001804  8483               	bsf	3971,2,c	;volatile
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;cam.c: 133:         _delay((unsigned long)((3)*(64000000/4000000.0)));
  3250  001806  0E10               	movlw	16
  3251  001808                     u2597:
  3252  001808  2EE8               	decfsz	wreg,f,c
  3253  00180A  D7FE               	bra	u2597
  3254  00180C  8283               	bsf	3971,1,c	;volatile
  3255                           
  3256                           ;cam.c: 135:         TMR3_SetInterruptHandler(timer_ISR);
  3257  00180E  0EF6               	movlw	low _timer_ISR
  3258  001810  0100               	movlb	0	; () banked
  3259  001812  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3260  001814  0E16               	movlw	high _timer_ISR
  3261  001816  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3262  001818  EC64  F00F         	call	_TMR3_SetInterruptHandler	;wreg free
  3263                           
  3264                           ;cam.c: 136:         TMR3_WriteTimer(timing_val);
  3265  00181C  C052  F060         	movff	_timing_val,TMR3_WriteTimer@timerVal
  3266  001820  C053  F061         	movff	_timing_val+1,TMR3_WriteTimer@timerVal+1
  3267  001824  ECC8  F00E         	call	_TMR3_WriteTimer	;wreg free
  3268                           
  3269                           ;cam.c: 137:         TMR3_StartTimer();
  3270  001828  EC9E  F00F         	call	_TMR3_StartTimer	;wreg free
  3271                           
  3272                           ;cam.c: 138:         ADCON0bits.ADON = 1;
  3273  00182C  010F               	movlb	15	; () banked
  3274  00182E  8F5B               	bsf	91,7,b	;volatile
  3275                           
  3276                           ; BSR set to: 15
  3277                           ;cam.c: 139:         PIE1bits.ADIE = 0;
  3278  001830  010E               	movlb	14	; () banked
  3279  001832  91BE               	bcf	190,0,b	;volatile
  3280  001834  0012               	return		;funcret
  3281  001836                     __end_of_cam_start:
  3282                           	opt callstack 0
  3283                           
  3284 ;; *************** function _TMR3_WriteTimer *****************
  3285 ;; Defined at:
  3286 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  timerVal        2    0[BANK0 ] unsigned short 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3300 ;;      Params:         0       2       0       0       0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3303 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    8
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_cam_start
  3311 ;;		_TMR3_Reload
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text18
  3316  001D90                     __ptext18:
  3317                           	opt callstack 0
  3318  001D90                     _TMR3_WriteTimer:
  3319                           	opt callstack 21
  3320                           
  3321                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  3322                           
  3323                           ;incstack = 0
  3324  001D90  A4C8               	btfss	4040,2,c	;volatile
  3325  001D92  D008               	goto	l3628
  3326                           
  3327                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  3328  001D94  90C8               	bcf	4040,0,c	;volatile
  3329                           
  3330                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  3331  001D96  0100               	movlb	0	; () banked
  3332  001D98  5161               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
  3333  001D9A  6EC7               	movwf	4039,c	;volatile
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  3337  001D9C  C060  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  3341  001DA0  80C8               	bsf	4040,0,c	;volatile
  3342                           
  3343                           ;mcc_generated_files/tmr3.c: 140:     }
  3344  001DA2  0012               	return	
  3345  001DA4                     l3628:
  3346                           
  3347                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  3348  001DA4  0100               	movlb	0	; () banked
  3349  001DA6  5161               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
  3350  001DA8  6EC7               	movwf	4039,c	;volatile
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  3354  001DAA  C060  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  3355                           
  3356                           ; BSR set to: 0
  3357  001DAE  0012               	return		;funcret
  3358  001DB0                     __end_of_TMR3_WriteTimer:
  3359                           	opt callstack 0
  3360                           
  3361 ;; *************** function _TMR3_StartTimer *****************
  3362 ;; Defined at:
  3363 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		None
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    8
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_cam_start
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text19
  3392  001F3C                     __ptext19:
  3393                           	opt callstack 0
  3394  001F3C                     _TMR3_StartTimer:
  3395                           	opt callstack 21
  3396                           
  3397                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 1;
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;incstack = 0
  3401  001F3C  80C8               	bsf	4040,0,c	;volatile
  3402  001F3E  0012               	return		;funcret
  3403  001F40                     __end_of_TMR3_StartTimer:
  3404                           	opt callstack 0
  3405                           
  3406 ;; *************** function _cam_init *****************
  3407 ;; Defined at:
  3408 ;;		line 100 in file "cam.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    9
  3429 ;; This function calls:
  3430 ;;		_ADCC_SelectChannel
  3431 ;;		_ADCC_SetInterruptHandler
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text20
  3438  001AB6                     __ptext20:
  3439                           	opt callstack 0
  3440  001AB6                     _cam_init:
  3441                           	opt callstack 21
  3442                           
  3443                           ;incstack = 0
  3444                           ;cam.c: 101:     do { LATBbits.LATB2 = 0; } while(0);
  3445  001AB6  9483               	bcf	3971,2,c	;volatile
  3446                           
  3447                           ;cam.c: 102:     do { LATBbits.LATB1 = 0; } while(0);
  3448  001AB8  9283               	bcf	3971,1,c	;volatile
  3449                           
  3450                           ;cam.c: 103:     do { TRISBbits.TRISB2 = 0; } while(0);
  3451  001ABA  9488               	bcf	3976,2,c	;volatile
  3452                           
  3453                           ;cam.c: 104:     do { TRISBbits.TRISB1 = 0; } while(0);
  3454  001ABC  9288               	bcf	3976,1,c	;volatile
  3455                           
  3456                           ;cam.c: 105:     ADCC_SetInterruptHandler(adc_ready_ISR);
  3457  001ABE  0E9E               	movlw	low _adc_ready_ISR
  3458  001AC0  0100               	movlb	0	; () banked
  3459  001AC2  6F60               	movwf	ADCC_SetInterruptHandler@InterruptHandler& (0+255),b
  3460  001AC4  0E14               	movlw	high _adc_ready_ISR
  3461  001AC6  6F61               	movwf	(ADCC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3462  001AC8  EC5F  F00F         	call	_ADCC_SetInterruptHandler	;wreg free
  3463                           
  3464                           ;cam.c: 106:     ADCC_SelectChannel(CAM_A0,2);
  3465  001ACC  0E02               	movlw	2
  3466  001ACE  0100               	movlb	0	; () banked
  3467  001AD0  6F60               	movwf	ADCC_SelectChannel@acquisitionDelay& (0+255),b
  3468  001AD2  0E0B               	movlw	11
  3469  001AD4  EC38  F00F         	call	_ADCC_SelectChannel
  3470                           
  3471                           ;cam.c: 111:     myCam.index = 0;
  3472  001AD8  0E00               	movlw	0
  3473  001ADA  CFE8 F302          	movff	wreg,_myCam+258	;volatile
  3474  001ADE  0E00               	movlw	0
  3475  001AE0  CFE8 F303          	movff	wreg,_myCam+259	;volatile
  3476                           
  3477                           ;cam.c: 112:     myCam.status = CAM_DONE;
  3478  001AE4  0E02               	movlw	2
  3479  001AE6  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  3480  001AEA  0012               	return		;funcret
  3481  001AEC                     __end_of_cam_init:
  3482                           	opt callstack 0
  3483                           
  3484 ;; *************** function _ADCC_SetInterruptHandler *****************
  3485 ;; Defined at:
  3486 ;;		line 304 in file "mcc_generated_files/adcc.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3489 ;;		 -> adc_ready_ISR(1), 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3501 ;;      Params:         0       2       0       0       0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3504 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    8
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_cam_init
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text21
  3516  001EBE                     __ptext21:
  3517                           	opt callstack 0
  3518  001EBE                     _ADCC_SetInterruptHandler:
  3519                           	opt callstack 21
  3520                           
  3521                           ;mcc_generated_files/adcc.c: 304: void ADCC_SetInterruptHandler(void (*InterruptHandler)
      +                          (void));mcc_generated_files/adcc.c: 305: {;mcc_generated_files/adcc.c: 306:     ADCC_Int
      +                          erruptHandler = InterruptHandler;
  3522                           
  3523                           ;incstack = 0
  3524  001EBE  C060  F050         	movff	ADCC_SetInterruptHandler@InterruptHandler,_ADCC_InterruptHandler
  3525  001EC2  C061  F051         	movff	ADCC_SetInterruptHandler@InterruptHandler+1,_ADCC_InterruptHandler+1
  3526  001EC6  0012               	return		;funcret
  3527  001EC8                     __end_of_ADCC_SetInterruptHandler:
  3528                           	opt callstack 0
  3529                           
  3530 ;; *************** function _ADCC_SelectChannel *****************
  3531 ;; Defined at:
  3532 ;;		line 115 in file "mcc_generated_files/adcc.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  channel         1    wreg     enum E9316
  3535 ;;  acquisitionD    1    0[BANK0 ] unsigned char 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  channel         1    1[BANK0 ] enum E9316
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      void 
  3540 ;; Registers used:
  3541 ;;		wreg
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3547 ;;      Params:         0       1       0       0       0       0       0       0       0
  3548 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3550 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3551 ;;Total ram usage:        2 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    8
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_cam_init
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text22
  3562  001E70                     __ptext22:
  3563                           	opt callstack 0
  3564  001E70                     _ADCC_SelectChannel:
  3565                           	opt callstack 21
  3566                           
  3567                           ;incstack = 0
  3568                           ;ADCC_SelectChannel@channel stored from wreg
  3569  001E70  0100               	movlb	0	; () banked
  3570  001E72  6F61               	movwf	ADCC_SelectChannel@channel& (0+255),b
  3571                           
  3572                           ;mcc_generated_files/adcc.c: 115: void ADCC_SelectChannel(adcc_channel_t channel, uint8_
      +                          t acquisitionDelay);mcc_generated_files/adcc.c: 116: {;mcc_generated_files/adcc.c: 118: 
      +                              ADPCH = channel;
  3573  001E74  C061  FF5A         	movff	ADCC_SelectChannel@channel,3930	;volatile
  3574                           
  3575                           ;mcc_generated_files/adcc.c: 120:     ADACQ = acquisitionDelay;
  3576  001E78  C060  FF57         	movff	ADCC_SelectChannel@acquisitionDelay,3927	;volatile
  3577                           
  3578                           ;mcc_generated_files/adcc.c: 123:     ADCON0bits.ADON = 1;
  3579  001E7C  010F               	movlb	15	; () banked
  3580  001E7E  8F5B               	bsf	91,7,b	;volatile
  3581                           
  3582                           ; BSR set to: 15
  3583  001E80  0012               	return		;funcret
  3584  001E82                     __end_of_ADCC_SelectChannel:
  3585                           	opt callstack 0
  3586                           
  3587 ;; *************** function _cam_get *****************
  3588 ;; Defined at:
  3589 ;;		line 158 in file "cam.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  pixels          2    0[BANK0 ] PTR unsigned short 
  3592 ;;		 -> main@cam_pixels(256), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  i               2    6[BANK0 ] int 
  3595 ;;  i               2    4[BANK0 ] int 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3605 ;;      Params:         0       2       0       0       0       0       0       0       0
  3606 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3607 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3608 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3609 ;;Total ram usage:        8 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    8
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text23
  3620  001546                     __ptext23:
  3621                           	opt callstack 0
  3622  001546                     _cam_get:
  3623                           	opt callstack 22
  3624                           
  3625                           ;cam.c: 159:     if (myCam.readFromFirst) {
  3626                           
  3627                           ; BSR set to: 15
  3628                           ;incstack = 0
  3629  001546  EE22  F000         	lfsr	2,_myCam
  3630  00154A  50DF               	movf	indf2,w,c
  3631  00154C  B4D8               	btfsc	status,2,c
  3632  00154E  D026               	goto	l3886
  3633                           
  3634                           ;cam.c: 160:         for (int i = 0; i < 128; i++){
  3635  001550  0E00               	movlw	0
  3636  001552  0100               	movlb	0	; () banked
  3637  001554  6F65               	movwf	(cam_get@i+1)& (0+255),b
  3638  001556  0E00               	movlw	0
  3639  001558  6F64               	movwf	cam_get@i& (0+255),b
  3640  00155A                     l3880:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;cam.c: 161:             pixels[i] = myCam.cam_pixels_1[i];
  3644  00155A  0E01               	movlw	low (_myCam+1)
  3645  00155C  2564               	addwf	cam_get@i& (0+255),w,b
  3646  00155E  6ED9               	movwf	fsr2l,c
  3647  001560  0E02               	movlw	high (_myCam+1)
  3648  001562  2165               	addwfc	(cam_get@i+1)& (0+255),w,b
  3649  001564  6EDA               	movwf	fsr2h,c
  3650  001566  50DF               	movf	indf2,w,c
  3651  001568  6F62               	movwf	??_cam_get& (0+255),b
  3652  00156A  6B63               	clrf	(??_cam_get+1)& (0+255),b
  3653  00156C  90D8               	bcf	status,0,c
  3654  00156E  3564               	rlcf	cam_get@i& (0+255),w,b
  3655  001570  6ED9               	movwf	fsr2l,c
  3656  001572  3565               	rlcf	(cam_get@i+1)& (0+255),w,b
  3657  001574  6EDA               	movwf	fsr2h,c
  3658  001576  5160               	movf	cam_get@pixels& (0+255),w,b
  3659  001578  26D9               	addwf	fsr2l,f,c
  3660  00157A  5161               	movf	(cam_get@pixels+1)& (0+255),w,b
  3661  00157C  22DA               	addwfc	fsr2h,f,c
  3662  00157E  C062  FFDE         	movff	??_cam_get,postinc2
  3663  001582  C063  FFDD         	movff	??_cam_get+1,postdec2
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;cam.c: 162:         }
  3667  001586  4B64               	infsnz	cam_get@i& (0+255),f,b
  3668  001588  2B65               	incf	(cam_get@i+1)& (0+255),f,b
  3669                           
  3670                           ; BSR set to: 0
  3671  00158A  BF65               	btfsc	(cam_get@i+1)& (0+255),7,b
  3672  00158C  D7E6               	goto	l3880
  3673  00158E  5165               	movf	(cam_get@i+1)& (0+255),w,b
  3674  001590  E12B               	bnz	l966
  3675  001592  0E80               	movlw	128
  3676  001594  5D64               	subwf	cam_get@i& (0+255),w,b
  3677  001596  B0D8               	btfsc	status,0,c
  3678  001598  0012               	return	
  3679  00159A  D7DF               	goto	l3880
  3680  00159C                     l3886:
  3681                           
  3682                           ;cam.c: 164:         for (int i = 0; i < 128; i++){
  3683  00159C  0E00               	movlw	0
  3684  00159E  0100               	movlb	0	; () banked
  3685  0015A0  6F67               	movwf	(cam_get@i_2598+1)& (0+255),b
  3686  0015A2  0E00               	movlw	0
  3687  0015A4  6F66               	movwf	cam_get@i_2598& (0+255),b
  3688  0015A6                     l3892:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;cam.c: 165:             pixels[i] = myCam.cam_pixels_2[i];
  3692  0015A6  0E81               	movlw	low (_myCam+129)
  3693  0015A8  2566               	addwf	cam_get@i_2598& (0+255),w,b
  3694  0015AA  6ED9               	movwf	fsr2l,c
  3695  0015AC  0E02               	movlw	high (_myCam+129)
  3696  0015AE  2167               	addwfc	(cam_get@i_2598+1)& (0+255),w,b
  3697  0015B0  6EDA               	movwf	fsr2h,c
  3698  0015B2  50DF               	movf	indf2,w,c
  3699  0015B4  6F62               	movwf	??_cam_get& (0+255),b
  3700  0015B6  6B63               	clrf	(??_cam_get+1)& (0+255),b
  3701  0015B8  90D8               	bcf	status,0,c
  3702  0015BA  3566               	rlcf	cam_get@i_2598& (0+255),w,b
  3703  0015BC  6ED9               	movwf	fsr2l,c
  3704  0015BE  3567               	rlcf	(cam_get@i_2598+1)& (0+255),w,b
  3705  0015C0  6EDA               	movwf	fsr2h,c
  3706  0015C2  5160               	movf	cam_get@pixels& (0+255),w,b
  3707  0015C4  26D9               	addwf	fsr2l,f,c
  3708  0015C6  5161               	movf	(cam_get@pixels+1)& (0+255),w,b
  3709  0015C8  22DA               	addwfc	fsr2h,f,c
  3710  0015CA  C062  FFDE         	movff	??_cam_get,postinc2
  3711  0015CE  C063  FFDD         	movff	??_cam_get+1,postdec2
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;cam.c: 166:         }
  3715  0015D2  4B66               	infsnz	cam_get@i_2598& (0+255),f,b
  3716  0015D4  2B67               	incf	(cam_get@i_2598+1)& (0+255),f,b
  3717                           
  3718                           ; BSR set to: 0
  3719  0015D6  BF67               	btfsc	(cam_get@i_2598+1)& (0+255),7,b
  3720  0015D8  D7E6               	goto	l3892
  3721  0015DA  5167               	movf	(cam_get@i_2598+1)& (0+255),w,b
  3722  0015DC  E105               	bnz	u2420
  3723  0015DE  0E80               	movlw	128
  3724  0015E0  5D66               	subwf	cam_get@i_2598& (0+255),w,b
  3725  0015E2  B0D8               	btfsc	status,0,c
  3726  0015E4  0012               	return	
  3727  0015E6  D7DF               	goto	l3892
  3728  0015E8                     u2420:
  3729  0015E8                     l966:
  3730                           
  3731                           ; BSR set to: 0
  3732  0015E8  0012               	return		;funcret
  3733  0015EA                     __end_of_cam_get:
  3734                           	opt callstack 0
  3735                           
  3736 ;; *************** function _SYSTEM_Initialize *****************
  3737 ;; Defined at:
  3738 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2, status,0, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3755 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:        0 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:   10
  3759 ;; This function calls:
  3760 ;;		_ADCC_Initialize
  3761 ;;		_CCP1_Initialize
  3762 ;;		_EUSART1_Initialize
  3763 ;;		_INTERRUPT_Initialize
  3764 ;;		_OSCILLATOR_Initialize
  3765 ;;		_PIN_MANAGER_Initialize
  3766 ;;		_PMD_Initialize
  3767 ;;		_TMR1_Initialize
  3768 ;;		_TMR2_Initialize
  3769 ;;		_TMR3_Initialize
  3770 ;; This function is called by:
  3771 ;;		_main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text24
  3776  001CCE                     __ptext24:
  3777                           	opt callstack 0
  3778  001CCE                     _SYSTEM_Initialize:
  3779                           	opt callstack 20
  3780                           
  3781                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;incstack = 0
  3785  001CCE  EC41  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3786                           
  3787                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3788  001CD2  ECF7  F00E         	call	_PMD_Initialize	;wreg free
  3789                           
  3790                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3791  001CD6  ECB2  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  3792                           
  3793                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3794  001CDA  EC21  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  3795                           
  3796                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  3797  001CDE  EC4E  F00C         	call	_ADCC_Initialize	;wreg free
  3798                           
  3799                           ;mcc_generated_files/mcc.c: 57:     TMR3_Initialize();
  3800  001CE2  EC1B  F00D         	call	_TMR3_Initialize	;wreg free
  3801                           
  3802                           ;mcc_generated_files/mcc.c: 58:     CCP1_Initialize();
  3803  001CE6  EC3A  F00E         	call	_CCP1_Initialize	;wreg free
  3804                           
  3805                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3806  001CEA  EC23  F00E         	call	_TMR2_Initialize	;wreg free
  3807                           
  3808                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3809  001CEE  ECD5  F00C         	call	_TMR1_Initialize	;wreg free
  3810                           
  3811                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  3812  001CF2  ECF8  F00C         	call	_EUSART1_Initialize	;wreg free
  3813  001CF6  0012               	return		;funcret
  3814  001CF8                     __end_of_SYSTEM_Initialize:
  3815                           	opt callstack 0
  3816                           
  3817 ;; *************** function _TMR3_Initialize *****************
  3818 ;; Defined at:
  3819 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, status,2, status,0, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3835 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3836 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3837 ;;Total ram usage:        2 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    9
  3840 ;; This function calls:
  3841 ;;		_TMR3_SetInterruptHandler
  3842 ;; This function is called by:
  3843 ;;		_SYSTEM_Initialize
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text25
  3848  001A36                     __ptext25:
  3849                           	opt callstack 0
  3850  001A36                     _TMR3_Initialize:
  3851                           	opt callstack 20
  3852                           
  3853                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  3854                           
  3855                           ;incstack = 0
  3856  001A36  0E00               	movlw	0
  3857  001A38  6EC9               	movwf	4041,c	;volatile
  3858                           
  3859                           ;mcc_generated_files/tmr3.c: 72:     T3GATE = 0x00;
  3860  001A3A  0E00               	movlw	0
  3861  001A3C  6ECA               	movwf	4042,c	;volatile
  3862                           
  3863                           ;mcc_generated_files/tmr3.c: 75:     T3CLK = 0x01;
  3864  001A3E  0E01               	movlw	1
  3865  001A40  6ECB               	movwf	4043,c	;volatile
  3866                           
  3867                           ;mcc_generated_files/tmr3.c: 78:     TMR3H = 0xFF;
  3868  001A42  68C7               	setf	4039,c	;volatile
  3869                           
  3870                           ;mcc_generated_files/tmr3.c: 81:     TMR3L = 0x10;
  3871  001A44  0E10               	movlw	16
  3872  001A46  6EC6               	movwf	4038,c	;volatile
  3873                           
  3874                           ;mcc_generated_files/tmr3.c: 84:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  3875  001A48  50C6               	movf	4038,w,c	;volatile
  3876  001A4A  CFC7 F062          	movff	4039,??_TMR3_Initialize	;volatile
  3877  001A4E  0100               	movlb	0	; () banked
  3878  001A50  6B63               	clrf	(??_TMR3_Initialize+1)& (0+255),b
  3879  001A52  C062  F063         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  3880  001A56  6B62               	clrf	??_TMR3_Initialize& (0+255),b
  3881  001A58  1162               	iorwf	??_TMR3_Initialize& (0+255),w,b
  3882  001A5A  6E3C               	movwf	_timer3ReloadVal,c	;volatile
  3883  001A5C  5163               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
  3884  001A5E  6E3D               	movwf	_timer3ReloadVal+1,c	;volatile
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;mcc_generated_files/tmr3.c: 87:     PIR4bits.TMR3IF = 0;
  3888  001A60  010E               	movlb	14	; () banked
  3889  001A62  95C9               	bcf	201,2,b	;volatile
  3890                           
  3891                           ; BSR set to: 14
  3892                           ;mcc_generated_files/tmr3.c: 90:     PIE4bits.TMR3IE = 1;
  3893  001A64  85C1               	bsf	193,2,b	;volatile
  3894                           
  3895                           ; BSR set to: 14
  3896                           ;mcc_generated_files/tmr3.c: 93:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  3897  001A66  0E48               	movlw	low _TMR3_DefaultInterruptHandler
  3898  001A68  0100               	movlb	0	; () banked
  3899  001A6A  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3900  001A6C  0E1F               	movlw	high _TMR3_DefaultInterruptHandler
  3901  001A6E  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3902  001A70  EC64  F00F         	call	_TMR3_SetInterruptHandler	;wreg free
  3903                           
  3904                           ;mcc_generated_files/tmr3.c: 96:     T3CON = 0x03;
  3905  001A74  0E03               	movlw	3
  3906  001A76  6EC8               	movwf	4040,c	;volatile
  3907  001A78  0012               	return		;funcret
  3908  001A7A                     __end_of_TMR3_Initialize:
  3909                           	opt callstack 0
  3910                           
  3911 ;; *************** function _TMR3_SetInterruptHandler *****************
  3912 ;; Defined at:
  3913 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3916 ;;		 -> timer_ISR(1), TMR3_DefaultInterruptHandler(1), 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3928 ;;      Params:         0       2       0       0       0       0       0       0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3931 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3932 ;;Total ram usage:        2 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    8
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_TMR3_Initialize
  3939 ;;		_cam_start
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text26
  3944  001EC8                     __ptext26:
  3945                           	opt callstack 0
  3946  001EC8                     _TMR3_SetInterruptHandler:
  3947                           	opt callstack 21
  3948                           
  3949                           ;mcc_generated_files/tmr3.c: 179:     TMR3_InterruptHandler = InterruptHandler;
  3950                           
  3951                           ;incstack = 0
  3952  001EC8  C060  F03A         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  3953  001ECC  C061  F03B         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  3954  001ED0  0012               	return		;funcret
  3955  001ED2                     __end_of_TMR3_SetInterruptHandler:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _TMR2_Initialize *****************
  3959 ;; Defined at:
  3960 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;		None
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    9
  3981 ;; This function calls:
  3982 ;;		_TMR2_SetInterruptHandler
  3983 ;; This function is called by:
  3984 ;;		_SYSTEM_Initialize
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text27
  3989  001C46                     __ptext27:
  3990                           	opt callstack 0
  3991  001C46                     _TMR2_Initialize:
  3992                           	opt callstack 20
  3993                           
  3994                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  3995                           
  3996                           ;incstack = 0
  3997  001C46  0E01               	movlw	1
  3998  001C48  6EBE               	movwf	4030,c	;volatile
  3999                           
  4000                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  4001  001C4A  0E00               	movlw	0
  4002  001C4C  6EBD               	movwf	4029,c	;volatile
  4003                           
  4004                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  4005  001C4E  0E00               	movlw	0
  4006  001C50  6EBF               	movwf	4031,c	;volatile
  4007                           
  4008                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x00;
  4009  001C52  0E00               	movlw	0
  4010  001C54  6EBB               	movwf	4027,c	;volatile
  4011                           
  4012                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  4013  001C56  0E00               	movlw	0
  4014  001C58  6EBA               	movwf	4026,c	;volatile
  4015                           
  4016                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  4017  001C5A  010E               	movlb	14	; () banked
  4018  001C5C  93C9               	bcf	201,1,b	;volatile
  4019                           
  4020                           ; BSR set to: 14
  4021                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  4022  001C5E  83C1               	bsf	193,1,b	;volatile
  4023                           
  4024                           ; BSR set to: 14
  4025                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  4026  001C60  0E50               	movlw	low _TMR2_DefaultInterruptHandler
  4027  001C62  0100               	movlb	0	; () banked
  4028  001C64  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  4029  001C66  0E1F               	movlw	high _TMR2_DefaultInterruptHandler
  4030  001C68  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4031  001C6A  EC69  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
  4032                           
  4033                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xF0;
  4034  001C6E  0EF0               	movlw	240
  4035  001C70  6EBC               	movwf	4028,c	;volatile
  4036  001C72  0012               	return		;funcret
  4037  001C74                     __end_of_TMR2_Initialize:
  4038                           	opt callstack 0
  4039                           
  4040 ;; *************** function _TMR2_SetInterruptHandler *****************
  4041 ;; Defined at:
  4042 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4045 ;;		 -> carcontrol_ISR(1), TMR2_DefaultInterruptHandler(1), 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg, status,2, status,0
  4052 ;; Tracked objects:
  4053 ;;		On entry : 0/0
  4054 ;;		On exit  : 0/0
  4055 ;;		Unchanged: 0/0
  4056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4057 ;;      Params:         0       2       0       0       0       0       0       0       0
  4058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4060 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4061 ;;Total ram usage:        2 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    8
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_TMR2_Initialize
  4068 ;;		_carcontrol_init
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text28
  4073  001ED2                     __ptext28:
  4074                           	opt callstack 0
  4075  001ED2                     _TMR2_SetInterruptHandler:
  4076                           	opt callstack 21
  4077                           
  4078                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  4079                           
  4080                           ;incstack = 0
  4081  001ED2  C060  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  4082  001ED6  C061  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  4083  001EDA  0012               	return		;funcret
  4084  001EDC                     __end_of_TMR2_SetInterruptHandler:
  4085                           	opt callstack 0
  4086                           
  4087 ;; *************** function _TMR1_Initialize *****************
  4088 ;; Defined at:
  4089 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4090 ;; Parameters:    Size  Location     Type
  4091 ;;		None
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;		None
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      void 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0, cstack
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4103 ;;      Params:         0       0       0       0       0       0       0       0       0
  4104 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4105 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4106 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4107 ;;Total ram usage:        2 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    9
  4110 ;; This function calls:
  4111 ;;		_TMR1_SetInterruptHandler
  4112 ;; This function is called by:
  4113 ;;		_SYSTEM_Initialize
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117                           	psect	text29
  4118  0019AA                     __ptext29:
  4119                           	opt callstack 0
  4120  0019AA                     _TMR1_Initialize:
  4121                           	opt callstack 20
  4122                           
  4123                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4124                           
  4125                           ;incstack = 0
  4126  0019AA  0E00               	movlw	0
  4127  0019AC  6ECF               	movwf	4047,c	;volatile
  4128                           
  4129                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4130  0019AE  0E00               	movlw	0
  4131  0019B0  6ED0               	movwf	4048,c	;volatile
  4132                           
  4133                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x01;
  4134  0019B2  0E01               	movlw	1
  4135  0019B4  6ED1               	movwf	4049,c	;volatile
  4136                           
  4137                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x63;
  4138  0019B6  0E63               	movlw	99
  4139  0019B8  6ECD               	movwf	4045,c	;volatile
  4140                           
  4141                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xC0;
  4142  0019BA  0EC0               	movlw	192
  4143  0019BC  6ECC               	movwf	4044,c	;volatile
  4144                           
  4145                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4146  0019BE  50CC               	movf	4044,w,c	;volatile
  4147  0019C0  CFCD F062          	movff	4045,??_TMR1_Initialize	;volatile
  4148  0019C4  0100               	movlb	0	; () banked
  4149  0019C6  6B63               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  4150  0019C8  C062  F063         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  4151  0019CC  6B62               	clrf	??_TMR1_Initialize& (0+255),b
  4152  0019CE  1162               	iorwf	??_TMR1_Initialize& (0+255),w,b
  4153  0019D0  6E42               	movwf	_timer1ReloadVal,c	;volatile
  4154  0019D2  5163               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  4155  0019D4  6E43               	movwf	_timer1ReloadVal+1,c	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  4159  0019D6  010E               	movlb	14	; () banked
  4160  0019D8  91C9               	bcf	201,0,b	;volatile
  4161                           
  4162                           ; BSR set to: 14
  4163                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  4164  0019DA  81C1               	bsf	193,0,b	;volatile
  4165                           
  4166                           ; BSR set to: 14
  4167                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4168  0019DC  0E4A               	movlw	low _TMR1_DefaultInterruptHandler
  4169  0019DE  0100               	movlb	0	; () banked
  4170  0019E0  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4171  0019E2  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  4172  0019E4  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4173  0019E6  EC6E  F00F         	call	_TMR1_SetInterruptHandler	;wreg free
  4174                           
  4175                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x33;
  4176  0019EA  0E33               	movlw	51
  4177  0019EC  6ECE               	movwf	4046,c	;volatile
  4178  0019EE  0012               	return		;funcret
  4179  0019F0                     __end_of_TMR1_Initialize:
  4180                           	opt callstack 0
  4181                           
  4182 ;; *************** function _TMR1_SetInterruptHandler *****************
  4183 ;; Defined at:
  4184 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4187 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4199 ;;      Params:         0       2       0       0       0       0       0       0       0
  4200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4202 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4203 ;;Total ram usage:        2 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    8
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_TMR1_Initialize
  4210 ;;		_ping_init
  4211 ;;		_ping_send
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text30
  4216  001EDC                     __ptext30:
  4217                           	opt callstack 0
  4218  001EDC                     _TMR1_SetInterruptHandler:
  4219                           	opt callstack 20
  4220                           
  4221                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4222                           
  4223                           ;incstack = 0
  4224  001EDC  C060  F040         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4225  001EE0  C061  F041         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4226  001EE4  0012               	return		;funcret
  4227  001EE6                     __end_of_TMR1_SetInterruptHandler:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function _PMD_Initialize *****************
  4231 ;; Defined at:
  4232 ;;		line 78 in file "mcc_generated_files/mcc.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    8
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_SYSTEM_Initialize
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text31
  4261  001DEE                     __ptext31:
  4262                           	opt callstack 0
  4263  001DEE                     _PMD_Initialize:
  4264                           	opt callstack 21
  4265                           
  4266                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
  4267                           
  4268                           ;incstack = 0
  4269  001DEE  0E00               	movlw	0
  4270  001DF0  010E               	movlb	14	; () banked
  4271  001DF2  6FDC               	movwf	220,b	;volatile
  4272                           
  4273                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
  4274  001DF4  0E00               	movlw	0
  4275  001DF6  6FDD               	movwf	221,b	;volatile
  4276                           
  4277                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
  4278  001DF8  0E00               	movlw	0
  4279  001DFA  6FDE               	movwf	222,b	;volatile
  4280                           
  4281                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
  4282  001DFC  0E00               	movlw	0
  4283  001DFE  6FDF               	movwf	223,b	;volatile
  4284                           
  4285                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
  4286  001E00  0E00               	movlw	0
  4287  001E02  6FE0               	movwf	224,b	;volatile
  4288                           
  4289                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
  4290  001E04  0E00               	movlw	0
  4291  001E06  6FE1               	movwf	225,b	;volatile
  4292                           
  4293                           ; BSR set to: 14
  4294  001E08  0012               	return		;funcret
  4295  001E0A                     __end_of_PMD_Initialize:
  4296                           	opt callstack 0
  4297                           
  4298 ;; *************** function _PIN_MANAGER_Initialize *****************
  4299 ;; Defined at:
  4300 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0
  4315 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4317 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    9
  4321 ;; This function calls:
  4322 ;;		_IOCCF2_SetInterruptHandler
  4323 ;; This function is called by:
  4324 ;;		_SYSTEM_Initialize
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text32
  4329  001764                     __ptext32:
  4330                           	opt callstack 0
  4331  001764                     _PIN_MANAGER_Initialize:
  4332                           	opt callstack 20
  4333                           
  4334                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4335                           
  4336                           ; BSR set to: 14
  4337                           ;incstack = 0
  4338  001764  0E00               	movlw	0
  4339  001766  6E82               	movwf	3970,c	;volatile
  4340                           
  4341                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4342  001768  0E00               	movlw	0
  4343  00176A  6E83               	movwf	3971,c	;volatile
  4344                           
  4345                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4346  00176C  0E00               	movlw	0
  4347  00176E  6E84               	movwf	3972,c	;volatile
  4348                           
  4349                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xF0;
  4350  001770  0EF0               	movlw	240
  4351  001772  6E87               	movwf	3975,c	;volatile
  4352                           
  4353                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF9;
  4354  001774  0EF9               	movlw	249
  4355  001776  6E88               	movwf	3976,c	;volatile
  4356                           
  4357                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x3D;
  4358  001778  0E3D               	movlw	61
  4359  00177A  6E89               	movwf	3977,c	;volatile
  4360                           
  4361                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x3B;
  4362  00177C  0E3B               	movlw	59
  4363  00177E  010F               	movlb	15	; () banked
  4364  001780  6F1C               	movwf	28,b	;volatile
  4365                           
  4366                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF9;
  4367  001782  0EF9               	movlw	249
  4368  001784  6F14               	movwf	20,b	;volatile
  4369                           
  4370                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFA;
  4371  001786  0EFA               	movlw	250
  4372  001788  6F0C               	movwf	12,b	;volatile
  4373                           
  4374                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  4375  00178A  0E00               	movlw	0
  4376  00178C  6F28               	movwf	40,b	;volatile
  4377                           
  4378                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  4379  00178E  0E00               	movlw	0
  4380  001790  6F13               	movwf	19,b	;volatile
  4381                           
  4382                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
  4383  001792  0E00               	movlw	0
  4384  001794  6F0B               	movwf	11,b	;volatile
  4385                           
  4386                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
  4387  001796  0E00               	movlw	0
  4388  001798  6F1B               	movwf	27,b	;volatile
  4389                           
  4390                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  4391  00179A  0E00               	movlw	0
  4392  00179C  6F0A               	movwf	10,b	;volatile
  4393                           
  4394                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  4395  00179E  0E00               	movlw	0
  4396  0017A0  6F12               	movwf	18,b	;volatile
  4397                           
  4398                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  4399  0017A2  0E00               	movlw	0
  4400  0017A4  6F1A               	movwf	26,b	;volatile
  4401                           
  4402                           ; BSR set to: 15
  4403                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  4404  0017A6  6909               	setf	9,b	;volatile
  4405                           
  4406                           ; BSR set to: 15
  4407                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  4408  0017A8  6911               	setf	17,b	;volatile
  4409                           
  4410                           ; BSR set to: 15
  4411                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  4412  0017AA  6919               	setf	25,b	;volatile
  4413                           
  4414                           ; BSR set to: 15
  4415                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF2 = 0;
  4416  0017AC  9515               	bcf	21,2,b	;volatile
  4417                           
  4418                           ; BSR set to: 15
  4419                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN2 = 0;
  4420  0017AE  9516               	bcf	22,2,b	;volatile
  4421                           
  4422                           ; BSR set to: 15
  4423                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP2 = 1;
  4424  0017B0  8517               	bsf	23,2,b	;volatile
  4425                           
  4426                           ; BSR set to: 15
  4427                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
  4428  0017B2  0E4C               	movlw	low _IOCCF2_DefaultInterruptHandler
  4429  0017B4  0100               	movlb	0	; () banked
  4430  0017B6  6F60               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler& (0+255),b
  4431  0017B8  0E1F               	movlw	high _IOCCF2_DefaultInterruptHandler
  4432  0017BA  6F61               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4433  0017BC  EC73  F00F         	call	_IOCCF2_SetInterruptHandler	;wreg free
  4434                           
  4435                           ;mcc_generated_files/pin_manager.c: 119:     PIE0bits.IOCIE = 1;
  4436  0017C0  010E               	movlb	14	; () banked
  4437  0017C2  89BD               	bsf	189,4,b	;volatile
  4438                           
  4439                           ; BSR set to: 14
  4440                           ;mcc_generated_files/pin_manager.c: 122:     CCP1PPS = 0x12;
  4441  0017C4  0E12               	movlw	18
  4442  0017C6  6FAA               	movwf	170,b	;volatile
  4443                           
  4444                           ; BSR set to: 14
  4445                           ;mcc_generated_files/pin_manager.c: 123:     RC6PPS = 0x09;
  4446  0017C8  0E09               	movlw	9
  4447  0017CA  6FF8               	movwf	248,b	;volatile
  4448                           
  4449                           ; BSR set to: 14
  4450  0017CC  0012               	return		;funcret
  4451  0017CE                     __end_of_PIN_MANAGER_Initialize:
  4452                           	opt callstack 0
  4453                           
  4454 ;; *************** function _IOCCF2_SetInterruptHandler *****************
  4455 ;; Defined at:
  4456 ;;		line 153 in file "mcc_generated_files/pin_manager.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4459 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4471 ;;      Params:         0       2       0       0       0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4474 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4475 ;;Total ram usage:        2 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    8
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_PIN_MANAGER_Initialize
  4482 ;;		_ping_init
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text33
  4487  001EE6                     __ptext33:
  4488                           	opt callstack 0
  4489  001EE6                     _IOCCF2_SetInterruptHandler:
  4490                           	opt callstack 20
  4491                           
  4492                           ;mcc_generated_files/pin_manager.c: 154:     IOCCF2_InterruptHandler = InterruptHandler;
  4493                           
  4494                           ; BSR set to: 14
  4495                           ;incstack = 0
  4496  001EE6  C060  F046         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  4497  001EEA  C061  F047         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  4498  001EEE  0012               	return		;funcret
  4499  001EF0                     __end_of_IOCCF2_SetInterruptHandler:
  4500                           	opt callstack 0
  4501                           
  4502 ;; *************** function _OSCILLATOR_Initialize *****************
  4503 ;; Defined at:
  4504 ;;		line 64 in file "mcc_generated_files/mcc.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    8
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_SYSTEM_Initialize
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text34
  4533  001E42                     __ptext34:
  4534                           	opt callstack 0
  4535  001E42                     _OSCILLATOR_Initialize:
  4536                           	opt callstack 21
  4537                           
  4538                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x60;
  4539                           
  4540                           ;incstack = 0
  4541  001E42  0E60               	movlw	96
  4542  001E44  010E               	movlb	14	; () banked
  4543  001E46  6FD3               	movwf	211,b	;volatile
  4544                           
  4545                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
  4546  001E48  0E00               	movlw	0
  4547  001E4A  6FD5               	movwf	213,b	;volatile
  4548                           
  4549                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
  4550  001E4C  0E00               	movlw	0
  4551  001E4E  6FD7               	movwf	215,b	;volatile
  4552                           
  4553                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x08;
  4554  001E50  0E08               	movlw	8
  4555  001E52  6FD9               	movwf	217,b	;volatile
  4556                           
  4557                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  4558  001E54  0E00               	movlw	0
  4559  001E56  6FD8               	movwf	216,b	;volatile
  4560                           
  4561                           ; BSR set to: 14
  4562  001E58  0012               	return		;funcret
  4563  001E5A                     __end_of_OSCILLATOR_Initialize:
  4564                           	opt callstack 0
  4565                           
  4566 ;; *************** function _INTERRUPT_Initialize *****************
  4567 ;; Defined at:
  4568 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		None
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    8
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_SYSTEM_Initialize
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text35
  4597  001E82                     __ptext35:
  4598                           	opt callstack 0
  4599  001E82                     _INTERRUPT_Initialize:
  4600                           	opt callstack 21
  4601                           
  4602                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 1;
  4603                           
  4604                           ; BSR set to: 14
  4605                           ;incstack = 0
  4606  001E82  8AF2               	bsf	4082,5,c	;volatile
  4607                           
  4608                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR4bits.TMR2IP = 1;
  4609  001E84  010E               	movlb	14	; () banked
  4610  001E86  83B9               	bsf	185,1,b	;volatile
  4611                           
  4612                           ;mcc_generated_files/interrupt_manager.c: 64:     IPR4bits.TMR1IP = 0;
  4613  001E88  91B9               	bcf	185,0,b	;volatile
  4614                           
  4615                           ;mcc_generated_files/interrupt_manager.c: 67:     IPR4bits.TMR3IP = 0;
  4616  001E8A  95B9               	bcf	185,2,b	;volatile
  4617                           
  4618                           ;mcc_generated_files/interrupt_manager.c: 70:     IPR6bits.CCP1IP = 0;
  4619  001E8C  91BB               	bcf	187,0,b	;volatile
  4620                           
  4621                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR0bits.IOCIP = 0;
  4622  001E8E  99B5               	bcf	181,4,b	;volatile
  4623                           
  4624                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.ADIP = 0;
  4625  001E90  91B6               	bcf	182,0,b	;volatile
  4626                           
  4627                           ; BSR set to: 14
  4628  001E92  0012               	return		;funcret
  4629  001E94                     __end_of_INTERRUPT_Initialize:
  4630                           	opt callstack 0
  4631                           
  4632 ;; *************** function _EUSART1_Initialize *****************
  4633 ;; Defined at:
  4634 ;;		line 65 in file "mcc_generated_files/eusart1.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4651 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4652 ;;Total ram usage:        0 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    9
  4655 ;; This function calls:
  4656 ;;		_EUSART1_SetErrorHandler
  4657 ;;		_EUSART1_SetFramingErrorHandler
  4658 ;;		_EUSART1_SetOverrunErrorHandler
  4659 ;; This function is called by:
  4660 ;;		_SYSTEM_Initialize
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text36
  4665  0019F0                     __ptext36:
  4666                           	opt callstack 0
  4667  0019F0                     _EUSART1_Initialize:
  4668                           	opt callstack 20
  4669                           
  4670                           ;mcc_generated_files/eusart1.c: 70:     BAUD1CON = 0x08;
  4671                           
  4672                           ; BSR set to: 14
  4673                           ;incstack = 0
  4674  0019F0  0E08               	movlw	8
  4675  0019F2  6E9E               	movwf	3998,c	;volatile
  4676                           
  4677                           ;mcc_generated_files/eusart1.c: 73:     RC1STA = 0x80;
  4678  0019F4  0E80               	movlw	128
  4679  0019F6  6E9C               	movwf	3996,c	;volatile
  4680                           
  4681                           ;mcc_generated_files/eusart1.c: 76:     TX1STA = 0x24;
  4682  0019F8  0E24               	movlw	36
  4683  0019FA  6E9D               	movwf	3997,c	;volatile
  4684                           
  4685                           ;mcc_generated_files/eusart1.c: 79:     SP1BRGL = 0x82;
  4686  0019FC  0E82               	movlw	130
  4687  0019FE  6E9A               	movwf	3994,c	;volatile
  4688                           
  4689                           ;mcc_generated_files/eusart1.c: 82:     SP1BRGH = 0x06;
  4690  001A00  0E06               	movlw	6
  4691  001A02  6E9B               	movwf	3995,c	;volatile
  4692                           
  4693                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4694  001A04  0E00               	movlw	0
  4695  001A06  0100               	movlb	0	; () banked
  4696  001A08  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4697  001A0A  0E00               	movlw	0
  4698  001A0C  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4699  001A0E  EC7D  F00F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4700                           
  4701                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4702  001A12  0E00               	movlw	0
  4703  001A14  0100               	movlb	0	; () banked
  4704  001A16  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4705  001A18  0E00               	movlw	0
  4706  001A1A  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4707  001A1C  EC78  F00F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4708                           
  4709                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4710  001A20  0E00               	movlw	0
  4711  001A22  0100               	movlb	0	; () banked
  4712  001A24  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4713  001A26  0E00               	movlw	0
  4714  001A28  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4715  001A2A  EC82  F00F         	call	_EUSART1_SetErrorHandler	;wreg free
  4716                           
  4717                           ;mcc_generated_files/eusart1.c: 89:     eusart1RxLastError.status = 0;
  4718  001A2E  0E00               	movlw	0
  4719  001A30  0100               	movlb	0	; () banked
  4720  001A32  6FD9               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4721                           
  4722                           ; BSR set to: 0
  4723  001A34  0012               	return		;funcret
  4724  001A36                     __end_of_EUSART1_Initialize:
  4725                           	opt callstack 0
  4726                           
  4727 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4728 ;; Defined at:
  4729 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4732 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4744 ;;      Params:         0       2       0       0       0       0       0       0       0
  4745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4747 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4748 ;;Total ram usage:        2 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    8
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_EUSART1_Initialize
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text37
  4759  001EF0                     __ptext37:
  4760                           	opt callstack 0
  4761  001EF0                     _EUSART1_SetOverrunErrorHandler:
  4762                           	opt callstack 20
  4763                           
  4764                           ;mcc_generated_files/eusart1.c: 170:     EUSART1_OverrunErrorHandler = interruptHandler;
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;incstack = 0
  4768  001EF0  C060  F0FA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4769  001EF4  C061  F0FB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4770  001EF8  0012               	return		;funcret
  4771  001EFA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4772                           	opt callstack 0
  4773                           
  4774 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4775 ;; Defined at:
  4776 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4779 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;		None
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2, status,0
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4791 ;;      Params:         0       2       0       0       0       0       0       0       0
  4792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4794 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4795 ;;Total ram usage:        2 bytes
  4796 ;; Hardware stack levels used:    1
  4797 ;; Hardware stack levels required when called:    8
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_EUSART1_Initialize
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text38
  4806  001EFA                     __ptext38:
  4807                           	opt callstack 0
  4808  001EFA                     _EUSART1_SetFramingErrorHandler:
  4809                           	opt callstack 20
  4810                           
  4811                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_FramingErrorHandler = interruptHandler;
  4812                           
  4813                           ;incstack = 0
  4814  001EFA  C060  F0FC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4815  001EFE  C061  F0FD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4816  001F02  0012               	return		;funcret
  4817  001F04                     __end_of_EUSART1_SetFramingErrorHandler:
  4818                           	opt callstack 0
  4819                           
  4820 ;; *************** function _EUSART1_SetErrorHandler *****************
  4821 ;; Defined at:
  4822 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4825 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4837 ;;      Params:         0       2       0       0       0       0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4840 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4841 ;;Total ram usage:        2 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    8
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_EUSART1_Initialize
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text39
  4852  001F04                     __ptext39:
  4853                           	opt callstack 0
  4854  001F04                     _EUSART1_SetErrorHandler:
  4855                           	opt callstack 20
  4856                           
  4857                           ;mcc_generated_files/eusart1.c: 174:     EUSART1_ErrorHandler = interruptHandler;
  4858                           
  4859                           ;incstack = 0
  4860  001F04  C060  F03E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4861  001F08  C061  F03F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4862  001F0C  0012               	return		;funcret
  4863  001F0E                     __end_of_EUSART1_SetErrorHandler:
  4864                           	opt callstack 0
  4865                           
  4866 ;; *************** function _CCP1_Initialize *****************
  4867 ;; Defined at:
  4868 ;;		line 65 in file "mcc_generated_files/ccp1.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    9
  4889 ;; This function calls:
  4890 ;;		_CCP1_SetCallBack
  4891 ;; This function is called by:
  4892 ;;		_SYSTEM_Initialize
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text40
  4897  001C74                     __ptext40:
  4898                           	opt callstack 0
  4899  001C74                     _CCP1_Initialize:
  4900                           	opt callstack 20
  4901                           
  4902                           ;mcc_generated_files/ccp1.c: 70:  CCP1CON = 0x84;
  4903                           
  4904                           ;incstack = 0
  4905  001C74  0E84               	movlw	132
  4906  001C76  6EAB               	movwf	4011,c	;volatile
  4907                           
  4908                           ;mcc_generated_files/ccp1.c: 73:  CCP1CAP = 0x00;
  4909  001C78  0E00               	movlw	0
  4910  001C7A  6EAC               	movwf	4012,c	;volatile
  4911                           
  4912                           ;mcc_generated_files/ccp1.c: 76:  CCPR1H = 0x00;
  4913  001C7C  0E00               	movlw	0
  4914  001C7E  6EAA               	movwf	4010,c	;volatile
  4915                           
  4916                           ;mcc_generated_files/ccp1.c: 79:  CCPR1L = 0x00;
  4917  001C80  0E00               	movlw	0
  4918  001C82  6EA9               	movwf	4009,c	;volatile
  4919                           
  4920                           ;mcc_generated_files/ccp1.c: 82:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  4921  001C84  0E4E               	movlw	low _CCP1_DefaultCallBack
  4922  001C86  0100               	movlb	0	; () banked
  4923  001C88  6F60               	movwf	CCP1_SetCallBack@customCallBack& (0+255),b
  4924  001C8A  0E1F               	movlw	high _CCP1_DefaultCallBack
  4925  001C8C  6F61               	movwf	(CCP1_SetCallBack@customCallBack+1)& (0+255),b
  4926  001C8E  EC87  F00F         	call	_CCP1_SetCallBack	;wreg free
  4927                           
  4928                           ;mcc_generated_files/ccp1.c: 85:  CCPTMRSbits.C1TSEL = 0x1;
  4929  001C92  50AD               	movf	4013,w,c	;volatile
  4930  001C94  0BFC               	andlw	-4
  4931  001C96  0901               	iorlw	1
  4932  001C98  6EAD               	movwf	4013,c	;volatile
  4933                           
  4934                           ;mcc_generated_files/ccp1.c: 88:     PIR6bits.CCP1IF = 0;
  4935  001C9A  010E               	movlb	14	; () banked
  4936  001C9C  91CB               	bcf	203,0,b	;volatile
  4937                           
  4938                           ; BSR set to: 14
  4939                           ;mcc_generated_files/ccp1.c: 91:     PIE6bits.CCP1IE = 1;
  4940  001C9E  81C3               	bsf	195,0,b	;volatile
  4941                           
  4942                           ; BSR set to: 14
  4943  001CA0  0012               	return		;funcret
  4944  001CA2                     __end_of_CCP1_Initialize:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _CCP1_SetCallBack *****************
  4948 ;; Defined at:
  4949 ;;		line 109 in file "mcc_generated_files/ccp1.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  4952 ;;		 -> ping_CCP1_triggered(1), CCP1_DefaultCallBack(1), 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4964 ;;      Params:         0       2       0       0       0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4967 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4968 ;;Total ram usage:        2 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    8
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_CCP1_Initialize
  4975 ;;		_ping_init
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text41
  4980  001F0E                     __ptext41:
  4981                           	opt callstack 0
  4982  001F0E                     _CCP1_SetCallBack:
  4983                           	opt callstack 20
  4984                           
  4985                           ;mcc_generated_files/ccp1.c: 110:     CCP1_CallBack = customCallBack;
  4986                           
  4987                           ; BSR set to: 14
  4988                           ;incstack = 0
  4989  001F0E  C060  F044         	movff	CCP1_SetCallBack@customCallBack,_CCP1_CallBack
  4990  001F12  C061  F045         	movff	CCP1_SetCallBack@customCallBack+1,_CCP1_CallBack+1
  4991  001F16  0012               	return		;funcret
  4992  001F18                     __end_of_CCP1_SetCallBack:
  4993                           	opt callstack 0
  4994                           
  4995 ;; *************** function _ADCC_Initialize *****************
  4996 ;; Defined at:
  4997 ;;		line 59 in file "mcc_generated_files/adcc.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    8
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_SYSTEM_Initialize
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text42
  5026  00189C                     __ptext42:
  5027                           	opt callstack 0
  5028  00189C                     _ADCC_Initialize:
  5029                           	opt callstack 21
  5030                           
  5031                           ;mcc_generated_files/adcc.c: 61:     ADCC_InterruptHandler = ((void*)0);
  5032                           
  5033                           ;incstack = 0
  5034  00189C  0E00               	movlw	0
  5035  00189E  6E50               	movwf	_ADCC_InterruptHandler,c
  5036  0018A0  0E00               	movlw	0
  5037  0018A2  6E51               	movwf	_ADCC_InterruptHandler+1,c
  5038                           
  5039                           ;mcc_generated_files/adcc.c: 65:     ADCON1 = 0x00;
  5040  0018A4  0E00               	movlw	0
  5041  0018A6  010F               	movlb	15	; () banked
  5042  0018A8  6F54               	movwf	84,b	;volatile
  5043                           
  5044                           ; BSR set to: 15
  5045                           ;mcc_generated_files/adcc.c: 67:     ADCON2 = 0x00;
  5046  0018AA  0E00               	movlw	0
  5047  0018AC  6F55               	movwf	85,b	;volatile
  5048                           
  5049                           ; BSR set to: 15
  5050                           ;mcc_generated_files/adcc.c: 69:     ADCON3 = 0x00;
  5051  0018AE  0E00               	movlw	0
  5052  0018B0  6F56               	movwf	86,b	;volatile
  5053                           
  5054                           ; BSR set to: 15
  5055                           ;mcc_generated_files/adcc.c: 71:     ADACT = 0x00;
  5056  0018B2  0E00               	movlw	0
  5057  0018B4  6F51               	movwf	81,b	;volatile
  5058                           
  5059                           ; BSR set to: 15
  5060                           ;mcc_generated_files/adcc.c: 73:     ADSTAT = 0x00;
  5061  0018B6  0E00               	movlw	0
  5062  0018B8  6E60               	movwf	3936,c	;volatile
  5063                           
  5064                           ; BSR set to: 15
  5065                           ;mcc_generated_files/adcc.c: 75:     ADCLK = 0x00;
  5066  0018BA  0E00               	movlw	0
  5067  0018BC  6F52               	movwf	82,b	;volatile
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;mcc_generated_files/adcc.c: 77:     ADREF = 0x00;
  5071  0018BE  0E00               	movlw	0
  5072  0018C0  6F53               	movwf	83,b	;volatile
  5073                           
  5074                           ; BSR set to: 15
  5075                           ;mcc_generated_files/adcc.c: 79:     ADCAP = 0x00;
  5076  0018C2  0E00               	movlw	0
  5077  0018C4  6F58               	movwf	88,b	;volatile
  5078                           
  5079                           ; BSR set to: 15
  5080                           ;mcc_generated_files/adcc.c: 81:     ADPRE = 0x00;
  5081  0018C6  0E00               	movlw	0
  5082  0018C8  6F59               	movwf	89,b	;volatile
  5083                           
  5084                           ; BSR set to: 15
  5085                           ;mcc_generated_files/adcc.c: 83:     ADACQ = 0x00;
  5086  0018CA  0E00               	movlw	0
  5087  0018CC  6F57               	movwf	87,b	;volatile
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
  5091  0018CE  0E00               	movlw	0
  5092  0018D0  6F5A               	movwf	90,b	;volatile
  5093                           
  5094                           ; BSR set to: 15
  5095                           ;mcc_generated_files/adcc.c: 87:     ADRPT = 0x00;
  5096  0018D2  0E00               	movlw	0
  5097  0018D4  6E61               	movwf	3937,c	;volatile
  5098                           
  5099                           ; BSR set to: 15
  5100                           ;mcc_generated_files/adcc.c: 89:     ADLTHL = 0x00;
  5101  0018D6  0E00               	movlw	0
  5102  0018D8  6E65               	movwf	3941,c	;volatile
  5103                           
  5104                           ; BSR set to: 15
  5105                           ;mcc_generated_files/adcc.c: 91:     ADLTHH = 0x00;
  5106  0018DA  0E00               	movlw	0
  5107  0018DC  6E66               	movwf	3942,c	;volatile
  5108                           
  5109                           ; BSR set to: 15
  5110                           ;mcc_generated_files/adcc.c: 93:     ADUTHL = 0x00;
  5111  0018DE  0E00               	movlw	0
  5112  0018E0  6E67               	movwf	3943,c	;volatile
  5113                           
  5114                           ; BSR set to: 15
  5115                           ;mcc_generated_files/adcc.c: 95:     ADUTHH = 0x00;
  5116  0018E2  0E00               	movlw	0
  5117  0018E4  6E68               	movwf	3944,c	;volatile
  5118                           
  5119                           ; BSR set to: 15
  5120                           ;mcc_generated_files/adcc.c: 97:     ADSTPTL = 0x00;
  5121  0018E6  0E00               	movlw	0
  5122  0018E8  6E63               	movwf	3939,c	;volatile
  5123                           
  5124                           ; BSR set to: 15
  5125                           ;mcc_generated_files/adcc.c: 99:     ADSTPTH = 0x00;
  5126  0018EA  0E00               	movlw	0
  5127  0018EC  6E64               	movwf	3940,c	;volatile
  5128                           
  5129                           ; BSR set to: 15
  5130                           ;mcc_generated_files/adcc.c: 102:     ADCON0 = 0x90;
  5131  0018EE  0E90               	movlw	144
  5132  0018F0  6F5B               	movwf	91,b	;volatile
  5133                           
  5134                           ; BSR set to: 15
  5135                           ;mcc_generated_files/adcc.c: 105:     PIR1bits.ADIF = 0;
  5136  0018F2  010E               	movlb	14	; () banked
  5137  0018F4  91C6               	bcf	198,0,b	;volatile
  5138                           
  5139                           ; BSR set to: 14
  5140                           ;mcc_generated_files/adcc.c: 107:     PIE1bits.ADIE = 1;
  5141  0018F6  81BE               	bsf	190,0,b	;volatile
  5142                           
  5143                           ; BSR set to: 14
  5144  0018F8  0012               	return		;funcret
  5145  0018FA                     __end_of_ADCC_Initialize:
  5146                           	opt callstack 0
  5147                           
  5148 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  5149 ;; Defined at:
  5150 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;		None
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5164 ;;      Params:         0       0       0       0       0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5166 ;;      Temps:          9       0       0       0       0       0       0       0       0
  5167 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5168 ;;Total ram usage:        9 bytes
  5169 ;; Hardware stack levels used:    1
  5170 ;; Hardware stack levels required when called:    7
  5171 ;; This function calls:
  5172 ;;		_ADCC_ISR
  5173 ;;		_CCP1_CaptureISR
  5174 ;;		_PIN_MANAGER_IOC
  5175 ;;		_TMR1_ISR
  5176 ;;		_TMR3_ISR
  5177 ;; This function is called by:
  5178 ;;		Interrupt level 1
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	intcodelo
  5183  000018                     __pintcodelo:
  5184                           	opt callstack 0
  5185  000018                     _INTERRUPT_InterruptManagerLow:
  5186                           	opt callstack 14
  5187                           
  5188                           ; BSR set to: 14
  5189                           ;incstack = 0
  5190  000018  8057               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5191  00001A  CFD8 F031          	movff	status,??_INTERRUPT_InterruptManagerLow
  5192  00001E  CFE8 F032          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  5193  000022  CFE0 F033          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  5194  000026  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  5195  00002A  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  5196  00002E  CFD9 F036          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
  5197  000032  CFDA F037          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
  5198  000036  CFF3 F038          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
  5199  00003A  CFF4 F039          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
  5200                           
  5201                           ;mcc_generated_files/interrupt_manager.c: 92:     if(PIE4bits.TMR1IE == 1 && PIR4bits.TM
      +                          R1IF == 1)
  5202  00003E  010E               	movlb	14	; () banked
  5203  000040  B1C1               	btfsc	193,0,b	;volatile
  5204                           
  5205                           ; BSR set to: 14
  5206  000042  A1C9               	btfss	201,0,b	;volatile
  5207  000044  D003               	goto	i1l259
  5208                           
  5209                           ; BSR set to: 14
  5210                           ;mcc_generated_files/interrupt_manager.c: 93:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 94:         TMR1_ISR();
  5211  000046  ECF4  F00D         	call	_TMR1_ISR	;wreg free
  5212                           
  5213                           ;mcc_generated_files/interrupt_manager.c: 95:     }
  5214  00004A  D017               	goto	i1l264
  5215  00004C                     i1l259:
  5216                           
  5217                           ; BSR set to: 14
  5218  00004C  B5C1               	btfsc	193,2,b	;volatile
  5219                           
  5220                           ; BSR set to: 14
  5221  00004E  A5C9               	btfss	201,2,b	;volatile
  5222  000050  D003               	goto	i1l261
  5223                           
  5224                           ; BSR set to: 14
  5225                           ;mcc_generated_files/interrupt_manager.c: 97:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 98:         TMR3_ISR();
  5226  000052  ECDC  F00D         	call	_TMR3_ISR	;wreg free
  5227                           
  5228                           ;mcc_generated_files/interrupt_manager.c: 99:     }
  5229  000056  D011               	goto	i1l264
  5230  000058                     i1l261:
  5231                           
  5232                           ; BSR set to: 14
  5233  000058  B1C3               	btfsc	195,0,b	;volatile
  5234                           
  5235                           ; BSR set to: 14
  5236  00005A  A1CB               	btfss	203,0,b	;volatile
  5237  00005C  D003               	goto	i1l263
  5238                           
  5239                           ; BSR set to: 14
  5240                           ;mcc_generated_files/interrupt_manager.c: 101:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 102:         CCP1_CaptureISR();
  5241  00005E  EC51  F00E         	call	_CCP1_CaptureISR	;wreg free
  5242                           
  5243                           ;mcc_generated_files/interrupt_manager.c: 103:     }
  5244  000062  D00B               	goto	i1l264
  5245  000064                     i1l263:
  5246                           
  5247                           ; BSR set to: 14
  5248  000064  B9BD               	btfsc	189,4,b	;volatile
  5249                           
  5250                           ; BSR set to: 14
  5251  000066  A9C5               	btfss	197,4,b	;volatile
  5252  000068  D003               	goto	i1l265
  5253                           
  5254                           ; BSR set to: 14
  5255                           ;mcc_generated_files/interrupt_manager.c: 105:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 106:         PIN_MANAGER_IOC();
  5256  00006A  EC59  F00F         	call	_PIN_MANAGER_IOC	;wreg free
  5257                           
  5258                           ;mcc_generated_files/interrupt_manager.c: 107:     }
  5259  00006E  D005               	goto	i1l264
  5260  000070                     i1l265:
  5261                           
  5262                           ; BSR set to: 14
  5263  000070  B1BE               	btfsc	190,0,b	;volatile
  5264                           
  5265                           ; BSR set to: 14
  5266  000072  A1C6               	btfss	198,0,b	;volatile
  5267  000074  D002               	goto	i1l264
  5268                           
  5269                           ; BSR set to: 14
  5270                           ;mcc_generated_files/interrupt_manager.c: 109:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 110:         ADCC_ISR();
  5271  000076  ECB6  F00E         	call	_ADCC_ISR	;wreg free
  5272  00007A                     i1l264:
  5273                           
  5274                           ; BSR set to: 14
  5275  00007A  C039  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
  5276  00007E  C038  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
  5277  000082  C037  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
  5278  000086  C036  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
  5279  00008A  C035  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  5280  00008E  C034  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  5281  000092  C033  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  5282  000096  C032  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  5283  00009A  C031  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  5284  00009E  9057               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5285  0000A0  0010               	retfie	
  5286  0000A2                     __end_of_INTERRUPT_InterruptManagerLow:
  5287                           	opt callstack 0
  5288                           
  5289 ;; *************** function _TMR3_ISR *****************
  5290 ;; Defined at:
  5291 ;;		line 164 in file "mcc_generated_files/tmr3.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5308 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    5
  5312 ;; This function calls:
  5313 ;;		Absolute function
  5314 ;;		_TMR3_DefaultInterruptHandler
  5315 ;;		_timer_ISR
  5316 ;;		i1_TMR3_WriteTimer
  5317 ;; This function is called by:
  5318 ;;		_INTERRUPT_InterruptManagerLow
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text44
  5323  001BB8                     __ptext44:
  5324                           	opt callstack 0
  5325  001BB8                     _TMR3_ISR:
  5326                           	opt callstack 15
  5327                           
  5328                           ;mcc_generated_files/tmr3.c: 168:     PIR4bits.TMR3IF = 0;
  5329                           
  5330                           ;incstack = 0
  5331  001BB8  010E               	movlb	14	; () banked
  5332  001BBA  95C9               	bcf	201,2,b	;volatile
  5333                           
  5334                           ; BSR set to: 14
  5335                           ;mcc_generated_files/tmr3.c: 169:     TMR3_WriteTimer(timer3ReloadVal);
  5336  001BBC  C03C  F006         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
  5337  001BC0  C03D  F007         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
  5338  001BC4  EC13  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  5339                           
  5340                           ;mcc_generated_files/tmr3.c: 171:     if(TMR3_InterruptHandler)
  5341  001BC8  503A               	movf	_TMR3_InterruptHandler,w,c
  5342  001BCA  103B               	iorwf	_TMR3_InterruptHandler+1,w,c
  5343  001BCC  B4D8               	btfsc	status,2,c
  5344  001BCE  0012               	return	
  5345                           
  5346                           ;mcc_generated_files/tmr3.c: 172:     {;mcc_generated_files/tmr3.c: 173:         TMR3_In
      +                          terruptHandler();
  5347  001BD0  D801               	call	i1u231_28
  5348  001BD2  0012               	return	
  5349  001BD4                     i1u231_28:
  5350  001BD4  0005               	push	
  5351  001BD6  6EFA               	movwf	pclath,c
  5352  001BD8  503A               	movf	_TMR3_InterruptHandler,w,c
  5353  001BDA  6EFD               	movwf	tosl,c
  5354  001BDC  503B               	movf	_TMR3_InterruptHandler+1,w,c
  5355  001BDE  6EFE               	movwf	tosh,c
  5356  001BE0  50F8               	movf	tblptru,w,c
  5357  001BE2  6EFF               	movwf	tosu,c
  5358  001BE4  50FA               	movf	pclath,w,c
  5359  001BE6  0012               	return		;indir
  5360  001BE8                     __end_of_TMR3_ISR:
  5361                           	opt callstack 0
  5362                           
  5363 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  5364 ;; Defined at:
  5365 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		None
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5379 ;;      Params:         0       0       0       0       0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    3
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_TMR3_Initialize
  5390 ;;		_timer_ISR
  5391 ;;		_TMR3_ISR
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text45
  5396  001F48                     __ptext45:
  5397                           	opt callstack 0
  5398  001F48                     _TMR3_DefaultInterruptHandler:
  5399                           	opt callstack 16
  5400                           
  5401                           ;incstack = 0
  5402  001F48  0012               	return		;funcret
  5403  001F4A                     __end_of_TMR3_DefaultInterruptHandler:
  5404                           	opt callstack 0
  5405                           
  5406 ;; *************** function _timer_ISR *****************
  5407 ;; Defined at:
  5408 ;;		line 48 in file "cam.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5424 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5425 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5426 ;;Total ram usage:        1 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    4
  5429 ;; This function calls:
  5430 ;;		i1_TMR3_SetInterruptHandler
  5431 ;;		i1_TMR3_StartTimer
  5432 ;;		i1_TMR3_WriteTimer
  5433 ;; This function is called by:
  5434 ;;		_adc_ready_ISR
  5435 ;;		_cam_start
  5436 ;;		_TMR3_ISR
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text46
  5441  0016F6                     __ptext46:
  5442                           	opt callstack 0
  5443  0016F6                     _timer_ISR:
  5444                           	opt callstack 15
  5445                           
  5446                           ;cam.c: 49:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  5447                           
  5448                           ;incstack = 0
  5449  0016F6  0E48               	movlw	low _TMR3_DefaultInterruptHandler
  5450  0016F8  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  5451  0016FA  0E1F               	movlw	high _TMR3_DefaultInterruptHandler
  5452  0016FC  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  5453  0016FE  EC96  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  5454  001702  A284               	btfss	3972,1,c	;volatile
  5455  001704  D002               	goto	i1u218_20
  5456  001706  0E01               	movlw	1
  5457  001708  D001               	goto	i1u218_26
  5458  00170A                     i1u218_20:
  5459  00170A  0E00               	movlw	0
  5460  00170C                     i1u218_26:
  5461  00170C  0AFF               	xorlw	255
  5462  00170E  6E08               	movwf	??_timer_ISR& (0+255),c
  5463  001710  4608               	rlncf	??_timer_ISR,f,c
  5464  001712  5084               	movf	3972,w,c	;volatile
  5465  001714  1808               	xorwf	??_timer_ISR,w,c
  5466  001716  0BFD               	andlw	-3
  5467  001718  1808               	xorwf	??_timer_ISR,w,c
  5468  00171A  6E84               	movwf	3972,c	;volatile
  5469                           
  5470                           ;cam.c: 52:     if (myCam.status == CAM_START) {
  5471  00171C  EE23  F001         	lfsr	2,_myCam+257	;volatile
  5472  001720  50DF               	movf	indf2,w,c
  5473  001722  A4D8               	btfss	status,2,c
  5474  001724  D014               	goto	i1l3734
  5475                           
  5476                           ;cam.c: 53:         myCam.status = CAM_IN_PROGRESS;
  5477  001726  0E01               	movlw	1
  5478  001728  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  5479                           
  5480                           ;cam.c: 54:         do { LATBbits.LATB2 = 0; } while(0);
  5481  00172C  9483               	bcf	3971,2,c	;volatile
  5482                           
  5483                           ;cam.c: 55:         do { LATBbits.LATB1 = 0; } while(0);
  5484  00172E  9283               	bcf	3971,1,c	;volatile
  5485                           
  5486                           ;cam.c: 56:         TMR3_WriteTimer(timing_val);
  5487  001730  C052  F006         	movff	_timing_val,i1TMR3_WriteTimer@timerVal
  5488  001734  C053  F007         	movff	_timing_val+1,i1TMR3_WriteTimer@timerVal+1
  5489  001738  EC13  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  5490                           
  5491                           ;cam.c: 57:         TMR3_SetInterruptHandler(timer_ISR);
  5492  00173C  0EF6               	movlw	low _timer_ISR
  5493  00173E  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  5494  001740  0E16               	movlw	high _timer_ISR
  5495  001742  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  5496  001744  EC96  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  5497                           
  5498                           ;cam.c: 58:         TMR3_StartTimer();
  5499  001748  ECA2  F00F         	call	i1_TMR3_StartTimer	;wreg free
  5500                           
  5501                           ;cam.c: 59:     } else if (myCam.status == CAM_IN_PROGRESS) {
  5502  00174C  0012               	return	
  5503  00174E                     i1l3734:
  5504  00174E  C301  FFE8         	movff	_myCam+257,wreg	;volatile
  5505  001752  0A01               	xorlw	1
  5506  001754  A4D8               	btfss	status,2,c
  5507  001756  0012               	return	
  5508                           
  5509                           ;cam.c: 60:         do { LATBbits.LATB1 = 1; } while(0);
  5510  001758  8283               	bsf	3971,1,c	;volatile
  5511                           
  5512                           ;cam.c: 61:         PIE1bits.ADIE = 1;
  5513  00175A  010E               	movlb	14	; () banked
  5514  00175C  81BE               	bsf	190,0,b	;volatile
  5515                           
  5516                           ;cam.c: 62:         ADCON0bits.GO = 1;
  5517  00175E  010F               	movlb	15	; () banked
  5518  001760  815B               	bsf	91,0,b	;volatile
  5519  001762  0012               	return		;funcret
  5520  001764                     __end_of_timer_ISR:
  5521                           	opt callstack 0
  5522                           
  5523 ;; *************** function _TMR1_ISR *****************
  5524 ;; Defined at:
  5525 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5539 ;;      Params:         0       0       0       0       0       0       0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5542 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5543 ;;Total ram usage:        0 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    5
  5546 ;; This function calls:
  5547 ;;		Absolute function
  5548 ;;		_TMR1_DefaultInterruptHandler
  5549 ;;		_TMR1_WriteTimer
  5550 ;;		_ping_TMR1Overflow_isr
  5551 ;; This function is called by:
  5552 ;;		_INTERRUPT_InterruptManagerLow
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text47
  5557  001BE8                     __ptext47:
  5558                           	opt callstack 0
  5559  001BE8                     _TMR1_ISR:
  5560                           	opt callstack 15
  5561                           
  5562                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  5563                           
  5564                           ;incstack = 0
  5565  001BE8  010E               	movlb	14	; () banked
  5566  001BEA  91C9               	bcf	201,0,b	;volatile
  5567                           
  5568                           ; BSR set to: 14
  5569                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5570  001BEC  C042  F006         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  5571  001BF0  C043  F007         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  5572  001BF4  EC05  F00F         	call	_TMR1_WriteTimer	;wreg free
  5573                           
  5574                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5575  001BF8  5040               	movf	_TMR1_InterruptHandler,w,c
  5576  001BFA  1041               	iorwf	_TMR1_InterruptHandler+1,w,c
  5577  001BFC  B4D8               	btfsc	status,2,c
  5578  001BFE  0012               	return	
  5579                           
  5580                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5581  001C00  D801               	call	i1u229_28
  5582  001C02  0012               	return	
  5583  001C04                     i1u229_28:
  5584  001C04  0005               	push	
  5585  001C06  6EFA               	movwf	pclath,c
  5586  001C08  5040               	movf	_TMR1_InterruptHandler,w,c
  5587  001C0A  6EFD               	movwf	tosl,c
  5588  001C0C  5041               	movf	_TMR1_InterruptHandler+1,w,c
  5589  001C0E  6EFE               	movwf	tosh,c
  5590  001C10  50F8               	movf	tblptru,w,c
  5591  001C12  6EFF               	movwf	tosu,c
  5592  001C14  50FA               	movf	pclath,w,c
  5593  001C16  0012               	return		;indir
  5594  001C18                     __end_of_TMR1_ISR:
  5595                           	opt callstack 0
  5596                           
  5597 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5598 ;; Defined at:
  5599 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;		None
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;		None
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  1    wreg      void 
  5606 ;; Registers used:
  5607 ;;		None
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5613 ;;      Params:         0       0       0       0       0       0       0       0       0
  5614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5616 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5617 ;;Total ram usage:        0 bytes
  5618 ;; Hardware stack levels used:    1
  5619 ;; Hardware stack levels required when called:    3
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_TMR1_Initialize
  5624 ;;		_ping_TMR1Overflow_isr
  5625 ;;		_ping_RC2_went_HIGH
  5626 ;;		_ping_init
  5627 ;;		_TMR1_ISR
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text48
  5632  001F4A                     __ptext48:
  5633                           	opt callstack 0
  5634  001F4A                     _TMR1_DefaultInterruptHandler:
  5635                           	opt callstack 16
  5636                           
  5637                           ;incstack = 0
  5638  001F4A  0012               	return		;funcret
  5639  001F4C                     __end_of_TMR1_DefaultInterruptHandler:
  5640                           	opt callstack 0
  5641                           
  5642 ;; *************** function _ping_TMR1Overflow_isr *****************
  5643 ;; Defined at:
  5644 ;;		line 54 in file "ping.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    4
  5665 ;; This function calls:
  5666 ;;		i1_IOCCF2_SetInterruptHandler
  5667 ;;		i1_TMR1_SetInterruptHandler
  5668 ;; This function is called by:
  5669 ;;		_ping_send
  5670 ;;		_TMR1_ISR
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text49
  5675  001DD0                     __ptext49:
  5676                           	opt callstack 0
  5677  001DD0                     _ping_TMR1Overflow_isr:
  5678                           	opt callstack 15
  5679                           
  5680                           ;ping.c: 55:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5681                           
  5682                           ;incstack = 0
  5683  001DD0  0E4A               	movlw	low _TMR1_DefaultInterruptHandler
  5684  001DD2  6E06               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler,c
  5685  001DD4  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  5686  001DD6  6E07               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1,c
  5687  001DD8  EC8C  F00F         	call	i1_TMR1_SetInterruptHandler	;wreg free
  5688  001DDC  9484               	bcf	3972,2,c	;volatile
  5689  001DDE  8489               	bsf	3977,2,c	;volatile
  5690                           
  5691                           ;ping.c: 60:     IOCCF2_SetInterruptHandler(ping_RC2_went_HIGH);
  5692  001DE0  0E54               	movlw	low _ping_RC2_went_HIGH
  5693  001DE2  6E06               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler,c
  5694  001DE4  0E1B               	movlw	high _ping_RC2_went_HIGH
  5695  001DE6  6E07               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,c
  5696  001DE8  EC91  F00F         	call	i1_IOCCF2_SetInterruptHandler	;wreg free
  5697  001DEC  0012               	return		;funcret
  5698  001DEE                     __end_of_ping_TMR1Overflow_isr:
  5699                           	opt callstack 0
  5700                           
  5701 ;; *************** function _PIN_MANAGER_IOC *****************
  5702 ;; Defined at:
  5703 ;;		line 126 in file "mcc_generated_files/pin_manager.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5721 ;;Total ram usage:        0 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    6
  5724 ;; This function calls:
  5725 ;;		_IOCCF2_ISR
  5726 ;; This function is called by:
  5727 ;;		_INTERRUPT_InterruptManagerLow
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text50
  5732  001EB2                     __ptext50:
  5733                           	opt callstack 0
  5734  001EB2                     _PIN_MANAGER_IOC:
  5735                           	opt callstack 14
  5736                           
  5737                           ;mcc_generated_files/pin_manager.c: 129:     if(IOCCFbits.IOCCF2 == 1)
  5738                           
  5739                           ;incstack = 0
  5740  001EB2  010F               	movlb	15	; () banked
  5741  001EB4  A515               	btfss	21,2,b	;volatile
  5742  001EB6  0012               	return	
  5743                           
  5744                           ; BSR set to: 15
  5745                           ;mcc_generated_files/pin_manager.c: 130:     {;mcc_generated_files/pin_manager.c: 131:  
      +                                 IOCCF2_ISR();
  5746  001EB8  EC90  F00E         	call	_IOCCF2_ISR	;wreg free
  5747  001EBC  0012               	return		;funcret
  5748  001EBE                     __end_of_PIN_MANAGER_IOC:
  5749                           	opt callstack 0
  5750                           
  5751 ;; *************** function _IOCCF2_ISR *****************
  5752 ;; Defined at:
  5753 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;		None
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      void 
  5760 ;; Registers used:
  5761 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5767 ;;      Params:         0       0       0       0       0       0       0       0       0
  5768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5771 ;;Total ram usage:        0 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    5
  5774 ;; This function calls:
  5775 ;;		Absolute function
  5776 ;;		_IOCCF2_DefaultInterruptHandler
  5777 ;;		_ping_RC2_went_HIGH
  5778 ;; This function is called by:
  5779 ;;		_PIN_MANAGER_IOC
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text51
  5784  001D20                     __ptext51:
  5785                           	opt callstack 0
  5786  001D20                     _IOCCF2_ISR:
  5787                           	opt callstack 14
  5788                           
  5789                           ;mcc_generated_files/pin_manager.c: 143:     if(IOCCF2_InterruptHandler)
  5790                           
  5791                           ;incstack = 0
  5792  001D20  5046               	movf	_IOCCF2_InterruptHandler,w,c
  5793  001D22  1047               	iorwf	_IOCCF2_InterruptHandler+1,w,c
  5794  001D24  B4D8               	btfsc	status,2,c
  5795  001D26  D00C               	goto	i1u208_29
  5796                           
  5797                           ;mcc_generated_files/pin_manager.c: 144:     {;mcc_generated_files/pin_manager.c: 145:  
      +                                 IOCCF2_InterruptHandler();
  5798  001D28  D801               	call	i1u208_28
  5799  001D2A  D00A               	goto	i1u208_29
  5800  001D2C                     i1u208_28:
  5801  001D2C  0005               	push	
  5802  001D2E  6EFA               	movwf	pclath,c
  5803  001D30  5046               	movf	_IOCCF2_InterruptHandler,w,c
  5804  001D32  6EFD               	movwf	tosl,c
  5805  001D34  5047               	movf	_IOCCF2_InterruptHandler+1,w,c
  5806  001D36  6EFE               	movwf	tosh,c
  5807  001D38  50F8               	movf	tblptru,w,c
  5808  001D3A  6EFF               	movwf	tosu,c
  5809  001D3C  50FA               	movf	pclath,w,c
  5810  001D3E  0012               	return		;indir
  5811  001D40                     i1u208_29:
  5812                           
  5813                           ;mcc_generated_files/pin_manager.c: 147:     IOCCFbits.IOCCF2 = 0;
  5814  001D40  010F               	movlb	15	; () banked
  5815  001D42  9515               	bcf	21,2,b	;volatile
  5816                           
  5817                           ; BSR set to: 15
  5818  001D44  0012               	return		;funcret
  5819  001D46                     __end_of_IOCCF2_ISR:
  5820                           	opt callstack 0
  5821                           
  5822 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
  5823 ;; Defined at:
  5824 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		None
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    3
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_PIN_MANAGER_Initialize
  5849 ;;		_ping_RC2_went_HIGH
  5850 ;;		_ping_init
  5851 ;;		_IOCCF2_ISR
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855                           	psect	text52
  5856  001F4C                     __ptext52:
  5857                           	opt callstack 0
  5858  001F4C                     _IOCCF2_DefaultInterruptHandler:
  5859                           	opt callstack 15
  5860                           
  5861                           ; BSR set to: 15
  5862                           ;incstack = 0
  5863  001F4C  0012               	return		;funcret
  5864  001F4E                     __end_of_IOCCF2_DefaultInterruptHandler:
  5865                           	opt callstack 0
  5866                           
  5867 ;; *************** function _ping_RC2_went_HIGH *****************
  5868 ;; Defined at:
  5869 ;;		line 66 in file "ping.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5887 ;;Total ram usage:        0 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    4
  5890 ;; This function calls:
  5891 ;;		_TMR1_StartTimer
  5892 ;;		_TMR1_WriteTimer
  5893 ;;		i1_IOCCF2_SetInterruptHandler
  5894 ;;		i1_TMR1_SetInterruptHandler
  5895 ;; This function is called by:
  5896 ;;		_ping_TMR1Overflow_isr
  5897 ;;		_IOCCF2_ISR
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text53
  5902  001B54                     __ptext53:
  5903                           	opt callstack 0
  5904  001B54                     _ping_RC2_went_HIGH:
  5905                           	opt callstack 14
  5906                           
  5907                           ;ping.c: 67:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultInterruptHandler);
  5908                           
  5909                           ;incstack = 0
  5910  001B54  0E4C               	movlw	low _IOCCF2_DefaultInterruptHandler
  5911  001B56  6E06               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler,c
  5912  001B58  0E1F               	movlw	high _IOCCF2_DefaultInterruptHandler
  5913  001B5A  6E07               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,c
  5914  001B5C  EC91  F00F         	call	i1_IOCCF2_SetInterruptHandler	;wreg free
  5915                           
  5916                           ;ping.c: 68:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5917  001B60  0E4A               	movlw	low _TMR1_DefaultInterruptHandler
  5918  001B62  6E06               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler,c
  5919  001B64  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  5920  001B66  6E07               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1,c
  5921  001B68  EC8C  F00F         	call	i1_TMR1_SetInterruptHandler	;wreg free
  5922                           
  5923                           ;ping.c: 70:     TMR1_WriteTimer(0);
  5924  001B6C  0E00               	movlw	0
  5925  001B6E  6E07               	movwf	TMR1_WriteTimer@timerVal+1,c
  5926  001B70  0E00               	movlw	0
  5927  001B72  6E06               	movwf	TMR1_WriteTimer@timerVal,c
  5928  001B74  EC05  F00F         	call	_TMR1_WriteTimer	;wreg free
  5929                           
  5930                           ;ping.c: 71:     TMR1_StartTimer();
  5931  001B78  ECA0  F00F         	call	_TMR1_StartTimer	;wreg free
  5932  001B7C  8482               	bsf	3970,2,c	;volatile
  5933                           
  5934                           ;ping.c: 74:     PIR6 = 0;
  5935  001B7E  0E00               	movlw	0
  5936  001B80  010E               	movlb	14	; () banked
  5937  001B82  6FCB               	movwf	203,b	;volatile
  5938                           
  5939                           ; BSR set to: 14
  5940                           ;ping.c: 75:     PIE6bits.CCP1IE = 1;
  5941  001B84  81C3               	bsf	195,0,b	;volatile
  5942                           
  5943                           ; BSR set to: 14
  5944  001B86  0012               	return		;funcret
  5945  001B88                     __end_of_ping_RC2_went_HIGH:
  5946                           	opt callstack 0
  5947                           
  5948 ;; *************** function i1_TMR1_SetInterruptHandler *****************
  5949 ;; Defined at:
  5950 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  5953 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5965 ;;      Params:         2       0       0       0       0       0       0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5968 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5969 ;;Total ram usage:        2 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    3
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_ping_TMR1Overflow_isr
  5976 ;;		_ping_RC2_went_HIGH
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text54
  5981  001F18                     __ptext54:
  5982                           	opt callstack 0
  5983  001F18                     i1_TMR1_SetInterruptHandler:
  5984                           	opt callstack 15
  5985                           
  5986                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  5987                           
  5988                           ; BSR set to: 14
  5989                           ;incstack = 0
  5990  001F18  C006  F040         	movff	i1TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  5991  001F1C  C007  F041         	movff	i1TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  5992  001F20  0012               	return		;funcret
  5993  001F22                     __end_ofi1_TMR1_SetInterruptHandler:
  5994                           	opt callstack 0
  5995                           
  5996 ;; *************** function i1_IOCCF2_SetInterruptHandler *****************
  5997 ;; Defined at:
  5998 ;;		line 153 in file "mcc_generated_files/pin_manager.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  6001 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1    wreg      void 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6013 ;;      Params:         2       0       0       0       0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6016 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6017 ;;Total ram usage:        2 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    3
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_ping_TMR1Overflow_isr
  6024 ;;		_ping_RC2_went_HIGH
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text55
  6029  001F22                     __ptext55:
  6030                           	opt callstack 0
  6031  001F22                     i1_IOCCF2_SetInterruptHandler:
  6032                           	opt callstack 15
  6033                           
  6034                           ;mcc_generated_files/pin_manager.c: 154:     IOCCF2_InterruptHandler = InterruptHandler;
  6035                           
  6036                           ;incstack = 0
  6037  001F22  C006  F046         	movff	i1IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  6038  001F26  C007  F047         	movff	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  6039  001F2A  0012               	return		;funcret
  6040  001F2C                     __end_ofi1_IOCCF2_SetInterruptHandler:
  6041                           	opt callstack 0
  6042                           
  6043 ;; *************** function _TMR1_WriteTimer *****************
  6044 ;; Defined at:
  6045 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  timerVal        2    5[COMRAM] unsigned short 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  1    wreg      void 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6059 ;;      Params:         2       0       0       0       0       0       0       0       0
  6060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6062 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6063 ;;Total ram usage:        2 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    3
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_TMR1_ISR
  6070 ;;		_ping_RC2_went_HIGH
  6071 ;;		_TMR1_Reload
  6072 ;;		_ping_send
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text56
  6077  001E0A                     __ptext56:
  6078                           	opt callstack 0
  6079  001E0A                     _TMR1_WriteTimer:
  6080                           	opt callstack 16
  6081                           
  6082                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  6083                           
  6084                           ;incstack = 0
  6085  001E0A  A4CE               	btfss	4046,2,c	;volatile
  6086  001E0C  D007               	goto	i1l3142
  6087                           
  6088                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  6089  001E0E  90CE               	bcf	4046,0,c	;volatile
  6090                           
  6091                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  6092  001E10  5007               	movf	TMR1_WriteTimer@timerVal+1,w,c
  6093  001E12  6ECD               	movwf	4045,c	;volatile
  6094                           
  6095                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  6096  001E14  C006  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6097                           
  6098                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  6099  001E18  80CE               	bsf	4046,0,c	;volatile
  6100                           
  6101                           ;mcc_generated_files/tmr1.c: 140:     }
  6102  001E1A  0012               	return	
  6103  001E1C                     i1l3142:
  6104                           
  6105                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  6106  001E1C  5007               	movf	TMR1_WriteTimer@timerVal+1,w,c
  6107  001E1E  6ECD               	movwf	4045,c	;volatile
  6108                           
  6109                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  6110  001E20  C006  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6111  001E24  0012               	return		;funcret
  6112  001E26                     __end_of_TMR1_WriteTimer:
  6113                           	opt callstack 0
  6114                           
  6115 ;; *************** function _TMR1_StartTimer *****************
  6116 ;; Defined at:
  6117 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		None
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6134 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6135 ;;Total ram usage:        0 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    3
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_ping_RC2_went_HIGH
  6142 ;;		_ping_send
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text57
  6147  001F40                     __ptext57:
  6148                           	opt callstack 0
  6149  001F40                     _TMR1_StartTimer:
  6150                           	opt callstack 14
  6151                           
  6152                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
  6153                           
  6154                           ;incstack = 0
  6155  001F40  80CE               	bsf	4046,0,c	;volatile
  6156  001F42  0012               	return		;funcret
  6157  001F44                     __end_of_TMR1_StartTimer:
  6158                           	opt callstack 0
  6159                           
  6160 ;; *************** function _CCP1_CaptureISR *****************
  6161 ;; Defined at:
  6162 ;;		line 94 in file "mcc_generated_files/ccp1.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  module          2   46[COMRAM] struct CCPR1Reg_tag
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0
  6177 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6179 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6180 ;;Total ram usage:        2 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    5
  6183 ;; This function calls:
  6184 ;;		Absolute function
  6185 ;;		_CCP1_DefaultCallBack
  6186 ;;		_ping_CCP1_triggered
  6187 ;; This function is called by:
  6188 ;;		_INTERRUPT_InterruptManagerLow
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text58
  6193  001CA2                     __ptext58:
  6194                           	opt callstack 0
  6195  001CA2                     _CCP1_CaptureISR:
  6196                           	opt callstack 15
  6197                           
  6198                           ;mcc_generated_files/ccp1.c: 96:     CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1.
      +                          c: 99:     PIR6bits.CCP1IF = 0;
  6199                           
  6200                           ;incstack = 0
  6201  001CA2  010E               	movlb	14	; () banked
  6202  001CA4  91CB               	bcf	203,0,b	;volatile
  6203                           
  6204                           ;mcc_generated_files/ccp1.c: 102:     module.ccpr1l = CCPR1L;
  6205  001CA6  CFA9 F02F          	movff	4009,CCP1_CaptureISR@module	;volatile
  6206                           
  6207                           ;mcc_generated_files/ccp1.c: 103:     module.ccpr1h = CCPR1H;
  6208  001CAA  CFAA F030          	movff	4010,CCP1_CaptureISR@module+1	;volatile
  6209                           
  6210                           ; BSR set to: 14
  6211                           ;mcc_generated_files/ccp1.c: 106:     CCP1_CallBack(module.ccpr1_16Bit);
  6212  001CAE  C02F  F02D         	movff	CCP1_CaptureISR@module,ping_CCP1_triggered@timeOfFlight
  6213  001CB2  C030  F02E         	movff	CCP1_CaptureISR@module+1,ping_CCP1_triggered@timeOfFlight+1
  6214  001CB6  D801               	call	i1u232_28
  6215  001CB8  0012               	return	
  6216  001CBA                     i1u232_28:
  6217  001CBA  0005               	push	
  6218  001CBC  6EFA               	movwf	pclath,c
  6219  001CBE  5044               	movf	_CCP1_CallBack,w,c
  6220  001CC0  6EFD               	movwf	tosl,c
  6221  001CC2  5045               	movf	_CCP1_CallBack+1,w,c
  6222  001CC4  6EFE               	movwf	tosh,c
  6223  001CC6  50F8               	movf	tblptru,w,c
  6224  001CC8  6EFF               	movwf	tosu,c
  6225  001CCA  50FA               	movf	pclath,w,c
  6226  001CCC  0012               	return		;indir
  6227  001CCE                     __end_of_CCP1_CaptureISR:
  6228                           	opt callstack 0
  6229                           
  6230 ;; *************** function _CCP1_DefaultCallBack *****************
  6231 ;; Defined at:
  6232 ;;		line 60 in file "mcc_generated_files/ccp1.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  capturedValu    2   44[COMRAM] unsigned short 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		None
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6246 ;;      Params:         2       0       0       0       0       0       0       0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6249 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6250 ;;Total ram usage:        2 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; Hardware stack levels required when called:    3
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_CCP1_Initialize
  6257 ;;		_CCP1_CaptureISR
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text59
  6262  001F4E                     __ptext59:
  6263                           	opt callstack 0
  6264  001F4E                     _CCP1_DefaultCallBack:
  6265                           	opt callstack 16
  6266                           
  6267                           ;incstack = 0
  6268  001F4E  0012               	return		;funcret
  6269  001F50                     __end_of_CCP1_DefaultCallBack:
  6270                           	opt callstack 0
  6271                           
  6272 ;; *************** function _ping_CCP1_triggered *****************
  6273 ;; Defined at:
  6274 ;;		line 83 in file "ping.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  timeOfFlight    2   44[COMRAM] unsigned short 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6288 ;;      Params:         2       0       0       0       0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6291 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6292 ;;Total ram usage:        2 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:    4
  6295 ;; This function calls:
  6296 ;;		___flmul
  6297 ;;		___xxtofl
  6298 ;; This function is called by:
  6299 ;;		_ping_init
  6300 ;;		_CCP1_CaptureISR
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text60
  6305  001836                     __ptext60:
  6306                           	opt callstack 0
  6307  001836                     _ping_CCP1_triggered:
  6308                           	opt callstack 15
  6309                           
  6310                           ;ping.c: 84:     status.tof = timeOfFlight;
  6311                           
  6312                           ;incstack = 0
  6313  001836  C02D  F04E         	movff	ping_CCP1_triggered@timeOfFlight,_status+6	;volatile
  6314  00183A  C02E  F04F         	movff	ping_CCP1_triggered@timeOfFlight+1,_status+7	;volatile
  6315                           
  6316                           ;ping.c: 85:     status.pingStarted = 0;
  6317  00183E  0E00               	movlw	0
  6318  001840  6E4D               	movwf	_status+5,c	;volatile
  6319                           
  6320                           ;ping.c: 86:     status.readReady = 1;
  6321  001842  0E01               	movlw	1
  6322  001844  6E48               	movwf	_status,c	;volatile
  6323                           
  6324                           ;ping.c: 87:     PIE6bits.CCP1IE = 0;
  6325  001846  010E               	movlb	14	; () banked
  6326  001848  91C3               	bcf	195,0,b	;volatile
  6327                           
  6328                           ; BSR set to: 14
  6329  00184A  9482               	bcf	3970,2,c	;volatile
  6330                           
  6331                           ; BSR set to: 14
  6332                           ;ping.c: 89:     status.measurment = 0.009 * timeOfFlight;
  6333  00184C  C02D  F006         	movff	ping_CCP1_triggered@timeOfFlight,___xxtofl@val
  6334  001850  C02E  F007         	movff	ping_CCP1_triggered@timeOfFlight+1,___xxtofl@val+1
  6335  001854  6A08               	clrf	___xxtofl@val+2,c
  6336  001856  6A09               	clrf	___xxtofl@val+3,c
  6337  001858  0E00               	movlw	0
  6338  00185A  EC48  F008         	call	___xxtofl
  6339  00185E  C006  F014         	movff	?___xxtofl,___flmul@b
  6340  001862  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  6341  001866  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  6342  00186A  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  6343  00186E  0EBC               	movlw	188
  6344  001870  6E18               	movwf	___flmul@a,c
  6345  001872  0E74               	movlw	116
  6346  001874  6E19               	movwf	___flmul@a+1,c
  6347  001876  0E13               	movlw	19
  6348  001878  6E1A               	movwf	___flmul@a+2,c
  6349  00187A  0E3C               	movlw	60
  6350  00187C  6E1B               	movwf	___flmul@a+3,c
  6351  00187E  EC14  F004         	call	___flmul	;wreg free
  6352  001882  C014  F049         	movff	?___flmul,_status+1	;volatile
  6353  001886  C015  F04A         	movff	?___flmul+1,_status+2	;volatile
  6354  00188A  C016  F04B         	movff	?___flmul+2,_status+3	;volatile
  6355  00188E  C017  F04C         	movff	?___flmul+3,_status+4	;volatile
  6356                           
  6357                           ;ping.c: 90:     status.readReady = 1;
  6358  001892  0E01               	movlw	1
  6359  001894  6E48               	movwf	_status,c	;volatile
  6360                           
  6361                           ;ping.c: 91:     status.pingStarted = 0;
  6362  001896  0E00               	movlw	0
  6363  001898  6E4D               	movwf	_status+5,c	;volatile
  6364  00189A  0012               	return		;funcret
  6365  00189C                     __end_of_ping_CCP1_triggered:
  6366                           	opt callstack 0
  6367                           
  6368 ;; *************** function ___xxtofl *****************
  6369 ;; Defined at:
  6370 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  sign            1    wreg     unsigned char 
  6373 ;;  val             4    5[COMRAM] long 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  sign            1   13[COMRAM] unsigned char 
  6376 ;;  arg             4   15[COMRAM] unsigned long 
  6377 ;;  exp             1   14[COMRAM] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  4    5[COMRAM] unsigned char 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6387 ;;      Params:         4       0       0       0       0       0       0       0       0
  6388 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6389 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6390 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6391 ;;Total ram usage:       14 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    3
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_ping_CCP1_triggered
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text61
  6402  001090                     __ptext61:
  6403                           	opt callstack 0
  6404  001090                     ___xxtofl:
  6405                           	opt callstack 15
  6406                           
  6407                           ;incstack = 0
  6408                           ;___xxtofl@sign stored from wreg
  6409  001090  6E0E               	movwf	___xxtofl@sign,c
  6410  001092  500E               	movf	___xxtofl@sign,w,c
  6411  001094  A4D8               	btfss	status,2,c
  6412  001096  AE09               	btfss	___xxtofl@val+3,7,c
  6413  001098  D01A               	goto	i1l1696
  6414  00109A  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6415  00109E  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6416  0010A2  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6417  0010A6  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6418  0010AA  1E0A               	comf	??___xxtofl,f,c
  6419  0010AC  1E0B               	comf	??___xxtofl+1,f,c
  6420  0010AE  1E0C               	comf	??___xxtofl+2,f,c
  6421  0010B0  1E0D               	comf	??___xxtofl+3,f,c
  6422  0010B2  2A0A               	incf	??___xxtofl,f,c
  6423  0010B4  0E00               	movlw	0
  6424  0010B6  220B               	addwfc	??___xxtofl+1,f,c
  6425  0010B8  220C               	addwfc	??___xxtofl+2,f,c
  6426  0010BA  220D               	addwfc	??___xxtofl+3,f,c
  6427  0010BC  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6428  0010C0  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6429  0010C4  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6430  0010C8  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6431  0010CC  D008               	goto	i1l3418
  6432  0010CE                     i1l1696:
  6433  0010CE  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6434  0010D2  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6435  0010D6  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6436  0010DA  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6437  0010DE                     i1l3418:
  6438  0010DE  5006               	movf	___xxtofl@val,w,c
  6439  0010E0  1007               	iorwf	___xxtofl@val+1,w,c
  6440  0010E2  1008               	iorwf	___xxtofl@val+2,w,c
  6441  0010E4  1009               	iorwf	___xxtofl@val+3,w,c
  6442  0010E6  A4D8               	btfss	status,2,c
  6443  0010E8  D009               	goto	i1l3424
  6444  0010EA  0E00               	movlw	0
  6445  0010EC  6E06               	movwf	?___xxtofl,c
  6446  0010EE  0E00               	movlw	0
  6447  0010F0  6E07               	movwf	?___xxtofl+1,c
  6448  0010F2  0E00               	movlw	0
  6449  0010F4  6E08               	movwf	?___xxtofl+2,c
  6450  0010F6  0E00               	movlw	0
  6451  0010F8  6E09               	movwf	?___xxtofl+3,c
  6452  0010FA  0012               	return	
  6453  0010FC                     i1l3424:
  6454  0010FC  0E96               	movlw	150
  6455  0010FE  6E0F               	movwf	___xxtofl@exp,c
  6456  001100  D006               	goto	i1l3428
  6457  001102                     i1l3426:
  6458  001102  2A0F               	incf	___xxtofl@exp,f,c
  6459  001104  90D8               	bcf	status,0,c
  6460  001106  3213               	rrcf	___xxtofl@arg+3,f,c
  6461  001108  3212               	rrcf	___xxtofl@arg+2,f,c
  6462  00110A  3211               	rrcf	___xxtofl@arg+1,f,c
  6463  00110C  3210               	rrcf	___xxtofl@arg,f,c
  6464  00110E                     i1l3428:
  6465  00110E  0E00               	movlw	0
  6466  001110  1410               	andwf	___xxtofl@arg,w,c
  6467  001112  6E0A               	movwf	??___xxtofl& (0+255),c
  6468  001114  0E00               	movlw	0
  6469  001116  1411               	andwf	___xxtofl@arg+1,w,c
  6470  001118  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6471  00111A  0E00               	movlw	0
  6472  00111C  1412               	andwf	___xxtofl@arg+2,w,c
  6473  00111E  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6474  001120  0EFE               	movlw	254
  6475  001122  1413               	andwf	___xxtofl@arg+3,w,c
  6476  001124  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6477  001126  500A               	movf	??___xxtofl,w,c
  6478  001128  100B               	iorwf	??___xxtofl+1,w,c
  6479  00112A  100C               	iorwf	??___xxtofl+2,w,c
  6480  00112C  100D               	iorwf	??___xxtofl+3,w,c
  6481  00112E  B4D8               	btfsc	status,2,c
  6482  001130  D00D               	goto	i1l1703
  6483  001132  D7E7               	goto	i1l3426
  6484  001134                     i1l3430:
  6485  001134  2A0F               	incf	___xxtofl@exp,f,c
  6486  001136  0E01               	movlw	1
  6487  001138  2610               	addwf	___xxtofl@arg,f,c
  6488  00113A  0E00               	movlw	0
  6489  00113C  2211               	addwfc	___xxtofl@arg+1,f,c
  6490  00113E  2212               	addwfc	___xxtofl@arg+2,f,c
  6491  001140  2213               	addwfc	___xxtofl@arg+3,f,c
  6492  001142  90D8               	bcf	status,0,c
  6493  001144  3213               	rrcf	___xxtofl@arg+3,f,c
  6494  001146  3212               	rrcf	___xxtofl@arg+2,f,c
  6495  001148  3211               	rrcf	___xxtofl@arg+1,f,c
  6496  00114A  3210               	rrcf	___xxtofl@arg,f,c
  6497  00114C                     i1l1703:
  6498  00114C  0E00               	movlw	0
  6499  00114E  1410               	andwf	___xxtofl@arg,w,c
  6500  001150  6E0A               	movwf	??___xxtofl& (0+255),c
  6501  001152  0E00               	movlw	0
  6502  001154  1411               	andwf	___xxtofl@arg+1,w,c
  6503  001156  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6504  001158  0E00               	movlw	0
  6505  00115A  1412               	andwf	___xxtofl@arg+2,w,c
  6506  00115C  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6507  00115E  0EFF               	movlw	255
  6508  001160  1413               	andwf	___xxtofl@arg+3,w,c
  6509  001162  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6510  001164  500A               	movf	??___xxtofl,w,c
  6511  001166  100B               	iorwf	??___xxtofl+1,w,c
  6512  001168  100C               	iorwf	??___xxtofl+2,w,c
  6513  00116A  100D               	iorwf	??___xxtofl+3,w,c
  6514  00116C  B4D8               	btfsc	status,2,c
  6515  00116E  D007               	goto	i1l3438
  6516  001170  D7E1               	goto	i1l3430
  6517  001172                     i1l3436:
  6518  001172  060F               	decf	___xxtofl@exp,f,c
  6519  001174  90D8               	bcf	status,0,c
  6520  001176  3610               	rlcf	___xxtofl@arg,f,c
  6521  001178  3611               	rlcf	___xxtofl@arg+1,f,c
  6522  00117A  3612               	rlcf	___xxtofl@arg+2,f,c
  6523  00117C  3613               	rlcf	___xxtofl@arg+3,f,c
  6524  00117E                     i1l3438:
  6525  00117E  BE12               	btfsc	___xxtofl@arg+2,7,c
  6526  001180  D003               	goto	i1u202_20
  6527  001182  0E02               	movlw	2
  6528  001184  600F               	cpfslt	___xxtofl@exp,c
  6529  001186  D7F5               	goto	i1l3436
  6530  001188                     i1u202_20:
  6531  001188  A00F               	btfss	___xxtofl@exp,0,c
  6532  00118A  9E12               	bcf	___xxtofl@arg+2,7,c
  6533  00118C  90D8               	bcf	status,0,c
  6534  00118E  320F               	rrcf	___xxtofl@exp,f,c
  6535  001190  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6536  001194  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6537  001196  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6538  001198  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6539  00119A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6540  00119E  6A0C               	clrf	??___xxtofl+2,c
  6541  0011A0  6A0B               	clrf	??___xxtofl+1,c
  6542  0011A2  6A0A               	clrf	??___xxtofl,c
  6543  0011A4  500A               	movf	??___xxtofl,w,c
  6544  0011A6  1210               	iorwf	___xxtofl@arg,f,c
  6545  0011A8  500B               	movf	??___xxtofl+1,w,c
  6546  0011AA  1211               	iorwf	___xxtofl@arg+1,f,c
  6547  0011AC  500C               	movf	??___xxtofl+2,w,c
  6548  0011AE  1212               	iorwf	___xxtofl@arg+2,f,c
  6549  0011B0  500D               	movf	??___xxtofl+3,w,c
  6550  0011B2  1213               	iorwf	___xxtofl@arg+3,f,c
  6551  0011B4  500E               	movf	___xxtofl@sign,w,c
  6552  0011B6  A4D8               	btfss	status,2,c
  6553  0011B8  AE09               	btfss	___xxtofl@val+3,7,c
  6554  0011BA  D001               	goto	i1l3454
  6555  0011BC  8E13               	bsf	___xxtofl@arg+3,7,c
  6556  0011BE                     i1l3454:
  6557  0011BE  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6558  0011C2  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6559  0011C6  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6560  0011CA  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6561  0011CE  0012               	return		;funcret
  6562  0011D0                     __end_of___xxtofl:
  6563                           	opt callstack 0
  6564                           
  6565 ;; *************** function ___flmul *****************
  6566 ;; Defined at:
  6567 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  b               4   19[COMRAM] unsigned char 
  6570 ;;  a               4   23[COMRAM] unsigned char 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  prod            4   38[COMRAM] struct .
  6573 ;;  grs             4   32[COMRAM] unsigned long 
  6574 ;;  temp            2   42[COMRAM] struct .
  6575 ;;  bexp            1   37[COMRAM] unsigned char 
  6576 ;;  aexp            1   36[COMRAM] unsigned char 
  6577 ;;  sign            1   31[COMRAM] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  4   19[COMRAM] unsigned char 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, prodl, prodh
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6587 ;;      Params:         8       0       0       0       0       0       0       0       0
  6588 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6589 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6590 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6591 ;;Total ram usage:       25 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    3
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_ping_CCP1_triggered
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text62
  6602  000828                     __ptext62:
  6603                           	opt callstack 0
  6604  000828                     ___flmul:
  6605                           	opt callstack 15
  6606                           
  6607                           ;incstack = 0
  6608  000828  5017               	movf	___flmul@b+3,w,c
  6609  00082A  0B80               	andlw	128
  6610  00082C  6E20               	movwf	___flmul@sign,c
  6611  00082E  5017               	movf	___flmul@b+3,w,c
  6612  000830  2417               	addwf	___flmul@b+3,w,c
  6613  000832  6E26               	movwf	___flmul@bexp,c
  6614  000834  BE16               	btfsc	___flmul@b+2,7,c
  6615  000836  8026               	bsf	___flmul@bexp,0,c
  6616  000838  5026               	movf	___flmul@bexp,w,c
  6617  00083A  B4D8               	btfsc	status,2,c
  6618  00083C  D00D               	goto	i1l3296
  6619  00083E  2826               	incf	___flmul@bexp,w,c
  6620  000840  A4D8               	btfss	status,2,c
  6621  000842  D008               	goto	i1l3294
  6622  000844  0E00               	movlw	0
  6623  000846  6E14               	movwf	___flmul@b,c
  6624  000848  0E00               	movlw	0
  6625  00084A  6E15               	movwf	___flmul@b+1,c
  6626  00084C  0E00               	movlw	0
  6627  00084E  6E16               	movwf	___flmul@b+2,c
  6628  000850  0E00               	movlw	0
  6629  000852  6E17               	movwf	___flmul@b+3,c
  6630  000854                     i1l3294:
  6631  000854  8E16               	bsf	___flmul@b+2,7,c
  6632  000856  D008               	goto	i1l3298
  6633  000858                     i1l3296:
  6634  000858  0E00               	movlw	0
  6635  00085A  6E14               	movwf	___flmul@b,c
  6636  00085C  0E00               	movlw	0
  6637  00085E  6E15               	movwf	___flmul@b+1,c
  6638  000860  0E00               	movlw	0
  6639  000862  6E16               	movwf	___flmul@b+2,c
  6640  000864  0E00               	movlw	0
  6641  000866  6E17               	movwf	___flmul@b+3,c
  6642  000868                     i1l3298:
  6643  000868  501B               	movf	___flmul@a+3,w,c
  6644  00086A  0B80               	andlw	128
  6645  00086C  1A20               	xorwf	___flmul@sign,f,c
  6646  00086E  501B               	movf	___flmul@a+3,w,c
  6647  000870  241B               	addwf	___flmul@a+3,w,c
  6648  000872  6E25               	movwf	___flmul@aexp,c
  6649  000874  BE1A               	btfsc	___flmul@a+2,7,c
  6650  000876  8025               	bsf	___flmul@aexp,0,c
  6651  000878  5025               	movf	___flmul@aexp,w,c
  6652  00087A  B4D8               	btfsc	status,2,c
  6653  00087C  D00D               	goto	i1l3314
  6654  00087E  2825               	incf	___flmul@aexp,w,c
  6655  000880  A4D8               	btfss	status,2,c
  6656  000882  D008               	goto	i1l3312
  6657  000884  0E00               	movlw	0
  6658  000886  6E18               	movwf	___flmul@a,c
  6659  000888  0E00               	movlw	0
  6660  00088A  6E19               	movwf	___flmul@a+1,c
  6661  00088C  0E00               	movlw	0
  6662  00088E  6E1A               	movwf	___flmul@a+2,c
  6663  000890  0E00               	movlw	0
  6664  000892  6E1B               	movwf	___flmul@a+3,c
  6665  000894                     i1l3312:
  6666  000894  8E1A               	bsf	___flmul@a+2,7,c
  6667  000896  D008               	goto	i1l1655
  6668  000898                     i1l3314:
  6669  000898  0E00               	movlw	0
  6670  00089A  6E18               	movwf	___flmul@a,c
  6671  00089C  0E00               	movlw	0
  6672  00089E  6E19               	movwf	___flmul@a+1,c
  6673  0008A0  0E00               	movlw	0
  6674  0008A2  6E1A               	movwf	___flmul@a+2,c
  6675  0008A4  0E00               	movlw	0
  6676  0008A6  6E1B               	movwf	___flmul@a+3,c
  6677  0008A8                     i1l1655:
  6678  0008A8  5025               	movf	___flmul@aexp,w,c
  6679  0008AA  B4D8               	btfsc	status,2,c
  6680  0008AC  D003               	goto	i1u184_20
  6681  0008AE  5026               	movf	___flmul@bexp,w,c
  6682  0008B0  A4D8               	btfss	status,2,c
  6683  0008B2  D009               	goto	i1l3322
  6684  0008B4                     i1u184_20:
  6685  0008B4  0E00               	movlw	0
  6686  0008B6  6E14               	movwf	?___flmul,c
  6687  0008B8  0E00               	movlw	0
  6688  0008BA  6E15               	movwf	?___flmul+1,c
  6689  0008BC  0E00               	movlw	0
  6690  0008BE  6E16               	movwf	?___flmul+2,c
  6691  0008C0  0E00               	movlw	0
  6692  0008C2  6E17               	movwf	?___flmul+3,c
  6693  0008C4  0012               	return	
  6694  0008C6                     i1l3322:
  6695  0008C6  501A               	movf	___flmul@a+2,w,c
  6696  0008C8  0214               	mulwf	___flmul@b,c
  6697  0008CA  CFF3 F02B          	movff	prodl,___flmul@temp
  6698  0008CE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6699  0008D2  502B               	movf	___flmul@temp,w,c
  6700  0008D4  6E21               	movwf	___flmul@grs,c
  6701  0008D6  6A22               	clrf	___flmul@grs+1,c
  6702  0008D8  6A23               	clrf	___flmul@grs+2,c
  6703  0008DA  6A24               	clrf	___flmul@grs+3,c
  6704  0008DC  502C               	movf	___flmul@temp+1,w,c
  6705  0008DE  6E27               	movwf	___flmul@prod,c
  6706  0008E0  6A28               	clrf	___flmul@prod+1,c
  6707  0008E2  6A29               	clrf	___flmul@prod+2,c
  6708  0008E4  6A2A               	clrf	___flmul@prod+3,c
  6709  0008E6  5019               	movf	___flmul@a+1,w,c
  6710  0008E8  0215               	mulwf	___flmul@b+1,c
  6711  0008EA  CFF3 F02B          	movff	prodl,___flmul@temp
  6712  0008EE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6713  0008F2  502B               	movf	___flmul@temp,w,c
  6714  0008F4  2621               	addwf	___flmul@grs,f,c
  6715  0008F6  0E00               	movlw	0
  6716  0008F8  2222               	addwfc	___flmul@grs+1,f,c
  6717  0008FA  2223               	addwfc	___flmul@grs+2,f,c
  6718  0008FC  2224               	addwfc	___flmul@grs+3,f,c
  6719  0008FE  502C               	movf	___flmul@temp+1,w,c
  6720  000900  2627               	addwf	___flmul@prod,f,c
  6721  000902  0E00               	movlw	0
  6722  000904  2228               	addwfc	___flmul@prod+1,f,c
  6723  000906  2229               	addwfc	___flmul@prod+2,f,c
  6724  000908  222A               	addwfc	___flmul@prod+3,f,c
  6725  00090A  5018               	movf	___flmul@a,w,c
  6726  00090C  0216               	mulwf	___flmul@b+2,c
  6727  00090E  CFF3 F02B          	movff	prodl,___flmul@temp
  6728  000912  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6729  000916  502B               	movf	___flmul@temp,w,c
  6730  000918  2621               	addwf	___flmul@grs,f,c
  6731  00091A  0E00               	movlw	0
  6732  00091C  2222               	addwfc	___flmul@grs+1,f,c
  6733  00091E  2223               	addwfc	___flmul@grs+2,f,c
  6734  000920  2224               	addwfc	___flmul@grs+3,f,c
  6735  000922  502C               	movf	___flmul@temp+1,w,c
  6736  000924  2627               	addwf	___flmul@prod,f,c
  6737  000926  0E00               	movlw	0
  6738  000928  2228               	addwfc	___flmul@prod+1,f,c
  6739  00092A  2229               	addwfc	___flmul@prod+2,f,c
  6740  00092C  222A               	addwfc	___flmul@prod+3,f,c
  6741  00092E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6742  000932  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6743  000936  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6744  00093A  6A21               	clrf	___flmul@grs,c
  6745  00093C  5018               	movf	___flmul@a,w,c
  6746  00093E  0215               	mulwf	___flmul@b+1,c
  6747  000940  CFF3 F02B          	movff	prodl,___flmul@temp
  6748  000944  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6749  000948  502B               	movf	___flmul@temp,w,c
  6750  00094A  2621               	addwf	___flmul@grs,f,c
  6751  00094C  502C               	movf	___flmul@temp+1,w,c
  6752  00094E  2222               	addwfc	___flmul@grs+1,f,c
  6753  000950  0E00               	movlw	0
  6754  000952  2223               	addwfc	___flmul@grs+2,f,c
  6755  000954  0E00               	movlw	0
  6756  000956  2224               	addwfc	___flmul@grs+3,f,c
  6757  000958  5019               	movf	___flmul@a+1,w,c
  6758  00095A  0214               	mulwf	___flmul@b,c
  6759  00095C  CFF3 F02B          	movff	prodl,___flmul@temp
  6760  000960  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6761  000964  502B               	movf	___flmul@temp,w,c
  6762  000966  2621               	addwf	___flmul@grs,f,c
  6763  000968  502C               	movf	___flmul@temp+1,w,c
  6764  00096A  2222               	addwfc	___flmul@grs+1,f,c
  6765  00096C  0E00               	movlw	0
  6766  00096E  2223               	addwfc	___flmul@grs+2,f,c
  6767  000970  0E00               	movlw	0
  6768  000972  2224               	addwfc	___flmul@grs+3,f,c
  6769  000974  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6770  000978  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6771  00097C  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6772  000980  6A21               	clrf	___flmul@grs,c
  6773  000982  5018               	movf	___flmul@a,w,c
  6774  000984  0214               	mulwf	___flmul@b,c
  6775  000986  CFF3 F02B          	movff	prodl,___flmul@temp
  6776  00098A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6777  00098E  502B               	movf	___flmul@temp,w,c
  6778  000990  2621               	addwf	___flmul@grs,f,c
  6779  000992  502C               	movf	___flmul@temp+1,w,c
  6780  000994  2222               	addwfc	___flmul@grs+1,f,c
  6781  000996  0E00               	movlw	0
  6782  000998  2223               	addwfc	___flmul@grs+2,f,c
  6783  00099A  0E00               	movlw	0
  6784  00099C  2224               	addwfc	___flmul@grs+3,f,c
  6785  00099E  501A               	movf	___flmul@a+2,w,c
  6786  0009A0  0215               	mulwf	___flmul@b+1,c
  6787  0009A2  CFF3 F02B          	movff	prodl,___flmul@temp
  6788  0009A6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6789  0009AA  502B               	movf	___flmul@temp,w,c
  6790  0009AC  2627               	addwf	___flmul@prod,f,c
  6791  0009AE  502C               	movf	___flmul@temp+1,w,c
  6792  0009B0  2228               	addwfc	___flmul@prod+1,f,c
  6793  0009B2  0E00               	movlw	0
  6794  0009B4  2229               	addwfc	___flmul@prod+2,f,c
  6795  0009B6  0E00               	movlw	0
  6796  0009B8  222A               	addwfc	___flmul@prod+3,f,c
  6797  0009BA  5019               	movf	___flmul@a+1,w,c
  6798  0009BC  0216               	mulwf	___flmul@b+2,c
  6799  0009BE  CFF3 F02B          	movff	prodl,___flmul@temp
  6800  0009C2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6801  0009C6  502B               	movf	___flmul@temp,w,c
  6802  0009C8  2627               	addwf	___flmul@prod,f,c
  6803  0009CA  502C               	movf	___flmul@temp+1,w,c
  6804  0009CC  2228               	addwfc	___flmul@prod+1,f,c
  6805  0009CE  0E00               	movlw	0
  6806  0009D0  2229               	addwfc	___flmul@prod+2,f,c
  6807  0009D2  0E00               	movlw	0
  6808  0009D4  222A               	addwfc	___flmul@prod+3,f,c
  6809  0009D6  501A               	movf	___flmul@a+2,w,c
  6810  0009D8  0216               	mulwf	___flmul@b+2,c
  6811  0009DA  CFF3 F02B          	movff	prodl,___flmul@temp
  6812  0009DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6813  0009E2  502B               	movf	___flmul@temp,w,c
  6814  0009E4  6E1C               	movwf	??___flmul& (0+255),c
  6815  0009E6  502C               	movf	___flmul@temp+1,w,c
  6816  0009E8  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6817  0009EA  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6818  0009EC  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6819  0009EE  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6820  0009F2  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6821  0009F6  C01C  F01D         	movff	??___flmul,??___flmul+1
  6822  0009FA  6A1C               	clrf	??___flmul,c
  6823  0009FC  501C               	movf	??___flmul,w,c
  6824  0009FE  2627               	addwf	___flmul@prod,f,c
  6825  000A00  501D               	movf	??___flmul+1,w,c
  6826  000A02  2228               	addwfc	___flmul@prod+1,f,c
  6827  000A04  501E               	movf	??___flmul+2,w,c
  6828  000A06  2229               	addwfc	___flmul@prod+2,f,c
  6829  000A08  501F               	movf	??___flmul+3,w,c
  6830  000A0A  222A               	addwfc	___flmul@prod+3,f,c
  6831  000A0C  C021  F01C         	movff	___flmul@grs,??___flmul
  6832  000A10  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  6833  000A14  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  6834  000A18  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  6835  000A1C  0E19               	movlw	25
  6836  000A1E  D005               	goto	i1u185_20
  6837  000A20                     i1u185_25:
  6838  000A20  90D8               	bcf	status,0,c
  6839  000A22  321F               	rrcf	??___flmul+3,f,c
  6840  000A24  321E               	rrcf	??___flmul+2,f,c
  6841  000A26  321D               	rrcf	??___flmul+1,f,c
  6842  000A28  321C               	rrcf	??___flmul,f,c
  6843  000A2A                     i1u185_20:
  6844  000A2A  2EE8               	decfsz	wreg,f,c
  6845  000A2C  D7F9               	goto	i1u185_25
  6846  000A2E  501C               	movf	??___flmul,w,c
  6847  000A30  2627               	addwf	___flmul@prod,f,c
  6848  000A32  501D               	movf	??___flmul+1,w,c
  6849  000A34  2228               	addwfc	___flmul@prod+1,f,c
  6850  000A36  501E               	movf	??___flmul+2,w,c
  6851  000A38  2229               	addwfc	___flmul@prod+2,f,c
  6852  000A3A  501F               	movf	??___flmul+3,w,c
  6853  000A3C  222A               	addwfc	___flmul@prod+3,f,c
  6854  000A3E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6855  000A42  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6856  000A46  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6857  000A4A  6A21               	clrf	___flmul@grs,c
  6858  000A4C  5025               	movf	___flmul@aexp,w,c
  6859  000A4E  C026  F01C         	movff	___flmul@bexp,??___flmul
  6860  000A52  6A1D               	clrf	(??___flmul+1)& (0+255),c
  6861  000A54  261C               	addwf	??___flmul,f,c
  6862  000A56  0E00               	movlw	0
  6863  000A58  221D               	addwfc	??___flmul+1,f,c
  6864  000A5A  0E82               	movlw	130
  6865  000A5C  241C               	addwf	??___flmul,w,c
  6866  000A5E  6E2B               	movwf	___flmul@temp,c
  6867  000A60  0EFF               	movlw	255
  6868  000A62  201D               	addwfc	??___flmul+1,w,c
  6869  000A64  6E2C               	movwf	___flmul@temp+1,c
  6870  000A66  D00F               	goto	i1l3370
  6871  000A68                     i1l3364:
  6872  000A68  90D8               	bcf	status,0,c
  6873  000A6A  3627               	rlcf	___flmul@prod,f,c
  6874  000A6C  3628               	rlcf	___flmul@prod+1,f,c
  6875  000A6E  3629               	rlcf	___flmul@prod+2,f,c
  6876  000A70  362A               	rlcf	___flmul@prod+3,f,c
  6877  000A72  BE24               	btfsc	___flmul@grs+3,7,c
  6878  000A74  8027               	bsf	___flmul@prod,0,c
  6879  000A76  90D8               	bcf	status,0,c
  6880  000A78  3621               	rlcf	___flmul@grs,f,c
  6881  000A7A  3622               	rlcf	___flmul@grs+1,f,c
  6882  000A7C  3623               	rlcf	___flmul@grs+2,f,c
  6883  000A7E  3624               	rlcf	___flmul@grs+3,f,c
  6884  000A80  062B               	decf	___flmul@temp,f,c
  6885  000A82  A0D8               	btfss	status,0,c
  6886  000A84  062C               	decf	___flmul@temp+1,f,c
  6887  000A86                     i1l3370:
  6888  000A86  AE29               	btfss	___flmul@prod+2,7,c
  6889  000A88  D7EF               	goto	i1l3364
  6890  000A8A  0E00               	movlw	0
  6891  000A8C  6E25               	movwf	___flmul@aexp,c
  6892  000A8E  AE24               	btfss	___flmul@grs+3,7,c
  6893  000A90  D017               	goto	i1l1664
  6894  000A92  0EFF               	movlw	255
  6895  000A94  1421               	andwf	___flmul@grs,w,c
  6896  000A96  6E1C               	movwf	??___flmul& (0+255),c
  6897  000A98  0EFF               	movlw	255
  6898  000A9A  1422               	andwf	___flmul@grs+1,w,c
  6899  000A9C  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6900  000A9E  0EFF               	movlw	255
  6901  000AA0  1423               	andwf	___flmul@grs+2,w,c
  6902  000AA2  6E1E               	movwf	(??___flmul+2)& (0+255),c
  6903  000AA4  0E7F               	movlw	127
  6904  000AA6  1424               	andwf	___flmul@grs+3,w,c
  6905  000AA8  6E1F               	movwf	(??___flmul+3)& (0+255),c
  6906  000AAA  501C               	movf	??___flmul,w,c
  6907  000AAC  101D               	iorwf	??___flmul+1,w,c
  6908  000AAE  101E               	iorwf	??___flmul+2,w,c
  6909  000AB0  101F               	iorwf	??___flmul+3,w,c
  6910  000AB2  B4D8               	btfsc	status,2,c
  6911  000AB4  D003               	goto	i1l1665
  6912  000AB6                     i1u189_20:
  6913  000AB6  0E01               	movlw	1
  6914  000AB8  6E25               	movwf	___flmul@aexp,c
  6915  000ABA  D002               	goto	i1l1664
  6916  000ABC                     i1l1665:
  6917  000ABC  B027               	btfsc	___flmul@prod,0,c
  6918  000ABE  D7FB               	goto	i1u189_20
  6919  000AC0                     i1l1664:
  6920  000AC0  5025               	movf	___flmul@aexp,w,c
  6921  000AC2  B4D8               	btfsc	status,2,c
  6922  000AC4  D01F               	goto	i1l3390
  6923  000AC6  0E01               	movlw	1
  6924  000AC8  2627               	addwf	___flmul@prod,f,c
  6925  000ACA  0E00               	movlw	0
  6926  000ACC  2228               	addwfc	___flmul@prod+1,f,c
  6927  000ACE  2229               	addwfc	___flmul@prod+2,f,c
  6928  000AD0  222A               	addwfc	___flmul@prod+3,f,c
  6929  000AD2  A02A               	btfss	___flmul@prod+3,0,c
  6930  000AD4  D017               	goto	i1l3390
  6931  000AD6  C027  F01C         	movff	___flmul@prod,??___flmul
  6932  000ADA  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6933  000ADE  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6934  000AE2  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6935  000AE6  341F               	rlcf	??___flmul+3,w,c
  6936  000AE8  321F               	rrcf	??___flmul+3,f,c
  6937  000AEA  321E               	rrcf	??___flmul+2,f,c
  6938  000AEC  321D               	rrcf	??___flmul+1,f,c
  6939  000AEE  321C               	rrcf	??___flmul,f,c
  6940  000AF0  C01C  F027         	movff	??___flmul,___flmul@prod
  6941  000AF4  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6942  000AF8  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6943  000AFC  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6944  000B00  4A2B               	infsnz	___flmul@temp,f,c
  6945  000B02  2A2C               	incf	___flmul@temp+1,f,c
  6946  000B04                     i1l3390:
  6947  000B04  BE2C               	btfsc	___flmul@temp+1,7,c
  6948  000B06  D00D               	goto	i1l3394
  6949  000B08  502C               	movf	___flmul@temp+1,w,c
  6950  000B0A  E103               	bnz	i1u193_20
  6951  000B0C  282B               	incf	___flmul@temp,w,c
  6952  000B0E  A0D8               	btfss	status,0,c
  6953  000B10  D008               	goto	i1l3394
  6954  000B12                     i1u193_20:
  6955  000B12  0E00               	movlw	0
  6956  000B14  6E27               	movwf	___flmul@prod,c
  6957  000B16  0E00               	movlw	0
  6958  000B18  6E28               	movwf	___flmul@prod+1,c
  6959  000B1A  0E80               	movlw	128
  6960  000B1C  6E29               	movwf	___flmul@prod+2,c
  6961  000B1E  0E7F               	movlw	127
  6962  000B20  D020               	goto	L2
  6963  000B22                     i1l3394:
  6964  000B22  BE2C               	btfsc	___flmul@temp+1,7,c
  6965  000B24  D005               	goto	i1u194_20
  6966  000B26  502C               	movf	___flmul@temp+1,w,c
  6967  000B28  E10E               	bnz	i1l1672
  6968  000B2A  042B               	decf	___flmul@temp,w,c
  6969  000B2C  B0D8               	btfsc	status,0,c
  6970  000B2E  D00B               	goto	i1l1672
  6971  000B30                     i1u194_20:
  6972  000B30  0E00               	movlw	0
  6973  000B32  6E27               	movwf	___flmul@prod,c
  6974  000B34  0E00               	movlw	0
  6975  000B36  6E28               	movwf	___flmul@prod+1,c
  6976  000B38  0E00               	movlw	0
  6977  000B3A  6E29               	movwf	___flmul@prod+2,c
  6978  000B3C  0E00               	movlw	0
  6979  000B3E  6E2A               	movwf	___flmul@prod+3,c
  6980  000B40  0E00               	movlw	0
  6981  000B42  6E20               	movwf	___flmul@sign,c
  6982  000B44  D00F               	goto	i1l3406
  6983  000B46                     i1l1672:
  6984  000B46  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6985  000B4A  0EFF               	movlw	255
  6986  000B4C  1627               	andwf	___flmul@prod,f,c
  6987  000B4E  0EFF               	movlw	255
  6988  000B50  1628               	andwf	___flmul@prod+1,f,c
  6989  000B52  0E7F               	movlw	127
  6990  000B54  1629               	andwf	___flmul@prod+2,f,c
  6991  000B56  0E00               	movlw	0
  6992  000B58  162A               	andwf	___flmul@prod+3,f,c
  6993  000B5A  B026               	btfsc	___flmul@bexp,0,c
  6994  000B5C  8E29               	bsf	___flmul@prod+2,7,c
  6995  000B5E  90D8               	bcf	status,0,c
  6996  000B60  3026               	rrcf	___flmul@bexp,w,c
  6997  000B62                     L2:
  6998  000B62  6E2A               	movwf	___flmul@prod+3,c
  6999  000B64                     i1l3406:
  7000  000B64  5020               	movf	___flmul@sign,w,c
  7001  000B66  122A               	iorwf	___flmul@prod+3,f,c
  7002  000B68  C027  F014         	movff	___flmul@prod,?___flmul
  7003  000B6C  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  7004  000B70  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  7005  000B74  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  7006  000B78  0012               	return		;funcret
  7007  000B7A                     __end_of___flmul:
  7008                           	opt callstack 0
  7009                           
  7010 ;; *************** function _ADCC_ISR *****************
  7011 ;; Defined at:
  7012 ;;		line 309 in file "mcc_generated_files/adcc.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;		None
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      void 
  7019 ;; Registers used:
  7020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7026 ;;      Params:         0       0       0       0       0       0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7029 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7030 ;;Total ram usage:        0 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; Hardware stack levels required when called:    5
  7033 ;; This function calls:
  7034 ;;		Absolute function
  7035 ;;		_adc_ready_ISR
  7036 ;; This function is called by:
  7037 ;;		_INTERRUPT_InterruptManagerLow
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text63
  7042  001D6C                     __ptext63:
  7043                           	opt callstack 0
  7044  001D6C                     _ADCC_ISR:
  7045                           	opt callstack 15
  7046                           
  7047                           ;mcc_generated_files/adcc.c: 312:     PIR1bits.ADIF = 0;
  7048                           
  7049                           ;incstack = 0
  7050  001D6C  010E               	movlb	14	; () banked
  7051  001D6E  91C6               	bcf	198,0,b	;volatile
  7052                           
  7053                           ; BSR set to: 14
  7054                           ;mcc_generated_files/adcc.c: 314:     if(ADCC_InterruptHandler)
  7055  001D70  5050               	movf	_ADCC_InterruptHandler,w,c
  7056  001D72  1051               	iorwf	_ADCC_InterruptHandler+1,w,c
  7057  001D74  B4D8               	btfsc	status,2,c
  7058  001D76  0012               	return	
  7059                           
  7060                           ; BSR set to: 14
  7061                           ;mcc_generated_files/adcc.c: 315:     {;mcc_generated_files/adcc.c: 316:         ADCC_In
      +                          terruptHandler();
  7062  001D78  D801               	call	i1u234_28
  7063  001D7A  0012               	return	
  7064  001D7C                     i1u234_28:
  7065  001D7C  0005               	push	
  7066  001D7E  6EFA               	movwf	pclath,c
  7067  001D80  5050               	movf	_ADCC_InterruptHandler,w,c
  7068  001D82  6EFD               	movwf	tosl,c
  7069  001D84  5051               	movf	_ADCC_InterruptHandler+1,w,c
  7070  001D86  6EFE               	movwf	tosh,c
  7071  001D88  50F8               	movf	tblptru,w,c
  7072  001D8A  6EFF               	movwf	tosu,c
  7073  001D8C  50FA               	movf	pclath,w,c
  7074  001D8E  0012               	return		;indir
  7075  001D90                     __end_of_ADCC_ISR:
  7076                           	opt callstack 0
  7077                           
  7078 ;; *************** function _adc_ready_ISR *****************
  7079 ;; Defined at:
  7080 ;;		line 69 in file "cam.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;		None
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7096 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7098 ;;Total ram usage:        2 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    4
  7101 ;; This function calls:
  7102 ;;		i1_TMR3_SetInterruptHandler
  7103 ;;		i1_TMR3_StartTimer
  7104 ;;		i1_TMR3_WriteTimer
  7105 ;; This function is called by:
  7106 ;;		_cam_init
  7107 ;;		_ADCC_ISR
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text64
  7112  00149E                     __ptext64:
  7113                           	opt callstack 0
  7114  00149E                     _adc_ready_ISR:
  7115                           	opt callstack 15
  7116                           
  7117                           ;cam.c: 70:     PIE1bits.ADIE = 0;
  7118                           
  7119                           ;incstack = 0
  7120  00149E  010E               	movlb	14	; () banked
  7121  0014A0  91BE               	bcf	190,0,b	;volatile
  7122                           
  7123                           ; BSR set to: 14
  7124  0014A2  A284               	btfss	3972,1,c	;volatile
  7125  0014A4  D002               	goto	i1u221_20
  7126  0014A6  0E01               	movlw	1
  7127  0014A8  D001               	goto	i1u221_26
  7128  0014AA                     i1u221_20:
  7129  0014AA  0E00               	movlw	0
  7130  0014AC                     i1u221_26:
  7131  0014AC  0AFF               	xorlw	255
  7132  0014AE  6E08               	movwf	??_adc_ready_ISR& (0+255),c
  7133  0014B0  4608               	rlncf	??_adc_ready_ISR,f,c
  7134  0014B2  5084               	movf	3972,w,c	;volatile
  7135  0014B4  1808               	xorwf	??_adc_ready_ISR,w,c
  7136  0014B6  0BFD               	andlw	-3
  7137  0014B8  1808               	xorwf	??_adc_ready_ISR,w,c
  7138  0014BA  6E84               	movwf	3972,c	;volatile
  7139                           
  7140                           ; BSR set to: 14
  7141                           ;cam.c: 72:     if (myCam.readFromFirst) {
  7142  0014BC  EE22  F000         	lfsr	2,_myCam
  7143  0014C0  50DF               	movf	indf2,w,c
  7144  0014C2  B4D8               	btfsc	status,2,c
  7145  0014C4  D00B               	goto	i1l3744
  7146                           
  7147                           ; BSR set to: 14
  7148                           ;cam.c: 74:         myCam.cam_pixels_2[myCam.index] = ADRESH;
  7149  0014C6  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7150  0014CA  CFDE F008          	movff	postinc2,??_adc_ready_ISR
  7151  0014CE  CFDD F009          	movff	postdec2,??_adc_ready_ISR+1
  7152  0014D2  0E81               	movlw	low (_myCam+129)
  7153  0014D4  2408               	addwf	??_adc_ready_ISR,w,c
  7154  0014D6  6ED9               	movwf	fsr2l,c
  7155  0014D8  0E02               	movlw	high (_myCam+129)
  7156  0014DA  D00A               	goto	L3
  7157  0014DC                     i1l3744:
  7158                           
  7159                           ; BSR set to: 14
  7160                           ;cam.c: 76:         myCam.cam_pixels_1[myCam.index] = ADRESH;
  7161  0014DC  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7162  0014E0  CFDE F008          	movff	postinc2,??_adc_ready_ISR
  7163  0014E4  CFDD F009          	movff	postdec2,??_adc_ready_ISR+1
  7164  0014E8  0E01               	movlw	low (_myCam+1)
  7165  0014EA  2408               	addwf	??_adc_ready_ISR,w,c
  7166  0014EC  6ED9               	movwf	fsr2l,c
  7167  0014EE  0E02               	movlw	high (_myCam+1)
  7168  0014F0                     L3:
  7169  0014F0  2009               	addwfc	??_adc_ready_ISR+1,w,c
  7170  0014F2  6EDA               	movwf	fsr2h,c
  7171  0014F4  CF5F FFDF          	movff	3935,indf2	;volatile
  7172                           
  7173                           ; BSR set to: 14
  7174                           ;cam.c: 78:     myCam.index++;
  7175                           
  7176                           ;cam.c: 77:     }
  7177  0014F8  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7178  0014FC  2ADE               	incf	postinc2,f,c
  7179  0014FE  0E00               	movlw	0
  7180  001500  22DD               	addwfc	postdec2,f,c
  7181                           
  7182                           ;cam.c: 80:     if (myCam.index >= 128) {
  7183  001502  EE23  F002         	lfsr	2,_myCam+258	;volatile
  7184  001506  0E01               	movlw	1
  7185  001508  BEDB               	btfsc	plusw2,7,c
  7186  00150A  D00D               	goto	i1l933
  7187  00150C  0E01               	movlw	1
  7188  00150E  50DB               	movf	plusw2,w,c
  7189  001510  E104               	bnz	i1u223_20
  7190  001512  0E80               	movlw	128
  7191  001514  5CDE               	subwf	postinc2,w,c
  7192  001516  A0D8               	btfss	status,0,c
  7193  001518  D006               	goto	i1l933
  7194  00151A                     i1u223_20:
  7195                           
  7196                           ; BSR set to: 14
  7197                           ;cam.c: 84:         myCam.status = CAM_DONE;
  7198  00151A  0E02               	movlw	2
  7199  00151C  CFE8 F301          	movff	wreg,_myCam+257	;volatile
  7200                           
  7201                           ; BSR set to: 14
  7202                           
  7203                           ;cam.c: 85:         do { LATBbits.LATB1 = 0; } while(0);
  7204  001520  9283               	bcf	3971,1,c	;volatile
  7205                           
  7206                           ; BSR set to: 14
  7207                           
  7208                           ;cam.c: 86:         do { LATBbits.LATB2 = 0; } while(0);
  7209  001522  9483               	bcf	3971,2,c	;volatile
  7210  001524  0012               	return	
  7211  001526                     i1l933:
  7212                           
  7213                           ; BSR set to: 14
  7214  001526  9283               	bcf	3971,1,c	;volatile
  7215                           
  7216                           ; BSR set to: 14
  7217                           ;cam.c: 91:         TMR3_SetInterruptHandler(timer_ISR);
  7218  001528  0EF6               	movlw	low _timer_ISR
  7219  00152A  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  7220  00152C  0E16               	movlw	high _timer_ISR
  7221  00152E  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  7222  001530  EC96  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  7223                           
  7224                           ;cam.c: 92:         TMR3_WriteTimer(timing_val);
  7225  001534  C052  F006         	movff	_timing_val,i1TMR3_WriteTimer@timerVal
  7226  001538  C053  F007         	movff	_timing_val+1,i1TMR3_WriteTimer@timerVal+1
  7227  00153C  EC13  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  7228                           
  7229                           ;cam.c: 93:         TMR3_StartTimer();
  7230  001540  ECA2  F00F         	call	i1_TMR3_StartTimer	;wreg free
  7231  001544  0012               	return		;funcret
  7232  001546                     __end_of_adc_ready_ISR:
  7233                           	opt callstack 0
  7234                           
  7235 ;; *************** function i1_TMR3_WriteTimer *****************
  7236 ;; Defined at:
  7237 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;  timerVal        2    5[COMRAM] unsigned short 
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg, status,2
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7251 ;;      Params:         2       0       0       0       0       0       0       0       0
  7252 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7254 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7255 ;;Total ram usage:        2 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    3
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_TMR3_ISR
  7262 ;;		_timer_ISR
  7263 ;;		_adc_ready_ISR
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text65
  7268  001E26                     __ptext65:
  7269                           	opt callstack 0
  7270  001E26                     i1_TMR3_WriteTimer:
  7271                           	opt callstack 16
  7272                           
  7273                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  7274                           
  7275                           ;incstack = 0
  7276  001E26  A4C8               	btfss	4040,2,c	;volatile
  7277  001E28  D007               	goto	i1l3468
  7278                           
  7279                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  7280  001E2A  90C8               	bcf	4040,0,c	;volatile
  7281                           
  7282                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  7283  001E2C  5007               	movf	i1TMR3_WriteTimer@timerVal+1,w,c
  7284  001E2E  6EC7               	movwf	4039,c	;volatile
  7285                           
  7286                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  7287  001E30  C006  FFC6         	movff	i1TMR3_WriteTimer@timerVal,4038	;volatile
  7288                           
  7289                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  7290  001E34  80C8               	bsf	4040,0,c	;volatile
  7291                           
  7292                           ;mcc_generated_files/tmr3.c: 140:     }
  7293  001E36  0012               	return	
  7294  001E38                     i1l3468:
  7295                           
  7296                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  7297  001E38  5007               	movf	i1TMR3_WriteTimer@timerVal+1,w,c
  7298  001E3A  6EC7               	movwf	4039,c	;volatile
  7299                           
  7300                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  7301  001E3C  C006  FFC6         	movff	i1TMR3_WriteTimer@timerVal,4038	;volatile
  7302  001E40  0012               	return		;funcret
  7303  001E42                     __end_ofi1_TMR3_WriteTimer:
  7304                           	opt callstack 0
  7305                           
  7306 ;; *************** function i1_TMR3_StartTimer *****************
  7307 ;; Defined at:
  7308 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;		None
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		None
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7322 ;;      Params:         0       0       0       0       0       0       0       0       0
  7323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7325 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7326 ;;Total ram usage:        0 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    3
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_timer_ISR
  7333 ;;		_adc_ready_ISR
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text66
  7338  001F44                     __ptext66:
  7339                           	opt callstack 0
  7340  001F44                     i1_TMR3_StartTimer:
  7341                           	opt callstack 15
  7342                           
  7343                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 1;
  7344                           
  7345                           ;incstack = 0
  7346  001F44  80C8               	bsf	4040,0,c	;volatile
  7347  001F46  0012               	return		;funcret
  7348  001F48                     __end_ofi1_TMR3_StartTimer:
  7349                           	opt callstack 0
  7350                           
  7351 ;; *************** function i1_TMR3_SetInterruptHandler *****************
  7352 ;; Defined at:
  7353 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  7356 ;;		 -> timer_ISR(1), TMR3_DefaultInterruptHandler(1), 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7368 ;;      Params:         2       0       0       0       0       0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7371 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7372 ;;Total ram usage:        2 bytes
  7373 ;; Hardware stack levels used:    1
  7374 ;; Hardware stack levels required when called:    3
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_timer_ISR
  7379 ;;		_adc_ready_ISR
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text67
  7384  001F2C                     __ptext67:
  7385                           	opt callstack 0
  7386  001F2C                     i1_TMR3_SetInterruptHandler:
  7387                           	opt callstack 15
  7388                           
  7389                           ;mcc_generated_files/tmr3.c: 179:     TMR3_InterruptHandler = InterruptHandler;
  7390                           
  7391                           ;incstack = 0
  7392  001F2C  C006  F03A         	movff	i1TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  7393  001F30  C007  F03B         	movff	i1TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  7394  001F34  0012               	return		;funcret
  7395  001F36                     __end_ofi1_TMR3_SetInterruptHandler:
  7396                           	opt callstack 0
  7397                           
  7398 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  7399 ;; Defined at:
  7400 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7416 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7417 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7418 ;;Total ram usage:        2 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    2
  7421 ;; This function calls:
  7422 ;;		_TMR2_ISR
  7423 ;; This function is called by:
  7424 ;;		Interrupt level 2
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	intcode
  7429  000008                     __pintcode:
  7430                           	opt callstack 0
  7431  000008                     _INTERRUPT_InterruptManagerHigh:
  7432                           	opt callstack 14
  7433                           
  7434                           ;incstack = 0
  7435  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7436  00000A  EFD8  F00E         	goto	int_func
  7437                           
  7438                           	psect	intcode_body
  7439  001DB0                     __pintcode_body:
  7440                           	opt callstack 14
  7441  001DB0                     int_func:
  7442                           	opt callstack 14
  7443  001DB0  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  7444  001DB4  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  7445                           
  7446                           ;mcc_generated_files/interrupt_manager.c: 83:     if(PIE4bits.TMR2IE == 1 && PIR4bits.TM
      +                          R2IF == 1)
  7447  001DB8  010E               	movlb	14	; () banked
  7448  001DBA  B3C1               	btfsc	193,1,b	;volatile
  7449                           
  7450                           ; BSR set to: 14
  7451  001DBC  A3C9               	btfss	201,1,b	;volatile
  7452  001DBE  D002               	goto	i2l254
  7453                           
  7454                           ; BSR set to: 14
  7455                           ;mcc_generated_files/interrupt_manager.c: 84:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 85:         TMR2_ISR();
  7456  001DC0  ECA3  F00E         	call	_TMR2_ISR	;wreg free
  7457  001DC4                     i2l254:
  7458  001DC4  C005  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  7459  001DC8  C004  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  7460  001DCC  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7461  001DCE  0011               	retfie		f
  7462  001DD0                     __end_of_INTERRUPT_InterruptManagerHigh:
  7463                           	opt callstack 0
  7464                           
  7465 ;; *************** function _TMR2_ISR *****************
  7466 ;; Defined at:
  7467 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;		None
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7481 ;;      Params:         0       0       0       0       0       0       0       0       0
  7482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7484 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7485 ;;Total ram usage:        0 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    1
  7488 ;; This function calls:
  7489 ;;		Absolute function
  7490 ;;		_TMR2_DefaultInterruptHandler
  7491 ;;		_carcontrol_ISR
  7492 ;; This function is called by:
  7493 ;;		_INTERRUPT_InterruptManagerHigh
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text69
  7498  001D46                     __ptext69:
  7499                           	opt callstack 0
  7500  001D46                     _TMR2_ISR:
  7501                           	opt callstack 14
  7502                           
  7503                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  7504                           
  7505                           ;incstack = 0
  7506  001D46  010E               	movlb	14	; () banked
  7507  001D48  93C9               	bcf	201,1,b	;volatile
  7508                           
  7509                           ; BSR set to: 14
  7510                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  7511  001D4A  0100               	movlb	0	; () banked
  7512  001D4C  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7513  001D4E  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7514  001D50  B4D8               	btfsc	status,2,c
  7515  001D52  0012               	return	
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  7519  001D54  D801               	call	i2u227_48
  7520  001D56  0012               	return	
  7521  001D58                     i2u227_48:
  7522  001D58  0005               	push	
  7523  001D5A  6EFA               	movwf	pclath,c
  7524  001D5C  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7525  001D5E  6EFD               	movwf	tosl,c
  7526  001D60  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7527  001D62  6EFE               	movwf	tosh,c
  7528  001D64  50F8               	movf	tblptru,w,c
  7529  001D66  6EFF               	movwf	tosu,c
  7530  001D68  50FA               	movf	pclath,w,c
  7531  001D6A  0012               	return		;indir
  7532  001D6C                     __end_of_TMR2_ISR:
  7533                           	opt callstack 0
  7534                           
  7535 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7536 ;; Defined at:
  7537 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;		None
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;		None
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		None
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7551 ;;      Params:         0       0       0       0       0       0       0       0       0
  7552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7554 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7555 ;;Total ram usage:        0 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_TMR2_Initialize
  7561 ;;		_TMR2_ISR
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text70
  7566  001F50                     __ptext70:
  7567                           	opt callstack 0
  7568  001F50                     _TMR2_DefaultInterruptHandler:
  7569                           	opt callstack 14
  7570                           
  7571                           ;incstack = 0
  7572  001F50  0012               	return		;funcret
  7573  001F52                     __end_of_TMR2_DefaultInterruptHandler:
  7574                           	opt callstack 0
  7575                           
  7576 ;; *************** function _carcontrol_ISR *****************
  7577 ;; Defined at:
  7578 ;;		line 41 in file "car_ctrl.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;		None
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      void 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7592 ;;      Params:         0       0       0       0       0       0       0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7594 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7595 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7596 ;;Total ram usage:        3 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_carcontrol_init
  7602 ;;		_TMR2_ISR
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text71
  7607  0012F6                     __ptext71:
  7608                           	opt callstack 0
  7609  0012F6                     _carcontrol_ISR:
  7610                           	opt callstack 14
  7611                           
  7612                           ;car_ctrl.c: 43:     switch (carctl.state) {
  7613                           
  7614                           ;incstack = 0
  7615  0012F6  D05C               	goto	i2l3694
  7616  0012F8                     i2l3652:
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;car_ctrl.c: 46:             carctl.state = state_high;
  7620  0012F8  0E01               	movlw	1
  7621  0012FA  6FCA               	movwf	(_carctl+1)& (0+255),b	;volatile
  7622                           
  7623                           ; BSR set to: 0
  7624  0012FC  8082               	bsf	3970,0,c	;volatile
  7625                           
  7626                           ; BSR set to: 0
  7627  0012FE  8282               	bsf	3970,1,c	;volatile
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;car_ctrl.c: 49:             stateTime = 0;
  7631  001300  0E00               	movlw	0
  7632  001302  6FD8               	movwf	(_stateTime+1)& (0+255),b
  7633  001304  0E00               	movlw	0
  7634  001306  6FD7               	movwf	_stateTime& (0+255),b
  7635                           
  7636                           ;car_ctrl.c: 50:         break;
  7637  001308  0012               	return	
  7638  00130A                     i2l3658:
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;car_ctrl.c: 52:             stateTime++;
  7642  00130A  4BD7               	infsnz	_stateTime& (0+255),f,b
  7643  00130C  2BD8               	incf	(_stateTime+1)& (0+255),f,b
  7644                           
  7645                           ; BSR set to: 0
  7646  00130E  8082               	bsf	3970,0,c	;volatile
  7647                           
  7648                           ; BSR set to: 0
  7649  001310  8282               	bsf	3970,1,c	;volatile
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;car_ctrl.c: 55:             if (stateTime >= 100) {
  7653  001312  BFD8               	btfsc	(_stateTime+1)& (0+255),7,b
  7654  001314  0012               	return	
  7655  001316  51D8               	movf	(_stateTime+1)& (0+255),w,b
  7656  001318  E104               	bnz	i2u213_40
  7657  00131A  0E64               	movlw	100
  7658  00131C  5DD7               	subwf	_stateTime& (0+255),w,b
  7659  00131E  A0D8               	btfss	status,0,c
  7660  001320  0012               	return	
  7661  001322                     i2u213_40:
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;car_ctrl.c: 57:                 carctl.state = state_vary;
  7665  001322  0E02               	movlw	2
  7666  001324  6FCA               	movwf	(_carctl+1)& (0+255),b	;volatile
  7667                           
  7668                           ;car_ctrl.c: 58:                 stateTime = 0;
  7669  001326  0E00               	movlw	0
  7670  001328  6FD8               	movwf	(_stateTime+1)& (0+255),b
  7671  00132A  0E00               	movlw	0
  7672  00132C  6FD7               	movwf	_stateTime& (0+255),b
  7673  00132E  0012               	return	
  7674  001330                     i2l3668:
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;car_ctrl.c: 62:             stateTime++;
  7678  001330  4BD7               	infsnz	_stateTime& (0+255),f,b
  7679  001332  2BD8               	incf	(_stateTime+1)& (0+255),f,b
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;car_ctrl.c: 63:             if (stateTime > carctl.throttleHighTime) {
  7683  001334  51CD               	movf	(_carctl+4)& (0+255),w,b	;volatile
  7684  001336  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7685  001338  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7686  00133A  51D7               	movf	_stateTime& (0+255),w,b
  7687  00133C  5C01               	subwf	??_carcontrol_ISR,w,c
  7688  00133E  5002               	movf	??_carcontrol_ISR+1,w,c
  7689  001340  0A80               	xorlw	128
  7690  001342  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
  7691  001344  51D8               	movf	(_stateTime+1)& (0+255),w,b
  7692  001346  0A80               	xorlw	128
  7693  001348  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
  7694  00134A  A0D8               	btfss	status,0,c
  7695                           
  7696                           ; BSR set to: 0
  7697                           
  7698                           ;car_ctrl.c: 64:                 do { LATAbits.LATA0 = 0; } while(0);
  7699  00134C  9082               	bcf	3970,0,c	;volatile
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;car_ctrl.c: 66:             if (stateTime > carctl.servoHighTime) {
  7703  00134E  51CE               	movf	(_carctl+5)& (0+255),w,b	;volatile
  7704  001350  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7705  001352  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7706  001354  51D7               	movf	_stateTime& (0+255),w,b
  7707  001356  5C01               	subwf	??_carcontrol_ISR,w,c
  7708  001358  5002               	movf	??_carcontrol_ISR+1,w,c
  7709  00135A  0A80               	xorlw	128
  7710  00135C  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
  7711  00135E  51D8               	movf	(_stateTime+1)& (0+255),w,b
  7712  001360  0A80               	xorlw	128
  7713  001362  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
  7714  001364  A0D8               	btfss	status,0,c
  7715                           
  7716                           ; BSR set to: 0
  7717                           
  7718                           ;car_ctrl.c: 67:                 do { LATAbits.LATA1 = 0; } while(0);
  7719  001366  9282               	bcf	3970,1,c	;volatile
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;car_ctrl.c: 69:             if (stateTime >= 100) {
  7723  001368  BFD8               	btfsc	(_stateTime+1)& (0+255),7,b
  7724  00136A  0012               	return	
  7725  00136C  51D8               	movf	(_stateTime+1)& (0+255),w,b
  7726  00136E  E104               	bnz	i2u216_40
  7727  001370  0E64               	movlw	100
  7728  001372  5DD7               	subwf	_stateTime& (0+255),w,b
  7729  001374  A0D8               	btfss	status,0,c
  7730  001376  0012               	return	
  7731  001378                     i2u216_40:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;car_ctrl.c: 70:                 carctl.state = state_low;
  7735  001378  0E03               	movlw	3
  7736  00137A  6FCA               	movwf	(_carctl+1)& (0+255),b	;volatile
  7737                           
  7738                           ;car_ctrl.c: 71:                 stateTime = 0;
  7739  00137C  0E00               	movlw	0
  7740  00137E  6FD8               	movwf	(_stateTime+1)& (0+255),b
  7741  001380  0E00               	movlw	0
  7742  001382  6FD7               	movwf	_stateTime& (0+255),b
  7743  001384  0012               	return	
  7744  001386                     i2l3678:
  7745                           
  7746                           ; BSR set to: 0
  7747                           ;car_ctrl.c: 75:             stateTime++;
  7748  001386  4BD7               	infsnz	_stateTime& (0+255),f,b
  7749  001388  2BD8               	incf	(_stateTime+1)& (0+255),f,b
  7750                           
  7751                           ; BSR set to: 0
  7752  00138A  9082               	bcf	3970,0,c	;volatile
  7753                           
  7754                           ; BSR set to: 0
  7755  00138C  9282               	bcf	3970,1,c	;volatile
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;car_ctrl.c: 78:             if (stateTime >= 1800) {
  7759  00138E  BFD8               	btfsc	(_stateTime+1)& (0+255),7,b
  7760  001390  0012               	return	
  7761  001392  0E08               	movlw	8
  7762  001394  5DD7               	subwf	_stateTime& (0+255),w,b
  7763  001396  0E07               	movlw	7
  7764  001398  59D8               	subwfb	(_stateTime+1)& (0+255),w,b
  7765  00139A  A0D8               	btfss	status,0,c
  7766  00139C  0012               	return	
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;car_ctrl.c: 79:                 carctl.state = state_high;
  7770  00139E  0E01               	movlw	1
  7771  0013A0  6FCA               	movwf	(_carctl+1)& (0+255),b	;volatile
  7772                           
  7773                           ;car_ctrl.c: 80:                 stateTime = 0;
  7774  0013A2  0E00               	movlw	0
  7775  0013A4  6FD8               	movwf	(_stateTime+1)& (0+255),b
  7776  0013A6  0E00               	movlw	0
  7777  0013A8  6FD7               	movwf	_stateTime& (0+255),b
  7778                           
  7779                           ; BSR set to: 0
  7780  0013AA  8082               	bsf	3970,0,c	;volatile
  7781                           
  7782                           ; BSR set to: 0
  7783  0013AC  9282               	bcf	3970,1,c	;volatile
  7784  0013AE  0012               	return	
  7785  0013B0                     i2l3694:
  7786  0013B0  0100               	movlb	0	; () banked
  7787  0013B2  51CA               	movf	(_carctl+1)& (0+255),w,b	;volatile
  7788  0013B4  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7789  0013B6  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7790                           
  7791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7792                           ; Switch size 1, requested type "simple"
  7793                           ; Number of cases is 1, Range of values is 0 to 0
  7794                           ; switch strategies available:
  7795                           ; Name         Instructions Cycles
  7796                           ; simple_byte            4     3 (average)
  7797                           ;	Chosen strategy is simple_byte
  7798  0013B8  5002               	movf	??_carcontrol_ISR+1,w,c
  7799  0013BA  0A00               	xorlw	0	; case 0
  7800  0013BC  A4D8               	btfss	status,2,c
  7801  0013BE  0012               	return	
  7802                           
  7803                           ; BSR set to: 0
  7804                           ; Switch size 1, requested type "simple"
  7805                           ; Number of cases is 4, Range of values is 0 to 3
  7806                           ; switch strategies available:
  7807                           ; Name         Instructions Cycles
  7808                           ; simple_byte           13     7 (average)
  7809                           ;	Chosen strategy is simple_byte
  7810  0013C0  5001               	movf	??_carcontrol_ISR,w,c
  7811  0013C2  0A00               	xorlw	0	; case 0
  7812  0013C4  B4D8               	btfsc	status,2,c
  7813  0013C6  D798               	goto	i2l3652
  7814  0013C8  0A01               	xorlw	1	; case 1
  7815  0013CA  B4D8               	btfsc	status,2,c
  7816  0013CC  D79E               	goto	i2l3658
  7817  0013CE  0A03               	xorlw	3	; case 2
  7818  0013D0  B4D8               	btfsc	status,2,c
  7819  0013D2  D7AE               	goto	i2l3668
  7820  0013D4  0A01               	xorlw	1	; case 3
  7821  0013D6  A4D8               	btfss	status,2,c
  7822  0013D8  0012               	return	
  7823  0013DA  D7D5               	goto	i2l3678
  7824  0013DC                     __end_of_carcontrol_ISR:
  7825                           	opt callstack 0
  7826                           
  7827                           	psect	text72
  7828  000000                     __ptext72:
  7829                           	opt callstack 0
  7830                           
  7831                           	psect	rparam
  7832  0000                     
  7833                           	psect	temp
  7834  000057                     btemp:
  7835                           	opt callstack 0
  7836  000057                     	ds	1
  7837  0000                     int$flags	set	btemp
  7838  0000                     wtemp8	set	btemp+1
  7839  0000                     ttemp5	set	btemp+1
  7840  0000                     ttemp6	set	btemp+4
  7841  0000                     ttemp7	set	btemp+8
  7842                           tosu	equ	0xFFF
  7843                           tosh	equ	0xFFE
  7844                           tosl	equ	0xFFD
  7845                           stkptr	equ	0xFFC
  7846                           pclatu	equ	0xFFB
  7847                           pclath	equ	0xFFA
  7848                           pcl	equ	0xFF9
  7849                           tblptru	equ	0xFF8
  7850                           tblptrh	equ	0xFF7
  7851                           tblptrl	equ	0xFF6
  7852                           tablat	equ	0xFF5
  7853                           prodh	equ	0xFF4
  7854                           prodl	equ	0xFF3
  7855                           indf0	equ	0xFEF
  7856                           postinc0	equ	0xFEE
  7857                           postdec0	equ	0xFED
  7858                           preinc0	equ	0xFEC
  7859                           plusw0	equ	0xFEB
  7860                           fsr0h	equ	0xFEA
  7861                           fsr0l	equ	0xFE9
  7862                           wreg	equ	0xFE8
  7863                           indf1	equ	0xFE7
  7864                           postinc1	equ	0xFE6
  7865                           postdec1	equ	0xFE5
  7866                           preinc1	equ	0xFE4
  7867                           plusw1	equ	0xFE3
  7868                           fsr1h	equ	0xFE2
  7869                           fsr1l	equ	0xFE1
  7870                           bsr	equ	0xFE0
  7871                           indf2	equ	0xFDF
  7872                           postinc2	equ	0xFDE
  7873                           postdec2	equ	0xFDD
  7874                           preinc2	equ	0xFDC
  7875                           plusw2	equ	0xFDB
  7876                           fsr2h	equ	0xFDA
  7877                           fsr2l	equ	0xFD9
  7878                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        5
    BSS         319
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      86
    BANK0           160    105     160
    BANK1           256    256     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3107_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    cam_get@pixels	PTR unsigned short  size(2) Largest target is 256
		 -> main@cam_pixels(BANK1[256]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_ready_ISR(), 

    ADCC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_ready_ISR(), NULL(NULL[0]), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), Absolute function(), IOCCF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _INTERRUPT_InterruptManagerLow->_CCP1_CaptureISR
    _TMR3_ISR->_timer_ISR
    _timer_ISR->i1_TMR3_SetInterruptHandler
    _timer_ISR->i1_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _ping_TMR1Overflow_isr->i1_IOCCF2_SetInterruptHandler
    _ping_TMR1Overflow_isr->i1_TMR1_SetInterruptHandler
    _ping_RC2_went_HIGH->_TMR1_WriteTimer
    _ping_RC2_went_HIGH->i1_IOCCF2_SetInterruptHandler
    _ping_RC2_went_HIGH->i1_TMR1_SetInterruptHandler
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_CaptureISR->_ping_CCP1_triggered
    _ping_CCP1_triggered->___flmul
    ___flmul->___xxtofl
    _ADCC_ISR->_adc_ready_ISR
    _adc_ready_ISR->i1_TMR3_SetInterruptHandler
    _adc_ready_ISR->i1_TMR3_WriteTimer

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR2_ISR->_carcontrol_ISR

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _carcontrol_init->_TMR2_SetInterruptHandler
    _cam_start->_TMR3_SetInterruptHandler
    _cam_start->_TMR3_WriteTimer
    _cam_init->_ADCC_SelectChannel
    _cam_init->_ADCC_SetInterruptHandler
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _CCP1_Initialize->_CCP1_SetCallBack

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               264   264      0    9699
                                             97 BANK0      8     8      0
                                              0 BANK1    256   256      0
                  _SYSTEM_Initialize
                            _cam_get
                           _cam_init
                          _cam_start
                    _carcontrol_init
                _carcontrol_steering
                _carcontrol_throttle
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6245
                                             89 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6039
                                             81 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5685
                                             65 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4314
                                             29 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2665
                                             18 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     812
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _carcontrol_init                                      0     0      0     310
           _TMR2_SetInterruptHandler
                _carcontrol_steering
                _carcontrol_throttle
 ---------------------------------------------------------------------------------
 (1) _carcontrol_throttle                                  1     1      0      45
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _carcontrol_steering                                  1     1      0      91
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cam_start                                            1     1      0     714
                                              2 BANK0      1     1      0
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     390
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cam_init                                             0     0      0     218
                 _ADCC_SelectChannel
           _ADCC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_SelectChannel                                   2     1      1     120
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _cam_get                                              8     6      2     300
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1590
                    _ADCC_Initialize
                    _CCP1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     324
                                              2 BANK0      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             2     0      2     324
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     350
                                              2 BANK0      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     350
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     274
         _IOCCF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2     274
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     174
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerLow                       9     9      0    4064
                                             48 COMRAM     9     9      0
                           _ADCC_ISR
                    _CCP1_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0     432
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _timer_ISR *
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _timer_ISR                                           1     1      0     266
                                              7 COMRAM     1     1      0
         i1_TMR3_SetInterruptHandler
                  i1_TMR3_StartTimer
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     540
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
              _ping_TMR1Overflow_isr *
 ---------------------------------------------------------------------------------
 (12) _ping_TMR1Overflow_isr                               0     0      0     148
       i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0     540
                         _IOCCF2_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF2_ISR                                          0     0      0     540
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                 _ping_RC2_went_HIGH *
 ---------------------------------------------------------------------------------
 (13) _ping_RC2_went_HIGH                                  0     0      0     540
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
       i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (13) i1_TMR1_SetInterruptHandler                          2     0      2      74
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i1_IOCCF2_SetInterruptHandler                        2     0      2      74
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     392
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     2     2      0    2286
                                             46 COMRAM     2     2      0
                   Absolute function *
               _CCP1_DefaultCallBack *
                _ping_CCP1_triggered *
 ---------------------------------------------------------------------------------
 (12) _ping_CCP1_triggered                                 2     0      2    2239
                                             44 COMRAM     2     0      2
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (13) ___xxtofl                                           14    10      4     398
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___flmul                                            25    17      8    1744
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _ADCC_ISR                                            0     0      0     266
                   Absolute function *
                      _adc_ready_ISR *
 ---------------------------------------------------------------------------------
 (12) _adc_ready_ISR                                       2     2      0     266
                                              7 COMRAM     2     2      0
         i1_TMR3_SetInterruptHandler
                  i1_TMR3_StartTimer
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_WriteTimer                                   2     0      2     166
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_SetInterruptHandler                          2     0      2     100
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManagerHigh                      2     2      0       0
                                              3 COMRAM     2     2      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                     _carcontrol_ISR *
 ---------------------------------------------------------------------------------
 (17) _carcontrol_ISR                                      3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (17) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP1_Initialize
       _CCP1_SetCallBack
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _cam_get
   _cam_init
     _ADCC_SelectChannel
     _ADCC_SetInterruptHandler
   _cam_start
     _TMR3_SetInterruptHandler
     _TMR3_StartTimer
     _TMR3_WriteTimer
   _carcontrol_init
     _TMR2_SetInterruptHandler
     _carcontrol_steering
     _carcontrol_throttle
   _carcontrol_steering
   _carcontrol_throttle
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _ADCC_ISR
     Absolute function(Fake) *
     _adc_ready_ISR *
       i1_TMR3_SetInterruptHandler
       i1_TMR3_StartTimer
       i1_TMR3_WriteTimer
   _CCP1_CaptureISR
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
     _ping_CCP1_triggered *
       ___flmul
         ___xxtofl (ARG)
       ___xxtofl
   _PIN_MANAGER_IOC
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       _ping_RC2_went_HIGH *
         _TMR1_StartTimer
         _TMR1_WriteTimer
         i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _ping_TMR1Overflow_isr *
       i1_IOCCF2_SetInterruptHandler
       i1_TMR1_SetInterruptHandler
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _timer_ISR *
       i1_TMR3_SetInterruptHandler
       i1_TMR3_StartTimer
       i1_TMR3_WriteTimer
     i1_TMR3_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _carcontrol_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     104      21       12.7%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      56       1       91.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F6      18        0.0%
DATA                 0      0     2FA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 19:18:52 2019

                                 cam_get@pixels 0060                __end_of_TMR2_SetInterruptHandler 1EDC  
                             ??_carcontrol_init 0062                                     __CFG_CP$OFF 000000  
                                            bsr 000FE0                             _carcontrol_throttle 1E5A  
                           _carcontrol_steering 1B88                         __end_of_CCP1_Initialize 1CA2  
                                   __CFG_LVP$ON 000000                                             l966 15E8  
                                           l993 161C                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                 _timer1ReloadVal 0042  
                                           _abs 1AEC                                             _pad 15EA  
                       __size_of_PMD_Initialize 001C                                 _TMR2_Initialize 1C46  
                                           tosl 000FFD                                             wreg 000FE8  
              ??_IOCCF2_DefaultInterruptHandler 0006                 ?_IOCCF2_DefaultInterruptHandler 0001  
                                  ___flmul@aexp 0025                                    ___flmul@bexp 0026  
                                  ___flmul@sign 0020                                    ___flmul@temp 002B  
                                  ___flmul@prod 0027                     carcontrol_steering@steering 0060  
                                  __CFG_ZCD$OFF 000000                                            l1004 0BEE  
                                          l1006 0BF6                                            ?_abs 0072  
                                          l3000 16A2                                            l3010 1A86  
                                          l3020 1C28                                            l3014 1A9E  
                                          l3030 1604                                            l3120 1298  
                                          l3112 123C                                            l3104 11FE  
                                          l3040 1640                                            l3200 0D7E  
                                          l3114 1250                                            l3018 1C22  
                                          l3034 1614                                 _timer3ReloadVal 003C  
                                          l3060 0F74                                            l3124 12AE  
                                          l3108 1222                                            l3044 166C  
                                          l3036 1626                                            l3204 0D96  
                                          l3072 0FC2                                            l3128 12D4  
                                          l3152 0BD2                                            l3074 0FD6  
                                          l3066 0F9C                                            l3170 0C1E  
                                          l3092 106E                                            l3084 1032  
                                          l1716 1B16                                            l3180 0D18  
                                          l3166 0C10                                            l3088 1048  
                                          l3264 0EEC                                            l3258 0EB0  
                                          l3274 0F10                                            l3268 0EF8  
                                          l3642 1B9C                                            l3628 1DA4  
                                          l3636 1E6A                                            l3646 1BAA  
                                          ?_pad 0072                                            l3760 198E  
                                          l3758 1968                                            l3880 155A  
                                          l3892 15A6                                            l2988 1E98  
                                          l3972 144C                                            l3956 1404  
                                          l3948 13FA                                            l3886 159C  
                                          STR_1 0822                                            STR_2 0801  
                                          u1340 169A                                            _LATA 000F82  
                                          u1430 1AFC                                            _LATB 000F83  
                                          _LATC 000F84                                            u1360 16E2  
                                          u2420 15E8                                            u1540 1254  
                                          u1620 0BE4                                            u1461 0FA2  
                                          u1710 0D68                                            u1480 0FDA  
                                          u1640 0C0A                                            u1650 0D28  
                                          _T2PR 000FBB                                            u2380 17FC  
                                          u1580 0BA4                                            u1670 0D4A  
                                          u1590 0BA6                                            u1750 0E32  
                                          u2550 1436                                            u1671 0D48  
                                          u1680 0D58                                            u2560 1490  
                                          u1690 0D5C                                            u2398 1800  
                                          u2587 1414                                            _PMD0 000EDC  
                                          u2597 1808                                            _PMD1 000EDD  
                                          _PMD2 000EDE                                            _PMD3 000EDF  
                                          _PMD4 000EE0                                            _PMD5 000EE1  
                                          _PIR6 000ECB                                            _TMR2 000FBA  
                                          _WPUA 000F0B                                            _WPUB 000F13  
                                          _WPUC 000F1B                                            _WPUE 000F28  
                              __end_of_ADCC_ISR 1D90                            ?_carcontrol_throttle 0001  
                          ?_carcontrol_steering 0001                                   _EUSART1_Write 1E94  
                                 __CFG_FCMEN$ON 000000                        _ADCC_SetInterruptHandler 1EBE  
                                          abs@a 0072                                            _dbuf 00DA  
                                          _main 13DC                                            _dtoa 0B7A  
                                          _prec 00D3                                            _nout 00CF  
                                          pad@i 0079                                            pad@p 0076  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 007B                                            fsr2l 000FD9  
                                          btemp 0057                              _ADCC_SelectChannel 1E70  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00A2                                 _TMR3_Initialize 1A36  
                      __end_of_CCP1_SetCallBack 1F18                      ??_TMR1_SetInterruptHandler 0062  
                                 __CFG_CSWEN$ON 000000                                    ___param_bank 000000  
                              ?_CCP1_CaptureISR 0001                             ?_ADCC_SelectChannel 0060  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0074  
                                         ??_pad 0078                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 1E5A                             __size_of_IOCCF2_ISR 0026  
                               __end_of___aodiv 1090                                           _ADACQ 000F57  
                                         _ADACT 000F51                                           _ADCAP 000F58  
                                         ?_main 0001                                           ?_dtoa 007D  
                                         _ADCLK 000F52                                 __end_of___aomod 12F6  
                                         _ADCNT 000F62                                           _ADPCH 000F5A  
                                         _ADREF 000F53                                           _ADPRE 000F59  
                                 __CFG_WDTE$OFF 000000                                           _ADRPT 000F61  
                               __end_of___flmul 0B7A                                 _TMR1_StartTimer 1F40  
                     ADCC_SelectChannel@channel 0061                                           _T1CLK 000FD1  
                                         _T1CON 000FCE                                           _T3CLK 000FCB  
                                         _T2CON 000FBC                                           _T3CON 000FC8  
                                         _T2HLT 000FBD                                  __CFG_DEBUG$OFF 000000  
                                         _T2TMR 000FBA                                           _T2RST 000FBF  
                                         i1l261 0058                                           i1l263 0064  
                                         i1l264 007A                                           i1l265 0070  
                                         i1l259 004C                                           i2l254 1DC4  
                                         i1l933 1526                                           _OSCEN 000ED7  
                                  vfpfcnvrt@fmt 00A3                                 __end_of_cam_get 15EA  
                                         _TMR1H 000FCD                                           _TMR1L 000FCC  
                                         _TMR3H 000FC7                                           _TMR3L 000FC6  
                                         _TRISA 000F87                                           _TRISB 000F88  
                                         _TRISC 000F89                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
             __size_of_TMR3_SetInterruptHandler 000A                                   __CFG_WRT3$OFF 000000  
                     ?_TMR3_SetInterruptHandler 0060                                  __CFG_EBTR0$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                __end_of_TMR1_ISR 1C18  
                              __end_of_TMR2_ISR 1D6C                                   __CFG_WRTB$OFF 000000  
                              __end_of_TMR3_ISR 1BE8                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                          ??_ADCC_SelectChannel 0061                  ??_TMR3_DefaultInterruptHandler 0006  
                       __end_of_PIN_MANAGER_IOC 1EBE                                           _flags 00D5  
                                         _myCam 0200                          __size_of_adc_ready_ISR 00A8  
                                         _fputc 1688                                           _fputs 1A7A  
                            __CFG_MCLRE$EXTMCLR 000000                                           pad@fp 0072  
                                         _width 00D1                                           _putch 1EA4  
                                         main@i 00C5                                           dtoa@d 007F  
                                         dtoa@i 009F                                           dtoa@n 0097  
                                         dtoa@p 0091                                           dtoa@s 0095  
                                         dtoa@w 0093                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 19F0                           ??_carcontrol_throttle 0060  
                         ??_carcontrol_steering 0060                                           pclath 000FFA  
                                         tablat 000FF5                                           plusw2 000FDB  
                ??i1_IOCCF2_SetInterruptHandler 0008                                           ttemp5 0058  
                                         ttemp6 005B                                           ttemp7 005F  
                                         status 000FD8                                           wtemp8 0058  
                                _carcontrol_ISR 12F6              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 1E0A                  ?_INTERRUPT_InterruptManagerLow 0001  
                               __initialization 18FA                     ?i1_TMR1_SetInterruptHandler 0006  
                    __end_of_EUSART1_Initialize 1A36                                    __end_of_main 149E  
                                  __end_of_dtoa 0DC0                         __end_of_TMR2_Initialize 1C74  
                      _TMR2_SetInterruptHandler 1ED2                                          ??_main 00C1  
                                        ??_dtoa 0087                                ?_CCP1_Initialize 0001  
                               _TMR3_StartTimer 1F3C                                   __activetblptr 000002  
                         _TMR3_InterruptHandler 003A                         _IOCCF2_InterruptHandler 0046  
                                        _ADACCH 000F6C                                          _ADACCL 000F6B  
                                        _ADCON0 000F5B                                          _ADCON1 000F54  
                                        _ADCON2 000F55                                          _ADCON3 000F56  
                                        _ADERRH 000F6A                                          _ADERRL 000F69  
                                        ?_fputc 0062                                          _ADLTHH 000F66  
                                        _ADLTHL 000F65                                          ?_fputs 006B  
                                        _ADRESH 000F5F                                          _ADRESL 000F5E  
                                        _CCPR1H 000FAA                                          _CCPR1L 000FA9  
                                        _ADSTAT 000F60                                          _ADUTHH 000F68  
                                        _ADUTHL 000F67                                          _ANSELA 000F0C  
                                        ?_putch 0001                                          _ANSELB 000F14  
                                        _ANSELC 000F1C                                          _T1GATE 000FD0  
                                        _T1GCON 000FCF                                          _T3GATE 000FCA  
                                        _T3GCON 000FC9                                          _RC1REG 000F98  
                 __size_of_CCP1_DefaultCallBack 0002                                          _RC1STA 000F9C  
                       TMR1_WriteTimer@timerVal 0006                                          _ODCONA 000F0A  
                                        _ODCONB 000F12                                          _ODCONC 000F1A  
                                        _RC6PPS 000EF8                                          i1l3142 1E1C  
                                        i1l1703 114C                          __end_of_carcontrol_ISR 13DC  
                                        i1l3312 0894                                          i1l3322 08C6  
                                        i1l3314 0898                                          i1l3406 0B64  
                                        i1l3430 1134                                          i1l1655 08A8  
                                        i1l1672 0B46                                          i1l1664 0AC0  
                                        i1l3424 10FC                                          i1l1665 0ABC  
                                        i1l3370 0A86                                          i1l3426 1102  
                                        i1l3418 10DE                                          i1l3364 0A68  
                                        i1l3436 1172                                          i1l3428 110E  
                       __end_of_TMR3_Initialize 1A7A                                          i1l3390 0B04  
                                        i1l3294 0854                                          i1l3454 11BE  
                                        i1l3438 117E                                          i1l3296 0858  
                                        i1l1696 10CE                                          i1l3394 0B22  
                                        i1l3298 0868                                          i1l3468 1E38  
                                        i1l3734 174E                                          i1l3744 14DC  
                                __CFG_WDTCCS$SC 000000                                          i2l3652 12F8  
                                        i2l3658 130A                                          i2l3668 1330  
                                        i2l3678 1386                                          i2l3694 13B0  
                                        _OSCFRQ 000ED9                                          _TX1REG 000F99  
                              __end_of_cam_init 1AEC                                          _TX1STA 000F9D  
                              __end_of___xxtofl 11D0                                 _TMR3_WriteTimer 1D90  
                                 _CCP1_CallBack 0044                                  __CFG_PWRTE$OFF 000000  
                                __CFG_XINST$OFF 000000            __end_of_TMR1_DefaultInterruptHandler 1F4C  
         __size_of_TMR1_DefaultInterruptHandler 0002                    _TMR1_DefaultInterruptHandler 1F4A  
                                  vfprintf@cfmt 00B7                         __end_of_TMR1_StartTimer 1F44  
                                 _adc_ready_ISR 149E                                       ??___aodiv 0070  
                                     ??___aomod 0070                                  __CFG_STVREN$ON 000000  
                                     ??___flmul 001C                                          _carctl 00C9  
                      ?_EUSART1_SetErrorHandler 0060                                       ??_cam_get 0062  
                                        clear_0 1922                                          clear_1 1934  
                                        clear_2 1940                                          _printf 1CF8  
                                        pad@buf 0074                ??_EUSART1_SetOverrunErrorHandler 0062  
               ?_EUSART1_SetOverrunErrorHandler 0060                                          _status 0048  
                                        dtoa@fp 007D                                       ?_ADCC_ISR 0001  
                                        _strlen 1C18                     __end_of_ping_CCP1_triggered 189C  
                               _ADCC_Initialize 189C                                          fputc@c 0062  
                                _PMD_Initialize 1DEE                                          fputs@c 006F  
                                        fputs@i 0070                                    __pdataCOMRAM 0052  
                                        fputs@s 006B                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 19AA  
                               ??_EUSART1_Write 0060                         ??_ping_TMR1Overflow_isr 0008  
    i1TMR3_SetInterruptHandler@InterruptHandler 0006      i1TMR1_SetInterruptHandler@InterruptHandler 0006  
  i1IOCCF2_SetInterruptHandler@InterruptHandler 0006        TMR3_SetInterruptHandler@InterruptHandler 0060  
      ADCC_SetInterruptHandler@InterruptHandler 0060        TMR1_SetInterruptHandler@InterruptHandler 0060  
      TMR2_SetInterruptHandler@InterruptHandler 0060      IOCCF2_SetInterruptHandler@InterruptHandler 0060  
                              ?_PIN_MANAGER_IOC 0001                         __end_of_TMR1_WriteTimer 1E26  
                 __size_of_INTERRUPT_Initialize 0012                                    ??_IOCCF2_ISR 0008  
                   __size_of_ping_RC2_went_HIGH 0034                                ?_TMR1_Initialize 0001  
                               ?_carcontrol_ISR 0001                                    ___xxtofl@arg 0010  
                                  ___xxtofl@exp 000F                ??_INTERRUPT_InterruptManagerHigh 0004  
               ?_INTERRUPT_InterruptManagerHigh 0001                               _SYSTEM_Initialize 1CCE  
                                  ___xxtofl@val 0006                                 _carcontrol_init 1B20  
                                    __accesstop 0060                         __end_of__initialization 1946  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                ?_adc_ready_ISR 0001                                  __pcstackCOMRAM 0001  
                                main@cam_pixels 0100                              __size_of_cam_start 0068  
                           ??_SYSTEM_Initialize 0064                         __end_of_TMR3_StartTimer 1F40  
                                     ?_TMR1_ISR 0001                                       ?_TMR2_ISR 0001  
                 ?_TMR1_DefaultInterruptHandler 0001                                       ?_TMR3_ISR 0001  
                                 __end_of_fputc 16F6                                   __end_of_fputs 1AB6  
                                 __end_of_putch 1EB2                                ?_TMR2_Initialize 0001  
                        __end_of_PMD_Initialize 1E0A                                      ??_ADCC_ISR 000A  
                            __end_of_IOCCF2_ISR 1D46                      ??_ADCC_SetInterruptHandler 0062  
                                       ??_fputc 0066                       __end_of_SYSTEM_Initialize 1CF8  
                                       ??_fputs 006F                         __end_of_TMR3_WriteTimer 1DB0  
                                       ??_putch 0061                                      __pbssBANK0 00C9  
                              ?_TMR3_Initialize 0001                                      __pnvCOMRAM 003A  
        __end_of_IOCCF2_DefaultInterruptHandler 1F4E         __size_of_IOCCF2_DefaultInterruptHandler 0002  
                _IOCCF2_DefaultInterruptHandler 1F4C                 __end_of_EUSART1_SetErrorHandler 1F0E  
                             ?_CCP1_SetCallBack 0060                __end_of_TMR3_SetInterruptHandler 1ED2  
                              ?_TMR1_StartTimer 0001                                      ??_TMR1_ISR 0008  
                               __CFG_PPS1WAY$ON 000000                                      ??_TMR2_ISR 0004  
                  ??i1_TMR3_SetInterruptHandler 0008                                      ??_TMR3_ISR 0009  
                            ??_CCP1_SetCallBack 0062                         __end_of_ADCC_Initialize 18FA  
                                       _CCP1CAP 000FAC                                         _CCP1CON 000FAB  
                                       _ADFLTRH 000F6E                                         _ADFLTRL 000F6D  
                                       _CCP1PPS 000EAA                                         _ADPREVH 000F5D  
                                       _ADPREVL 000F5C                                         _ADSTPTH 000F64  
                                       _ADSTPTL 000F63                                         ?_printf 00B9  
                               ?_PMD_Initialize 0001                                         ?_strlen 0060  
        __end_of_EUSART1_SetFramingErrorHandler 1F04         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 1EFA                              __size_of_timer_ISR 006E  
                                     ?_cam_init 0001                                       ?___xxtofl 0006  
                                       _SP1BRGH 000F9B                                         _SP1BRGL 000F9A  
                                       _OSCCON1 000ED3                                         _OSCCON3 000ED5  
                            __size_of_vfpfcnvrt 0186                         __end_of_carcontrol_init 1B54  
                                       _OSCTUNE 000ED8                                         _SLRCONA 000F09  
                                       _SLRCONB 000F11                                         _SLRCONC 000F19  
                             __end_of_cam_start 1836                                ?_TMR1_WriteTimer 0006  
             CCP1_DefaultCallBack@capturedValue 002D             __size_ofi1_TMR3_SetInterruptHandler 000A  
                               ??_adc_ready_ISR 0008                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0062  
                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000                                         ___aodiv 0F46  
                                       ___aomod 11D0                                         ___flmul 0828  
                              ?_TMR3_StartTimer 0001                                       ?_vfprintf 00B1  
                                  __psmallconst 0800                                         _cam_get 1546  
                                       __pcinit 18FA                                         __ramtop 0800  
                                       __ptext0 13DC                                         __ptext1 1CF8  
                                       __ptext2 1954                                         __ptext3 0DC0  
                                       __ptext4 0B7A                                         __ptext5 15EA  
                                       __ptext6 1C18                                         __ptext7 1A7A  
                                       __ptext8 1688                                         __ptext9 1EA4  
                               __size_of_printf 0028                        __size_of_CCP1_CaptureISR 002C  
                ??_TMR1_DefaultInterruptHandler 0006                                 __size_of_strlen 002E  
                                     _T1CONbits 000FCE                                      ??_cam_init 0062  
                         _OSCILLATOR_Initialize 1E42                                       _T2CONbits 000FBC  
                                  __size_of_abs 0034                                    __size_of_pad 009E  
                                    ??___xxtofl 000A                                       _T3CONbits 000FC8  
             __size_of_TMR1_SetInterruptHandler 000A                              _EUSART1_Initialize 19F0  
                   __end_of_carcontrol_throttle 1E70                        ??_PIN_MANAGER_Initialize 0062  
                     ?_TMR1_SetInterruptHandler 0060                     __end_of_carcontrol_steering 1BB8  
                                     _T2HLTbits 000FBD                                       _IOCCFbits 000F15  
                                     _IOCCNbits 000F16                                       _IOCCPbits 000F17  
                   __size_of_ADCC_SelectChannel 0012                      __size_of_SYSTEM_Initialize 002A  
                                __pintcode_body 1DB0                            end_of_initialization 1946  
                              ?_TMR3_WriteTimer 0060                                       _T2RSTbits 000FBF  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0064  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00FA  
                                       int_func 1DB0                                         fputs@fp 006D  
                             __end_of_timer_ISR 1764                               __end_of_vfpfcnvrt 0F46  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                    __end_of_CCP1_DefaultCallBack 1F50  
                              ?_ADCC_Initialize 0001                                      ??_vfprintf 00B7  
                         _ADCC_InterruptHandler 0050                            ??_EUSART1_Initialize 0062  
                         __CFG_WDTCPS$WDTCPS_31 000000                                         strlen@a 0062  
                                       strlen@s 0060                        _TMR3_SetInterruptHandler 1EC8  
                                    _timing_val 0052                                      _servo_trim 0056  
                             __size_of_ADCC_ISR 0024                                   ___xxtofl@sign 000E  
                                     _TRISBbits 000F88                                       _TRISCbits 000F89  
                              ??_carcontrol_ISR 0001                                ?_carcontrol_init 0001  
              __size_of_EUSART1_SetErrorHandler 000A                                      main@i_1989 00C7  
                      __size_of_CCP1_Initialize 002E                    ??_IOCCF2_SetInterruptHandler 0062  
                           EUSART1_Write@txData 0060                                __CFG_FEXTOSC$OFF 000000  
                __size_of_ping_TMR1Overflow_isr 001E                   __end_of_ping_TMR1Overflow_isr 1DEE  
                                   ___flmul@grs 0021              __end_ofi1_TMR3_SetInterruptHandler 1F36  
                    i1_TMR3_SetInterruptHandler 1F2C                    __end_of_INTERRUPT_Initialize 1E94  
          __end_of_TMR2_DefaultInterruptHandler 1F52           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 1F50                                     vfpfcnvrt@ap 00A5  
                                   vfpfcnvrt@fp 00A1                                     vfpfcnvrt@ll 00A9  
                                 __pidataCOMRAM 1F36                               __size_of_TMR1_ISR 0030  
                             __size_of_TMR2_ISR 0026                               __size_of_TMR3_ISR 0030  
                        ?_OSCILLATOR_Initialize 0001             __size_of_IOCCF2_SetInterruptHandler 000A  
                                __end_of_printf 1D20                                  __end_of_strlen 1C46  
                           start_initialization 18FA                 __size_of_PIN_MANAGER_Initialize 006A  
                                   __end_of_abs 1B20                                     __end_of_pad 1688  
                    __end_of_ping_RC2_went_HIGH 1B88                               ??_CCP1_CaptureISR 002F  
                  __size_of_ping_CCP1_triggered 0066                                     putch@txData 0061  
                         __end_of_EUSART1_Write 1EA4                        __size_of_PIN_MANAGER_IOC 000C  
                              __CFG_LPBOREN$OFF 000000                        __size_of_TMR1_Initialize 0046  
                                   vfprintf@fmt 00B3                                ??_PMD_Initialize 0060  
                                   _CCPTMRSbits 000FAD                   ?_TMR2_DefaultInterruptHandler 0001  
                                      ??_printf 00BD                                        ??_strlen 0062  
                         CCP1_CaptureISR@module 002F                                     __pbssBIGRAM 0200  
                                     ___flmul@a 0018                                       ___flmul@b 0014  
                                   __pbssCOMRAM 0048                       __size_of_CCP1_SetCallBack 000A  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                              ___aodiv@dividend 0060                        __size_of_TMR2_Initialize 002E  
                             __size_of_cam_init 0036                               __size_of___xxtofl 0140  
                          _CCP1_DefaultCallBack 1F4E                ??_EUSART1_SetFramingErrorHandler 0062  
               ?_EUSART1_SetFramingErrorHandler 0060                                       _cam_start 17CE  
                             ??_CCP1_Initialize 0062                                       __pnvBANK0 00FA  
             __size_of_ADCC_SetInterruptHandler 000A                       ?_ADCC_SetInterruptHandler 0060  
                        _PIN_MANAGER_Initialize 1764                                       _dtoa$2646 008F  
                      __size_of_TMR3_Initialize 0044                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 1EE6                                        ?___aodiv 0060  
                                      ?___aomod 0060                    ??i1_TMR1_SetInterruptHandler 0008  
                              ___aodiv@quotient 0072                                        ?___flmul 0014  
                                      ?_cam_get 0060                                     __pintcodelo 0018  
                             __size_of_vfprintf 0056                                        _ADCC_ISR 1D6C  
                                      _BAUD1CON 000F9E                                     __smallconst 0800  
                      __size_of_TMR1_StartTimer 0004              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 003E                         _EUSART1_SetErrorHandler 1F04  
            __end_of_IOCCF2_SetInterruptHandler 1EF0                      _IOCCF2_SetInterruptHandler 1EE6  
                                __size_of_fputc 006E                                        _T2CLKCON 000FBE  
                                __size_of_fputs 003C                           ?_CCP1_DefaultCallBack 002D  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 1E82  
                                    ?_cam_start 0001             __size_ofi1_TMR1_SetInterruptHandler 000A  
                                      _LATAbits 000F82         EUSART1_SetErrorHandler@interruptHandler 0060  
                                      _LATBbits 000F83                                        _LATCbits 000F84  
                                      _IPR0bits 000EB5                                        _IPR1bits 000EB6  
                                      _PIE0bits 000EBD                                        _PIE1bits 000EBE  
                                      _IPR4bits 000EB9                                        _PIE4bits 000EC1  
                                      _IPR6bits 000EBB                                        _PIE6bits 000EC3  
                                      i1u202_20 1188                                        i1u221_20 14AA  
                                      i1u221_26 14AC                                        i1u223_20 151A  
                                      i1u231_28 1BD4                                        i1u232_28 1CBA  
                                      i1u208_28 1D2C                                        i1u208_29 1D40  
                                      i1u218_20 170A                                        i1u218_26 170C  
                                      i1u234_28 1D7C                                        i1u229_28 1C04  
                      __size_of_TMR1_WriteTimer 001C                                        i1u184_20 08B4  
                                      i1u193_20 0B12                                        i1u185_20 0A2A  
                                      i1u185_25 0A20                                        i1u194_20 0B30  
                                      i1u189_20 0AB6                                        i2u213_40 1322  
                                      i2u216_40 1378                                        i2u227_48 1D58  
                                      _PIR0bits 000EC5                                        _PIR1bits 000EC6  
                                      _PIR3bits 000EC8                                        _PIR4bits 000EC9  
                    ??_TMR3_SetInterruptHandler 0062                                        _PIR6bits 000ECB  
                         __end_of_adc_ready_ISR 1546                                       _timer_ISR 16F6  
                                      _TMR1_ISR 1BE8                                        _TMR2_ISR 1D46  
                                      _TMR3_ISR 1BB8                                       _servo_max 0054  
                                     _servo_min 0055                               ??_PIN_MANAGER_IOC 0008  
                             i1_TMR3_StartTimer 1F44                                       _vfpfcnvrt 0DC0  
                             ??_TMR1_Initialize 0062                                       _stateTime 00D7  
                                    _ADCON0bits 000F5B                                      _ADCON1bits 000F54  
                                    _ADCON2bits 000F55                                      _ADCON3bits 000F56  
                            ?i1_TMR3_StartTimer 0001                        __size_of_TMR3_StartTimer 0004  
                    __end_of_ADCC_SelectChannel 1E82                  ??_TMR2_DefaultInterruptHandler 0001  
             __size_of_TMR2_SetInterruptHandler 000A                       ?_TMR2_SetInterruptHandler 0060  
                           ??i1_TMR3_StartTimer 0006                                       copy_data0 190E  
                         ?_INTERRUPT_Initialize 0001                    __size_of_carcontrol_throttle 0016  
                  __size_of_carcontrol_steering 0030                               i1_TMR3_WriteTimer 1E26  
                             ??_TMR2_Initialize 0062                              ?i1_TMR3_WriteTimer 0006  
                                    _ADSTATbits 000F60                                        __Hrparam 0000  
                      __size_of_TMR3_WriteTimer 0020                                      vfprintf@ap 00B5  
                                      __Lrparam 0000                                      vfprintf@fp 00B1  
                            __CFG_BOREN$SBORDIS 000000                     ?i1_TMR3_SetInterruptHandler 0006  
                                    ?_timer_ISR 0001                       __end_ofi1_TMR3_StartTimer 1F48  
                           ??i1_TMR3_WriteTimer 0008                         ??_OSCILLATOR_Initialize 0060  
                           _ping_CCP1_triggered 1836                                __size_of___aodiv 014A  
                              __size_of___aomod 0126                                __size_of___flmul 0352  
                   __size_of_EUSART1_Initialize 0046                                      ?_vfpfcnvrt 00A1  
                               _CCP1_CaptureISR 1CA2                                __size_of_cam_get 00A4  
                               ___aodiv@divisor 0068                               ??_TMR3_Initialize 0062  
                      _TMR1_SetInterruptHandler 1EDC                                 ___aodiv@counter 0070  
                         _TMR1_InterruptHandler 0040                       ??_EUSART1_SetErrorHandler 0062  
                                      _cam_init 1AB6                     _EUSART1_DefaultErrorHandler 000000  
                                      ___xxtofl 1090                                _CCP1_SetCallBack 1F0E  
                      __size_of_ADCC_Initialize 005E                 ??_INTERRUPT_InterruptManagerLow 0031  
                CCP1_SetCallBack@customCallBack 0060              ADCC_SelectChannel@acquisitionDelay 0060  
                                      __ptext10 1E94                                        __ptext11 1AEC  
                                      __ptext20 1AB6                                        __ptext12 11D0  
                                      __ptext21 1EBE                                        __ptext13 0F46  
                                    _T1GCONbits 000FCF                                        __ptext30 1EDC  
                                      __ptext22 1E70                                        __ptext14 1B20  
                                      __ptext31 1DEE                                        __ptext23 1546  
                                      __ptext15 1E5A                                        __ptext40 1C74  
                                      __ptext32 1764                                        __ptext24 1CCE  
                                      __ptext16 1B88                                        __ptext41 1F0E  
                                      __ptext33 1EE6                                        __ptext25 1A36  
                                      __ptext17 17CE                                        __ptext50 1EB2  
                                      __ptext42 189C                                        __ptext34 1E42  
                                      __ptext26 1EC8                                        __ptext18 1D90  
                                      __ptext51 1D20                                        __ptext35 1E82  
                                      __ptext27 1C46                                        __ptext19 1F3C  
                                      __ptext60 1836                                        __ptext52 1F4C  
                                      __ptext44 1BB8                                        __ptext36 19F0  
                                      __ptext28 1ED2                                        __ptext61 1090  
                                      __ptext53 1B54                                        __ptext45 1F48  
                                      __ptext37 1EF0                                        __ptext29 19AA  
                                      __ptext70 1F50                                        __ptext62 0828  
                                      __ptext54 1F18                                        __ptext46 16F6  
                                      __ptext38 1EFA                                        __ptext71 12F6  
                                      __ptext63 1D6C                                        __ptext55 1F22  
                                      __ptext47 1BE8                                        __ptext39 1F04  
                                      __ptext72 0000                                        __ptext64 149E  
                                      __ptext56 1E0A                                        __ptext48 1F4A  
                                      __ptext65 1E26                                        __ptext57 1F40  
                                      __ptext49 1DD0                                        __ptext66 1F44  
                                      __ptext58 1CA2                                        __ptext67 1F2C  
                                      __ptext59 1F4E                                        __ptext69 1D46  
                        ??_CCP1_DefaultCallBack 002F                            ?_ping_CCP1_triggered 002D  
                     __end_ofi1_TMR3_WriteTimer 1E42                                        cam_get@i 0064  
                             ??_TMR1_StartTimer 0006                                      _T3GCONbits 000FC9  
                                    _IOCCF2_ISR 1D20                         TMR3_WriteTimer@timerVal 0060  
                                   ??_cam_start 0062                                   __size_of_main 00C2  
                                 __size_of_dtoa 0246                           _ping_TMR1Overflow_isr 1DD0  
                      __size_of_carcontrol_init 0034                            __CFG_WDTCWS$WDTCWS_7 000000  
                            __CFG_BORV$VBOR_190 000000                              _ping_RC2_went_HIGH 1B54  
                                    _RC1STAbits 000F9C              __end_ofi1_TMR1_SetInterruptHandler 1F22  
                    i1_TMR1_SetInterruptHandler 1F18  EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                     i1TMR3_WriteTimer@timerVal 0006                 ping_CCP1_triggered@timeOfFlight 002D  
                                      int$flags 0057                                        _vfprintf 1954  
                           ?_ping_RC2_went_HIGH 0001                                       printf@fmt 00B9  
                             ??_TMR1_WriteTimer 0008            __end_of_TMR3_DefaultInterruptHandler 1F4A  
         __size_of_TMR3_DefaultInterruptHandler 0002                    _TMR3_DefaultInterruptHandler 1F48  
                   _EUSART1_FramingErrorHandler 00FC                                ___aomod@dividend 0060  
                                    _INTCONbits 000FF2            __end_ofi1_IOCCF2_SetInterruptHandler 1F2C  
         __size_ofi1_IOCCF2_SetInterruptHandler 000A                    i1_IOCCF2_SetInterruptHandler 1F22  
                               _CCP1_Initialize 1C74                __end_of_ADCC_SetInterruptHandler 1EC8  
                        ??_INTERRUPT_Initialize 0060                           ??_ping_CCP1_triggered 002F  
                          ??_ping_RC2_went_HIGH 0008                               ??_TMR3_StartTimer 0060  
                                      intlevel1 0000                                        intlevel2 0000  
                       ?_PIN_MANAGER_Initialize 0001                               __CFG_CLKOUTEN$OFF 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 1EFA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1EF0                         __size_of_carcontrol_ISR 00E6  
                       __end_of_CCP1_CaptureISR 1CCE                                     ??_timer_ISR 0008  
                    __size_ofi1_TMR3_StartTimer 0004                                        printf@ap 00BF  
EUSART1_SetFramingErrorHandler@interruptHandler 0060                                 ___aomod@divisor 0068  
                                   ??_vfpfcnvrt 00A7                                 ___aomod@counter 0070  
                             ??_TMR3_WriteTimer 0062                          __size_of_EUSART1_Write 0010  
                            _eusart1RxLastError 00D9                     carcontrol_throttle@throttle 0060  
        __end_of_INTERRUPT_InterruptManagerHigh 1DD0         __size_of_INTERRUPT_InterruptManagerHigh 1DC8  
                _INTERRUPT_InterruptManagerHigh 0008                   ?_TMR3_DefaultInterruptHandler 0001  
                 ?i1_IOCCF2_SetInterruptHandler 0006                     ?_IOCCF2_SetInterruptHandler 0060  
                                    _TX1STAbits 000F9D                      __size_ofi1_TMR3_WriteTimer 001C  
         __end_of_INTERRUPT_InterruptManagerLow 00A2          __size_of_INTERRUPT_InterruptManagerLow 008A  
                 _INTERRUPT_InterruptManagerLow 0018                                    ___aodiv@sign 0071  
                                   ?_IOCCF2_ISR 0001                  __end_of_PIN_MANAGER_Initialize 17CE  
                             ??_ADCC_Initialize 0060                                   cam_get@i_2598 0066  
                        ?_ping_TMR1Overflow_isr 0001                                 _PIN_MANAGER_IOC 1EB2  
                         _TMR2_InterruptHandler 00FE                                    ___aomod@sign 0071  
                               _TMR1_Initialize 19AA  
