

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 15:47:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25Q10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           ; Version 2.05
    98                           ; Generated 20/12/2018 GMT
    99                           ; 
   100                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F25Q10 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   133  0000                     
   134 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   135  0000                     
   136 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   137  0000                     
   138                           	psect	idataCOMRAM
   139  001FE6                     __pidataCOMRAM:
   140                           	opt callstack 0
   141                           
   142                           ;initializer for _timing_val
   143  001FE6  FF10               	dw	65296
   144                           
   145                           ;initializer for _servo_max
   146  001FE8  1C                 	db	28
   147                           
   148                           ;initializer for _servo_min
   149  001FE9  E2                 	db	226
   150                           
   151                           ;initializer for _servo_trim
   152  001FEA  11                 	db	17
   153                           
   154                           	psect	nvCOMRAM
   155  00003A                     __pnvCOMRAM:
   156                           	opt callstack 0
   157  00003A                     _TMR3_InterruptHandler:
   158                           	opt callstack 0
   159  00003A                     	ds	2
   160  00003C                     _timer3ReloadVal:
   161                           	opt callstack 0
   162  00003C                     	ds	2
   163  00003E                     _ADCC_ADI_InterruptHandler:
   164                           	opt callstack 0
   165  00003E                     	ds	2
   166  000040                     _TMR1_InterruptHandler:
   167                           	opt callstack 0
   168  000040                     	ds	2
   169  000042                     _timer1ReloadVal:
   170                           	opt callstack 0
   171  000042                     	ds	2
   172  000044                     _CCP1_CallBack:
   173                           	opt callstack 0
   174  000044                     	ds	2
   175  000046                     _IOCCF2_InterruptHandler:
   176                           	opt callstack 0
   177  000046                     	ds	2
   178                           
   179                           	psect	nvBANK0
   180  0000F8                     __pnvBANK0:
   181                           	opt callstack 0
   182  0000F8                     _EUSART1_ErrorHandler:
   183                           	opt callstack 0
   184  0000F8                     	ds	2
   185  0000FA                     _EUSART1_OverrunErrorHandler:
   186                           	opt callstack 0
   187  0000FA                     	ds	2
   188  0000FC                     _EUSART1_FramingErrorHandler:
   189                           	opt callstack 0
   190  0000FC                     	ds	2
   191  0000FE                     _TMR2_InterruptHandler:
   192                           	opt callstack 0
   193  0000FE                     	ds	2
   194  0000                     _PIR6	set	3787
   195  0000                     _PIR3bits	set	3784
   196  0000                     _PIR0bits	set	3781
   197  0000                     _PIR6bits	set	3787
   198  0000                     _PIE6bits	set	3779
   199  0000                     _PIR1bits	set	3782
   200  0000                     _PIE1bits	set	3774
   201  0000                     _IPR0bits	set	3765
   202  0000                     _IPR6bits	set	3771
   203  0000                     _IPR1bits	set	3766
   204  0000                     _IPR4bits	set	3769
   205  0000                     _PIE4bits	set	3777
   206  0000                     _PIR4bits	set	3785
   207  0000                     _RC6PPS	set	3832
   208  0000                     _CCP1PPS	set	3754
   209  0000                     _ADACTPPS	set	3753
   210  0000                     _PIE0bits	set	3773
   211  0000                     _PMD5	set	3809
   212  0000                     _PMD4	set	3808
   213  0000                     _PMD3	set	3807
   214  0000                     _PMD2	set	3806
   215  0000                     _PMD1	set	3805
   216  0000                     _PMD0	set	3804
   217  0000                     _OSCTUNE	set	3800
   218  0000                     _OSCFRQ	set	3801
   219  0000                     _OSCEN	set	3799
   220  0000                     _OSCCON3	set	3797
   221  0000                     _OSCCON1	set	3795
   222  0000                     _ADCON1bits	set	3924
   223  0000                     _ADPREVL	set	3932
   224  0000                     _ADPREVH	set	3933
   225  0000                     _ADCON2bits	set	3925
   226  0000                     _ADPRE	set	3929
   227  0000                     _ADCON3bits	set	3926
   228  0000                     _ADRESL	set	3934
   229  0000                     _ADRESH	set	3935
   230  0000                     _ADCON0bits	set	3931
   231  0000                     _ADACQ	set	3927
   232  0000                     _ADCON0	set	3931
   233  0000                     _ADCLK	set	3922
   234  0000                     _ADACT	set	3921
   235  0000                     _ADREF	set	3923
   236  0000                     _ADCON3	set	3926
   237  0000                     _ADCON2	set	3925
   238  0000                     _ADCON1	set	3924
   239  0000                     _ADCAP	set	3928
   240  0000                     _ADPCH	set	3930
   241  0000                     _IOCCPbits	set	3863
   242  0000                     _IOCCNbits	set	3862
   243  0000                     _IOCCFbits	set	3861
   244  0000                     _SLRCONC	set	3865
   245  0000                     _SLRCONB	set	3857
   246  0000                     _SLRCONA	set	3849
   247  0000                     _ODCONC	set	3866
   248  0000                     _ODCONB	set	3858
   249  0000                     _ODCONA	set	3850
   250  0000                     _WPUC	set	3867
   251  0000                     _WPUA	set	3851
   252  0000                     _WPUB	set	3859
   253  0000                     _WPUE	set	3880
   254  0000                     _ANSELA	set	3852
   255  0000                     _ANSELB	set	3860
   256  0000                     _ANSELC	set	3868
   257  0000                     _TRISBbits	set	3976
   258  0000                     _LATBbits	set	3971
   259  0000                     _TRISCbits	set	3977
   260  0000                     _LATCbits	set	3972
   261  0000                     _LATAbits	set	3970
   262  0000                     _T3GCONbits	set	4041
   263  0000                     _T3CONbits	set	4040
   264  0000                     _T3CON	set	4040
   265  0000                     _TMR3L	set	4038
   266  0000                     _TMR3H	set	4039
   267  0000                     _T3CLK	set	4043
   268  0000                     _T3GATE	set	4042
   269  0000                     _T3GCON	set	4041
   270  0000                     _ADERRL	set	3945
   271  0000                     _ADERRH	set	3946
   272  0000                     _ADFLTRL	set	3949
   273  0000                     _ADFLTRH	set	3950
   274  0000                     _ADSTATbits	set	3936
   275  0000                     _ADACCL	set	3947
   276  0000                     _ADACCH	set	3948
   277  0000                     _ADCNT	set	3938
   278  0000                     _ADSTAT	set	3936
   279  0000                     _ADRPT	set	3937
   280  0000                     _ADSTPTH	set	3940
   281  0000                     _ADSTPTL	set	3939
   282  0000                     _ADUTHH	set	3944
   283  0000                     _ADUTHL	set	3943
   284  0000                     _ADLTHH	set	3942
   285  0000                     _ADLTHL	set	3941
   286  0000                     _TX1REG	set	3993
   287  0000                     _RC1REG	set	3992
   288  0000                     _RC1STAbits	set	3996
   289  0000                     _TX1STAbits	set	3997
   290  0000                     _SP1BRGH	set	3995
   291  0000                     _SP1BRGL	set	3994
   292  0000                     _TX1STA	set	3997
   293  0000                     _RC1STA	set	3996
   294  0000                     _BAUD1CON	set	3998
   295  0000                     _T1GCONbits	set	4047
   296  0000                     _T1CONbits	set	4046
   297  0000                     _T1CON	set	4046
   298  0000                     _TMR1L	set	4044
   299  0000                     _TMR1H	set	4045
   300  0000                     _T1CLK	set	4049
   301  0000                     _T1GATE	set	4048
   302  0000                     _T1GCON	set	4047
   303  0000                     _CCPTMRSbits	set	4013
   304  0000                     _CCPR1L	set	4009
   305  0000                     _CCPR1H	set	4010
   306  0000                     _CCP1CAP	set	4012
   307  0000                     _CCP1CON	set	4011
   308  0000                     _INTCONbits	set	4082
   309  0000                     _PR2	set	4027
   310  0000                     _TMR2	set	4026
   311  0000                     _T2CONbits	set	4028
   312  0000                     _T2RSTbits	set	4031
   313  0000                     _T2HLTbits	set	4029
   314  0000                     _T2CON	set	4028
   315  0000                     _T2TMR	set	4026
   316  0000                     _T2PR	set	4027
   317  0000                     _T2RST	set	4031
   318  0000                     _T2HLT	set	4029
   319  0000                     _T2CLKCON	set	4030
   320  0000                     _TRISC	set	3977
   321  0000                     _TRISB	set	3976
   322  0000                     _TRISA	set	3975
   323  0000                     _LATC	set	3972
   324  0000                     _LATB	set	3971
   325  0000                     _LATA	set	3970
   326                           
   327                           	psect	smallconst
   328  000800                     __psmallconst:
   329                           	opt callstack 0
   330  000800  00                 	db	0
   331  000801                     STR_2:
   332  000801  0A                 	db	10
   333  000802  2A                 	db	42
   334  000803  2A                 	db	42
   335  000804  2A                 	db	42
   336  000805  2A                 	db	42
   337  000806  2A                 	db	42
   338  000807  2A                 	db	42
   339  000808  2A                 	db	42
   340  000809  2A                 	db	42
   341  00080A  2A                 	db	42
   342  00080B  2A                 	db	42
   343  00080C  20                 	db	32
   344  00080D  4E                 	db	78	;'N'
   345  00080E  45                 	db	69	;'E'
   346  00080F  57                 	db	87	;'W'
   347  000810  20                 	db	32
   348  000811  53                 	db	83	;'S'
   349  000812  43                 	db	67	;'C'
   350  000813  41                 	db	65	;'A'
   351  000814  4E                 	db	78	;'N'
   352  000815  20                 	db	32
   353  000816  2A                 	db	42
   354  000817  2A                 	db	42
   355  000818  2A                 	db	42
   356  000819  2A                 	db	42
   357  00081A  2A                 	db	42
   358  00081B  2A                 	db	42
   359  00081C  2A                 	db	42
   360  00081D  2A                 	db	42
   361  00081E  2A                 	db	42
   362  00081F  2A                 	db	42
   363  000820  0A                 	db	10
   364  000821  00                 	db	0
   365  000822                     STR_1:
   366  000822  25                 	db	37
   367  000823  64                 	db	100	;'d'
   368  000824  0A                 	db	10
   369  000825  00                 	db	0
   370                           
   371                           ; #config settings
   372  000826  00                 	db	0	; dummy byte at the end
   373  0000                     
   374                           	psect	cinit
   375  0019B6                     __pcinit:
   376                           	opt callstack 0
   377  0019B6                     start_initialization:
   378                           	opt callstack 0
   379  0019B6                     __initialization:
   380                           	opt callstack 0
   381                           
   382                           ; Initialize objects allocated to COMRAM (5 bytes)
   383                           ; load TBLPTR registers with __pidataCOMRAM
   384  0019B6  0EE6               	movlw	low __pidataCOMRAM
   385  0019B8  6EF6               	movwf	tblptrl,c
   386  0019BA  0E1F               	movlw	high __pidataCOMRAM
   387  0019BC  6EF7               	movwf	tblptrh,c
   388  0019BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   389  0019C0  6EF8               	movwf	tblptru,c
   390  0019C2  EE00  F050         	lfsr	0,__pdataCOMRAM
   391  0019C6  EE10 F005          	lfsr	1,5
   392  0019CA                     copy_data0:
   393  0019CA  0009               	tblrd		*+
   394  0019CC  CFF5 FFEE          	movff	tablat,postinc0
   395  0019D0  50E5               	movf	postdec1,w,c
   396  0019D2  50E1               	movf	fsr1l,w,c
   397  0019D4  E1FA               	bnz	copy_data0
   398                           
   399                           ; Clear objects allocated to BIGRAM (516 bytes)
   400  0019D6  EE02  F000         	lfsr	0,__pbssBIGRAM
   401  0019DA  EE12 F004          	lfsr	1,516
   402  0019DE                     clear_0:
   403  0019DE  6AEE               	clrf	postinc0,c
   404  0019E0  50E5               	movf	postdec1,w,c
   405  0019E2  50E1               	movf	fsr1l,w,c
   406  0019E4  E1FC               	bnz	clear_0
   407  0019E6  50E2               	movf	fsr1h,w,c
   408  0019E8  E1FA               	bnz	clear_0
   409                           
   410                           ; Clear objects allocated to BANK0 (49 bytes)
   411  0019EA  EE00  F0C7         	lfsr	0,__pbssBANK0
   412  0019EE  0E31               	movlw	49
   413  0019F0                     clear_1:
   414  0019F0  6AEE               	clrf	postinc0,c
   415  0019F2  06E8               	decf	wreg,f,c
   416  0019F4  E1FD               	bnz	clear_1
   417                           
   418                           ; Clear objects allocated to COMRAM (8 bytes)
   419  0019F6  EE00  F048         	lfsr	0,__pbssCOMRAM
   420  0019FA  0E08               	movlw	8
   421  0019FC                     clear_2:
   422  0019FC  6AEE               	clrf	postinc0,c
   423  0019FE  06E8               	decf	wreg,f,c
   424  001A00  E1FD               	bnz	clear_2
   425  001A02                     end_of_initialization:
   426                           	opt callstack 0
   427  001A02                     __end_of__initialization:
   428                           	opt callstack 0
   429  001A02  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   430  001A04  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   431  001A06  0E00               	movlw	low (__Lmediumconst shr (0+16))
   432  001A08  6EF8               	movwf	tblptru,c
   433  001A0A  0100               	movlb	0
   434  001A0C  EF7B  F009         	goto	_main	;jump to C main() function
   435                           
   436                           	psect	bssCOMRAM
   437  000048                     __pbssCOMRAM:
   438                           	opt callstack 0
   439  000048                     _status:
   440                           	opt callstack 0
   441  000048                     	ds	8
   442                           
   443                           	psect	dataCOMRAM
   444  000050                     __pdataCOMRAM:
   445                           	opt callstack 0
   446  000050                     _timing_val:
   447                           	opt callstack 0
   448  000050                     	ds	2
   449  000052                     _servo_max:
   450                           	opt callstack 0
   451  000052                     	ds	1
   452  000053                     _servo_min:
   453                           	opt callstack 0
   454  000053                     	ds	1
   455  000054                     _servo_trim:
   456                           	opt callstack 0
   457  000054                     	ds	1
   458                           
   459                           	psect	bssBANK0
   460  0000C7                     __pbssBANK0:
   461                           	opt callstack 0
   462  0000C7                     _carctl:
   463                           	opt callstack 0
   464  0000C7                     	ds	6
   465  0000CD                     _nout:
   466                           	opt callstack 0
   467  0000CD                     	ds	2
   468  0000CF                     _width:
   469                           	opt callstack 0
   470  0000CF                     	ds	2
   471  0000D1                     _prec:
   472                           	opt callstack 0
   473  0000D1                     	ds	2
   474  0000D3                     _flags:
   475                           	opt callstack 0
   476  0000D3                     	ds	2
   477  0000D5                     _stateTime:
   478                           	opt callstack 0
   479  0000D5                     	ds	2
   480  0000D7                     _eusart1RxLastError:
   481                           	opt callstack 0
   482  0000D7                     	ds	1
   483  0000D8                     _dbuf:
   484                           	opt callstack 0
   485  0000D8                     	ds	32
   486                           
   487                           	psect	bssBIGRAM
   488  000200                     __pbssBIGRAM:
   489                           	opt callstack 0
   490  000200                     _myCam:
   491                           	opt callstack 0
   492  000200                     	ds	516
   493                           
   494                           	psect	cstackBANK1
   495  000100                     __pcstackBANK1:
   496                           	opt callstack 0
   497  000100                     main@cam_pixels:
   498                           	opt callstack 0
   499                           
   500                           ; 256 bytes @ 0x0
   501  000100                     	ds	256
   502                           
   503                           	psect	cstackBANK0
   504  000060                     __pcstackBANK0:
   505                           	opt callstack 0
   506  000060                     ?_strlen:
   507                           	opt callstack 0
   508  000060                     ?___awmod:
   509                           	opt callstack 0
   510  000060                     ?___aodiv:
   511                           	opt callstack 0
   512  000060                     ?___aomod:
   513                           	opt callstack 0
   514  000060                     EUSART1_Write@txData:
   515                           	opt callstack 0
   516  000060                     carcontrol_steering@steering:
   517                           	opt callstack 0
   518  000060                     carcontrol_throttle@throttle:
   519                           	opt callstack 0
   520  000060                     IOCCF2_SetInterruptHandler@InterruptHandler:
   521                           	opt callstack 0
   522  000060                     TMR2_SetInterruptHandler@InterruptHandler:
   523                           	opt callstack 0
   524  000060                     CCP1_SetCallBack@customCallBack:
   525                           	opt callstack 0
   526  000060                     TMR1_SetInterruptHandler@InterruptHandler:
   527                           	opt callstack 0
   528  000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   529                           	opt callstack 0
   530  000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   531                           	opt callstack 0
   532  000060                     EUSART1_SetErrorHandler@interruptHandler:
   533                           	opt callstack 0
   534  000060                     ADCC_SetADIInterruptHandler@InterruptHandler:
   535                           	opt callstack 0
   536  000060                     TMR3_WriteTimer@timerVal:
   537                           	opt callstack 0
   538  000060                     TMR3_SetInterruptHandler@InterruptHandler:
   539                           	opt callstack 0
   540  000060                     cam_get@pixels:
   541                           	opt callstack 0
   542  000060                     ___awmod@dividend:
   543                           	opt callstack 0
   544  000060                     strlen@s:
   545                           	opt callstack 0
   546  000060                     ___aodiv@dividend:
   547                           	opt callstack 0
   548  000060                     ___aomod@dividend:
   549                           	opt callstack 0
   550                           
   551                           ; 8 bytes @ 0x0
   552  000060                     	ds	1
   553  000061                     putch@txData:
   554                           	opt callstack 0
   555                           
   556                           ; 1 bytes @ 0x1
   557  000061                     	ds	1
   558  000062                     ??_TMR3_Initialize:
   559  000062                     ??_TMR1_Initialize:
   560  000062                     ??_cam_start:
   561  000062                     cam_get@i:
   562                           	opt callstack 0
   563  000062                     ___awmod@divisor:
   564                           	opt callstack 0
   565  000062                     fputc@c:
   566                           	opt callstack 0
   567  000062                     strlen@a:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x2
   571  000062                     	ds	2
   572  000064                     ___awmod@counter:
   573                           	opt callstack 0
   574  000064                     cam_get@i_2578:
   575                           	opt callstack 0
   576  000064                     fputc@fp:
   577                           	opt callstack 0
   578                           
   579                           ; 2 bytes @ 0x4
   580  000064                     	ds	1
   581  000065                     ___awmod@sign:
   582                           	opt callstack 0
   583                           
   584                           ; 1 bytes @ 0x5
   585  000065                     	ds	1
   586  000066                     ??_fputc:
   587                           
   588                           ; 1 bytes @ 0x6
   589  000066                     	ds	2
   590  000068                     ___aodiv@divisor:
   591                           	opt callstack 0
   592  000068                     ___aomod@divisor:
   593                           	opt callstack 0
   594                           
   595                           ; 8 bytes @ 0x8
   596  000068                     	ds	3
   597  00006B                     fputs@s:
   598                           	opt callstack 0
   599                           
   600                           ; 2 bytes @ 0xB
   601  00006B                     	ds	2
   602  00006D                     fputs@fp:
   603                           	opt callstack 0
   604                           
   605                           ; 2 bytes @ 0xD
   606  00006D                     	ds	2
   607  00006F                     fputs@c:
   608                           	opt callstack 0
   609                           
   610                           ; 1 bytes @ 0xF
   611  00006F                     	ds	1
   612  000070                     ___aodiv@counter:
   613                           	opt callstack 0
   614  000070                     ___aomod@counter:
   615                           	opt callstack 0
   616  000070                     fputs@i:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x10
   620  000070                     	ds	1
   621  000071                     ___aodiv@sign:
   622                           	opt callstack 0
   623  000071                     ___aomod@sign:
   624                           	opt callstack 0
   625                           
   626                           ; 1 bytes @ 0x11
   627  000071                     	ds	1
   628  000072                     ?_abs:
   629                           	opt callstack 0
   630  000072                     ?_pad:
   631                           	opt callstack 0
   632  000072                     pad@fp:
   633                           	opt callstack 0
   634  000072                     abs@a:
   635                           	opt callstack 0
   636  000072                     ___aodiv@quotient:
   637                           	opt callstack 0
   638                           
   639                           ; 8 bytes @ 0x12
   640  000072                     	ds	2
   641  000074                     ??_abs:
   642  000074                     pad@buf:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0x14
   646  000074                     	ds	2
   647  000076                     pad@p:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x16
   651  000076                     	ds	2
   652  000078                     ??_pad:
   653                           
   654                           ; 1 bytes @ 0x18
   655  000078                     	ds	1
   656  000079                     pad@i:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x19
   660  000079                     	ds	2
   661  00007B                     pad@w:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x1B
   665  00007B                     	ds	2
   666  00007D                     ?_dtoa:
   667                           	opt callstack 0
   668  00007D                     dtoa@fp:
   669                           	opt callstack 0
   670                           
   671                           ; 2 bytes @ 0x1D
   672  00007D                     	ds	2
   673  00007F                     dtoa@d:
   674                           	opt callstack 0
   675                           
   676                           ; 8 bytes @ 0x1F
   677  00007F                     	ds	8
   678  000087                     ??_dtoa:
   679                           
   680                           ; 1 bytes @ 0x27
   681  000087                     	ds	8
   682  00008F                     _dtoa$2626:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x2F
   686  00008F                     	ds	2
   687  000091                     dtoa@p:
   688                           	opt callstack 0
   689                           
   690                           ; 2 bytes @ 0x31
   691  000091                     	ds	2
   692  000093                     dtoa@w:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x33
   696  000093                     	ds	2
   697  000095                     dtoa@s:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x35
   701  000095                     	ds	2
   702  000097                     dtoa@n:
   703                           	opt callstack 0
   704                           
   705                           ; 8 bytes @ 0x37
   706  000097                     	ds	8
   707  00009F                     dtoa@i:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x3F
   711  00009F                     	ds	2
   712  0000A1                     ?_vfpfcnvrt:
   713                           	opt callstack 0
   714  0000A1                     vfpfcnvrt@fp:
   715                           	opt callstack 0
   716                           
   717                           ; 2 bytes @ 0x41
   718  0000A1                     	ds	2
   719  0000A3                     vfpfcnvrt@fmt:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x43
   723  0000A3                     	ds	2
   724  0000A5                     vfpfcnvrt@ap:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x45
   728  0000A5                     	ds	2
   729  0000A7                     ??_vfpfcnvrt:
   730                           
   731                           ; 1 bytes @ 0x47
   732  0000A7                     	ds	2
   733  0000A9                     vfpfcnvrt@ll:
   734                           	opt callstack 0
   735                           
   736                           ; 8 bytes @ 0x49
   737  0000A9                     	ds	8
   738  0000B1                     ?_vfprintf:
   739                           	opt callstack 0
   740  0000B1                     vfprintf@fp:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x51
   744  0000B1                     	ds	2
   745  0000B3                     vfprintf@fmt:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x53
   749  0000B3                     	ds	2
   750  0000B5                     vfprintf@ap:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x55
   754  0000B5                     	ds	2
   755  0000B7                     vfprintf@cfmt:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x57
   759  0000B7                     	ds	2
   760  0000B9                     ?_printf:
   761                           	opt callstack 0
   762  0000B9                     printf@fmt:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x59
   766  0000B9                     	ds	4
   767  0000BD                     
   768                           ; 1 bytes @ 0x5D
   769  0000BD                     	ds	2
   770  0000BF                     printf@ap:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x5F
   774  0000BF                     	ds	2
   775  0000C1                     ??_main:
   776                           
   777                           ; 1 bytes @ 0x61
   778  0000C1                     	ds	2
   779  0000C3                     main@num:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x63
   783  0000C3                     	ds	2
   784  0000C5                     main@i:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x65
   788  0000C5                     	ds	2
   789                           
   790                           	psect	cstackCOMRAM
   791  000001                     __pcstackCOMRAM:
   792                           	opt callstack 0
   793  000001                     ??_carcontrol_ISR:
   794  000001                     
   795                           ; 1 bytes @ 0x0
   796  000001                     	ds	3
   797  000004                     ??_INTERRUPT_InterruptManagerHigh:
   798                           
   799                           ; 1 bytes @ 0x3
   800  000004                     	ds	2
   801  000006                     ?___xxtofl:
   802                           	opt callstack 0
   803  000006                     TMR1_WriteTimer@timerVal:
   804                           	opt callstack 0
   805  000006                     i1IOCCF2_SetInterruptHandler@InterruptHandler:
   806                           	opt callstack 0
   807  000006                     i1TMR1_SetInterruptHandler@InterruptHandler:
   808                           	opt callstack 0
   809  000006                     i1ADCC_SetADIInterruptHandler@InterruptHandler:
   810                           	opt callstack 0
   811  000006                     i1TMR3_WriteTimer@timerVal:
   812                           	opt callstack 0
   813  000006                     i1TMR3_SetInterruptHandler@InterruptHandler:
   814                           	opt callstack 0
   815  000006                     ___xxtofl@val:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0x5
   819  000006                     	ds	2
   820  000008                     ??_adc_ready_ISR:
   821  000008                     ??_timer_ISR:
   822  000008                     
   823                           ; 1 bytes @ 0x7
   824  000008                     	ds	1
   825  000009                     
   826                           ; 1 bytes @ 0x8
   827  000009                     	ds	1
   828  00000A                     ??___xxtofl:
   829                           
   830                           ; 1 bytes @ 0x9
   831  00000A                     	ds	2
   832  00000C                     
   833                           ; 1 bytes @ 0xB
   834  00000C                     	ds	2
   835  00000E                     ___xxtofl@sign:
   836                           	opt callstack 0
   837                           
   838                           ; 1 bytes @ 0xD
   839  00000E                     	ds	1
   840  00000F                     ___xxtofl@exp:
   841                           	opt callstack 0
   842                           
   843                           ; 1 bytes @ 0xE
   844  00000F                     	ds	1
   845  000010                     ___xxtofl@arg:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0xF
   849  000010                     	ds	4
   850  000014                     ?___flmul:
   851                           	opt callstack 0
   852  000014                     ___flmul@b:
   853                           	opt callstack 0
   854                           
   855                           ; 4 bytes @ 0x13
   856  000014                     	ds	4
   857  000018                     ___flmul@a:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x17
   861  000018                     	ds	4
   862  00001C                     ??___flmul:
   863                           
   864                           ; 1 bytes @ 0x1B
   865  00001C                     	ds	4
   866  000020                     ___flmul@sign:
   867                           	opt callstack 0
   868                           
   869                           ; 1 bytes @ 0x1F
   870  000020                     	ds	1
   871  000021                     ___flmul@grs:
   872                           	opt callstack 0
   873                           
   874                           ; 4 bytes @ 0x20
   875  000021                     	ds	4
   876  000025                     ___flmul@aexp:
   877                           	opt callstack 0
   878                           
   879                           ; 1 bytes @ 0x24
   880  000025                     	ds	1
   881  000026                     ___flmul@bexp:
   882                           	opt callstack 0
   883                           
   884                           ; 1 bytes @ 0x25
   885  000026                     	ds	1
   886  000027                     ___flmul@prod:
   887                           	opt callstack 0
   888                           
   889                           ; 4 bytes @ 0x26
   890  000027                     	ds	4
   891  00002B                     ___flmul@temp:
   892                           	opt callstack 0
   893                           
   894                           ; 2 bytes @ 0x2A
   895  00002B                     	ds	2
   896  00002D                     ping_CCP1_triggered@timeOfFlight:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x2C
   900  00002D                     	ds	2
   901  00002F                     CCP1_CaptureISR@module:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x2E
   905  00002F                     	ds	2
   906  000031                     ??_INTERRUPT_InterruptManagerLow:
   907                           
   908                           ; 1 bytes @ 0x30
   909  000031                     	ds	9
   910                           
   911 ;;
   912 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   913 ;;
   914 ;; *************** function _main *****************
   915 ;; Defined at:
   916 ;;		line 52 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  i               2  101[BANK0 ] int 
   921 ;;  cam_pixels    256    0[BANK1 ] unsigned short [128]
   922 ;;  num             2   99[BANK0 ] int 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         0       0       0       0       0       0       0       0       0
   933 ;;      Locals:         0       4     256       0       0       0       0       0       0
   934 ;;      Temps:          0       2       0       0       0       0       0       0       0
   935 ;;      Totals:         0       6     256       0       0       0       0       0       0
   936 ;;Total ram usage:      262 bytes
   937 ;; Hardware stack levels required when called:   17
   938 ;; This function calls:
   939 ;;		_SYSTEM_Initialize
   940 ;;		___awmod
   941 ;;		_cam_get
   942 ;;		_cam_init
   943 ;;		_cam_start
   944 ;;		_carcontrol_init
   945 ;;		_carcontrol_steering
   946 ;;		_carcontrol_throttle
   947 ;;		_printf
   948 ;; This function is called by:
   949 ;;		Startup code after reset
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text0
   954  0012F6                     __ptext0:
   955                           	opt callstack 0
   956  0012F6                     _main:
   957                           	opt callstack 14
   958                           
   959                           ;main.c: 55:     SYSTEM_Initialize();
   960                           
   961                           ;incstack = 0
   962  0012F6  ECC3  F00E         	call	_SYSTEM_Initialize	;wreg free
   963                           
   964                           ;main.c: 68:     (INTCONbits.GIEL = 1);
   965  0012FA  8CF2               	bsf	4082,6,c	;volatile
   966                           
   967                           ;main.c: 69:     (INTCONbits.GIEH = 1);
   968  0012FC  8EF2               	bsf	4082,7,c	;volatile
   969                           
   970                           ;main.c: 70:     (INTCONbits.PEIE = 1);
   971  0012FE  8CF2               	bsf	4082,6,c	;volatile
   972                           
   973                           ;main.c: 75:     carcontrol_init();
   974  001300  ECD3  F00D         	call	_carcontrol_init	;wreg free
   975                           
   976                           ;main.c: 77:     cam_init();
   977  001304  EC07  F00E         	call	_cam_init	;wreg free
   978                           
   979                           ;main.c: 79:     carcontrol_throttle(0);
   980  001308  0E00               	movlw	0
   981  00130A  EC89  F00F         	call	_carcontrol_throttle
   982                           
   983                           ;main.c: 80:     carcontrol_steering(0);
   984  00130E  0E00               	movlw	0
   985  001310  EC20  F00E         	call	_carcontrol_steering
   986                           
   987                           ;main.c: 82:     uint16_t cam_pixels[128];;main.c: 84:     int num = 0;
   988  001314  0E00               	movlw	0
   989  001316  0100               	movlb	0	; () banked
   990  001318  6FC4               	movwf	(main@num+1)& (0+255),b
   991  00131A  0E00               	movlw	0
   992  00131C  6FC3               	movwf	main@num& (0+255),b
   993  00131E                     l3942:
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 87:     {;main.c: 88:         cam_start();
   997  00131E  EC79  F00C         	call	_cam_start	;wreg free
   998                           
   999                           ;main.c: 89:         _delay((unsigned long)((20)*(64000000/4000.0)));
  1000  001322  0E02               	movlw	2
  1001  001324  0100               	movlb	0	; () banked
  1002  001326  6FC2               	movwf	(??_main+1)& (0+255),b
  1003  001328  0EA0               	movlw	160
  1004  00132A  6FC1               	movwf	??_main& (0+255),b
  1005  00132C  0E92               	movlw	146
  1006  00132E                     u2707:
  1007  00132E  2EE8               	decfsz	wreg,f,c
  1008  001330  D7FE               	bra	u2707
  1009  001332  2FC1               	decfsz	??_main& (0+255),f,b
  1010  001334  D7FC               	bra	u2707
  1011  001336  2FC2               	decfsz	(??_main+1)& (0+255),f,b
  1012  001338  D7FA               	bra	u2707
  1013  00133A  F000               	nop	
  1014                           
  1015                           ;main.c: 90:         cam_get(cam_pixels);
  1016  00133C  0E00               	movlw	low main@cam_pixels
  1017  00133E  0100               	movlb	0	; () banked
  1018  001340  6F60               	movwf	cam_get@pixels& (0+255),b
  1019  001342  0E01               	movlw	high main@cam_pixels
  1020  001344  6F61               	movwf	(cam_get@pixels+1)& (0+255),b
  1021  001346  ECC3  F00A         	call	_cam_get	;wreg free
  1022                           
  1023                           ;main.c: 92:         if (num % 10 ==0) {
  1024  00134A  C0C3  F060         	movff	main@num,___awmod@dividend
  1025  00134E  C0C4  F061         	movff	main@num+1,___awmod@dividend+1
  1026  001352  0E00               	movlw	0
  1027  001354  0100               	movlb	0	; () banked
  1028  001356  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  1029  001358  0E0A               	movlw	10
  1030  00135A  6F62               	movwf	___awmod@divisor& (0+255),b
  1031  00135C  EC9F  F00B         	call	___awmod	;wreg free
  1032  001360  0100               	movlb	0	; () banked
  1033  001362  5160               	movf	?___awmod& (0+255),w,b
  1034  001364  1161               	iorwf	(?___awmod+1)& (0+255),w,b
  1035  001366  A4D8               	btfss	status,2,c
  1036  001368  D035               	goto	l3966
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;main.c: 93:             for (int i = 0; i < 128; i=i+2) {
  1040  00136A  0E00               	movlw	0
  1041  00136C  6FC6               	movwf	(main@i+1)& (0+255),b
  1042  00136E  0E00               	movlw	0
  1043  001370  6FC5               	movwf	main@i& (0+255),b
  1044  001372                     l3956:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;main.c: 97:                 printf("%d\n",cam_pixels[i]);
  1048  001372  0E22               	movlw	low STR_1
  1049  001374  6FB9               	movwf	printf@fmt& (0+255),b
  1050  001376  0E08               	movlw	high STR_1
  1051  001378  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  1052  00137A  90D8               	bcf	status,0,c
  1053  00137C  35C5               	rlcf	main@i& (0+255),w,b
  1054  00137E  6ED9               	movwf	fsr2l,c
  1055  001380  35C6               	rlcf	(main@i+1)& (0+255),w,b
  1056  001382  6EDA               	movwf	fsr2h,c
  1057  001384  0E00               	movlw	low main@cam_pixels
  1058  001386  26D9               	addwf	fsr2l,f,c
  1059  001388  0E01               	movlw	high main@cam_pixels
  1060  00138A  22DA               	addwfc	fsr2h,f,c
  1061  00138C  CFDE F0BB          	movff	postinc2,?_printf+2
  1062  001390  CFDD F0BC          	movff	postdec2,?_printf+3
  1063  001394  ECD8  F00E         	call	_printf	;wreg free
  1064                           
  1065                           ;main.c: 98:             }
  1066  001398  0E02               	movlw	2
  1067  00139A  0100               	movlb	0	; () banked
  1068  00139C  25C5               	addwf	main@i& (0+255),w,b
  1069  00139E  6FC5               	movwf	main@i& (0+255),b
  1070  0013A0  0E00               	movlw	0
  1071  0013A2  21C6               	addwfc	(main@i+1)& (0+255),w,b
  1072  0013A4  6FC6               	movwf	(main@i+1)& (0+255),b
  1073                           
  1074                           ; BSR set to: 0
  1075  0013A6  BFC6               	btfsc	(main@i+1)& (0+255),7,b
  1076  0013A8  D7E4               	goto	l3956
  1077  0013AA  51C6               	movf	(main@i+1)& (0+255),w,b
  1078  0013AC  E104               	bnz	u2680
  1079  0013AE  0E80               	movlw	128
  1080  0013B0  5DC5               	subwf	main@i& (0+255),w,b
  1081  0013B2  A0D8               	btfss	status,0,c
  1082  0013B4  D7DE               	goto	l3956
  1083  0013B6                     u2680:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 99:             printf("\n********** NEW SCAN **********\n");
  1087  0013B6  0E01               	movlw	low STR_2
  1088  0013B8  6FB9               	movwf	printf@fmt& (0+255),b
  1089  0013BA  0E08               	movlw	high STR_2
  1090  0013BC  6FBA               	movwf	(printf@fmt+1)& (0+255),b
  1091  0013BE  ECD8  F00E         	call	_printf	;wreg free
  1092                           
  1093                           ;main.c: 100:             _delay((unsigned long)((10)*(64000000/4000.0)));
  1094  0013C2  0ED0               	movlw	208
  1095  0013C4  0100               	movlb	0	; () banked
  1096  0013C6  6FC1               	movwf	??_main& (0+255),b
  1097  0013C8  0EC9               	movlw	201
  1098  0013CA                     u2717:
  1099  0013CA  2EE8               	decfsz	wreg,f,c
  1100  0013CC  D7FE               	bra	u2717
  1101  0013CE  2FC1               	decfsz	??_main& (0+255),f,b
  1102  0013D0  D7FC               	bra	u2717
  1103  0013D2  D000               	nop2	
  1104  0013D4                     l3966:
  1105                           
  1106                           ;main.c: 102:         num++;
  1107  0013D4  0100               	movlb	0	; () banked
  1108  0013D6  4BC3               	infsnz	main@num& (0+255),f,b
  1109  0013D8  2BC4               	incf	(main@num+1)& (0+255),f,b
  1110  0013DA  D7A1               	goto	l3942
  1111  0013DC                     __end_of_main:
  1112                           	opt callstack 0
  1113                           
  1114 ;; *************** function _printf *****************
  1115 ;; Defined at:
  1116 ;;		line 5 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1119 ;;		 -> STR_2(33), STR_1(4), 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  ap              2   95[BANK0 ] PTR void [1]
  1122 ;;		 -> ?_printf(2), 
  1123 ;;  ret             2    0        int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   89[BANK0 ] int 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1133 ;;      Params:         0       4       0       0       0       0       0       0       0
  1134 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1136 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1137 ;;Total ram usage:        8 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:   16
  1140 ;; This function calls:
  1141 ;;		_vfprintf
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text1
  1148  001DB0                     __ptext1:
  1149                           	opt callstack 0
  1150  001DB0                     _printf:
  1151                           	opt callstack 14
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;incstack = 0
  1155  001DB0  0EBB               	movlw	low (?_printf+2)
  1156  001DB2  0100               	movlb	0	; () banked
  1157  001DB4  6FBF               	movwf	printf@ap& (0+255),b
  1158  001DB6  0E00               	movlw	high (?_printf+2)
  1159  001DB8  6FC0               	movwf	(printf@ap+1)& (0+255),b
  1160                           
  1161                           ; BSR set to: 0
  1162  001DBA  0E00               	movlw	0
  1163  001DBC  6FB1               	movwf	vfprintf@fp& (0+255),b
  1164  001DBE  0E00               	movlw	0
  1165  001DC0  6FB2               	movwf	(vfprintf@fp+1)& (0+255),b
  1166  001DC2  C0B9  F0B3         	movff	printf@fmt,vfprintf@fmt
  1167  001DC6  C0BA  F0B4         	movff	printf@fmt+1,vfprintf@fmt+1
  1168  001DCA  0EBF               	movlw	low printf@ap
  1169  001DCC  6FB5               	movwf	vfprintf@ap& (0+255),b
  1170  001DCE  0E00               	movlw	high printf@ap
  1171  001DD0  6FB6               	movwf	(vfprintf@ap+1)& (0+255),b
  1172  001DD2  EC08  F00D         	call	_vfprintf	;wreg free
  1173  001DD6  0012               	return		;funcret
  1174  001DD8                     __end_of_printf:
  1175                           	opt callstack 0
  1176                           
  1177 ;; *************** function _vfprintf *****************
  1178 ;; Defined at:
  1179 ;;		line 1368 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  fp              2   81[BANK0 ] PTR struct _IO_FILE
  1182 ;;		 -> NULL(0), 
  1183 ;;  fmt             2   83[BANK0 ] PTR const unsigned char 
  1184 ;;		 -> STR_2(33), STR_1(4), 
  1185 ;;  ap              2   85[BANK0 ] PTR PTR void 
  1186 ;;		 -> printf@ap(2), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  cfmt            2   87[BANK0 ] PTR unsigned char 
  1189 ;;		 -> STR_2(33), STR_1(4), 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2   81[BANK0 ] int 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         0       6       0       0       0       0       0       0       0
  1200 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        8 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:   15
  1206 ;; This function calls:
  1207 ;;		_vfpfcnvrt
  1208 ;; This function is called by:
  1209 ;;		_printf
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text2
  1214  001A10                     __ptext2:
  1215                           	opt callstack 0
  1216  001A10                     _vfprintf:
  1217                           	opt callstack 14
  1218                           
  1219                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  1220                           
  1221                           ;incstack = 0
  1222  001A10  C0B3  F0B7         	movff	vfprintf@fmt,vfprintf@cfmt
  1223  001A14  C0B4  F0B8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1224                           
  1225                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1226  001A18  0E00               	movlw	0
  1227  001A1A  0100               	movlb	0	; () banked
  1228  001A1C  6FCE               	movwf	(_nout+1)& (0+255),b
  1229  001A1E  0E00               	movlw	0
  1230  001A20  6FCD               	movwf	_nout& (0+255),b
  1231                           
  1232                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1233  001A22  D013               	goto	l3714
  1234  001A24                     l3712:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1238  001A24  C0B1  F0A1         	movff	vfprintf@fp,vfpfcnvrt@fp
  1239  001A28  C0B2  F0A2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1240  001A2C  0EB7               	movlw	low vfprintf@cfmt
  1241  001A2E  6FA3               	movwf	vfpfcnvrt@fmt& (0+255),b
  1242  001A30  0E00               	movlw	high vfprintf@cfmt
  1243  001A32  6FA4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1244  001A34  C0B5  F0A5         	movff	vfprintf@ap,vfpfcnvrt@ap
  1245  001A38  C0B6  F0A6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1246  001A3C  ECE0  F006         	call	_vfpfcnvrt	;wreg free
  1247  001A40  0100               	movlb	0	; () banked
  1248  001A42  51A1               	movf	?_vfpfcnvrt& (0+255),w,b
  1249  001A44  27CD               	addwf	_nout& (0+255),f,b
  1250  001A46  51A2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1251  001A48  23CE               	addwfc	(_nout+1)& (0+255),f,b
  1252  001A4A                     l3714:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1256  001A4A  C0B7  FFF6         	movff	vfprintf@cfmt,tblptrl
  1257  001A4E  C0B8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1258  001A52                     	if	0	;tblptru may be non-zero
  1259  001A52                     	endif
  1260  001A52                     	if	0	;tblptru may be non-zero
  1261  001A52                     	endif
  1262  001A52  0008               	tblrd		*
  1263  001A54  50F5               	movf	tablat,w,c
  1264  001A56  0900               	iorlw	0
  1265  001A58  A4D8               	btfss	status,2,c
  1266  001A5A  D7E4               	goto	l3712
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  1270  001A5C  C0CD  F0B1         	movff	_nout,?_vfprintf
  1271  001A60  C0CE  F0B2         	movff	_nout+1,?_vfprintf+1
  1272                           
  1273                           ; BSR set to: 0
  1274  001A64  0012               	return		;funcret
  1275  001A66                     __end_of_vfprintf:
  1276                           	opt callstack 0
  1277                           
  1278 ;; *************** function _vfpfcnvrt *****************
  1279 ;; Defined at:
  1280 ;;		line 670 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  1283 ;;		 -> NULL(0), 
  1284 ;;  fmt             2   67[BANK0 ] PTR PTR unsigned char 
  1285 ;;		 -> vfprintf@cfmt(2), 
  1286 ;;  ap              2   69[BANK0 ] PTR PTR void 
  1287 ;;		 -> printf@ap(2), 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  ll              8   73[BANK0 ] long long 
  1290 ;;  llu             8    0        unsigned long long 
  1291 ;;  f               4    0        unsigned long long 
  1292 ;;  vp              3    0        PTR void 
  1293 ;;  ct              3    0        unsigned char [3]
  1294 ;;  cp              3    0        PTR unsigned char 
  1295 ;;  i               2    0        int 
  1296 ;;  done            2    0        int 
  1297 ;;  c               1    0        unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2   65[BANK0 ] int 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         0       6       0       0       0       0       0       0       0
  1308 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1309 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1310 ;;      Totals:         0      16       0       0       0       0       0       0       0
  1311 ;;Total ram usage:       16 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:   14
  1314 ;; This function calls:
  1315 ;;		_dtoa
  1316 ;;		_fputc
  1317 ;; This function is called by:
  1318 ;;		_vfprintf
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text3
  1323  000DC0                     __ptext3:
  1324                           	opt callstack 0
  1325  000DC0                     _vfpfcnvrt:
  1326                           	opt callstack 14
  1327                           
  1328                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.05/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.05/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.05/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.05/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;incstack = 0
  1332  000DC0  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1333  000DC4  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1334  000DC8  CFDE FFF6          	movff	postinc2,tblptrl
  1335  000DCC  CFDD FFF7          	movff	postdec2,tblptrh
  1336  000DD0                     	if	0	;tblptru may be non-zero
  1337  000DD0                     	endif
  1338  000DD0                     	if	0	;tblptru may be non-zero
  1339  000DD0                     	endif
  1340  000DD0  0008               	tblrd		*
  1341  000DD2  50F5               	movf	tablat,w,c
  1342  000DD4  0A25               	xorlw	37
  1343  000DD6  A4D8               	btfss	status,2,c
  1344  000DD8  D09B               	goto	l3266
  1345                           
  1346                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1347  000DDA  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1348  000DDE  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1349  000DE2  2ADE               	incf	postinc2,f,c
  1350  000DE4  0E00               	movlw	0
  1351  000DE6  22DD               	addwfc	postdec2,f,c
  1352                           
  1353                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  1354  000DE8  0E00               	movlw	0
  1355  000DEA  0100               	movlb	0	; () banked
  1356  000DEC  6FD0               	movwf	(_width+1)& (0+255),b
  1357  000DEE  0E00               	movlw	0
  1358  000DF0  6FCF               	movwf	_width& (0+255),b
  1359  000DF2  C0CF  F0D3         	movff	_width,_flags
  1360  000DF6  C0D0  F0D4         	movff	_width+1,_flags+1
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  1364  000DFA  69D1               	setf	_prec& (0+255),b
  1365  000DFC  69D2               	setf	(_prec+1)& (0+255),b
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  1369  000DFE  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1370  000E02  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1371  000E06  CFDE FFF6          	movff	postinc2,tblptrl
  1372  000E0A  CFDD FFF7          	movff	postdec2,tblptrh
  1373  000E0E                     	if	0	;tblptru may be non-zero
  1374  000E0E                     	endif
  1375  000E0E                     	if	0	;tblptru may be non-zero
  1376  000E0E                     	endif
  1377  000E0E  0008               	tblrd		*
  1378  000E10  50F5               	movf	tablat,w,c
  1379  000E12  0A64               	xorlw	100
  1380  000E14  B4D8               	btfsc	status,2,c
  1381  000E16  D00D               	goto	u1810
  1382                           
  1383                           ; BSR set to: 0
  1384  000E18  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1385  000E1C  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1386  000E20  CFDE FFF6          	movff	postinc2,tblptrl
  1387  000E24  CFDD FFF7          	movff	postdec2,tblptrh
  1388  000E28                     	if	0	;tblptru may be non-zero
  1389  000E28                     	endif
  1390  000E28                     	if	0	;tblptru may be non-zero
  1391  000E28                     	endif
  1392  000E28  0008               	tblrd		*
  1393  000E2A  50F5               	movf	tablat,w,c
  1394  000E2C  0A69               	xorlw	105
  1395  000E2E  A4D8               	btfss	status,2,c
  1396  000E30  D03F               	goto	l3250
  1397  000E32                     u1810:
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  1401  000E32  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402  000E36  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  000E3A  2ADE               	incf	postinc2,f,c
  1404  000E3C  0E00               	movlw	0
  1405  000E3E  22DD               	addwfc	postdec2,f,c
  1406                           
  1407                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1408  000E40  C0A5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1409  000E44  C0A6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1410  000E48  CFDF F0A7          	movff	indf2,??_vfpfcnvrt
  1411  000E4C  0E02               	movlw	2
  1412  000E4E  26DE               	addwf	postinc2,f,c
  1413  000E50  CFDF F0A8          	movff	indf2,??_vfpfcnvrt+1
  1414  000E54  0E00               	movlw	0
  1415  000E56  22DD               	addwfc	postdec2,f,c
  1416  000E58  C0A7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1417  000E5C  C0A8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1418  000E60  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  1419  000E64  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  1420  000E68  0E00               	movlw	0
  1421  000E6A  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1422  000E6C  0EFF               	movlw	-1
  1423  000E6E  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1424  000E70  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1425  000E72  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1426  000E74  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1427  000E76  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1428  000E78  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  1432  000E7A  C0A1  F07D         	movff	vfpfcnvrt@fp,dtoa@fp
  1433  000E7E  C0A2  F07E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1434  000E82  C0A9  F07F         	movff	vfpfcnvrt@ll,dtoa@d
  1435  000E86  C0AA  F080         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1436  000E8A  C0AB  F081         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1437  000E8E  C0AC  F082         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1438  000E92  C0AD  F083         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1439  000E96  C0AE  F084         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1440  000E9A  C0AF  F085         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1441  000E9E  C0B0  F086         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1442  000EA2  ECBD  F005         	call	_dtoa	;wreg free
  1443  000EA6  C07D  F0A1         	movff	?_dtoa,?_vfpfcnvrt
  1444  000EAA  C07E  F0A2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1445  000EAE  0012               	return	
  1446  000EB0                     l3250:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  1450  000EB0  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451  000EB4  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452  000EB8  CFDE FFF6          	movff	postinc2,tblptrl
  1453  000EBC  CFDD FFF7          	movff	postdec2,tblptrh
  1454  000EC0                     	if	0	;tblptru may be non-zero
  1455  000EC0                     	endif
  1456  000EC0                     	if	0	;tblptru may be non-zero
  1457  000EC0                     	endif
  1458  000EC0  0008               	tblrd		*
  1459  000EC2  50F5               	movf	tablat,w,c
  1460  000EC4  0A25               	xorlw	37
  1461  000EC6  A4D8               	btfss	status,2,c
  1462  000EC8  D017               	goto	l3260
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  1466  000ECA  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467  000ECE  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468  000ED2  2ADE               	incf	postinc2,f,c
  1469  000ED4  0E00               	movlw	0
  1470  000ED6  22DD               	addwfc	postdec2,f,c
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  1474  000ED8  0E00               	movlw	0
  1475  000EDA  6F63               	movwf	(fputc@c+1)& (0+255),b
  1476  000EDC  0E25               	movlw	37
  1477  000EDE  6F62               	movwf	fputc@c& (0+255),b
  1478  000EE0  C0A1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1479  000EE4  C0A2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1480  000EE8  ECD8  F00B         	call	_fputc	;wreg free
  1481  000EEC                     l3256:
  1482                           
  1483                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  1484  000EEC  0E00               	movlw	0
  1485  000EEE  0100               	movlb	0	; () banked
  1486  000EF0  6FA2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1487  000EF2  0E01               	movlw	1
  1488  000EF4  6FA1               	movwf	?_vfpfcnvrt& (0+255),b
  1489  000EF6  0012               	return	
  1490  000EF8                     l3260:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  1494  000EF8  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1495  000EFC  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1496  000F00  2ADE               	incf	postinc2,f,c
  1497  000F02  0E00               	movlw	0
  1498  000F04  22DD               	addwfc	postdec2,f,c
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  1502  000F06  0E00               	movlw	0
  1503  000F08  6FA2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1504  000F0A  0E00               	movlw	0
  1505  000F0C  6FA1               	movwf	?_vfpfcnvrt& (0+255),b
  1506  000F0E  0012               	return	
  1507  000F10                     l3266:
  1508                           
  1509                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  1510  000F10  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1511  000F14  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1512  000F18  CFDE FFF6          	movff	postinc2,tblptrl
  1513  000F1C  CFDD FFF7          	movff	postdec2,tblptrh
  1514  000F20                     	if	0	;tblptru may be non-zero
  1515  000F20                     	endif
  1516  000F20                     	if	0	;tblptru may be non-zero
  1517  000F20                     	endif
  1518  000F20  0008               	tblrd		*
  1519  000F22  50F5               	movf	tablat,w,c
  1520  000F24  0100               	movlb	0	; () banked
  1521  000F26  6F62               	movwf	fputc@c& (0+255),b
  1522  000F28  6B63               	clrf	(fputc@c+1)& (0+255),b
  1523  000F2A  C0A1  F064         	movff	vfpfcnvrt@fp,fputc@fp
  1524  000F2E  C0A2  F065         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1525  000F32  ECD8  F00B         	call	_fputc	;wreg free
  1526                           
  1527                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1528  000F36  C0A3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1529  000F3A  C0A4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1530  000F3E  2ADE               	incf	postinc2,f,c
  1531  000F40  0E00               	movlw	0
  1532  000F42  22DD               	addwfc	postdec2,f,c
  1533  000F44  D7D3               	goto	l3256
  1534  000F46                     __end_of_vfpfcnvrt:
  1535                           	opt callstack 0
  1536                           
  1537 ;; *************** function _dtoa *****************
  1538 ;; Defined at:
  1539 ;;		line 274 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  1542 ;;		 -> NULL(0), 
  1543 ;;  d               8   31[BANK0 ] long long 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  n               8   55[BANK0 ] long long 
  1546 ;;  i               2   63[BANK0 ] int 
  1547 ;;  s               2   53[BANK0 ] int 
  1548 ;;  w               2   51[BANK0 ] int 
  1549 ;;  p               2   49[BANK0 ] int 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2   29[BANK0 ] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1559 ;;      Params:         0      10       0       0       0       0       0       0       0
  1560 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1561 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1562 ;;      Totals:         0      36       0       0       0       0       0       0       0
  1563 ;;Total ram usage:       36 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:   13
  1566 ;; This function calls:
  1567 ;;		___aodiv
  1568 ;;		___aomod
  1569 ;;		_abs
  1570 ;;		_pad
  1571 ;; This function is called by:
  1572 ;;		_vfpfcnvrt
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text4
  1577  000B7A                     __ptext4:
  1578                           	opt callstack 0
  1579  000B7A                     _dtoa:
  1580                           	opt callstack 14
  1581                           
  1582                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  1583                           
  1584                           ;incstack = 0
  1585  000B7A  C07F  F097         	movff	dtoa@d,dtoa@n
  1586  000B7E  C080  F098         	movff	dtoa@d+1,dtoa@n+1
  1587  000B82  C081  F099         	movff	dtoa@d+2,dtoa@n+2
  1588  000B86  C082  F09A         	movff	dtoa@d+3,dtoa@n+3
  1589  000B8A  C083  F09B         	movff	dtoa@d+4,dtoa@n+4
  1590  000B8E  C084  F09C         	movff	dtoa@d+5,dtoa@n+5
  1591  000B92  C085  F09D         	movff	dtoa@d+6,dtoa@n+6
  1592  000B96  C086  F09E         	movff	dtoa@d+7,dtoa@n+7
  1593                           
  1594                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  1595  000B9A  0100               	movlb	0	; () banked
  1596  000B9C  AF9E               	btfss	(dtoa@n+7)& (0+255),7,b
  1597  000B9E  D002               	goto	u1640
  1598  000BA0  0E01               	movlw	1
  1599  000BA2  D001               	goto	u1650
  1600  000BA4                     u1640:
  1601  000BA4  0E00               	movlw	0
  1602  000BA6                     u1650:
  1603  000BA6  6F95               	movwf	dtoa@s& (0+255),b
  1604  000BA8  6B96               	clrf	(dtoa@s+1)& (0+255),b
  1605                           
  1606                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  1607  000BAA  5195               	movf	dtoa@s& (0+255),w,b
  1608  000BAC  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1609  000BAE  B4D8               	btfsc	status,2,c
  1610  000BB0  D010               	goto	l3142
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  1614  000BB2  1F9E               	comf	(dtoa@n+7)& (0+255),f,b
  1615  000BB4  1F9D               	comf	(dtoa@n+6)& (0+255),f,b
  1616  000BB6  1F9C               	comf	(dtoa@n+5)& (0+255),f,b
  1617  000BB8  1F9B               	comf	(dtoa@n+4)& (0+255),f,b
  1618  000BBA  1F9A               	comf	(dtoa@n+3)& (0+255),f,b
  1619  000BBC  1F99               	comf	(dtoa@n+2)& (0+255),f,b
  1620  000BBE  1F98               	comf	(dtoa@n+1)& (0+255),f,b
  1621  000BC0  6D97               	negf	dtoa@n& (0+255),b
  1622  000BC2  0E00               	movlw	0
  1623  000BC4  2398               	addwfc	(dtoa@n+1)& (0+255),f,b
  1624  000BC6  2399               	addwfc	(dtoa@n+2)& (0+255),f,b
  1625  000BC8  239A               	addwfc	(dtoa@n+3)& (0+255),f,b
  1626  000BCA  239B               	addwfc	(dtoa@n+4)& (0+255),f,b
  1627  000BCC  239C               	addwfc	(dtoa@n+5)& (0+255),f,b
  1628  000BCE  239D               	addwfc	(dtoa@n+6)& (0+255),f,b
  1629  000BD0  239E               	addwfc	(dtoa@n+7)& (0+255),f,b
  1630  000BD2                     l3142:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  1634  000BD2  AFD2               	btfss	(_prec+1)& (0+255),7,b
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  1638  000BD4  93D3               	bcf	_flags& (0+255),1,b
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  1642  000BD6  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  1643  000BD8  D005               	goto	u1680
  1644  000BDA  51D2               	movf	(_prec+1)& (0+255),w,b
  1645  000BDC  E108               	bnz	l1002
  1646  000BDE  05D1               	decf	_prec& (0+255),w,b
  1647  000BE0  B0D8               	btfsc	status,0,c
  1648  000BE2  D005               	goto	l1002
  1649  000BE4                     u1680:
  1650                           
  1651                           ; BSR set to: 0
  1652  000BE4  0E00               	movlw	0
  1653  000BE6  6F92               	movwf	(dtoa@p+1)& (0+255),b
  1654  000BE8  0E01               	movlw	1
  1655  000BEA  6F91               	movwf	dtoa@p& (0+255),b
  1656  000BEC  D004               	goto	l1004
  1657  000BEE                     l1002:
  1658                           
  1659                           ; BSR set to: 0
  1660  000BEE  C0D1  F091         	movff	_prec,dtoa@p
  1661  000BF2  C0D2  F092         	movff	_prec+1,dtoa@p+1
  1662  000BF6                     l1004:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  1666  000BF6  C0CF  F093         	movff	_width,dtoa@w
  1667  000BFA  C0D0  F094         	movff	_width+1,dtoa@w+1
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  1671  000BFE  5195               	movf	dtoa@s& (0+255),w,b
  1672  000C00  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1673  000C02  A4D8               	btfss	status,2,c
  1674  000C04  D002               	goto	u1700
  1675                           
  1676                           ; BSR set to: 0
  1677  000C06  A5D3               	btfss	_flags& (0+255),2,b
  1678  000C08  D003               	goto	l3156
  1679  000C0A                     u1700:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  1683  000C0A  0793               	decf	dtoa@w& (0+255),f,b
  1684  000C0C  A0D8               	btfss	status,0,c
  1685  000C0E  0794               	decf	(dtoa@w+1)& (0+255),f,b
  1686  000C10                     l3156:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  1690  000C10  0E00               	movlw	0
  1691  000C12  6FA0               	movwf	(dtoa@i+1)& (0+255),b
  1692  000C14  0E1F               	movlw	31
  1693  000C16  6F9F               	movwf	dtoa@i& (0+255),b
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  1697  000C18  0E00               	movlw	0
  1698  000C1A  6FF7               	movwf	(_dbuf+31)& (0+255),b
  1699                           
  1700                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1701  000C1C  D07D               	goto	l3170
  1702  000C1E                     l3160:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  1706  000C1E  079F               	decf	dtoa@i& (0+255),f,b
  1707  000C20  A0D8               	btfss	status,0,c
  1708  000C22  07A0               	decf	(dtoa@i+1)& (0+255),f,b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  1712  000C24  0ED8               	movlw	low _dbuf
  1713  000C26  259F               	addwf	dtoa@i& (0+255),w,b
  1714  000C28  6ED9               	movwf	fsr2l,c
  1715  000C2A  0E00               	movlw	high _dbuf
  1716  000C2C  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1717  000C2E  6EDA               	movwf	fsr2h,c
  1718  000C30  C097  F060         	movff	dtoa@n,___aomod@dividend
  1719  000C34  C098  F061         	movff	dtoa@n+1,___aomod@dividend+1
  1720  000C38  C099  F062         	movff	dtoa@n+2,___aomod@dividend+2
  1721  000C3C  C09A  F063         	movff	dtoa@n+3,___aomod@dividend+3
  1722  000C40  C09B  F064         	movff	dtoa@n+4,___aomod@dividend+4
  1723  000C44  C09C  F065         	movff	dtoa@n+5,___aomod@dividend+5
  1724  000C48  C09D  F066         	movff	dtoa@n+6,___aomod@dividend+6
  1725  000C4C  C09E  F067         	movff	dtoa@n+7,___aomod@dividend+7
  1726  000C50  0E0A               	movlw	10
  1727  000C52  6F68               	movwf	___aomod@divisor& (0+255),b
  1728  000C54  0E00               	movlw	0
  1729  000C56  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  1730  000C58  0E00               	movlw	0
  1731  000C5A  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  1732  000C5C  0E00               	movlw	0
  1733  000C5E  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  1734  000C60  0E00               	movlw	0
  1735  000C62  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  1736  000C64  0E00               	movlw	0
  1737  000C66  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  1738  000C68  0E00               	movlw	0
  1739  000C6A  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  1740  000C6C  0E00               	movlw	0
  1741  000C6E  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  1742  000C70  ECE8  F008         	call	___aomod	;wreg free
  1743  000C74  C060  F087         	movff	?___aomod,??_dtoa
  1744  000C78  C061  F088         	movff	?___aomod+1,??_dtoa+1
  1745  000C7C  C062  F089         	movff	?___aomod+2,??_dtoa+2
  1746  000C80  C063  F08A         	movff	?___aomod+3,??_dtoa+3
  1747  000C84  C064  F08B         	movff	?___aomod+4,??_dtoa+4
  1748  000C88  C065  F08C         	movff	?___aomod+5,??_dtoa+5
  1749  000C8C  C066  F08D         	movff	?___aomod+6,??_dtoa+6
  1750  000C90  C067  F08E         	movff	?___aomod+7,??_dtoa+7
  1751  000C94  C087  F072         	movff	??_dtoa,abs@a
  1752  000C98  C089  F073         	movff	??_dtoa+2,abs@a+1
  1753  000C9C  ECB9  F00D         	call	_abs	;wreg free
  1754  000CA0  0100               	movlb	0	; () banked
  1755  000CA2  5172               	movf	?_abs& (0+255),w,b
  1756  000CA4  0F30               	addlw	48
  1757  000CA6  6EDF               	movwf	indf2,c
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  1761  000CA8  0791               	decf	dtoa@p& (0+255),f,b
  1762  000CAA  A0D8               	btfss	status,0,c
  1763  000CAC  0792               	decf	(dtoa@p+1)& (0+255),f,b
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  1767  000CAE  0793               	decf	dtoa@w& (0+255),f,b
  1768  000CB0  A0D8               	btfss	status,0,c
  1769  000CB2  0794               	decf	(dtoa@w+1)& (0+255),f,b
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  1773  000CB4  C097  F060         	movff	dtoa@n,___aodiv@dividend
  1774  000CB8  C098  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  1775  000CBC  C099  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  1776  000CC0  C09A  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  1777  000CC4  C09B  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  1778  000CC8  C09C  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  1779  000CCC  C09D  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  1780  000CD0  C09E  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  1781  000CD4  0E0A               	movlw	10
  1782  000CD6  6F68               	movwf	___aodiv@divisor& (0+255),b
  1783  000CD8  0E00               	movlw	0
  1784  000CDA  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  1785  000CDC  0E00               	movlw	0
  1786  000CDE  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  1787  000CE0  0E00               	movlw	0
  1788  000CE2  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  1789  000CE4  0E00               	movlw	0
  1790  000CE6  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  1791  000CE8  0E00               	movlw	0
  1792  000CEA  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  1793  000CEC  0E00               	movlw	0
  1794  000CEE  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  1795  000CF0  0E00               	movlw	0
  1796  000CF2  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  1797  000CF4  ECA3  F007         	call	___aodiv	;wreg free
  1798  000CF8  C060  F097         	movff	?___aodiv,dtoa@n
  1799  000CFC  C061  F098         	movff	?___aodiv+1,dtoa@n+1
  1800  000D00  C062  F099         	movff	?___aodiv+2,dtoa@n+2
  1801  000D04  C063  F09A         	movff	?___aodiv+3,dtoa@n+3
  1802  000D08  C064  F09B         	movff	?___aodiv+4,dtoa@n+4
  1803  000D0C  C065  F09C         	movff	?___aodiv+5,dtoa@n+5
  1804  000D10  C066  F09D         	movff	?___aodiv+6,dtoa@n+6
  1805  000D14  C067  F09E         	movff	?___aodiv+7,dtoa@n+7
  1806  000D18                     l3170:
  1807                           
  1808                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1809  000D18  0100               	movlb	0	; () banked
  1810  000D1A  BFA0               	btfsc	(dtoa@i+1)& (0+255),7,b
  1811  000D1C  D01F               	goto	u1750
  1812  000D1E  51A0               	movf	(dtoa@i+1)& (0+255),w,b
  1813  000D20  E103               	bnz	u1710
  1814  000D22  059F               	decf	dtoa@i& (0+255),w,b
  1815  000D24  A0D8               	btfss	status,0,c
  1816  000D26  D01A               	goto	u1750
  1817  000D28                     u1710:
  1818                           
  1819                           ; BSR set to: 0
  1820  000D28  5197               	movf	dtoa@n& (0+255),w,b
  1821  000D2A  1198               	iorwf	(dtoa@n+1)& (0+255),w,b
  1822  000D2C  1199               	iorwf	(dtoa@n+2)& (0+255),w,b
  1823  000D2E  119A               	iorwf	(dtoa@n+3)& (0+255),w,b
  1824  000D30  119B               	iorwf	(dtoa@n+4)& (0+255),w,b
  1825  000D32  119C               	iorwf	(dtoa@n+5)& (0+255),w,b
  1826  000D34  119D               	iorwf	(dtoa@n+6)& (0+255),w,b
  1827  000D36  119E               	iorwf	(dtoa@n+7)& (0+255),w,b
  1828  000D38  A4D8               	btfss	status,2,c
  1829  000D3A  D771               	goto	l3160
  1830                           
  1831                           ; BSR set to: 0
  1832  000D3C  BF92               	btfsc	(dtoa@p+1)& (0+255),7,b
  1833  000D3E  D005               	goto	u1730
  1834  000D40  5192               	movf	(dtoa@p+1)& (0+255),w,b
  1835  000D42  E102               	bnz	u1731
  1836  000D44  0591               	decf	dtoa@p& (0+255),w,b
  1837  000D46  B0D8               	btfsc	status,0,c
  1838  000D48                     u1731:
  1839  000D48  D76A               	goto	l3160
  1840  000D4A                     u1730:
  1841                           
  1842                           ; BSR set to: 0
  1843  000D4A  BF94               	btfsc	(dtoa@w+1)& (0+255),7,b
  1844  000D4C  D007               	goto	u1750
  1845  000D4E  5194               	movf	(dtoa@w+1)& (0+255),w,b
  1846  000D50  E103               	bnz	u1740
  1847  000D52  0593               	decf	dtoa@w& (0+255),w,b
  1848  000D54  A0D8               	btfss	status,0,c
  1849  000D56  D002               	goto	u1750
  1850  000D58                     u1740:
  1851                           
  1852                           ; BSR set to: 0
  1853  000D58  B3D3               	btfsc	_flags& (0+255),1,b
  1854  000D5A  D761               	goto	l3160
  1855  000D5C                     u1750:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  1859  000D5C  5195               	movf	dtoa@s& (0+255),w,b
  1860  000D5E  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1861  000D60  A4D8               	btfss	status,2,c
  1862  000D62  D002               	goto	u1770
  1863                           
  1864                           ; BSR set to: 0
  1865  000D64  A5D3               	btfss	_flags& (0+255),2,b
  1866  000D66  D017               	goto	l3194
  1867  000D68                     u1770:
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  1871  000D68  079F               	decf	dtoa@i& (0+255),f,b
  1872  000D6A  A0D8               	btfss	status,0,c
  1873  000D6C  07A0               	decf	(dtoa@i+1)& (0+255),f,b
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  1877  000D6E  5195               	movf	dtoa@s& (0+255),w,b
  1878  000D70  1196               	iorwf	(dtoa@s+1)& (0+255),w,b
  1879  000D72  A4D8               	btfss	status,2,c
  1880  000D74  D004               	goto	l3190
  1881                           
  1882                           ; BSR set to: 0
  1883  000D76  0E00               	movlw	0
  1884  000D78  6F90               	movwf	(_dtoa$2626+1)& (0+255),b
  1885  000D7A  0E2B               	movlw	43
  1886  000D7C  D003               	goto	L1
  1887  000D7E                     l3190:
  1888                           
  1889                           ; BSR set to: 0
  1890  000D7E  0E00               	movlw	0
  1891  000D80  6F90               	movwf	(_dtoa$2626+1)& (0+255),b
  1892  000D82  0E2D               	movlw	45
  1893  000D84                     L1:
  1894  000D84  6F8F               	movwf	_dtoa$2626& (0+255),b
  1895                           
  1896                           ; BSR set to: 0
  1897  000D86  0ED8               	movlw	low _dbuf
  1898  000D88  259F               	addwf	dtoa@i& (0+255),w,b
  1899  000D8A  6ED9               	movwf	fsr2l,c
  1900  000D8C  0E00               	movlw	high _dbuf
  1901  000D8E  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1902  000D90  6EDA               	movwf	fsr2h,c
  1903  000D92  C08F  FFDF         	movff	_dtoa$2626,indf2
  1904  000D96                     l3194:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  1908  000D96  C07D  F072         	movff	dtoa@fp,pad@fp
  1909  000D9A  C07E  F073         	movff	dtoa@fp+1,pad@fp+1
  1910  000D9E  0ED8               	movlw	low _dbuf
  1911  000DA0  259F               	addwf	dtoa@i& (0+255),w,b
  1912  000DA2  6F74               	movwf	pad@buf& (0+255),b
  1913  000DA4  0E00               	movlw	high _dbuf
  1914  000DA6  21A0               	addwfc	(dtoa@i+1)& (0+255),w,b
  1915  000DA8  6F75               	movwf	(pad@buf+1)& (0+255),b
  1916  000DAA  C093  F076         	movff	dtoa@w,pad@p
  1917  000DAE  C094  F077         	movff	dtoa@w+1,pad@p+1
  1918  000DB2  EC15  F00B         	call	_pad	;wreg free
  1919  000DB6  C072  F07D         	movff	?_pad,?_dtoa
  1920  000DBA  C073  F07E         	movff	?_pad+1,?_dtoa+1
  1921  000DBE  0012               	return		;funcret
  1922  000DC0                     __end_of_dtoa:
  1923                           	opt callstack 0
  1924                           
  1925 ;; *************** function _pad *****************
  1926 ;; Defined at:
  1927 ;;		line 72 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  1930 ;;		 -> NULL(0), 
  1931 ;;  buf             2   20[BANK0 ] PTR unsigned char 
  1932 ;;		 -> dbuf(32), 
  1933 ;;  p               2   22[BANK0 ] int 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  w               2   27[BANK0 ] int 
  1936 ;;  i               2   25[BANK0 ] int 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2   18[BANK0 ] int 
  1939 ;; Registers used:
  1940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1946 ;;      Params:         0       6       0       0       0       0       0       0       0
  1947 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1948 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1949 ;;      Totals:         0      11       0       0       0       0       0       0       0
  1950 ;;Total ram usage:       11 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:   12
  1953 ;; This function calls:
  1954 ;;		_fputc
  1955 ;;		_fputs
  1956 ;;		_strlen
  1957 ;; This function is called by:
  1958 ;;		_dtoa
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text5
  1963  00162A                     __ptext5:
  1964                           	opt callstack 0
  1965  00162A                     _pad:
  1966                           	opt callstack 14
  1967                           
  1968                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.05/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  1969                           
  1970                           ;incstack = 0
  1971  00162A  0100               	movlb	0	; () banked
  1972  00162C  A1D3               	btfss	_flags& (0+255),0,b
  1973  00162E  D00A               	goto	l3020
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  1977  001630  C074  F06B         	movff	pad@buf,fputs@s
  1978  001634  C075  F06C         	movff	pad@buf+1,fputs@s+1
  1979  001638  C072  F06D         	movff	pad@fp,fputs@fp
  1980  00163C  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  1981  001640  EC9B  F00D         	call	_fputs	;wreg free
  1982  001644                     l3020:
  1983                           
  1984                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  1985  001644  0100               	movlb	0	; () banked
  1986  001646  BF77               	btfsc	(pad@p+1)& (0+255),7,b
  1987  001648  D005               	goto	l3024
  1988                           
  1989                           ; BSR set to: 0
  1990  00164A  C076  F07B         	movff	pad@p,pad@w
  1991  00164E  C077  F07C         	movff	pad@p+1,pad@w+1
  1992  001652  D004               	goto	l991
  1993  001654                     l3024:
  1994                           
  1995                           ; BSR set to: 0
  1996  001654  0E00               	movlw	0
  1997  001656  6F7C               	movwf	(pad@w+1)& (0+255),b
  1998  001658  0E00               	movlw	0
  1999  00165A  6F7B               	movwf	pad@w& (0+255),b
  2000  00165C                     l991:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  2004  00165C  0E00               	movlw	0
  2005  00165E  6F7A               	movwf	(pad@i+1)& (0+255),b
  2006  001660  0E00               	movlw	0
  2007  001662  6F79               	movwf	pad@i& (0+255),b
  2008                           
  2009                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  2010  001664  D00D               	goto	l3030
  2011  001666                     l3026:
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  2015  001666  0E00               	movlw	0
  2016  001668  6F63               	movwf	(fputc@c+1)& (0+255),b
  2017  00166A  0E20               	movlw	32
  2018  00166C  6F62               	movwf	fputc@c& (0+255),b
  2019  00166E  C072  F064         	movff	pad@fp,fputc@fp
  2020  001672  C073  F065         	movff	pad@fp+1,fputc@fp+1
  2021  001676  ECD8  F00B         	call	_fputc	;wreg free
  2022                           
  2023                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  2024  00167A  0100               	movlb	0	; () banked
  2025  00167C  4B79               	infsnz	pad@i& (0+255),f,b
  2026  00167E  2B7A               	incf	(pad@i+1)& (0+255),f,b
  2027  001680                     l3030:
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  2031  001680  517B               	movf	pad@w& (0+255),w,b
  2032  001682  5D79               	subwf	pad@i& (0+255),w,b
  2033  001684  517A               	movf	(pad@i+1)& (0+255),w,b
  2034  001686  0A80               	xorlw	128
  2035  001688  6F78               	movwf	??_pad& (0+255),b
  2036  00168A  517C               	movf	(pad@w+1)& (0+255),w,b
  2037  00168C  0A80               	xorlw	128
  2038  00168E  5978               	subwfb	??_pad& (0+255),w,b
  2039  001690  A0D8               	btfss	status,0,c
  2040  001692  D7E9               	goto	l3026
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  2044  001694  B1D3               	btfsc	_flags& (0+255),0,b
  2045  001696  D00A               	goto	l3034
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  2049  001698  C074  F06B         	movff	pad@buf,fputs@s
  2050  00169C  C075  F06C         	movff	pad@buf+1,fputs@s+1
  2051  0016A0  C072  F06D         	movff	pad@fp,fputs@fp
  2052  0016A4  C073  F06E         	movff	pad@fp+1,fputs@fp+1
  2053  0016A8  EC9B  F00D         	call	_fputs	;wreg free
  2054  0016AC                     l3034:
  2055                           
  2056                           ;/Applications/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  2057  0016AC  C074  F060         	movff	pad@buf,strlen@s
  2058  0016B0  C075  F061         	movff	pad@buf+1,strlen@s+1
  2059  0016B4  EC68  F00E         	call	_strlen	;wreg free
  2060  0016B8  0100               	movlb	0	; () banked
  2061  0016BA  517B               	movf	pad@w& (0+255),w,b
  2062  0016BC  2560               	addwf	?_strlen& (0+255),w,b
  2063  0016BE  6F72               	movwf	?_pad& (0+255),b
  2064  0016C0  517C               	movf	(pad@w+1)& (0+255),w,b
  2065  0016C2  2161               	addwfc	(?_strlen+1)& (0+255),w,b
  2066  0016C4  6F73               	movwf	(?_pad+1)& (0+255),b
  2067                           
  2068                           ; BSR set to: 0
  2069  0016C6  0012               	return		;funcret
  2070  0016C8                     __end_of_pad:
  2071                           	opt callstack 0
  2072                           
  2073 ;; *************** function _strlen *****************
  2074 ;; Defined at:
  2075 ;;		line 12 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2078 ;;		 -> dbuf(32), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  a               2    2[BANK0 ] PTR const unsigned char 
  2081 ;;		 -> dbuf(32), 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  2    0[BANK0 ] unsigned int 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         0       2       0       0       0       0       0       0       0
  2092 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2094 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        4 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    8
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_pad
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text6
  2106  001CD0                     __ptext6:
  2107                           	opt callstack 0
  2108  001CD0                     _strlen:
  2109                           	opt callstack 17
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;incstack = 0
  2113  001CD0  C060  F062         	movff	strlen@s,strlen@a
  2114  001CD4  C061  F063         	movff	strlen@s+1,strlen@a+1
  2115  001CD8  D003               	goto	l3010
  2116  001CDA                     l3008:
  2117  001CDA  0100               	movlb	0	; () banked
  2118  001CDC  4B60               	infsnz	strlen@s& (0+255),f,b
  2119  001CDE  2B61               	incf	(strlen@s+1)& (0+255),f,b
  2120  001CE0                     l3010:
  2121  001CE0  C060  FFD9         	movff	strlen@s,fsr2l
  2122  001CE4  C061  FFDA         	movff	strlen@s+1,fsr2h
  2123  001CE8  50DF               	movf	indf2,w,c
  2124  001CEA  A4D8               	btfss	status,2,c
  2125  001CEC  D7F6               	goto	l3008
  2126  001CEE  0100               	movlb	0	; () banked
  2127  001CF0  5162               	movf	strlen@a& (0+255),w,b
  2128  001CF2  5D60               	subwf	strlen@s& (0+255),w,b
  2129  001CF4  6F60               	movwf	?_strlen& (0+255),b
  2130  001CF6  5163               	movf	(strlen@a+1)& (0+255),w,b
  2131  001CF8  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  2132  001CFA  6F61               	movwf	(?_strlen+1)& (0+255),b
  2133                           
  2134                           ; BSR set to: 0
  2135  001CFC  0012               	return		;funcret
  2136  001CFE                     __end_of_strlen:
  2137                           	opt callstack 0
  2138                           
  2139 ;; *************** function _fputs *****************
  2140 ;; Defined at:
  2141 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  s               2   11[BANK0 ] PTR const unsigned char 
  2144 ;;		 -> dbuf(32), 
  2145 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  2146 ;;		 -> NULL(0), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  i               2   16[BANK0 ] int 
  2149 ;;  c               1   15[BANK0 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  2   11[BANK0 ] int 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2159 ;;      Params:         0       4       0       0       0       0       0       0       0
  2160 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         0       7       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        7 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:   11
  2166 ;; This function calls:
  2167 ;;		_fputc
  2168 ;; This function is called by:
  2169 ;;		_pad
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text7
  2174  001B36                     __ptext7:
  2175                           	opt callstack 0
  2176  001B36                     _fputs:
  2177                           	opt callstack 14
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;incstack = 0
  2181  001B36  0E00               	movlw	0
  2182  001B38  0100               	movlb	0	; () banked
  2183  001B3A  6F71               	movwf	(fputs@i+1)& (0+255),b
  2184  001B3C  0E00               	movlw	0
  2185  001B3E  6F70               	movwf	fputs@i& (0+255),b
  2186  001B40  D00C               	goto	l3004
  2187  001B42                     l3000:
  2188                           
  2189                           ; BSR set to: 0
  2190  001B42  C06F  F062         	movff	fputs@c,fputc@c
  2191  001B46  6B63               	clrf	(fputc@c+1)& (0+255),b
  2192  001B48  C06D  F064         	movff	fputs@fp,fputc@fp
  2193  001B4C  C06E  F065         	movff	fputs@fp+1,fputc@fp+1
  2194  001B50  ECD8  F00B         	call	_fputc	;wreg free
  2195  001B54  0100               	movlb	0	; () banked
  2196  001B56  4B70               	infsnz	fputs@i& (0+255),f,b
  2197  001B58  2B71               	incf	(fputs@i+1)& (0+255),f,b
  2198  001B5A                     l3004:
  2199                           
  2200                           ; BSR set to: 0
  2201  001B5A  5170               	movf	fputs@i& (0+255),w,b
  2202  001B5C  256B               	addwf	fputs@s& (0+255),w,b
  2203  001B5E  6ED9               	movwf	fsr2l,c
  2204  001B60  5171               	movf	(fputs@i+1)& (0+255),w,b
  2205  001B62  216C               	addwfc	(fputs@s+1)& (0+255),w,b
  2206  001B64  6EDA               	movwf	fsr2h,c
  2207  001B66  50DF               	movf	indf2,w,c
  2208  001B68  6F6F               	movwf	fputs@c& (0+255),b
  2209  001B6A  516F               	movf	fputs@c& (0+255),w,b
  2210  001B6C  B4D8               	btfsc	status,2,c
  2211  001B6E  0012               	return	
  2212  001B70  D7E8               	goto	l3000
  2213  001B72                     __end_of_fputs:
  2214                           	opt callstack 0
  2215                           
  2216 ;; *************** function _fputc *****************
  2217 ;; Defined at:
  2218 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  c               2    2[BANK0 ] int 
  2221 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  2222 ;;		 -> NULL(0), 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2    2[BANK0 ] int 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2234 ;;      Params:         0       4       0       0       0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2236 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2237 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2238 ;;Total ram usage:        9 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:   10
  2241 ;; This function calls:
  2242 ;;		_putch
  2243 ;; This function is called by:
  2244 ;;		_pad
  2245 ;;		_vfpfcnvrt
  2246 ;;		_fputs
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text8
  2251  0017B0                     __ptext8:
  2252                           	opt callstack 0
  2253  0017B0                     _fputc:
  2254                           	opt callstack 17
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;incstack = 0
  2258  0017B0  0100               	movlb	0	; () banked
  2259  0017B2  5164               	movf	fputc@fp& (0+255),w,b
  2260  0017B4  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  2261  0017B6  B4D8               	btfsc	status,2,c
  2262  0017B8  D004               	goto	u1400
  2263                           
  2264                           ; BSR set to: 0
  2265  0017BA  5164               	movf	fputc@fp& (0+255),w,b
  2266  0017BC  1165               	iorwf	(fputc@fp+1)& (0+255),w,b
  2267  0017BE  A4D8               	btfss	status,2,c
  2268  0017C0  D004               	goto	l2990
  2269  0017C2                     u1400:
  2270                           
  2271                           ; BSR set to: 0
  2272  0017C2  5162               	movf	fputc@c& (0+255),w,b
  2273  0017C4  ECA5  F00F         	call	_putch
  2274  0017C8  0012               	return	
  2275  0017CA                     l2990:
  2276                           
  2277                           ; BSR set to: 0
  2278  0017CA  EE20 F004          	lfsr	2,4
  2279  0017CE  5164               	movf	fputc@fp& (0+255),w,b
  2280  0017D0  26D9               	addwf	fsr2l,f,c
  2281  0017D2  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2282  0017D4  22DA               	addwfc	fsr2h,f,c
  2283  0017D6  50DE               	movf	postinc2,w,c
  2284  0017D8  10DE               	iorwf	postinc2,w,c
  2285  0017DA  B4D8               	btfsc	status,2,c
  2286  0017DC  D016               	goto	u1420
  2287                           
  2288                           ; BSR set to: 0
  2289  0017DE  EE20 F004          	lfsr	2,4
  2290  0017E2  5164               	movf	fputc@fp& (0+255),w,b
  2291  0017E4  26D9               	addwf	fsr2l,f,c
  2292  0017E6  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2293  0017E8  22DA               	addwfc	fsr2h,f,c
  2294  0017EA  EE10 F002          	lfsr	1,2
  2295  0017EE  5164               	movf	fputc@fp& (0+255),w,b
  2296  0017F0  26E1               	addwf	fsr1l,f,c
  2297  0017F2  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2298  0017F4  22E2               	addwfc	fsr1h,f,c
  2299  0017F6  50DE               	movf	postinc2,w,c
  2300  0017F8  5CE6               	subwf	postinc1,w,c
  2301  0017FA  50E6               	movf	postinc1,w,c
  2302  0017FC  0A80               	xorlw	128
  2303  0017FE  6F6A               	movwf	(??_fputc+4)& (0+255),b
  2304  001800  50DE               	movf	postinc2,w,c
  2305  001802  0A80               	xorlw	128
  2306  001804  596A               	subwfb	(??_fputc+4)& (0+255),w,b
  2307  001806  B0D8               	btfsc	status,0,c
  2308  001808  0012               	return	
  2309  00180A                     u1420:
  2310                           
  2311                           ; BSR set to: 0
  2312  00180A  EE20 F002          	lfsr	2,2
  2313  00180E  5164               	movf	fputc@fp& (0+255),w,b
  2314  001810  26D9               	addwf	fsr2l,f,c
  2315  001812  5165               	movf	(fputc@fp+1)& (0+255),w,b
  2316  001814  22DA               	addwfc	fsr2h,f,c
  2317  001816  2ADE               	incf	postinc2,f,c
  2318  001818  0E00               	movlw	0
  2319  00181A  22DD               	addwfc	postdec2,f,c
  2320  00181C  0012               	return		;funcret
  2321  00181E                     __end_of_fputc:
  2322                           	opt callstack 0
  2323                           
  2324 ;; *************** function _putch *****************
  2325 ;; Defined at:
  2326 ;;		line 145 in file "mcc_generated_files/eusart1.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  txData          1    wreg     unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  txData          1    1[BANK0 ] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0
  2341 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2343 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2344 ;;Total ram usage:        1 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    9
  2347 ;; This function calls:
  2348 ;;		_EUSART1_Write
  2349 ;; This function is called by:
  2350 ;;		_fputc
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text9
  2355  001F4A                     __ptext9:
  2356                           	opt callstack 0
  2357  001F4A                     _putch:
  2358                           	opt callstack 17
  2359                           
  2360                           ;incstack = 0
  2361                           ;putch@txData stored from wreg
  2362  001F4A  0100               	movlb	0	; () banked
  2363  001F4C  6F61               	movwf	putch@txData& (0+255),b
  2364                           
  2365                           ;mcc_generated_files/eusart1.c: 145: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 146: {;mcc_generated_files/eusart1.c: 147:     EUSART1_Write(txData);
  2366  001F4E  0100               	movlb	0	; () banked
  2367  001F50  5161               	movf	putch@txData& (0+255),w,b
  2368  001F52  EC9D  F00F         	call	_EUSART1_Write
  2369  001F56  0012               	return		;funcret
  2370  001F58                     __end_of_putch:
  2371                           	opt callstack 0
  2372                           
  2373 ;; *************** function _EUSART1_Write *****************
  2374 ;; Defined at:
  2375 ;;		line 131 in file "mcc_generated_files/eusart1.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  txData          1    wreg     unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  txData          1    0[BANK0 ] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        1 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    8
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_putch
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text10
  2404  001F3A                     __ptext10:
  2405                           	opt callstack 0
  2406  001F3A                     _EUSART1_Write:
  2407                           	opt callstack 17
  2408                           
  2409                           ;incstack = 0
  2410                           ;EUSART1_Write@txData stored from wreg
  2411  001F3A  0100               	movlb	0	; () banked
  2412  001F3C  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  2413  001F3E                     
  2414                           ;mcc_generated_files/eusart1.c: 133:     while(0 == PIR3bits.TX1IF)
  2415                           
  2416                           ;mcc_generated_files/eusart1.c: 134:     {;mcc_generated_files/eusart1.c: 135:     }
  2417  001F3E  010E               	movlb	14	; () banked
  2418  001F40  A9C8               	btfss	200,4,b	;volatile
  2419  001F42  D7FD               	goto	l2978
  2420                           
  2421                           ; BSR set to: 14
  2422                           ;mcc_generated_files/eusart1.c: 137:     TX1REG = txData;
  2423  001F44  C060  FF99         	movff	EUSART1_Write@txData,3993	;volatile
  2424                           
  2425                           ; BSR set to: 14
  2426  001F48  0012               	return		;funcret
  2427  001F4A                     __end_of_EUSART1_Write:
  2428                           	opt callstack 0
  2429                           
  2430 ;; *************** function _abs *****************
  2431 ;; Defined at:
  2432 ;;		line 1 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  a               2   18[BANK0 ] int 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2   18[BANK0 ] int 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2446 ;;      Params:         0       2       0       0       0       0       0       0       0
  2447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2448 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2449 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2450 ;;Total ram usage:        4 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    8
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_dtoa
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text11
  2461  001B72                     __ptext11:
  2462                           	opt callstack 0
  2463  001B72                     _abs:
  2464                           	opt callstack 18
  2465                           
  2466                           ; BSR set to: 14
  2467                           ;incstack = 0
  2468  001B72  0100               	movlb	0	; () banked
  2469  001B74  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  2470  001B76  D005               	goto	u1490
  2471  001B78  5173               	movf	(abs@a+1)& (0+255),w,b
  2472  001B7A  E110               	bnz	l1714
  2473  001B7C  0572               	decf	abs@a& (0+255),w,b
  2474  001B7E  B0D8               	btfsc	status,0,c
  2475  001B80  D00D               	goto	l1714
  2476  001B82                     u1490:
  2477                           
  2478                           ; BSR set to: 0
  2479  001B82  C072  F074         	movff	abs@a,??_abs
  2480  001B86  C073  F075         	movff	abs@a+1,??_abs+1
  2481  001B8A  1F74               	comf	??_abs& (0+255),f,b
  2482  001B8C  1F75               	comf	(??_abs+1)& (0+255),f,b
  2483  001B8E  4B74               	infsnz	??_abs& (0+255),f,b
  2484  001B90  2B75               	incf	(??_abs+1)& (0+255),f,b
  2485  001B92  C074  F072         	movff	??_abs,?_abs
  2486  001B96  C075  F073         	movff	??_abs+1,?_abs+1
  2487  001B9A  0012               	return	
  2488  001B9C                     l1714:
  2489                           
  2490                           ; BSR set to: 0
  2491  001B9C  C072  F072         	movff	abs@a,?_abs
  2492  001BA0  C073  F073         	movff	abs@a+1,?_abs+1
  2493                           
  2494                           ; BSR set to: 0
  2495  001BA4  0012               	return		;funcret
  2496  001BA6                     __end_of_abs:
  2497                           	opt callstack 0
  2498                           
  2499 ;; *************** function ___aomod *****************
  2500 ;; Defined at:
  2501 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  dividend        8    0[BANK0 ] long long 
  2504 ;;  divisor         8    8[BANK0 ] long long 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  sign            1   17[BANK0 ] unsigned char 
  2507 ;;  counter         1   16[BANK0 ] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  8    0[BANK0 ] long long 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2517 ;;      Params:         0      16       0       0       0       0       0       0       0
  2518 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2520 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2521 ;;Total ram usage:       18 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    8
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_dtoa
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text12
  2532  0011D0                     __ptext12:
  2533                           	opt callstack 0
  2534  0011D0                     ___aomod:
  2535                           	opt callstack 18
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;incstack = 0
  2539  0011D0  0E00               	movlw	0
  2540  0011D2  0100               	movlb	0	; () banked
  2541  0011D4  6F71               	movwf	___aomod@sign& (0+255),b
  2542                           
  2543                           ; BSR set to: 0
  2544  0011D6  AF67               	btfss	(___aomod@dividend+7)& (0+255),7,b
  2545  0011D8  D012               	goto	l3094
  2546                           
  2547                           ; BSR set to: 0
  2548  0011DA  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  2549  0011DC  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  2550  0011DE  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  2551  0011E0  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  2552  0011E2  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  2553  0011E4  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  2554  0011E6  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  2555  0011E8  6D60               	negf	___aomod@dividend& (0+255),b
  2556  0011EA  0E00               	movlw	0
  2557  0011EC  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2558  0011EE  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2559  0011F0  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2560  0011F2  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2561  0011F4  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2562  0011F6  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2563  0011F8  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2564                           
  2565                           ; BSR set to: 0
  2566  0011FA  0E01               	movlw	1
  2567  0011FC  6F71               	movwf	___aomod@sign& (0+255),b
  2568  0011FE                     l3094:
  2569                           
  2570                           ; BSR set to: 0
  2571  0011FE  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2572  001200  D010               	goto	l3098
  2573                           
  2574                           ; BSR set to: 0
  2575  001202  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  2576  001204  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  2577  001206  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  2578  001208  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  2579  00120A  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  2580  00120C  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  2581  00120E  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  2582  001210  6D68               	negf	___aomod@divisor& (0+255),b
  2583  001212  0E00               	movlw	0
  2584  001214  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2585  001216  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2586  001218  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2587  00121A  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2588  00121C  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2589  00121E  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2590  001220  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2591  001222                     l3098:
  2592                           
  2593                           ; BSR set to: 0
  2594  001222  5168               	movf	___aomod@divisor& (0+255),w,b
  2595  001224  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2596  001226  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2597  001228  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2598  00122A  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2599  00122C  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2600  00122E  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2601  001230  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2602  001232  B4D8               	btfsc	status,2,c
  2603  001234  D03C               	goto	l3114
  2604                           
  2605                           ; BSR set to: 0
  2606  001236  0E01               	movlw	1
  2607  001238  6F70               	movwf	___aomod@counter& (0+255),b
  2608  00123A  D00A               	goto	l3104
  2609  00123C                     l3102:
  2610                           
  2611                           ; BSR set to: 0
  2612  00123C  90D8               	bcf	status,0,c
  2613  00123E  3768               	rlcf	___aomod@divisor& (0+255),f,b
  2614  001240  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2615  001242  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2616  001244  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2617  001246  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2618  001248  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2619  00124A  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2620  00124C  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2621  00124E  2B70               	incf	___aomod@counter& (0+255),f,b
  2622  001250                     l3104:
  2623                           
  2624                           ; BSR set to: 0
  2625  001250  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2626  001252  D7F4               	goto	l3102
  2627  001254                     u1600:
  2628                           
  2629                           ; BSR set to: 0
  2630  001254  5168               	movf	___aomod@divisor& (0+255),w,b
  2631  001256  5D60               	subwf	___aomod@dividend& (0+255),w,b
  2632  001258  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  2633  00125A  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2634  00125C  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2635  00125E  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2636  001260  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2637  001262  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2638  001264  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2639  001266  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2640  001268  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2641  00126A  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2642  00126C  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2643  00126E  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2644  001270  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2645  001272  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2646  001274  A0D8               	btfss	status,0,c
  2647  001276  D010               	goto	l3110
  2648                           
  2649                           ; BSR set to: 0
  2650  001278  5168               	movf	___aomod@divisor& (0+255),w,b
  2651  00127A  5F60               	subwf	___aomod@dividend& (0+255),f,b
  2652  00127C  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  2653  00127E  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2654  001280  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  2655  001282  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2656  001284  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  2657  001286  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2658  001288  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  2659  00128A  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2660  00128C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  2661  00128E  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2662  001290  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  2663  001292  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2664  001294  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  2665  001296  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2666  001298                     l3110:
  2667                           
  2668                           ; BSR set to: 0
  2669  001298  90D8               	bcf	status,0,c
  2670  00129A  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2671  00129C  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2672  00129E  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2673  0012A0  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2674  0012A2  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2675  0012A4  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2676  0012A6  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2677  0012A8  3368               	rrcf	___aomod@divisor& (0+255),f,b
  2678                           
  2679                           ; BSR set to: 0
  2680  0012AA  2F70               	decfsz	___aomod@counter& (0+255),f,b
  2681  0012AC  D7D3               	goto	u1600
  2682  0012AE                     l3114:
  2683                           
  2684                           ; BSR set to: 0
  2685  0012AE  5171               	movf	___aomod@sign& (0+255),w,b
  2686  0012B0  B4D8               	btfsc	status,2,c
  2687  0012B2  D010               	goto	l3118
  2688                           
  2689                           ; BSR set to: 0
  2690  0012B4  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  2691  0012B6  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  2692  0012B8  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  2693  0012BA  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  2694  0012BC  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  2695  0012BE  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  2696  0012C0  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  2697  0012C2  6D60               	negf	___aomod@dividend& (0+255),b
  2698  0012C4  0E00               	movlw	0
  2699  0012C6  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2700  0012C8  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2701  0012CA  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2702  0012CC  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2703  0012CE  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2704  0012D0  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2705  0012D2  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2706  0012D4                     l3118:
  2707                           
  2708                           ; BSR set to: 0
  2709  0012D4  C060  F060         	movff	___aomod@dividend,?___aomod
  2710  0012D8  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  2711  0012DC  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  2712  0012E0  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  2713  0012E4  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  2714  0012E8  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  2715  0012EC  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  2716  0012F0  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  2717                           
  2718                           ; BSR set to: 0
  2719  0012F4  0012               	return		;funcret
  2720  0012F6                     __end_of___aomod:
  2721                           	opt callstack 0
  2722                           
  2723 ;; *************** function ___aodiv *****************
  2724 ;; Defined at:
  2725 ;;		line 9 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  dividend        8    0[BANK0 ] long long 
  2728 ;;  divisor         8    8[BANK0 ] long long 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  quotient        8   18[BANK0 ] long long 
  2731 ;;  sign            1   17[BANK0 ] unsigned char 
  2732 ;;  counter         1   16[BANK0 ] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  8    0[BANK0 ] long long 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2742 ;;      Params:         0      16       0       0       0       0       0       0       0
  2743 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2745 ;;      Totals:         0      26       0       0       0       0       0       0       0
  2746 ;;Total ram usage:       26 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    8
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_dtoa
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text13
  2757  000F46                     __ptext13:
  2758                           	opt callstack 0
  2759  000F46                     ___aodiv:
  2760                           	opt callstack 18
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;incstack = 0
  2764  000F46  0E00               	movlw	0
  2765  000F48  0100               	movlb	0	; () banked
  2766  000F4A  6F71               	movwf	___aodiv@sign& (0+255),b
  2767                           
  2768                           ; BSR set to: 0
  2769  000F4C  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2770  000F4E  D012               	goto	l3050
  2771                           
  2772                           ; BSR set to: 0
  2773  000F50  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  2774  000F52  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  2775  000F54  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  2776  000F56  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  2777  000F58  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  2778  000F5A  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  2779  000F5C  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  2780  000F5E  6D68               	negf	___aodiv@divisor& (0+255),b
  2781  000F60  0E00               	movlw	0
  2782  000F62  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  2783  000F64  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  2784  000F66  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  2785  000F68  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  2786  000F6A  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  2787  000F6C  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  2788  000F6E  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  2789                           
  2790                           ; BSR set to: 0
  2791  000F70  0E01               	movlw	1
  2792  000F72  6F71               	movwf	___aodiv@sign& (0+255),b
  2793  000F74                     l3050:
  2794                           
  2795                           ; BSR set to: 0
  2796  000F74  AF67               	btfss	(___aodiv@dividend+7)& (0+255),7,b
  2797  000F76  D012               	goto	l3056
  2798                           
  2799                           ; BSR set to: 0
  2800  000F78  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  2801  000F7A  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  2802  000F7C  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  2803  000F7E  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  2804  000F80  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  2805  000F82  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  2806  000F84  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  2807  000F86  6D60               	negf	___aodiv@dividend& (0+255),b
  2808  000F88  0E00               	movlw	0
  2809  000F8A  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  2810  000F8C  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  2811  000F8E  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  2812  000F90  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  2813  000F92  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  2814  000F94  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  2815  000F96  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  2816                           
  2817                           ; BSR set to: 0
  2818  000F98  0E01               	movlw	1
  2819  000F9A  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  2820  000F9C                     l3056:
  2821                           
  2822                           ; BSR set to: 0
  2823  000F9C  EE20  F072         	lfsr	2,___aodiv@quotient
  2824  000FA0  0E07               	movlw	7
  2825  000FA2                     u1521:
  2826  000FA2  6ADE               	clrf	postinc2,c
  2827  000FA4  06E8               	decf	wreg,f,c
  2828  000FA6  E2FD               	bc	u1521
  2829                           
  2830                           ; BSR set to: 0
  2831  000FA8  5168               	movf	___aodiv@divisor& (0+255),w,b
  2832  000FAA  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  2833  000FAC  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  2834  000FAE  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  2835  000FB0  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  2836  000FB2  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  2837  000FB4  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  2838  000FB6  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  2839  000FB8  B4D8               	btfsc	status,2,c
  2840  000FBA  D046               	goto	l3078
  2841                           
  2842                           ; BSR set to: 0
  2843  000FBC  0E01               	movlw	1
  2844  000FBE  6F70               	movwf	___aodiv@counter& (0+255),b
  2845  000FC0  D00A               	goto	l3064
  2846  000FC2                     l3062:
  2847                           
  2848                           ; BSR set to: 0
  2849  000FC2  90D8               	bcf	status,0,c
  2850  000FC4  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  2851  000FC6  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  2852  000FC8  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  2853  000FCA  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  2854  000FCC  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  2855  000FCE  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  2856  000FD0  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  2857  000FD2  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  2858  000FD4  2B70               	incf	___aodiv@counter& (0+255),f,b
  2859  000FD6                     l3064:
  2860                           
  2861                           ; BSR set to: 0
  2862  000FD6  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  2863  000FD8  D7F4               	goto	l3062
  2864  000FDA                     u1540:
  2865                           
  2866                           ; BSR set to: 0
  2867  000FDA  90D8               	bcf	status,0,c
  2868  000FDC  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  2869  000FDE  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  2870  000FE0  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  2871  000FE2  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  2872  000FE4  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  2873  000FE6  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  2874  000FE8  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  2875  000FEA  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  2876                           
  2877                           ; BSR set to: 0
  2878  000FEC  5168               	movf	___aodiv@divisor& (0+255),w,b
  2879  000FEE  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  2880  000FF0  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2881  000FF2  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  2882  000FF4  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2883  000FF6  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  2884  000FF8  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2885  000FFA  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  2886  000FFC  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2887  000FFE  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  2888  001000  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2889  001002  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  2890  001004  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2891  001006  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  2892  001008  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2893  00100A  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  2894  00100C  A0D8               	btfss	status,0,c
  2895  00100E  D011               	goto	l3074
  2896                           
  2897                           ; BSR set to: 0
  2898  001010  5168               	movf	___aodiv@divisor& (0+255),w,b
  2899  001012  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  2900  001014  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  2901  001016  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  2902  001018  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  2903  00101A  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  2904  00101C  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  2905  00101E  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  2906  001020  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  2907  001022  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  2908  001024  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  2909  001026  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  2910  001028  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  2911  00102A  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  2912  00102C  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  2913  00102E  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  2914                           
  2915                           ; BSR set to: 0
  2916  001030  8172               	bsf	___aodiv@quotient& (0+255),0,b
  2917  001032                     l3074:
  2918                           
  2919                           ; BSR set to: 0
  2920  001032  90D8               	bcf	status,0,c
  2921  001034  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  2922  001036  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  2923  001038  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  2924  00103A  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  2925  00103C  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  2926  00103E  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  2927  001040  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  2928  001042  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  2929                           
  2930                           ; BSR set to: 0
  2931  001044  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  2932  001046  D7C9               	goto	u1540
  2933  001048                     l3078:
  2934                           
  2935                           ; BSR set to: 0
  2936  001048  5171               	movf	___aodiv@sign& (0+255),w,b
  2937  00104A  B4D8               	btfsc	status,2,c
  2938  00104C  D010               	goto	l3082
  2939                           
  2940                           ; BSR set to: 0
  2941  00104E  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  2942  001050  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  2943  001052  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  2944  001054  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  2945  001056  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  2946  001058  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  2947  00105A  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  2948  00105C  6D72               	negf	___aodiv@quotient& (0+255),b
  2949  00105E  0E00               	movlw	0
  2950  001060  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  2951  001062  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  2952  001064  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  2953  001066  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  2954  001068  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  2955  00106A  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  2956  00106C  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  2957  00106E                     l3082:
  2958                           
  2959                           ; BSR set to: 0
  2960  00106E  C072  F060         	movff	___aodiv@quotient,?___aodiv
  2961  001072  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  2962  001076  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  2963  00107A  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  2964  00107E  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  2965  001082  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  2966  001086  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  2967  00108A  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  2968                           
  2969                           ; BSR set to: 0
  2970  00108E  0012               	return		;funcret
  2971  001090                     __end_of___aodiv:
  2972                           	opt callstack 0
  2973                           
  2974 ;; *************** function _carcontrol_init *****************
  2975 ;; Defined at:
  2976 ;;		line 27 in file "car_ctrl.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    9
  2997 ;; This function calls:
  2998 ;;		_TMR2_SetInterruptHandler
  2999 ;;		_carcontrol_steering
  3000 ;;		_carcontrol_throttle
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text14
  3007  001BA6                     __ptext14:
  3008                           	opt callstack 0
  3009  001BA6                     _carcontrol_init:
  3010                           	opt callstack 21
  3011                           
  3012                           ;car_ctrl.c: 28:     carctl.state = state_unset;
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;incstack = 0
  3016  001BA6  0E00               	movlw	0
  3017  001BA8  0100               	movlb	0	; () banked
  3018  001BAA  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;car_ctrl.c: 29:     carcontrol_throttle(0);
  3022  001BAC  0E00               	movlw	0
  3023  001BAE  EC89  F00F         	call	_carcontrol_throttle
  3024                           
  3025                           ;car_ctrl.c: 30:     carcontrol_steering(0);
  3026  001BB2  0E00               	movlw	0
  3027  001BB4  EC20  F00E         	call	_carcontrol_steering
  3028                           
  3029                           ;car_ctrl.c: 31:     carctl.servoHighTime = 50;
  3030  001BB8  0E32               	movlw	50
  3031  001BBA  0100               	movlb	0	; () banked
  3032  001BBC  6FCC               	movwf	(_carctl+5)& (0+255),b	;volatile
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;car_ctrl.c: 33:     TMR2_SetInterruptHandler(carcontrol_ISR);
  3036  001BBE  0EDC               	movlw	low _carcontrol_ISR
  3037  001BC0  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  3038  001BC2  0E13               	movlw	high _carcontrol_ISR
  3039  001BC4  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3040  001BC6  ECB7  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
  3041                           
  3042                           ;car_ctrl.c: 34:     stateTime = 0;
  3043  001BCA  0E00               	movlw	0
  3044  001BCC  0100               	movlb	0	; () banked
  3045  001BCE  6FD6               	movwf	(_stateTime+1)& (0+255),b
  3046  001BD0  0E00               	movlw	0
  3047  001BD2  6FD5               	movwf	_stateTime& (0+255),b
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;car_ctrl.c: 35:     carctl.initialized = 1;
  3051  001BD4  0E01               	movlw	1
  3052  001BD6  6FC7               	movwf	_carctl& (0+255),b	;volatile
  3053                           
  3054                           ; BSR set to: 0
  3055  001BD8  0012               	return		;funcret
  3056  001BDA                     __end_of_carcontrol_init:
  3057                           	opt callstack 0
  3058                           
  3059 ;; *************** function _carcontrol_throttle *****************
  3060 ;; Defined at:
  3061 ;;		line 118 in file "car_ctrl.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  throttle        1    wreg     unsigned char 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  throttle        1    0[BANK0 ] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0
  3076 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3078 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3079 ;;Total ram usage:        1 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    8
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;;		_carcontrol_init
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text15
  3091  001F12                     __ptext15:
  3092                           	opt callstack 0
  3093  001F12                     _carcontrol_throttle:
  3094                           	opt callstack 22
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;incstack = 0
  3098                           ;carcontrol_throttle@throttle stored from wreg
  3099  001F12  0100               	movlb	0	; () banked
  3100  001F14  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  3101                           
  3102                           ;car_ctrl.c: 120:     if (throttle > 100) throttle = 100;
  3103  001F16  0E64               	movlw	100
  3104  001F18  0100               	movlb	0	; () banked
  3105  001F1A  6560               	cpfsgt	carcontrol_throttle@throttle& (0+255),b
  3106  001F1C  D002               	goto	l3588
  3107                           
  3108                           ; BSR set to: 0
  3109  001F1E  0E64               	movlw	100
  3110  001F20  6F60               	movwf	carcontrol_throttle@throttle& (0+255),b
  3111  001F22                     l3588:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;car_ctrl.c: 121:     carctl.throttleHighTime = throttle;
  3115  001F22  C060  F0CB         	movff	carcontrol_throttle@throttle,_carctl+4	;volatile
  3116                           
  3117                           ; BSR set to: 0
  3118  001F26  0012               	return		;funcret
  3119  001F28                     __end_of_carcontrol_throttle:
  3120                           	opt callstack 0
  3121                           
  3122 ;; *************** function _carcontrol_steering *****************
  3123 ;; Defined at:
  3124 ;;		line 93 in file "car_ctrl.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  steering        1    wreg     char 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  steering        1    0[BANK0 ] char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0
  3139 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3141 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    8
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;;		_carcontrol_init
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text16
  3154  001C40                     __ptext16:
  3155                           	opt callstack 0
  3156  001C40                     _carcontrol_steering:
  3157                           	opt callstack 22
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;incstack = 0
  3161                           ;carcontrol_steering@steering stored from wreg
  3162  001C40  0100               	movlb	0	; () banked
  3163  001C42  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3164                           
  3165                           ;car_ctrl.c: 106:     if (steering < servo_min) steering = servo_min;
  3166  001C44  0100               	movlb	0	; () banked
  3167  001C46  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3168  001C48  0A80               	xorlw	128
  3169  001C4A  0F9E               	addlw	158
  3170  001C4C  B0D8               	btfsc	status,0,c
  3171  001C4E  D002               	goto	l3594
  3172                           
  3173                           ; BSR set to: 0
  3174  001C50  0EE2               	movlw	226
  3175  001C52  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3176  001C54                     l3594:
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;car_ctrl.c: 107:     if (steering > servo_max) steering = servo_max;
  3180  001C54  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3181  001C56  0A80               	xorlw	128
  3182  001C58  0F63               	addlw	-157
  3183  001C5A  A0D8               	btfss	status,0,c
  3184  001C5C  D002               	goto	l3598
  3185                           
  3186                           ; BSR set to: 0
  3187  001C5E  0E1C               	movlw	28
  3188  001C60  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3189  001C62                     l3598:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;car_ctrl.c: 109:     steering = steering + servo_trim;
  3193  001C62  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3194  001C64  0F11               	addlw	17
  3195  001C66  6F60               	movwf	carcontrol_steering@steering& (0+255),b
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;car_ctrl.c: 111:     carctl.servoHighTime = steering + 50;
  3199  001C68  5160               	movf	carcontrol_steering@steering& (0+255),w,b
  3200  001C6A  0F32               	addlw	50
  3201  001C6C  6FCC               	movwf	(_carctl+5)& (0+255),b	;volatile
  3202                           
  3203                           ; BSR set to: 0
  3204  001C6E  0012               	return		;funcret
  3205  001C70                     __end_of_carcontrol_steering:
  3206                           	opt callstack 0
  3207                           
  3208 ;; *************** function _cam_start *****************
  3209 ;; Defined at:
  3210 ;;		line 121 in file "cam.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3226 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3227 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3228 ;;Total ram usage:        1 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    9
  3231 ;; This function calls:
  3232 ;;		_TMR3_SetInterruptHandler
  3233 ;;		_TMR3_StartTimer
  3234 ;;		_TMR3_WriteTimer
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text17
  3241  0018F2                     __ptext17:
  3242                           	opt callstack 0
  3243  0018F2                     _cam_start:
  3244                           	opt callstack 21
  3245                           
  3246                           ;cam.c: 123:     if (myCam.status == CAM_DONE){
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;incstack = 0
  3250  0018F2  C401  FFE8         	movff	_myCam+513,wreg	;volatile
  3251  0018F6  0A02               	xorlw	2
  3252  0018F8  A4D8               	btfss	status,2,c
  3253  0018FA  0012               	return	
  3254                           
  3255                           ;cam.c: 124:         myCam.status = CAM_START;
  3256  0018FC  0E00               	movlw	0
  3257  0018FE  CFE8 F401          	movff	wreg,_myCam+513	;volatile
  3258                           
  3259                           ;cam.c: 126:         myCam.index = 0;
  3260  001902  0E00               	movlw	0
  3261  001904  CFE8 F402          	movff	wreg,_myCam+514	;volatile
  3262  001908  0E00               	movlw	0
  3263  00190A  CFE8 F403          	movff	wreg,_myCam+515	;volatile
  3264                           
  3265                           ;cam.c: 127:         myCam.readFromFirst = !myCam.readFromFirst;
  3266  00190E  EE22  F000         	lfsr	2,_myCam
  3267  001912  50DF               	movf	indf2,w,c
  3268  001914  A4D8               	btfss	status,2,c
  3269  001916  D004               	goto	u2440
  3270  001918  0100               	movlb	0	; () banked
  3271  00191A  6B62               	clrf	??_cam_start& (0+255),b
  3272  00191C  2B62               	incf	??_cam_start& (0+255),f,b
  3273  00191E  D002               	goto	u2458
  3274  001920                     u2440:
  3275  001920  0100               	movlb	0	; () banked
  3276  001922  6B62               	clrf	??_cam_start& (0+255),b
  3277  001924                     u2458:
  3278  001924  C062  F200         	movff	??_cam_start,_myCam
  3279                           
  3280                           ; BSR set to: 0
  3281  001928  8483               	bsf	3971,2,c	;volatile
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;cam.c: 129:         _delay((unsigned long)((3)*(64000000/4000000.0)));
  3285  00192A  0E10               	movlw	16
  3286  00192C                     u2727:
  3287  00192C  2EE8               	decfsz	wreg,f,c
  3288  00192E  D7FE               	bra	u2727
  3289  001930  8283               	bsf	3971,1,c	;volatile
  3290                           
  3291                           ;cam.c: 131:         TMR3_SetInterruptHandler(timer_ISR);
  3292  001932  0EC8               	movlw	low _timer_ISR
  3293  001934  0100               	movlb	0	; () banked
  3294  001936  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3295  001938  0E16               	movlw	high _timer_ISR
  3296  00193A  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3297  00193C  ECB2  F00F         	call	_TMR3_SetInterruptHandler	;wreg free
  3298                           
  3299                           ;cam.c: 132:         TMR3_WriteTimer(timing_val);
  3300  001940  C050  F060         	movff	_timing_val,TMR3_WriteTimer@timerVal
  3301  001944  C051  F061         	movff	_timing_val+1,TMR3_WriteTimer@timerVal+1
  3302  001948  EC24  F00F         	call	_TMR3_WriteTimer	;wreg free
  3303                           
  3304                           ;cam.c: 133:         TMR3_StartTimer();
  3305  00194C  ECF6  F00F         	call	_TMR3_StartTimer	;wreg free
  3306                           
  3307                           ;cam.c: 134:         ADCON0bits.ADON = 1;
  3308  001950  010F               	movlb	15	; () banked
  3309  001952  8F5B               	bsf	91,7,b	;volatile
  3310  001954  0012               	return		;funcret
  3311  001956                     __end_of_cam_start:
  3312                           	opt callstack 0
  3313                           
  3314 ;; *************** function _TMR3_WriteTimer *****************
  3315 ;; Defined at:
  3316 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  timerVal        2    0[BANK0 ] unsigned short 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3330 ;;      Params:         0       2       0       0       0       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3333 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3334 ;;Total ram usage:        2 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    8
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_cam_start
  3341 ;;		_TMR3_Reload
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text18
  3346  001E48                     __ptext18:
  3347                           	opt callstack 0
  3348  001E48                     _TMR3_WriteTimer:
  3349                           	opt callstack 21
  3350                           
  3351                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  3352                           
  3353                           ;incstack = 0
  3354  001E48  A4C8               	btfss	4040,2,c	;volatile
  3355  001E4A  D008               	goto	l3580
  3356                           
  3357                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  3358  001E4C  90C8               	bcf	4040,0,c	;volatile
  3359                           
  3360                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  3361  001E4E  0100               	movlb	0	; () banked
  3362  001E50  5161               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
  3363  001E52  6EC7               	movwf	4039,c	;volatile
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  3367  001E54  C060  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  3371  001E58  80C8               	bsf	4040,0,c	;volatile
  3372                           
  3373                           ;mcc_generated_files/tmr3.c: 140:     }
  3374  001E5A  0012               	return	
  3375  001E5C                     l3580:
  3376                           
  3377                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  3378  001E5C  0100               	movlb	0	; () banked
  3379  001E5E  5161               	movf	(TMR3_WriteTimer@timerVal+1)& (0+255),w,b
  3380  001E60  6EC7               	movwf	4039,c	;volatile
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  3384  001E62  C060  FFC6         	movff	TMR3_WriteTimer@timerVal,4038	;volatile
  3385                           
  3386                           ; BSR set to: 0
  3387  001E66  0012               	return		;funcret
  3388  001E68                     __end_of_TMR3_WriteTimer:
  3389                           	opt callstack 0
  3390                           
  3391 ;; *************** function _TMR3_StartTimer *****************
  3392 ;; Defined at:
  3393 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		None
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3407 ;;      Params:         0       0       0       0       0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3410 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3411 ;;Total ram usage:        0 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    8
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_cam_start
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text19
  3422  001FEC                     __ptext19:
  3423                           	opt callstack 0
  3424  001FEC                     _TMR3_StartTimer:
  3425                           	opt callstack 21
  3426                           
  3427                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 1;
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;incstack = 0
  3431  001FEC  80C8               	bsf	4040,0,c	;volatile
  3432  001FEE  0012               	return		;funcret
  3433  001FF0                     __end_of_TMR3_StartTimer:
  3434                           	opt callstack 0
  3435                           
  3436 ;; *************** function _cam_init *****************
  3437 ;; Defined at:
  3438 ;;		line 100 in file "cam.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    9
  3459 ;; This function calls:
  3460 ;;		_ADCC_SetADIInterruptHandler
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text20
  3467  001C0E                     __ptext20:
  3468                           	opt callstack 0
  3469  001C0E                     _cam_init:
  3470                           	opt callstack 21
  3471                           
  3472                           ;incstack = 0
  3473                           ;cam.c: 101:     do { LATBbits.LATB2 = 0; } while(0);
  3474  001C0E  9483               	bcf	3971,2,c	;volatile
  3475                           
  3476                           ;cam.c: 102:     do { LATBbits.LATB1 = 0; } while(0);
  3477  001C10  9283               	bcf	3971,1,c	;volatile
  3478                           
  3479                           ;cam.c: 103:     do { TRISBbits.TRISB2 = 0; } while(0);
  3480  001C12  9488               	bcf	3976,2,c	;volatile
  3481                           
  3482                           ;cam.c: 104:     do { TRISBbits.TRISB1 = 0; } while(0);
  3483  001C14  9288               	bcf	3976,1,c	;volatile
  3484                           
  3485                           ;cam.c: 105:     ADCC_SetADIInterruptHandler(adc_ready_ISR);
  3486  001C16  0EC2               	movlw	low _adc_ready_ISR
  3487  001C18  0100               	movlb	0	; () banked
  3488  001C1A  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  3489  001C1C  0E14               	movlw	high _adc_ready_ISR
  3490  001C1E  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  3491  001C20  ECDA  F00F         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3492                           
  3493                           ;cam.c: 107:     myCam.index = 0;
  3494  001C24  0E00               	movlw	0
  3495  001C26  CFE8 F402          	movff	wreg,_myCam+514	;volatile
  3496  001C2A  0E00               	movlw	0
  3497  001C2C  CFE8 F403          	movff	wreg,_myCam+515	;volatile
  3498                           
  3499                           ;cam.c: 108:     myCam.status = CAM_DONE;
  3500  001C30  0E02               	movlw	2
  3501  001C32  CFE8 F401          	movff	wreg,_myCam+513	;volatile
  3502                           
  3503                           ;cam.c: 112:     ADCON0bits.ADFM = 0;
  3504  001C36  010F               	movlb	15	; () banked
  3505  001C38  955B               	bcf	91,2,b	;volatile
  3506                           
  3507                           ; BSR set to: 15
  3508                           ;cam.c: 113:     ADCON0bits.ADCS = 1;
  3509  001C3A  895B               	bsf	91,4,b	;volatile
  3510                           
  3511                           ; BSR set to: 15
  3512                           ;cam.c: 114:     ADCON0bits.ADON = 1;
  3513  001C3C  8F5B               	bsf	91,7,b	;volatile
  3514                           
  3515                           ; BSR set to: 15
  3516  001C3E  0012               	return		;funcret
  3517  001C40                     __end_of_cam_init:
  3518                           	opt callstack 0
  3519                           
  3520 ;; *************** function _cam_get *****************
  3521 ;; Defined at:
  3522 ;;		line 153 in file "cam.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  pixels          2    0[BANK0 ] PTR unsigned short 
  3525 ;;		 -> main@cam_pixels(256), 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  i               2    4[BANK0 ] int 
  3528 ;;  i               2    2[BANK0 ] int 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3538 ;;      Params:         0       2       0       0       0       0       0       0       0
  3539 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3541 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3542 ;;Total ram usage:        6 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    8
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_main
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text21
  3553  001586                     __ptext21:
  3554                           	opt callstack 0
  3555  001586                     _cam_get:
  3556                           	opt callstack 22
  3557                           
  3558                           ;cam.c: 154:     if (myCam.readFromFirst) {
  3559                           
  3560                           ; BSR set to: 15
  3561                           ;incstack = 0
  3562  001586  EE22  F000         	lfsr	2,_myCam
  3563  00158A  50DF               	movf	indf2,w,c
  3564  00158C  B4D8               	btfsc	status,2,c
  3565  00158E  D026               	goto	l3842
  3566                           
  3567                           ;cam.c: 155:         for (int i = 0; i < 128; i++){
  3568  001590  0E00               	movlw	0
  3569  001592  0100               	movlb	0	; () banked
  3570  001594  6F63               	movwf	(cam_get@i+1)& (0+255),b
  3571  001596  0E00               	movlw	0
  3572  001598  6F62               	movwf	cam_get@i& (0+255),b
  3573  00159A                     l3836:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;cam.c: 156:             pixels[i] = myCam.cam_pixels_1[i];
  3577  00159A  90D8               	bcf	status,0,c
  3578  00159C  3562               	rlcf	cam_get@i& (0+255),w,b
  3579  00159E  6ED9               	movwf	fsr2l,c
  3580  0015A0  3563               	rlcf	(cam_get@i+1)& (0+255),w,b
  3581  0015A2  6EDA               	movwf	fsr2h,c
  3582  0015A4  0E01               	movlw	low (_myCam+1)
  3583  0015A6  26D9               	addwf	fsr2l,f,c
  3584  0015A8  0E02               	movlw	high (_myCam+1)
  3585  0015AA  22DA               	addwfc	fsr2h,f,c
  3586  0015AC  90D8               	bcf	status,0,c
  3587  0015AE  3562               	rlcf	cam_get@i& (0+255),w,b
  3588  0015B0  6EE1               	movwf	fsr1l,c
  3589  0015B2  3563               	rlcf	(cam_get@i+1)& (0+255),w,b
  3590  0015B4  6EE2               	movwf	fsr1h,c
  3591  0015B6  5160               	movf	cam_get@pixels& (0+255),w,b
  3592  0015B8  26E1               	addwf	fsr1l,f,c
  3593  0015BA  5161               	movf	(cam_get@pixels+1)& (0+255),w,b
  3594  0015BC  22E2               	addwfc	fsr1h,f,c
  3595  0015BE  CFDE FFE6          	movff	postinc2,postinc1
  3596  0015C2  CFDD FFE5          	movff	postdec2,postdec1
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;cam.c: 157:         }
  3600  0015C6  4B62               	infsnz	cam_get@i& (0+255),f,b
  3601  0015C8  2B63               	incf	(cam_get@i+1)& (0+255),f,b
  3602                           
  3603                           ; BSR set to: 0
  3604  0015CA  BF63               	btfsc	(cam_get@i+1)& (0+255),7,b
  3605  0015CC  D7E6               	goto	l3836
  3606  0015CE  5163               	movf	(cam_get@i+1)& (0+255),w,b
  3607  0015D0  E12B               	bnz	l964
  3608  0015D2  0E80               	movlw	128
  3609  0015D4  5D62               	subwf	cam_get@i& (0+255),w,b
  3610  0015D6  B0D8               	btfsc	status,0,c
  3611  0015D8  0012               	return	
  3612  0015DA  D7DF               	goto	l3836
  3613  0015DC                     l3842:
  3614                           
  3615                           ;cam.c: 159:         for (int i = 0; i < 128; i++){
  3616  0015DC  0E00               	movlw	0
  3617  0015DE  0100               	movlb	0	; () banked
  3618  0015E0  6F65               	movwf	(cam_get@i_2578+1)& (0+255),b
  3619  0015E2  0E00               	movlw	0
  3620  0015E4  6F64               	movwf	cam_get@i_2578& (0+255),b
  3621  0015E6                     l3848:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;cam.c: 160:             pixels[i] = myCam.cam_pixels_2[i];
  3625  0015E6  90D8               	bcf	status,0,c
  3626  0015E8  3564               	rlcf	cam_get@i_2578& (0+255),w,b
  3627  0015EA  6ED9               	movwf	fsr2l,c
  3628  0015EC  3565               	rlcf	(cam_get@i_2578+1)& (0+255),w,b
  3629  0015EE  6EDA               	movwf	fsr2h,c
  3630  0015F0  0E01               	movlw	low (_myCam+257)
  3631  0015F2  26D9               	addwf	fsr2l,f,c
  3632  0015F4  0E03               	movlw	high (_myCam+257)
  3633  0015F6  22DA               	addwfc	fsr2h,f,c
  3634  0015F8  90D8               	bcf	status,0,c
  3635  0015FA  3564               	rlcf	cam_get@i_2578& (0+255),w,b
  3636  0015FC  6EE1               	movwf	fsr1l,c
  3637  0015FE  3565               	rlcf	(cam_get@i_2578+1)& (0+255),w,b
  3638  001600  6EE2               	movwf	fsr1h,c
  3639  001602  5160               	movf	cam_get@pixels& (0+255),w,b
  3640  001604  26E1               	addwf	fsr1l,f,c
  3641  001606  5161               	movf	(cam_get@pixels+1)& (0+255),w,b
  3642  001608  22E2               	addwfc	fsr1h,f,c
  3643  00160A  CFDE FFE6          	movff	postinc2,postinc1
  3644  00160E  CFDD FFE5          	movff	postdec2,postdec1
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;cam.c: 161:         }
  3648  001612  4B64               	infsnz	cam_get@i_2578& (0+255),f,b
  3649  001614  2B65               	incf	(cam_get@i_2578+1)& (0+255),f,b
  3650                           
  3651                           ; BSR set to: 0
  3652  001616  BF65               	btfsc	(cam_get@i_2578+1)& (0+255),7,b
  3653  001618  D7E6               	goto	l3848
  3654  00161A  5165               	movf	(cam_get@i_2578+1)& (0+255),w,b
  3655  00161C  E105               	bnz	u2480
  3656  00161E  0E80               	movlw	128
  3657  001620  5D64               	subwf	cam_get@i_2578& (0+255),w,b
  3658  001622  B0D8               	btfsc	status,0,c
  3659  001624  0012               	return	
  3660  001626  D7DF               	goto	l3848
  3661  001628                     u2480:
  3662  001628                     l964:
  3663                           
  3664                           ; BSR set to: 0
  3665  001628  0012               	return		;funcret
  3666  00162A                     __end_of_cam_get:
  3667                           	opt callstack 0
  3668                           
  3669 ;; *************** function ___awmod *****************
  3670 ;; Defined at:
  3671 ;;		line 7 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  dividend        2    0[BANK0 ] int 
  3674 ;;  divisor         2    2[BANK0 ] int 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  sign            1    5[BANK0 ] unsigned char 
  3677 ;;  counter         1    4[BANK0 ] unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  2    0[BANK0 ] int 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3687 ;;      Params:         0       4       0       0       0       0       0       0       0
  3688 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3690 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3691 ;;Total ram usage:        6 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    8
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text22
  3702  00173E                     __ptext22:
  3703                           	opt callstack 0
  3704  00173E                     ___awmod:
  3705                           	opt callstack 22
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;incstack = 0
  3709  00173E  0E00               	movlw	0
  3710  001740  0100               	movlb	0	; () banked
  3711  001742  6F65               	movwf	___awmod@sign& (0+255),b
  3712                           
  3713                           ; BSR set to: 0
  3714  001744  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  3715  001746  D006               	goto	l3868
  3716                           
  3717                           ; BSR set to: 0
  3718  001748  6D60               	negf	___awmod@dividend& (0+255),b
  3719  00174A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3720  00174C  B0D8               	btfsc	status,0,c
  3721  00174E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3722                           
  3723                           ; BSR set to: 0
  3724  001750  0E01               	movlw	1
  3725  001752  6F65               	movwf	___awmod@sign& (0+255),b
  3726  001754                     l3868:
  3727                           
  3728                           ; BSR set to: 0
  3729  001754  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3730  001756  D004               	goto	l3872
  3731                           
  3732                           ; BSR set to: 0
  3733  001758  6D62               	negf	___awmod@divisor& (0+255),b
  3734  00175A  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3735  00175C  B0D8               	btfsc	status,0,c
  3736  00175E  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3737  001760                     l3872:
  3738                           
  3739                           ; BSR set to: 0
  3740  001760  5162               	movf	___awmod@divisor& (0+255),w,b
  3741  001762  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3742  001764  B4D8               	btfsc	status,2,c
  3743  001766  D018               	goto	l3888
  3744                           
  3745                           ; BSR set to: 0
  3746  001768  0E01               	movlw	1
  3747  00176A  6F64               	movwf	___awmod@counter& (0+255),b
  3748  00176C  D004               	goto	l3878
  3749  00176E                     l3876:
  3750                           
  3751                           ; BSR set to: 0
  3752  00176E  90D8               	bcf	status,0,c
  3753  001770  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3754  001772  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3755  001774  2B64               	incf	___awmod@counter& (0+255),f,b
  3756  001776                     l3878:
  3757                           
  3758                           ; BSR set to: 0
  3759  001776  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3760  001778  D7FA               	goto	l3876
  3761  00177A                     u2520:
  3762                           
  3763                           ; BSR set to: 0
  3764  00177A  5162               	movf	___awmod@divisor& (0+255),w,b
  3765  00177C  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3766  00177E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3767  001780  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3768  001782  A0D8               	btfss	status,0,c
  3769  001784  D004               	goto	l3884
  3770                           
  3771                           ; BSR set to: 0
  3772  001786  5162               	movf	___awmod@divisor& (0+255),w,b
  3773  001788  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3774  00178A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3775  00178C  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3776  00178E                     l3884:
  3777                           
  3778                           ; BSR set to: 0
  3779  00178E  90D8               	bcf	status,0,c
  3780  001790  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3781  001792  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3782                           
  3783                           ; BSR set to: 0
  3784  001794  2F64               	decfsz	___awmod@counter& (0+255),f,b
  3785  001796  D7F1               	goto	u2520
  3786  001798                     l3888:
  3787                           
  3788                           ; BSR set to: 0
  3789  001798  5165               	movf	___awmod@sign& (0+255),w,b
  3790  00179A  B4D8               	btfsc	status,2,c
  3791  00179C  D004               	goto	l3892
  3792                           
  3793                           ; BSR set to: 0
  3794  00179E  6D60               	negf	___awmod@dividend& (0+255),b
  3795  0017A0  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3796  0017A2  B0D8               	btfsc	status,0,c
  3797  0017A4  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3798  0017A6                     l3892:
  3799                           
  3800                           ; BSR set to: 0
  3801  0017A6  C060  F060         	movff	___awmod@dividend,?___awmod
  3802  0017AA  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3803                           
  3804                           ; BSR set to: 0
  3805  0017AE  0012               	return		;funcret
  3806  0017B0                     __end_of___awmod:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _SYSTEM_Initialize *****************
  3810 ;; Defined at:
  3811 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; Hardware stack levels required when called:   10
  3832 ;; This function calls:
  3833 ;;		_ADCC_Initialize
  3834 ;;		_CCP1_Initialize
  3835 ;;		_EUSART1_Initialize
  3836 ;;		_INTERRUPT_Initialize
  3837 ;;		_OSCILLATOR_Initialize
  3838 ;;		_PIN_MANAGER_Initialize
  3839 ;;		_PMD_Initialize
  3840 ;;		_TMR1_Initialize
  3841 ;;		_TMR2_Initialize
  3842 ;;		_TMR3_Initialize
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text23
  3849  001D86                     __ptext23:
  3850                           	opt callstack 0
  3851  001D86                     _SYSTEM_Initialize:
  3852                           	opt callstack 20
  3853                           
  3854                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;incstack = 0
  3858  001D86  EC94  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3859                           
  3860                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3861  001D8A  EC53  F00F         	call	_PMD_Initialize	;wreg free
  3862                           
  3863                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3864  001D8E  EC0F  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  3865                           
  3866                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3867  001D92  EC7D  F00F         	call	_OSCILLATOR_Initialize	;wreg free
  3868                           
  3869                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  3870  001D96  ECAB  F00C         	call	_ADCC_Initialize	;wreg free
  3871                           
  3872                           ;mcc_generated_files/mcc.c: 57:     TMR3_Initialize();
  3873  001D9A  EC79  F00D         	call	_TMR3_Initialize	;wreg free
  3874                           
  3875                           ;mcc_generated_files/mcc.c: 58:     CCP1_Initialize();
  3876  001D9E  EC96  F00E         	call	_CCP1_Initialize	;wreg free
  3877                           
  3878                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3879  001DA2  EC7F  F00E         	call	_TMR2_Initialize	;wreg free
  3880                           
  3881                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  3882  001DA6  EC33  F00D         	call	_TMR1_Initialize	;wreg free
  3883                           
  3884                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  3885  001DAA  EC56  F00D         	call	_EUSART1_Initialize	;wreg free
  3886  001DAE  0012               	return		;funcret
  3887  001DB0                     __end_of_SYSTEM_Initialize:
  3888                           	opt callstack 0
  3889                           
  3890 ;; *************** function _TMR3_Initialize *****************
  3891 ;; Defined at:
  3892 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3906 ;;      Params:         0       0       0       0       0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3908 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3909 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3910 ;;Total ram usage:        2 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    9
  3913 ;; This function calls:
  3914 ;;		_TMR3_SetInterruptHandler
  3915 ;; This function is called by:
  3916 ;;		_SYSTEM_Initialize
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text24
  3921  001AF2                     __ptext24:
  3922                           	opt callstack 0
  3923  001AF2                     _TMR3_Initialize:
  3924                           	opt callstack 20
  3925                           
  3926                           ;mcc_generated_files/tmr3.c: 69:     T3GCON = 0x00;
  3927                           
  3928                           ;incstack = 0
  3929  001AF2  0E00               	movlw	0
  3930  001AF4  6EC9               	movwf	4041,c	;volatile
  3931                           
  3932                           ;mcc_generated_files/tmr3.c: 72:     T3GATE = 0x00;
  3933  001AF6  0E00               	movlw	0
  3934  001AF8  6ECA               	movwf	4042,c	;volatile
  3935                           
  3936                           ;mcc_generated_files/tmr3.c: 75:     T3CLK = 0x01;
  3937  001AFA  0E01               	movlw	1
  3938  001AFC  6ECB               	movwf	4043,c	;volatile
  3939                           
  3940                           ;mcc_generated_files/tmr3.c: 78:     TMR3H = 0xFF;
  3941  001AFE  68C7               	setf	4039,c	;volatile
  3942                           
  3943                           ;mcc_generated_files/tmr3.c: 81:     TMR3L = 0x10;
  3944  001B00  0E10               	movlw	16
  3945  001B02  6EC6               	movwf	4038,c	;volatile
  3946                           
  3947                           ;mcc_generated_files/tmr3.c: 84:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  3948  001B04  50C6               	movf	4038,w,c	;volatile
  3949  001B06  CFC7 F062          	movff	4039,??_TMR3_Initialize	;volatile
  3950  001B0A  0100               	movlb	0	; () banked
  3951  001B0C  6B63               	clrf	(??_TMR3_Initialize+1)& (0+255),b
  3952  001B0E  C062  F063         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  3953  001B12  6B62               	clrf	??_TMR3_Initialize& (0+255),b
  3954  001B14  1162               	iorwf	??_TMR3_Initialize& (0+255),w,b
  3955  001B16  6E3C               	movwf	_timer3ReloadVal,c	;volatile
  3956  001B18  5163               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
  3957  001B1A  6E3D               	movwf	_timer3ReloadVal+1,c	;volatile
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;mcc_generated_files/tmr3.c: 87:     PIR4bits.TMR3IF = 0;
  3961  001B1C  010E               	movlb	14	; () banked
  3962  001B1E  95C9               	bcf	201,2,b	;volatile
  3963                           
  3964                           ; BSR set to: 14
  3965                           ;mcc_generated_files/tmr3.c: 90:     PIE4bits.TMR3IE = 1;
  3966  001B20  85C1               	bsf	193,2,b	;volatile
  3967                           
  3968                           ; BSR set to: 14
  3969                           ;mcc_generated_files/tmr3.c: 93:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
  3970  001B22  0EF8               	movlw	low _TMR3_DefaultInterruptHandler
  3971  001B24  0100               	movlb	0	; () banked
  3972  001B26  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  3973  001B28  0E1F               	movlw	high _TMR3_DefaultInterruptHandler
  3974  001B2A  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3975  001B2C  ECB2  F00F         	call	_TMR3_SetInterruptHandler	;wreg free
  3976                           
  3977                           ;mcc_generated_files/tmr3.c: 96:     T3CON = 0x03;
  3978  001B30  0E03               	movlw	3
  3979  001B32  6EC8               	movwf	4040,c	;volatile
  3980  001B34  0012               	return		;funcret
  3981  001B36                     __end_of_TMR3_Initialize:
  3982                           	opt callstack 0
  3983                           
  3984 ;; *************** function _TMR3_SetInterruptHandler *****************
  3985 ;; Defined at:
  3986 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  3989 ;;		 -> timer_ISR(1), TMR3_DefaultInterruptHandler(1), 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2, status,0
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4001 ;;      Params:         0       2       0       0       0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4004 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4005 ;;Total ram usage:        2 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:    8
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_TMR3_Initialize
  4012 ;;		_cam_start
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           	psect	text25
  4017  001F64                     __ptext25:
  4018                           	opt callstack 0
  4019  001F64                     _TMR3_SetInterruptHandler:
  4020                           	opt callstack 21
  4021                           
  4022                           ;mcc_generated_files/tmr3.c: 179:     TMR3_InterruptHandler = InterruptHandler;
  4023                           
  4024                           ;incstack = 0
  4025  001F64  C060  F03A         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  4026  001F68  C061  F03B         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  4027  001F6C  0012               	return		;funcret
  4028  001F6E                     __end_of_TMR3_SetInterruptHandler:
  4029                           	opt callstack 0
  4030                           
  4031 ;; *************** function _TMR2_Initialize *****************
  4032 ;; Defined at:
  4033 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;		None
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      void 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4047 ;;      Params:         0       0       0       0       0       0       0       0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4051 ;;Total ram usage:        0 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    9
  4054 ;; This function calls:
  4055 ;;		_TMR2_SetInterruptHandler
  4056 ;; This function is called by:
  4057 ;;		_SYSTEM_Initialize
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text26
  4062  001CFE                     __ptext26:
  4063                           	opt callstack 0
  4064  001CFE                     _TMR2_Initialize:
  4065                           	opt callstack 20
  4066                           
  4067                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  4068                           
  4069                           ;incstack = 0
  4070  001CFE  0E01               	movlw	1
  4071  001D00  6EBE               	movwf	4030,c	;volatile
  4072                           
  4073                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  4074  001D02  0E00               	movlw	0
  4075  001D04  6EBD               	movwf	4029,c	;volatile
  4076                           
  4077                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  4078  001D06  0E00               	movlw	0
  4079  001D08  6EBF               	movwf	4031,c	;volatile
  4080                           
  4081                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x00;
  4082  001D0A  0E00               	movlw	0
  4083  001D0C  6EBB               	movwf	4027,c	;volatile
  4084                           
  4085                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  4086  001D0E  0E00               	movlw	0
  4087  001D10  6EBA               	movwf	4026,c	;volatile
  4088                           
  4089                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  4090  001D12  010E               	movlb	14	; () banked
  4091  001D14  93C9               	bcf	201,1,b	;volatile
  4092                           
  4093                           ; BSR set to: 14
  4094                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  4095  001D16  83C1               	bsf	193,1,b	;volatile
  4096                           
  4097                           ; BSR set to: 14
  4098                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  4099  001D18  0E02               	movlw	low _TMR2_DefaultInterruptHandler
  4100  001D1A  0100               	movlb	0	; () banked
  4101  001D1C  6F60               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  4102  001D1E  0E20               	movlw	high _TMR2_DefaultInterruptHandler
  4103  001D20  6F61               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4104  001D22  ECB7  F00F         	call	_TMR2_SetInterruptHandler	;wreg free
  4105                           
  4106                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xF0;
  4107  001D26  0EF0               	movlw	240
  4108  001D28  6EBC               	movwf	4028,c	;volatile
  4109  001D2A  0012               	return		;funcret
  4110  001D2C                     __end_of_TMR2_Initialize:
  4111                           	opt callstack 0
  4112                           
  4113 ;; *************** function _TMR2_SetInterruptHandler *****************
  4114 ;; Defined at:
  4115 ;;		line 178 in file "mcc_generated_files/tmr2.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4118 ;;		 -> carcontrol_ISR(1), TMR2_DefaultInterruptHandler(1), 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4130 ;;      Params:         0       2       0       0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4133 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4134 ;;Total ram usage:        2 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    8
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_TMR2_Initialize
  4141 ;;		_carcontrol_init
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text27
  4146  001F6E                     __ptext27:
  4147                           	opt callstack 0
  4148  001F6E                     _TMR2_SetInterruptHandler:
  4149                           	opt callstack 21
  4150                           
  4151                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
  4152                           
  4153                           ;incstack = 0
  4154  001F6E  C060  F0FE         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  4155  001F72  C061  F0FF         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  4156  001F76  0012               	return		;funcret
  4157  001F78                     __end_of_TMR2_SetInterruptHandler:
  4158                           	opt callstack 0
  4159                           
  4160 ;; *************** function _TMR1_Initialize *****************
  4161 ;; Defined at:
  4162 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;		None
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0, cstack
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0
  4177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4179 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4180 ;;Total ram usage:        2 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; Hardware stack levels required when called:    9
  4183 ;; This function calls:
  4184 ;;		_TMR1_SetInterruptHandler
  4185 ;; This function is called by:
  4186 ;;		_SYSTEM_Initialize
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text28
  4191  001A66                     __ptext28:
  4192                           	opt callstack 0
  4193  001A66                     _TMR1_Initialize:
  4194                           	opt callstack 20
  4195                           
  4196                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4197                           
  4198                           ;incstack = 0
  4199  001A66  0E00               	movlw	0
  4200  001A68  6ECF               	movwf	4047,c	;volatile
  4201                           
  4202                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4203  001A6A  0E00               	movlw	0
  4204  001A6C  6ED0               	movwf	4048,c	;volatile
  4205                           
  4206                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x01;
  4207  001A6E  0E01               	movlw	1
  4208  001A70  6ED1               	movwf	4049,c	;volatile
  4209                           
  4210                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x63;
  4211  001A72  0E63               	movlw	99
  4212  001A74  6ECD               	movwf	4045,c	;volatile
  4213                           
  4214                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xC0;
  4215  001A76  0EC0               	movlw	192
  4216  001A78  6ECC               	movwf	4044,c	;volatile
  4217                           
  4218                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4219  001A7A  50CC               	movf	4044,w,c	;volatile
  4220  001A7C  CFCD F062          	movff	4045,??_TMR1_Initialize	;volatile
  4221  001A80  0100               	movlb	0	; () banked
  4222  001A82  6B63               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  4223  001A84  C062  F063         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  4224  001A88  6B62               	clrf	??_TMR1_Initialize& (0+255),b
  4225  001A8A  1162               	iorwf	??_TMR1_Initialize& (0+255),w,b
  4226  001A8C  6E42               	movwf	_timer1ReloadVal,c	;volatile
  4227  001A8E  5163               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  4228  001A90  6E43               	movwf	_timer1ReloadVal+1,c	;volatile
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
  4232  001A92  010E               	movlb	14	; () banked
  4233  001A94  91C9               	bcf	201,0,b	;volatile
  4234                           
  4235                           ; BSR set to: 14
  4236                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  4237  001A96  81C1               	bsf	193,0,b	;volatile
  4238                           
  4239                           ; BSR set to: 14
  4240                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4241  001A98  0EFA               	movlw	low _TMR1_DefaultInterruptHandler
  4242  001A9A  0100               	movlb	0	; () banked
  4243  001A9C  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4244  001A9E  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  4245  001AA0  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4246  001AA2  ECBC  F00F         	call	_TMR1_SetInterruptHandler	;wreg free
  4247                           
  4248                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x33;
  4249  001AA6  0E33               	movlw	51
  4250  001AA8  6ECE               	movwf	4046,c	;volatile
  4251  001AAA  0012               	return		;funcret
  4252  001AAC                     __end_of_TMR1_Initialize:
  4253                           	opt callstack 0
  4254                           
  4255 ;; *************** function _TMR1_SetInterruptHandler *****************
  4256 ;; Defined at:
  4257 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4260 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4272 ;;      Params:         0       2       0       0       0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4275 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4276 ;;Total ram usage:        2 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    8
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_TMR1_Initialize
  4283 ;;		_ping_init
  4284 ;;		_ping_send
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text29
  4289  001F78                     __ptext29:
  4290                           	opt callstack 0
  4291  001F78                     _TMR1_SetInterruptHandler:
  4292                           	opt callstack 20
  4293                           
  4294                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4295                           
  4296                           ;incstack = 0
  4297  001F78  C060  F040         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4298  001F7C  C061  F041         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4299  001F80  0012               	return		;funcret
  4300  001F82                     __end_of_TMR1_SetInterruptHandler:
  4301                           	opt callstack 0
  4302                           
  4303 ;; *************** function _PMD_Initialize *****************
  4304 ;; Defined at:
  4305 ;;		line 78 in file "mcc_generated_files/mcc.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4319 ;;      Params:         0       0       0       0       0       0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    8
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_SYSTEM_Initialize
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text30
  4334  001EA6                     __ptext30:
  4335                           	opt callstack 0
  4336  001EA6                     _PMD_Initialize:
  4337                           	opt callstack 21
  4338                           
  4339                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
  4340                           
  4341                           ;incstack = 0
  4342  001EA6  0E00               	movlw	0
  4343  001EA8  010E               	movlb	14	; () banked
  4344  001EAA  6FDC               	movwf	220,b	;volatile
  4345                           
  4346                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
  4347  001EAC  0E00               	movlw	0
  4348  001EAE  6FDD               	movwf	221,b	;volatile
  4349                           
  4350                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
  4351  001EB0  0E00               	movlw	0
  4352  001EB2  6FDE               	movwf	222,b	;volatile
  4353                           
  4354                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
  4355  001EB4  0E00               	movlw	0
  4356  001EB6  6FDF               	movwf	223,b	;volatile
  4357                           
  4358                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
  4359  001EB8  0E00               	movlw	0
  4360  001EBA  6FE0               	movwf	224,b	;volatile
  4361                           
  4362                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
  4363  001EBC  0E00               	movlw	0
  4364  001EBE  6FE1               	movwf	225,b	;volatile
  4365                           
  4366                           ; BSR set to: 14
  4367  001EC0  0012               	return		;funcret
  4368  001EC2                     __end_of_PMD_Initialize:
  4369                           	opt callstack 0
  4370                           
  4371 ;; *************** function _PIN_MANAGER_Initialize *****************
  4372 ;; Defined at:
  4373 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    9
  4394 ;; This function calls:
  4395 ;;		_IOCCF2_SetInterruptHandler
  4396 ;; This function is called by:
  4397 ;;		_SYSTEM_Initialize
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text31
  4402  00181E                     __ptext31:
  4403                           	opt callstack 0
  4404  00181E                     _PIN_MANAGER_Initialize:
  4405                           	opt callstack 20
  4406                           
  4407                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4408                           
  4409                           ; BSR set to: 14
  4410                           ;incstack = 0
  4411  00181E  0E00               	movlw	0
  4412  001820  6E82               	movwf	3970,c	;volatile
  4413                           
  4414                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4415  001822  0E00               	movlw	0
  4416  001824  6E83               	movwf	3971,c	;volatile
  4417                           
  4418                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4419  001826  0E00               	movlw	0
  4420  001828  6E84               	movwf	3972,c	;volatile
  4421                           
  4422                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0xF0;
  4423  00182A  0EF0               	movlw	240
  4424  00182C  6E87               	movwf	3975,c	;volatile
  4425                           
  4426                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0xF9;
  4427  00182E  0EF9               	movlw	249
  4428  001830  6E88               	movwf	3976,c	;volatile
  4429                           
  4430                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x3D;
  4431  001832  0E3D               	movlw	61
  4432  001834  6E89               	movwf	3977,c	;volatile
  4433                           
  4434                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x3B;
  4435  001836  0E3B               	movlw	59
  4436  001838  010F               	movlb	15	; () banked
  4437  00183A  6F1C               	movwf	28,b	;volatile
  4438                           
  4439                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xF1;
  4440  00183C  0EF1               	movlw	241
  4441  00183E  6F14               	movwf	20,b	;volatile
  4442                           
  4443                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0xFA;
  4444  001840  0EFA               	movlw	250
  4445  001842  6F0C               	movwf	12,b	;volatile
  4446                           
  4447                           ;mcc_generated_files/pin_manager.c: 83:     WPUE = 0x00;
  4448  001844  0E00               	movlw	0
  4449  001846  6F28               	movwf	40,b	;volatile
  4450                           
  4451                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  4452  001848  0E00               	movlw	0
  4453  00184A  6F13               	movwf	19,b	;volatile
  4454                           
  4455                           ;mcc_generated_files/pin_manager.c: 85:     WPUA = 0x00;
  4456  00184C  0E00               	movlw	0
  4457  00184E  6F0B               	movwf	11,b	;volatile
  4458                           
  4459                           ;mcc_generated_files/pin_manager.c: 86:     WPUC = 0x00;
  4460  001850  0E00               	movlw	0
  4461  001852  6F1B               	movwf	27,b	;volatile
  4462                           
  4463                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  4464  001854  0E00               	movlw	0
  4465  001856  6F0A               	movwf	10,b	;volatile
  4466                           
  4467                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  4468  001858  0E00               	movlw	0
  4469  00185A  6F12               	movwf	18,b	;volatile
  4470                           
  4471                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  4472  00185C  0E00               	movlw	0
  4473  00185E  6F1A               	movwf	26,b	;volatile
  4474                           
  4475                           ; BSR set to: 15
  4476                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
  4477  001860  6909               	setf	9,b	;volatile
  4478                           
  4479                           ; BSR set to: 15
  4480                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
  4481  001862  6911               	setf	17,b	;volatile
  4482                           
  4483                           ; BSR set to: 15
  4484                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  4485  001864  6919               	setf	25,b	;volatile
  4486                           
  4487                           ; BSR set to: 15
  4488                           ;mcc_generated_files/pin_manager.c: 107:     IOCCFbits.IOCCF2 = 0;
  4489  001866  9515               	bcf	21,2,b	;volatile
  4490                           
  4491                           ; BSR set to: 15
  4492                           ;mcc_generated_files/pin_manager.c: 109:     IOCCNbits.IOCCN2 = 0;
  4493  001868  9516               	bcf	22,2,b	;volatile
  4494                           
  4495                           ; BSR set to: 15
  4496                           ;mcc_generated_files/pin_manager.c: 111:     IOCCPbits.IOCCP2 = 1;
  4497  00186A  8517               	bsf	23,2,b	;volatile
  4498                           
  4499                           ; BSR set to: 15
  4500                           ;mcc_generated_files/pin_manager.c: 116:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
  4501  00186C  0EFC               	movlw	low _IOCCF2_DefaultInterruptHandler
  4502  00186E  0100               	movlb	0	; () banked
  4503  001870  6F60               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler& (0+255),b
  4504  001872  0E1F               	movlw	high _IOCCF2_DefaultInterruptHandler
  4505  001874  6F61               	movwf	(IOCCF2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4506  001876  ECC1  F00F         	call	_IOCCF2_SetInterruptHandler	;wreg free
  4507                           
  4508                           ;mcc_generated_files/pin_manager.c: 119:     PIE0bits.IOCIE = 1;
  4509  00187A  010E               	movlb	14	; () banked
  4510  00187C  89BD               	bsf	189,4,b	;volatile
  4511                           
  4512                           ; BSR set to: 14
  4513                           ;mcc_generated_files/pin_manager.c: 122:     ADACTPPS = 0x0B;
  4514  00187E  0E0B               	movlw	11
  4515  001880  6FA9               	movwf	169,b	;volatile
  4516                           
  4517                           ; BSR set to: 14
  4518                           ;mcc_generated_files/pin_manager.c: 123:     CCP1PPS = 0x12;
  4519  001882  0E12               	movlw	18
  4520  001884  6FAA               	movwf	170,b	;volatile
  4521                           
  4522                           ; BSR set to: 14
  4523                           ;mcc_generated_files/pin_manager.c: 124:     RC6PPS = 0x09;
  4524  001886  0E09               	movlw	9
  4525  001888  6FF8               	movwf	248,b	;volatile
  4526                           
  4527                           ; BSR set to: 14
  4528  00188A  0012               	return		;funcret
  4529  00188C                     __end_of_PIN_MANAGER_Initialize:
  4530                           	opt callstack 0
  4531                           
  4532 ;; *************** function _IOCCF2_SetInterruptHandler *****************
  4533 ;; Defined at:
  4534 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4537 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4549 ;;      Params:         0       2       0       0       0       0       0       0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4552 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4553 ;;Total ram usage:        2 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    8
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_PIN_MANAGER_Initialize
  4560 ;;		_ping_init
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text32
  4565  001F82                     __ptext32:
  4566                           	opt callstack 0
  4567  001F82                     _IOCCF2_SetInterruptHandler:
  4568                           	opt callstack 20
  4569                           
  4570                           ;mcc_generated_files/pin_manager.c: 155:     IOCCF2_InterruptHandler = InterruptHandler;
  4571                           
  4572                           ; BSR set to: 14
  4573                           ;incstack = 0
  4574  001F82  C060  F046         	movff	IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  4575  001F86  C061  F047         	movff	IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  4576  001F8A  0012               	return		;funcret
  4577  001F8C                     __end_of_IOCCF2_SetInterruptHandler:
  4578                           	opt callstack 0
  4579                           
  4580 ;; *************** function _OSCILLATOR_Initialize *****************
  4581 ;; Defined at:
  4582 ;;		line 64 in file "mcc_generated_files/mcc.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    8
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_SYSTEM_Initialize
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text33
  4611  001EFA                     __ptext33:
  4612                           	opt callstack 0
  4613  001EFA                     _OSCILLATOR_Initialize:
  4614                           	opt callstack 21
  4615                           
  4616                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x60;
  4617                           
  4618                           ;incstack = 0
  4619  001EFA  0E60               	movlw	96
  4620  001EFC  010E               	movlb	14	; () banked
  4621  001EFE  6FD3               	movwf	211,b	;volatile
  4622                           
  4623                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
  4624  001F00  0E00               	movlw	0
  4625  001F02  6FD5               	movwf	213,b	;volatile
  4626                           
  4627                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
  4628  001F04  0E00               	movlw	0
  4629  001F06  6FD7               	movwf	215,b	;volatile
  4630                           
  4631                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x08;
  4632  001F08  0E08               	movlw	8
  4633  001F0A  6FD9               	movwf	217,b	;volatile
  4634                           
  4635                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
  4636  001F0C  0E00               	movlw	0
  4637  001F0E  6FD8               	movwf	216,b	;volatile
  4638                           
  4639                           ; BSR set to: 14
  4640  001F10  0012               	return		;funcret
  4641  001F12                     __end_of_OSCILLATOR_Initialize:
  4642                           	opt callstack 0
  4643                           
  4644 ;; *************** function _INTERRUPT_Initialize *****************
  4645 ;; Defined at:
  4646 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		None
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    8
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_SYSTEM_Initialize
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text34
  4675  001F28                     __ptext34:
  4676                           	opt callstack 0
  4677  001F28                     _INTERRUPT_Initialize:
  4678                           	opt callstack 21
  4679                           
  4680                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 1;
  4681                           
  4682                           ; BSR set to: 14
  4683                           ;incstack = 0
  4684  001F28  8AF2               	bsf	4082,5,c	;volatile
  4685                           
  4686                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR4bits.TMR2IP = 1;
  4687  001F2A  010E               	movlb	14	; () banked
  4688  001F2C  83B9               	bsf	185,1,b	;volatile
  4689                           
  4690                           ;mcc_generated_files/interrupt_manager.c: 64:     IPR4bits.TMR1IP = 0;
  4691  001F2E  91B9               	bcf	185,0,b	;volatile
  4692                           
  4693                           ;mcc_generated_files/interrupt_manager.c: 67:     IPR4bits.TMR3IP = 0;
  4694  001F30  95B9               	bcf	185,2,b	;volatile
  4695                           
  4696                           ;mcc_generated_files/interrupt_manager.c: 70:     IPR1bits.ADIP = 0;
  4697  001F32  91B6               	bcf	182,0,b	;volatile
  4698                           
  4699                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.CCP1IP = 0;
  4700  001F34  91BB               	bcf	187,0,b	;volatile
  4701                           
  4702                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR0bits.IOCIP = 0;
  4703  001F36  99B5               	bcf	181,4,b	;volatile
  4704                           
  4705                           ; BSR set to: 14
  4706  001F38  0012               	return		;funcret
  4707  001F3A                     __end_of_INTERRUPT_Initialize:
  4708                           	opt callstack 0
  4709                           
  4710 ;; *************** function _EUSART1_Initialize *****************
  4711 ;; Defined at:
  4712 ;;		line 65 in file "mcc_generated_files/eusart1.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;		None
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    9
  4733 ;; This function calls:
  4734 ;;		_EUSART1_SetErrorHandler
  4735 ;;		_EUSART1_SetFramingErrorHandler
  4736 ;;		_EUSART1_SetOverrunErrorHandler
  4737 ;; This function is called by:
  4738 ;;		_SYSTEM_Initialize
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           	psect	text35
  4743  001AAC                     __ptext35:
  4744                           	opt callstack 0
  4745  001AAC                     _EUSART1_Initialize:
  4746                           	opt callstack 20
  4747                           
  4748                           ;mcc_generated_files/eusart1.c: 70:     BAUD1CON = 0x08;
  4749                           
  4750                           ; BSR set to: 14
  4751                           ;incstack = 0
  4752  001AAC  0E08               	movlw	8
  4753  001AAE  6E9E               	movwf	3998,c	;volatile
  4754                           
  4755                           ;mcc_generated_files/eusart1.c: 73:     RC1STA = 0x80;
  4756  001AB0  0E80               	movlw	128
  4757  001AB2  6E9C               	movwf	3996,c	;volatile
  4758                           
  4759                           ;mcc_generated_files/eusart1.c: 76:     TX1STA = 0x24;
  4760  001AB4  0E24               	movlw	36
  4761  001AB6  6E9D               	movwf	3997,c	;volatile
  4762                           
  4763                           ;mcc_generated_files/eusart1.c: 79:     SP1BRGL = 0x82;
  4764  001AB8  0E82               	movlw	130
  4765  001ABA  6E9A               	movwf	3994,c	;volatile
  4766                           
  4767                           ;mcc_generated_files/eusart1.c: 82:     SP1BRGH = 0x06;
  4768  001ABC  0E06               	movlw	6
  4769  001ABE  6E9B               	movwf	3995,c	;volatile
  4770                           
  4771                           ;mcc_generated_files/eusart1.c: 85:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4772  001AC0  0E00               	movlw	0
  4773  001AC2  0100               	movlb	0	; () banked
  4774  001AC4  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4775  001AC6  0E00               	movlw	0
  4776  001AC8  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4777  001ACA  ECCB  F00F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4778                           
  4779                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4780  001ACE  0E00               	movlw	0
  4781  001AD0  0100               	movlb	0	; () banked
  4782  001AD2  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4783  001AD4  0E00               	movlw	0
  4784  001AD6  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4785  001AD8  ECC6  F00F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4786                           
  4787                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4788  001ADC  0E00               	movlw	0
  4789  001ADE  0100               	movlb	0	; () banked
  4790  001AE0  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4791  001AE2  0E00               	movlw	0
  4792  001AE4  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4793  001AE6  ECD0  F00F         	call	_EUSART1_SetErrorHandler	;wreg free
  4794                           
  4795                           ;mcc_generated_files/eusart1.c: 89:     eusart1RxLastError.status = 0;
  4796  001AEA  0E00               	movlw	0
  4797  001AEC  0100               	movlb	0	; () banked
  4798  001AEE  6FD7               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4799                           
  4800                           ; BSR set to: 0
  4801  001AF0  0012               	return		;funcret
  4802  001AF2                     __end_of_EUSART1_Initialize:
  4803                           	opt callstack 0
  4804                           
  4805 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4806 ;; Defined at:
  4807 ;;		line 169 in file "mcc_generated_files/eusart1.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4810 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4822 ;;      Params:         0       2       0       0       0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4825 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4826 ;;Total ram usage:        2 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    8
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_EUSART1_Initialize
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text36
  4837  001F8C                     __ptext36:
  4838                           	opt callstack 0
  4839  001F8C                     _EUSART1_SetOverrunErrorHandler:
  4840                           	opt callstack 20
  4841                           
  4842                           ;mcc_generated_files/eusart1.c: 170:     EUSART1_OverrunErrorHandler = interruptHandler;
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;incstack = 0
  4846  001F8C  C060  F0FA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4847  001F90  C061  F0FB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4848  001F94  0012               	return		;funcret
  4849  001F96                     __end_of_EUSART1_SetOverrunErrorHandler:
  4850                           	opt callstack 0
  4851                           
  4852 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4853 ;; Defined at:
  4854 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4857 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4869 ;;      Params:         0       2       0       0       0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4872 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4873 ;;Total ram usage:        2 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    8
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_EUSART1_Initialize
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text37
  4884  001F96                     __ptext37:
  4885                           	opt callstack 0
  4886  001F96                     _EUSART1_SetFramingErrorHandler:
  4887                           	opt callstack 20
  4888                           
  4889                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_FramingErrorHandler = interruptHandler;
  4890                           
  4891                           ;incstack = 0
  4892  001F96  C060  F0FC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4893  001F9A  C061  F0FD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4894  001F9E  0012               	return		;funcret
  4895  001FA0                     __end_of_EUSART1_SetFramingErrorHandler:
  4896                           	opt callstack 0
  4897                           
  4898 ;; *************** function _EUSART1_SetErrorHandler *****************
  4899 ;; Defined at:
  4900 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  4903 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4915 ;;      Params:         0       2       0       0       0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4918 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4919 ;;Total ram usage:        2 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    8
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_EUSART1_Initialize
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text38
  4930  001FA0                     __ptext38:
  4931                           	opt callstack 0
  4932  001FA0                     _EUSART1_SetErrorHandler:
  4933                           	opt callstack 20
  4934                           
  4935                           ;mcc_generated_files/eusart1.c: 174:     EUSART1_ErrorHandler = interruptHandler;
  4936                           
  4937                           ;incstack = 0
  4938  001FA0  C060  F0F8         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4939  001FA4  C061  F0F9         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4940  001FA8  0012               	return		;funcret
  4941  001FAA                     __end_of_EUSART1_SetErrorHandler:
  4942                           	opt callstack 0
  4943                           
  4944 ;; *************** function _CCP1_Initialize *****************
  4945 ;; Defined at:
  4946 ;;		line 65 in file "mcc_generated_files/ccp1.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4963 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4964 ;;Total ram usage:        0 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    9
  4967 ;; This function calls:
  4968 ;;		_CCP1_SetCallBack
  4969 ;; This function is called by:
  4970 ;;		_SYSTEM_Initialize
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text39
  4975  001D2C                     __ptext39:
  4976                           	opt callstack 0
  4977  001D2C                     _CCP1_Initialize:
  4978                           	opt callstack 20
  4979                           
  4980                           ;mcc_generated_files/ccp1.c: 70:  CCP1CON = 0x84;
  4981                           
  4982                           ;incstack = 0
  4983  001D2C  0E84               	movlw	132
  4984  001D2E  6EAB               	movwf	4011,c	;volatile
  4985                           
  4986                           ;mcc_generated_files/ccp1.c: 73:  CCP1CAP = 0x00;
  4987  001D30  0E00               	movlw	0
  4988  001D32  6EAC               	movwf	4012,c	;volatile
  4989                           
  4990                           ;mcc_generated_files/ccp1.c: 76:  CCPR1H = 0x00;
  4991  001D34  0E00               	movlw	0
  4992  001D36  6EAA               	movwf	4010,c	;volatile
  4993                           
  4994                           ;mcc_generated_files/ccp1.c: 79:  CCPR1L = 0x00;
  4995  001D38  0E00               	movlw	0
  4996  001D3A  6EA9               	movwf	4009,c	;volatile
  4997                           
  4998                           ;mcc_generated_files/ccp1.c: 82:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  4999  001D3C  0EFE               	movlw	low _CCP1_DefaultCallBack
  5000  001D3E  0100               	movlb	0	; () banked
  5001  001D40  6F60               	movwf	CCP1_SetCallBack@customCallBack& (0+255),b
  5002  001D42  0E1F               	movlw	high _CCP1_DefaultCallBack
  5003  001D44  6F61               	movwf	(CCP1_SetCallBack@customCallBack+1)& (0+255),b
  5004  001D46  ECD5  F00F         	call	_CCP1_SetCallBack	;wreg free
  5005                           
  5006                           ;mcc_generated_files/ccp1.c: 85:  CCPTMRSbits.C1TSEL = 0x1;
  5007  001D4A  50AD               	movf	4013,w,c	;volatile
  5008  001D4C  0BFC               	andlw	-4
  5009  001D4E  0901               	iorlw	1
  5010  001D50  6EAD               	movwf	4013,c	;volatile
  5011                           
  5012                           ;mcc_generated_files/ccp1.c: 88:     PIR6bits.CCP1IF = 0;
  5013  001D52  010E               	movlb	14	; () banked
  5014  001D54  91CB               	bcf	203,0,b	;volatile
  5015                           
  5016                           ; BSR set to: 14
  5017                           ;mcc_generated_files/ccp1.c: 91:     PIE6bits.CCP1IE = 1;
  5018  001D56  81C3               	bsf	195,0,b	;volatile
  5019                           
  5020                           ; BSR set to: 14
  5021  001D58  0012               	return		;funcret
  5022  001D5A                     __end_of_CCP1_Initialize:
  5023                           	opt callstack 0
  5024                           
  5025 ;; *************** function _CCP1_SetCallBack *****************
  5026 ;; Defined at:
  5027 ;;		line 109 in file "mcc_generated_files/ccp1.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  5030 ;;		 -> ping_CCP1_triggered(1), CCP1_DefaultCallBack(1), 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;		None
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      void 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5042 ;;      Params:         0       2       0       0       0       0       0       0       0
  5043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5045 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5046 ;;Total ram usage:        2 bytes
  5047 ;; Hardware stack levels used:    1
  5048 ;; Hardware stack levels required when called:    8
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_CCP1_Initialize
  5053 ;;		_ping_init
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text40
  5058  001FAA                     __ptext40:
  5059                           	opt callstack 0
  5060  001FAA                     _CCP1_SetCallBack:
  5061                           	opt callstack 20
  5062                           
  5063                           ;mcc_generated_files/ccp1.c: 110:     CCP1_CallBack = customCallBack;
  5064                           
  5065                           ; BSR set to: 14
  5066                           ;incstack = 0
  5067  001FAA  C060  F044         	movff	CCP1_SetCallBack@customCallBack,_CCP1_CallBack
  5068  001FAE  C061  F045         	movff	CCP1_SetCallBack@customCallBack+1,_CCP1_CallBack+1
  5069  001FB2  0012               	return		;funcret
  5070  001FB4                     __end_of_CCP1_SetCallBack:
  5071                           	opt callstack 0
  5072                           
  5073 ;; *************** function _ADCC_Initialize *****************
  5074 ;; Defined at:
  5075 ;;		line 63 in file "mcc_generated_files/adcc.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5092 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5093 ;;Total ram usage:        0 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    9
  5096 ;; This function calls:
  5097 ;;		_ADCC_SetADIInterruptHandler
  5098 ;; This function is called by:
  5099 ;;		_SYSTEM_Initialize
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text41
  5104  001956                     __ptext41:
  5105                           	opt callstack 0
  5106  001956                     _ADCC_Initialize:
  5107                           	opt callstack 20
  5108                           
  5109                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  5110                           
  5111                           ;incstack = 0
  5112  001956  0E00               	movlw	0
  5113  001958  6E65               	movwf	3941,c	;volatile
  5114                           
  5115                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  5116  00195A  0E00               	movlw	0
  5117  00195C  6E66               	movwf	3942,c	;volatile
  5118                           
  5119                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  5120  00195E  0E00               	movlw	0
  5121  001960  6E67               	movwf	3943,c	;volatile
  5122                           
  5123                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  5124  001962  0E00               	movlw	0
  5125  001964  6E68               	movwf	3944,c	;volatile
  5126                           
  5127                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  5128  001966  0E00               	movlw	0
  5129  001968  6E63               	movwf	3939,c	;volatile
  5130                           
  5131                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  5132  00196A  0E00               	movlw	0
  5133  00196C  6E64               	movwf	3940,c	;volatile
  5134                           
  5135                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  5136  00196E  0E00               	movlw	0
  5137  001970  6E61               	movwf	3937,c	;volatile
  5138                           
  5139                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  5140  001972  0E00               	movlw	0
  5141  001974  010F               	movlb	15	; () banked
  5142  001976  6F5A               	movwf	90,b	;volatile
  5143                           
  5144                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  5145  001978  0E00               	movlw	0
  5146  00197A  6F58               	movwf	88,b	;volatile
  5147                           
  5148                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
  5149  00197C  0E00               	movlw	0
  5150  00197E  6F54               	movwf	84,b	;volatile
  5151                           
  5152                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
  5153  001980  0E00               	movlw	0
  5154  001982  6F55               	movwf	85,b	;volatile
  5155                           
  5156                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
  5157  001984  0E00               	movlw	0
  5158  001986  6F56               	movwf	86,b	;volatile
  5159                           
  5160                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
  5161  001988  0E00               	movlw	0
  5162  00198A  6E60               	movwf	3936,c	;volatile
  5163                           
  5164                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
  5165  00198C  0E00               	movlw	0
  5166  00198E  6F53               	movwf	83,b	;volatile
  5167                           
  5168                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
  5169  001990  0E00               	movlw	0
  5170  001992  6F51               	movwf	81,b	;volatile
  5171                           
  5172                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
  5173  001994  0E00               	movlw	0
  5174  001996  6F52               	movwf	82,b	;volatile
  5175                           
  5176                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x94;
  5177  001998  0E94               	movlw	148
  5178  00199A  6F5B               	movwf	91,b	;volatile
  5179                           
  5180                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
  5181  00199C  0E00               	movlw	0
  5182  00199E  6F57               	movwf	87,b	;volatile
  5183                           
  5184                           ; BSR set to: 15
  5185                           ;mcc_generated_files/adcc.c: 104:     PIR1bits.ADIF = 0;
  5186  0019A0  010E               	movlb	14	; () banked
  5187  0019A2  91C6               	bcf	198,0,b	;volatile
  5188                           
  5189                           ; BSR set to: 14
  5190                           ;mcc_generated_files/adcc.c: 106:     PIE1bits.ADIE = 1;
  5191  0019A4  81BE               	bsf	190,0,b	;volatile
  5192                           
  5193                           ; BSR set to: 14
  5194                           ;mcc_generated_files/adcc.c: 108:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
  5195  0019A6  0E00               	movlw	low _ADCC_DefaultInterruptHandler
  5196  0019A8  0100               	movlb	0	; () banked
  5197  0019AA  6F60               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  5198  0019AC  0E20               	movlw	high _ADCC_DefaultInterruptHandler
  5199  0019AE  6F61               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  5200  0019B0  ECDA  F00F         	call	_ADCC_SetADIInterruptHandler	;wreg free
  5201  0019B4  0012               	return		;funcret
  5202  0019B6                     __end_of_ADCC_Initialize:
  5203                           	opt callstack 0
  5204                           
  5205 ;; *************** function _ADCC_SetADIInterruptHandler *****************
  5206 ;; Defined at:
  5207 ;;		line 305 in file "mcc_generated_files/adcc.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5210 ;;		 -> adc_ready_ISR(1), ADCC_DefaultInterruptHandler(1), 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5222 ;;      Params:         0       2       0       0       0       0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5225 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5226 ;;Total ram usage:        2 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    8
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_ADCC_Initialize
  5233 ;;		_cam_init
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text42
  5238  001FB4                     __ptext42:
  5239                           	opt callstack 0
  5240  001FB4                     _ADCC_SetADIInterruptHandler:
  5241                           	opt callstack 21
  5242                           
  5243                           ;mcc_generated_files/adcc.c: 306:     ADCC_ADI_InterruptHandler = InterruptHandler;
  5244                           
  5245                           ;incstack = 0
  5246  001FB4  C060  F03E         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
  5247  001FB8  C061  F03F         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
  5248  001FBC  0012               	return		;funcret
  5249  001FBE                     __end_of_ADCC_SetADIInterruptHandler:
  5250                           	opt callstack 0
  5251                           
  5252 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
  5253 ;; Defined at:
  5254 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5270 ;;      Temps:          9       0       0       0       0       0       0       0       0
  5271 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5272 ;;Total ram usage:        9 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    7
  5275 ;; This function calls:
  5276 ;;		_ADCC_ISR
  5277 ;;		_CCP1_CaptureISR
  5278 ;;		_PIN_MANAGER_IOC
  5279 ;;		_TMR1_ISR
  5280 ;;		_TMR3_ISR
  5281 ;; This function is called by:
  5282 ;;		Interrupt level 1
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	intcodelo
  5287  000018                     __pintcodelo:
  5288                           	opt callstack 0
  5289  000018                     _INTERRUPT_InterruptManagerLow:
  5290                           	opt callstack 14
  5291                           
  5292                           ;incstack = 0
  5293  000018  8055               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5294  00001A  CFD8 F031          	movff	status,??_INTERRUPT_InterruptManagerLow
  5295  00001E  CFE8 F032          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
  5296  000022  CFE0 F033          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
  5297  000026  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
  5298  00002A  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
  5299  00002E  CFD9 F036          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+5
  5300  000032  CFDA F037          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+6
  5301  000036  CFF3 F038          	movff	prodl,??_INTERRUPT_InterruptManagerLow+7
  5302  00003A  CFF4 F039          	movff	prodh,??_INTERRUPT_InterruptManagerLow+8
  5303                           
  5304                           ;mcc_generated_files/interrupt_manager.c: 92:     if(PIE4bits.TMR1IE == 1 && PIR4bits.TM
      +                          R1IF == 1)
  5305  00003E  010E               	movlb	14	; () banked
  5306  000040  B1C1               	btfsc	193,0,b	;volatile
  5307                           
  5308                           ; BSR set to: 14
  5309  000042  A1C9               	btfss	201,0,b	;volatile
  5310  000044  D003               	goto	i1l261
  5311                           
  5312                           ; BSR set to: 14
  5313                           ;mcc_generated_files/interrupt_manager.c: 93:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 94:         TMR1_ISR();
  5314  000046  EC50  F00E         	call	_TMR1_ISR	;wreg free
  5315                           
  5316                           ;mcc_generated_files/interrupt_manager.c: 95:     }
  5317  00004A  D017               	goto	i1l266
  5318  00004C                     i1l261:
  5319                           
  5320                           ; BSR set to: 14
  5321  00004C  B5C1               	btfsc	193,2,b	;volatile
  5322                           
  5323                           ; BSR set to: 14
  5324  00004E  A5C9               	btfss	201,2,b	;volatile
  5325  000050  D003               	goto	i1l263
  5326                           
  5327                           ; BSR set to: 14
  5328                           ;mcc_generated_files/interrupt_manager.c: 97:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 98:         TMR3_ISR();
  5329  000052  EC38  F00E         	call	_TMR3_ISR	;wreg free
  5330                           
  5331                           ;mcc_generated_files/interrupt_manager.c: 99:     }
  5332  000056  D011               	goto	i1l266
  5333  000058                     i1l263:
  5334                           
  5335                           ; BSR set to: 14
  5336  000058  B1BE               	btfsc	190,0,b	;volatile
  5337                           
  5338                           ; BSR set to: 14
  5339  00005A  A1C6               	btfss	198,0,b	;volatile
  5340  00005C  D003               	goto	i1l265
  5341                           
  5342                           ; BSR set to: 14
  5343                           ;mcc_generated_files/interrupt_manager.c: 101:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 102:         ADCC_ISR();
  5344  00005E  EC12  F00F         	call	_ADCC_ISR	;wreg free
  5345                           
  5346                           ;mcc_generated_files/interrupt_manager.c: 103:     }
  5347  000062  D00B               	goto	i1l266
  5348  000064                     i1l265:
  5349                           
  5350                           ; BSR set to: 14
  5351  000064  B1C3               	btfsc	195,0,b	;volatile
  5352                           
  5353                           ; BSR set to: 14
  5354  000066  A1CB               	btfss	203,0,b	;volatile
  5355  000068  D003               	goto	i1l267
  5356                           
  5357                           ; BSR set to: 14
  5358                           ;mcc_generated_files/interrupt_manager.c: 105:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 106:         CCP1_CaptureISR();
  5359  00006A  ECAD  F00E         	call	_CCP1_CaptureISR	;wreg free
  5360                           
  5361                           ;mcc_generated_files/interrupt_manager.c: 107:     }
  5362  00006E  D005               	goto	i1l266
  5363  000070                     i1l267:
  5364                           
  5365                           ; BSR set to: 14
  5366  000070  B9BD               	btfsc	189,4,b	;volatile
  5367                           
  5368                           ; BSR set to: 14
  5369  000072  A9C5               	btfss	197,4,b	;volatile
  5370  000074  D002               	goto	i1l266
  5371                           
  5372                           ; BSR set to: 14
  5373                           ;mcc_generated_files/interrupt_manager.c: 109:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 110:         PIN_MANAGER_IOC();
  5374  000076  ECAC  F00F         	call	_PIN_MANAGER_IOC	;wreg free
  5375  00007A                     i1l266:
  5376                           
  5377                           ; BSR set to: 14
  5378  00007A  C039  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+8,prodh
  5379  00007E  C038  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+7,prodl
  5380  000082  C037  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr2h
  5381  000086  C036  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr2l
  5382  00008A  C035  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
  5383  00008E  C034  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
  5384  000092  C033  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
  5385  000096  C032  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
  5386  00009A  C031  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
  5387  00009E  9055               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5388  0000A0  0010               	retfie	
  5389  0000A2                     __end_of_INTERRUPT_InterruptManagerLow:
  5390                           	opt callstack 0
  5391                           
  5392 ;; *************** function _TMR3_ISR *****************
  5393 ;; Defined at:
  5394 ;;		line 164 in file "mcc_generated_files/tmr3.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5411 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    5
  5415 ;; This function calls:
  5416 ;;		Absolute function
  5417 ;;		_TMR3_DefaultInterruptHandler
  5418 ;;		_timer_ISR
  5419 ;;		i1_TMR3_WriteTimer
  5420 ;; This function is called by:
  5421 ;;		_INTERRUPT_InterruptManagerLow
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text44
  5426  001C70                     __ptext44:
  5427                           	opt callstack 0
  5428  001C70                     _TMR3_ISR:
  5429                           	opt callstack 15
  5430                           
  5431                           ;mcc_generated_files/tmr3.c: 168:     PIR4bits.TMR3IF = 0;
  5432                           
  5433                           ;incstack = 0
  5434  001C70  010E               	movlb	14	; () banked
  5435  001C72  95C9               	bcf	201,2,b	;volatile
  5436                           
  5437                           ; BSR set to: 14
  5438                           ;mcc_generated_files/tmr3.c: 169:     TMR3_WriteTimer(timer3ReloadVal);
  5439  001C74  C03C  F006         	movff	_timer3ReloadVal,i1TMR3_WriteTimer@timerVal	;volatile
  5440  001C78  C03D  F007         	movff	_timer3ReloadVal+1,i1TMR3_WriteTimer@timerVal+1	;volatile
  5441  001C7C  EC6F  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  5442                           
  5443                           ;mcc_generated_files/tmr3.c: 171:     if(TMR3_InterruptHandler)
  5444  001C80  503A               	movf	_TMR3_InterruptHandler,w,c
  5445  001C82  103B               	iorwf	_TMR3_InterruptHandler+1,w,c
  5446  001C84  B4D8               	btfsc	status,2,c
  5447  001C86  0012               	return	
  5448                           
  5449                           ;mcc_generated_files/tmr3.c: 172:     {;mcc_generated_files/tmr3.c: 173:         TMR3_In
      +                          terruptHandler();
  5450  001C88  D801               	call	i1u237_28
  5451  001C8A  0012               	return	
  5452  001C8C                     i1u237_28:
  5453  001C8C  0005               	push	
  5454  001C8E  6EFA               	movwf	pclath,c
  5455  001C90  503A               	movf	_TMR3_InterruptHandler,w,c
  5456  001C92  6EFD               	movwf	tosl,c
  5457  001C94  503B               	movf	_TMR3_InterruptHandler+1,w,c
  5458  001C96  6EFE               	movwf	tosh,c
  5459  001C98  50F8               	movf	tblptru,w,c
  5460  001C9A  6EFF               	movwf	tosu,c
  5461  001C9C  50FA               	movf	pclath,w,c
  5462  001C9E  0012               	return		;indir
  5463  001CA0                     __end_of_TMR3_ISR:
  5464                           	opt callstack 0
  5465                           
  5466 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  5467 ;; Defined at:
  5468 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;		None
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;		None
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		None
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5482 ;;      Params:         0       0       0       0       0       0       0       0       0
  5483 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5485 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5486 ;;Total ram usage:        0 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    3
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_TMR3_Initialize
  5493 ;;		_timer_ISR
  5494 ;;		_TMR3_ISR
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text45
  5499  001FF8                     __ptext45:
  5500                           	opt callstack 0
  5501  001FF8                     _TMR3_DefaultInterruptHandler:
  5502                           	opt callstack 16
  5503                           
  5504                           ;incstack = 0
  5505  001FF8  0012               	return		;funcret
  5506  001FFA                     __end_of_TMR3_DefaultInterruptHandler:
  5507                           	opt callstack 0
  5508                           
  5509 ;; *************** function _timer_ISR *****************
  5510 ;; Defined at:
  5511 ;;		line 48 in file "cam.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5527 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5528 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5529 ;;Total ram usage:        1 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    4
  5532 ;; This function calls:
  5533 ;;		i1_ADCC_SetADIInterruptHandler
  5534 ;;		i1_TMR3_SetInterruptHandler
  5535 ;;		i1_TMR3_StartTimer
  5536 ;;		i1_TMR3_WriteTimer
  5537 ;; This function is called by:
  5538 ;;		_adc_ready_ISR
  5539 ;;		_cam_start
  5540 ;;		_TMR3_ISR
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text46
  5545  0016C8                     __ptext46:
  5546                           	opt callstack 0
  5547  0016C8                     _timer_ISR:
  5548                           	opt callstack 15
  5549                           
  5550                           ;cam.c: 49:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  5551                           
  5552                           ;incstack = 0
  5553  0016C8  0EF8               	movlw	low _TMR3_DefaultInterruptHandler
  5554  0016CA  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  5555  0016CC  0E1F               	movlw	high _TMR3_DefaultInterruptHandler
  5556  0016CE  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  5557  0016D0  ECEE  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  5558  0016D4  A284               	btfss	3972,1,c	;volatile
  5559  0016D6  D002               	goto	i1u224_20
  5560  0016D8  0E01               	movlw	1
  5561  0016DA  D001               	goto	i1u224_26
  5562  0016DC                     i1u224_20:
  5563  0016DC  0E00               	movlw	0
  5564  0016DE                     i1u224_26:
  5565  0016DE  0AFF               	xorlw	255
  5566  0016E0  6E08               	movwf	??_timer_ISR& (0+255),c
  5567  0016E2  4608               	rlncf	??_timer_ISR,f,c
  5568  0016E4  5084               	movf	3972,w,c	;volatile
  5569  0016E6  1808               	xorwf	??_timer_ISR,w,c
  5570  0016E8  0BFD               	andlw	-3
  5571  0016EA  1808               	xorwf	??_timer_ISR,w,c
  5572  0016EC  6E84               	movwf	3972,c	;volatile
  5573                           
  5574                           ;cam.c: 52:     if (myCam.status == CAM_START) {
  5575  0016EE  EE24  F001         	lfsr	2,_myCam+513	;volatile
  5576  0016F2  50DF               	movf	indf2,w,c
  5577  0016F4  A4D8               	btfss	status,2,c
  5578  0016F6  D014               	goto	i1l3686
  5579                           
  5580                           ;cam.c: 53:         myCam.status = CAM_IN_PROGRESS;
  5581  0016F8  0E01               	movlw	1
  5582  0016FA  CFE8 F401          	movff	wreg,_myCam+513	;volatile
  5583                           
  5584                           ;cam.c: 54:         do { LATBbits.LATB2 = 0; } while(0);
  5585  0016FE  9483               	bcf	3971,2,c	;volatile
  5586                           
  5587                           ;cam.c: 55:         do { LATBbits.LATB1 = 0; } while(0);
  5588  001700  9283               	bcf	3971,1,c	;volatile
  5589                           
  5590                           ;cam.c: 56:         TMR3_WriteTimer(timing_val);
  5591  001702  C050  F006         	movff	_timing_val,i1TMR3_WriteTimer@timerVal
  5592  001706  C051  F007         	movff	_timing_val+1,i1TMR3_WriteTimer@timerVal+1
  5593  00170A  EC6F  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  5594                           
  5595                           ;cam.c: 57:         TMR3_SetInterruptHandler(timer_ISR);
  5596  00170E  0EC8               	movlw	low _timer_ISR
  5597  001710  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  5598  001712  0E16               	movlw	high _timer_ISR
  5599  001714  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  5600  001716  ECEE  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  5601                           
  5602                           ;cam.c: 58:         TMR3_StartTimer();
  5603  00171A  ECFA  F00F         	call	i1_TMR3_StartTimer	;wreg free
  5604                           
  5605                           ;cam.c: 59:     } else if (myCam.status == CAM_IN_PROGRESS) {
  5606  00171E  0012               	return	
  5607  001720                     i1l3686:
  5608  001720  C401  FFE8         	movff	_myCam+513,wreg	;volatile
  5609  001724  0A01               	xorlw	1
  5610  001726  A4D8               	btfss	status,2,c
  5611  001728  0012               	return	
  5612                           
  5613                           ;cam.c: 60:         do { LATBbits.LATB1 = 1; } while(0);
  5614  00172A  8283               	bsf	3971,1,c	;volatile
  5615                           
  5616                           ;cam.c: 61:         ADCON0bits.GO = 1;
  5617  00172C  010F               	movlb	15	; () banked
  5618  00172E  815B               	bsf	91,0,b	;volatile
  5619                           
  5620                           ; BSR set to: 15
  5621                           ;cam.c: 62:         ADCC_SetADIInterruptHandler(adc_ready_ISR);
  5622  001730  0EC2               	movlw	low _adc_ready_ISR
  5623  001732  6E06               	movwf	i1ADCC_SetADIInterruptHandler@InterruptHandler,c
  5624  001734  0E14               	movlw	high _adc_ready_ISR
  5625  001736  6E07               	movwf	i1ADCC_SetADIInterruptHandler@InterruptHandler+1,c
  5626  001738  ECDF  F00F         	call	i1_ADCC_SetADIInterruptHandler	;wreg free
  5627  00173C  0012               	return		;funcret
  5628  00173E                     __end_of_timer_ISR:
  5629                           	opt callstack 0
  5630                           
  5631 ;; *************** function i1_ADCC_SetADIInterruptHandler *****************
  5632 ;; Defined at:
  5633 ;;		line 305 in file "mcc_generated_files/adcc.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  5636 ;;		 -> adc_ready_ISR(1), ADCC_DefaultInterruptHandler(1), 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5648 ;;      Params:         2       0       0       0       0       0       0       0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5651 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5652 ;;Total ram usage:        2 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    3
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_timer_ISR
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text47
  5663  001FBE                     __ptext47:
  5664                           	opt callstack 0
  5665  001FBE                     i1_ADCC_SetADIInterruptHandler:
  5666                           	opt callstack 15
  5667                           
  5668                           ;mcc_generated_files/adcc.c: 306:     ADCC_ADI_InterruptHandler = InterruptHandler;
  5669                           
  5670                           ;incstack = 0
  5671  001FBE  C006  F03E         	movff	i1ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
  5672  001FC2  C007  F03F         	movff	i1ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
  5673  001FC6  0012               	return		;funcret
  5674  001FC8                     __end_ofi1_ADCC_SetADIInterruptHandler:
  5675                           	opt callstack 0
  5676                           
  5677 ;; *************** function _TMR1_ISR *****************
  5678 ;; Defined at:
  5679 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5696 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    5
  5700 ;; This function calls:
  5701 ;;		Absolute function
  5702 ;;		_TMR1_DefaultInterruptHandler
  5703 ;;		_TMR1_WriteTimer
  5704 ;;		_ping_TMR1Overflow_isr
  5705 ;; This function is called by:
  5706 ;;		_INTERRUPT_InterruptManagerLow
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text48
  5711  001CA0                     __ptext48:
  5712                           	opt callstack 0
  5713  001CA0                     _TMR1_ISR:
  5714                           	opt callstack 15
  5715                           
  5716                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  5717                           
  5718                           ;incstack = 0
  5719  001CA0  010E               	movlb	14	; () banked
  5720  001CA2  91C9               	bcf	201,0,b	;volatile
  5721                           
  5722                           ; BSR set to: 14
  5723                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5724  001CA4  C042  F006         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  5725  001CA8  C043  F007         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  5726  001CAC  EC61  F00F         	call	_TMR1_WriteTimer	;wreg free
  5727                           
  5728                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5729  001CB0  5040               	movf	_TMR1_InterruptHandler,w,c
  5730  001CB2  1041               	iorwf	_TMR1_InterruptHandler+1,w,c
  5731  001CB4  B4D8               	btfsc	status,2,c
  5732  001CB6  0012               	return	
  5733                           
  5734                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5735  001CB8  D801               	call	i1u235_28
  5736  001CBA  0012               	return	
  5737  001CBC                     i1u235_28:
  5738  001CBC  0005               	push	
  5739  001CBE  6EFA               	movwf	pclath,c
  5740  001CC0  5040               	movf	_TMR1_InterruptHandler,w,c
  5741  001CC2  6EFD               	movwf	tosl,c
  5742  001CC4  5041               	movf	_TMR1_InterruptHandler+1,w,c
  5743  001CC6  6EFE               	movwf	tosh,c
  5744  001CC8  50F8               	movf	tblptru,w,c
  5745  001CCA  6EFF               	movwf	tosu,c
  5746  001CCC  50FA               	movf	pclath,w,c
  5747  001CCE  0012               	return		;indir
  5748  001CD0                     __end_of_TMR1_ISR:
  5749                           	opt callstack 0
  5750                           
  5751 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5752 ;; Defined at:
  5753 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;		None
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1    wreg      void 
  5760 ;; Registers used:
  5761 ;;		None
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5767 ;;      Params:         0       0       0       0       0       0       0       0       0
  5768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5771 ;;Total ram usage:        0 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    3
  5774 ;; This function calls:
  5775 ;;		Nothing
  5776 ;; This function is called by:
  5777 ;;		_TMR1_Initialize
  5778 ;;		_ping_TMR1Overflow_isr
  5779 ;;		_ping_RC2_went_HIGH
  5780 ;;		_ping_init
  5781 ;;		_TMR1_ISR
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text49
  5786  001FFA                     __ptext49:
  5787                           	opt callstack 0
  5788  001FFA                     _TMR1_DefaultInterruptHandler:
  5789                           	opt callstack 16
  5790                           
  5791                           ;incstack = 0
  5792  001FFA  0012               	return		;funcret
  5793  001FFC                     __end_of_TMR1_DefaultInterruptHandler:
  5794                           	opt callstack 0
  5795                           
  5796 ;; *************** function _ping_TMR1Overflow_isr *****************
  5797 ;; Defined at:
  5798 ;;		line 54 in file "ping.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;		None
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5812 ;;      Params:         0       0       0       0       0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5815 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5816 ;;Total ram usage:        0 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    4
  5819 ;; This function calls:
  5820 ;;		i1_IOCCF2_SetInterruptHandler
  5821 ;;		i1_TMR1_SetInterruptHandler
  5822 ;; This function is called by:
  5823 ;;		_ping_send
  5824 ;;		_TMR1_ISR
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text50
  5829  001E88                     __ptext50:
  5830                           	opt callstack 0
  5831  001E88                     _ping_TMR1Overflow_isr:
  5832                           	opt callstack 15
  5833                           
  5834                           ;ping.c: 55:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5835                           
  5836                           ;incstack = 0
  5837  001E88  0EFA               	movlw	low _TMR1_DefaultInterruptHandler
  5838  001E8A  6E06               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler,c
  5839  001E8C  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  5840  001E8E  6E07               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1,c
  5841  001E90  ECE4  F00F         	call	i1_TMR1_SetInterruptHandler	;wreg free
  5842  001E94  9484               	bcf	3972,2,c	;volatile
  5843  001E96  8489               	bsf	3977,2,c	;volatile
  5844                           
  5845                           ;ping.c: 60:     IOCCF2_SetInterruptHandler(ping_RC2_went_HIGH);
  5846  001E98  0EDA               	movlw	low _ping_RC2_went_HIGH
  5847  001E9A  6E06               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler,c
  5848  001E9C  0E1B               	movlw	high _ping_RC2_went_HIGH
  5849  001E9E  6E07               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,c
  5850  001EA0  ECE9  F00F         	call	i1_IOCCF2_SetInterruptHandler	;wreg free
  5851  001EA4  0012               	return		;funcret
  5852  001EA6                     __end_of_ping_TMR1Overflow_isr:
  5853                           	opt callstack 0
  5854                           
  5855 ;; *************** function _PIN_MANAGER_IOC *****************
  5856 ;; Defined at:
  5857 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      void 
  5864 ;; Registers used:
  5865 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5871 ;;      Params:         0       0       0       0       0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5874 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5875 ;;Total ram usage:        0 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    6
  5878 ;; This function calls:
  5879 ;;		_IOCCF2_ISR
  5880 ;; This function is called by:
  5881 ;;		_INTERRUPT_InterruptManagerLow
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text51
  5886  001F58                     __ptext51:
  5887                           	opt callstack 0
  5888  001F58                     _PIN_MANAGER_IOC:
  5889                           	opt callstack 14
  5890                           
  5891                           ;mcc_generated_files/pin_manager.c: 130:     if(IOCCFbits.IOCCF2 == 1)
  5892                           
  5893                           ;incstack = 0
  5894  001F58  010F               	movlb	15	; () banked
  5895  001F5A  A515               	btfss	21,2,b	;volatile
  5896  001F5C  0012               	return	
  5897                           
  5898                           ; BSR set to: 15
  5899                           ;mcc_generated_files/pin_manager.c: 131:     {;mcc_generated_files/pin_manager.c: 132:  
      +                                 IOCCF2_ISR();
  5900  001F5E  ECEC  F00E         	call	_IOCCF2_ISR	;wreg free
  5901  001F62  0012               	return		;funcret
  5902  001F64                     __end_of_PIN_MANAGER_IOC:
  5903                           	opt callstack 0
  5904                           
  5905 ;; *************** function _IOCCF2_ISR *****************
  5906 ;; Defined at:
  5907 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;		None
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;		None
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      void 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0
  5922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5924 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5925 ;;Total ram usage:        0 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:    5
  5928 ;; This function calls:
  5929 ;;		Absolute function
  5930 ;;		_IOCCF2_DefaultInterruptHandler
  5931 ;;		_ping_RC2_went_HIGH
  5932 ;; This function is called by:
  5933 ;;		_PIN_MANAGER_IOC
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text52
  5938  001DD8                     __ptext52:
  5939                           	opt callstack 0
  5940  001DD8                     _IOCCF2_ISR:
  5941                           	opt callstack 14
  5942                           
  5943                           ;mcc_generated_files/pin_manager.c: 144:     if(IOCCF2_InterruptHandler)
  5944                           
  5945                           ;incstack = 0
  5946  001DD8  5046               	movf	_IOCCF2_InterruptHandler,w,c
  5947  001DDA  1047               	iorwf	_IOCCF2_InterruptHandler+1,w,c
  5948  001DDC  B4D8               	btfsc	status,2,c
  5949  001DDE  D00C               	goto	i1u214_29
  5950                           
  5951                           ;mcc_generated_files/pin_manager.c: 145:     {;mcc_generated_files/pin_manager.c: 146:  
      +                                 IOCCF2_InterruptHandler();
  5952  001DE0  D801               	call	i1u214_28
  5953  001DE2  D00A               	goto	i1u214_29
  5954  001DE4                     i1u214_28:
  5955  001DE4  0005               	push	
  5956  001DE6  6EFA               	movwf	pclath,c
  5957  001DE8  5046               	movf	_IOCCF2_InterruptHandler,w,c
  5958  001DEA  6EFD               	movwf	tosl,c
  5959  001DEC  5047               	movf	_IOCCF2_InterruptHandler+1,w,c
  5960  001DEE  6EFE               	movwf	tosh,c
  5961  001DF0  50F8               	movf	tblptru,w,c
  5962  001DF2  6EFF               	movwf	tosu,c
  5963  001DF4  50FA               	movf	pclath,w,c
  5964  001DF6  0012               	return		;indir
  5965  001DF8                     i1u214_29:
  5966                           
  5967                           ;mcc_generated_files/pin_manager.c: 148:     IOCCFbits.IOCCF2 = 0;
  5968  001DF8  010F               	movlb	15	; () banked
  5969  001DFA  9515               	bcf	21,2,b	;volatile
  5970                           
  5971                           ; BSR set to: 15
  5972  001DFC  0012               	return		;funcret
  5973  001DFE                     __end_of_IOCCF2_ISR:
  5974                           	opt callstack 0
  5975                           
  5976 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
  5977 ;; Defined at:
  5978 ;;		line 161 in file "mcc_generated_files/pin_manager.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		None
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5995 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    3
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_PIN_MANAGER_Initialize
  6003 ;;		_ping_RC2_went_HIGH
  6004 ;;		_ping_init
  6005 ;;		_IOCCF2_ISR
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text53
  6010  001FFC                     __ptext53:
  6011                           	opt callstack 0
  6012  001FFC                     _IOCCF2_DefaultInterruptHandler:
  6013                           	opt callstack 15
  6014                           
  6015                           ; BSR set to: 15
  6016                           ;incstack = 0
  6017  001FFC  0012               	return		;funcret
  6018  001FFE                     __end_of_IOCCF2_DefaultInterruptHandler:
  6019                           	opt callstack 0
  6020                           
  6021 ;; *************** function _ping_RC2_went_HIGH *****************
  6022 ;; Defined at:
  6023 ;;		line 66 in file "ping.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		wreg, status,2, status,0, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6037 ;;      Params:         0       0       0       0       0       0       0       0       0
  6038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6040 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6041 ;;Total ram usage:        0 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    4
  6044 ;; This function calls:
  6045 ;;		_TMR1_StartTimer
  6046 ;;		_TMR1_WriteTimer
  6047 ;;		i1_IOCCF2_SetInterruptHandler
  6048 ;;		i1_TMR1_SetInterruptHandler
  6049 ;; This function is called by:
  6050 ;;		_ping_TMR1Overflow_isr
  6051 ;;		_IOCCF2_ISR
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text54
  6056  001BDA                     __ptext54:
  6057                           	opt callstack 0
  6058  001BDA                     _ping_RC2_went_HIGH:
  6059                           	opt callstack 14
  6060                           
  6061                           ;ping.c: 67:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultInterruptHandler);
  6062                           
  6063                           ;incstack = 0
  6064  001BDA  0EFC               	movlw	low _IOCCF2_DefaultInterruptHandler
  6065  001BDC  6E06               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler,c
  6066  001BDE  0E1F               	movlw	high _IOCCF2_DefaultInterruptHandler
  6067  001BE0  6E07               	movwf	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,c
  6068  001BE2  ECE9  F00F         	call	i1_IOCCF2_SetInterruptHandler	;wreg free
  6069                           
  6070                           ;ping.c: 68:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  6071  001BE6  0EFA               	movlw	low _TMR1_DefaultInterruptHandler
  6072  001BE8  6E06               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler,c
  6073  001BEA  0E1F               	movlw	high _TMR1_DefaultInterruptHandler
  6074  001BEC  6E07               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1,c
  6075  001BEE  ECE4  F00F         	call	i1_TMR1_SetInterruptHandler	;wreg free
  6076                           
  6077                           ;ping.c: 70:     TMR1_WriteTimer(0);
  6078  001BF2  0E00               	movlw	0
  6079  001BF4  6E07               	movwf	TMR1_WriteTimer@timerVal+1,c
  6080  001BF6  0E00               	movlw	0
  6081  001BF8  6E06               	movwf	TMR1_WriteTimer@timerVal,c
  6082  001BFA  EC61  F00F         	call	_TMR1_WriteTimer	;wreg free
  6083                           
  6084                           ;ping.c: 71:     TMR1_StartTimer();
  6085  001BFE  ECF8  F00F         	call	_TMR1_StartTimer	;wreg free
  6086  001C02  8482               	bsf	3970,2,c	;volatile
  6087                           
  6088                           ;ping.c: 74:     PIR6 = 0;
  6089  001C04  0E00               	movlw	0
  6090  001C06  010E               	movlb	14	; () banked
  6091  001C08  6FCB               	movwf	203,b	;volatile
  6092                           
  6093                           ; BSR set to: 14
  6094                           ;ping.c: 75:     PIE6bits.CCP1IE = 1;
  6095  001C0A  81C3               	bsf	195,0,b	;volatile
  6096                           
  6097                           ; BSR set to: 14
  6098  001C0C  0012               	return		;funcret
  6099  001C0E                     __end_of_ping_RC2_went_HIGH:
  6100                           	opt callstack 0
  6101                           
  6102 ;; *************** function i1_TMR1_SetInterruptHandler *****************
  6103 ;; Defined at:
  6104 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  6107 ;;		 -> ping_TMR1Overflow_isr(1), TMR1_DefaultInterruptHandler(1), 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  1    wreg      void 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6119 ;;      Params:         2       0       0       0       0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6122 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6123 ;;Total ram usage:        2 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    3
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_ping_TMR1Overflow_isr
  6130 ;;		_ping_RC2_went_HIGH
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text55
  6135  001FC8                     __ptext55:
  6136                           	opt callstack 0
  6137  001FC8                     i1_TMR1_SetInterruptHandler:
  6138                           	opt callstack 15
  6139                           
  6140                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6141                           
  6142                           ; BSR set to: 14
  6143                           ;incstack = 0
  6144  001FC8  C006  F040         	movff	i1TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  6145  001FCC  C007  F041         	movff	i1TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  6146  001FD0  0012               	return		;funcret
  6147  001FD2                     __end_ofi1_TMR1_SetInterruptHandler:
  6148                           	opt callstack 0
  6149                           
  6150 ;; *************** function i1_IOCCF2_SetInterruptHandler *****************
  6151 ;; Defined at:
  6152 ;;		line 154 in file "mcc_generated_files/pin_manager.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  6155 ;;		 -> ping_RC2_went_HIGH(1), IOCCF2_DefaultInterruptHandler(1), 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, status,2, status,0
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6167 ;;      Params:         2       0       0       0       0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6170 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6171 ;;Total ram usage:        2 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    3
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		_ping_TMR1Overflow_isr
  6178 ;;		_ping_RC2_went_HIGH
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text56
  6183  001FD2                     __ptext56:
  6184                           	opt callstack 0
  6185  001FD2                     i1_IOCCF2_SetInterruptHandler:
  6186                           	opt callstack 15
  6187                           
  6188                           ;mcc_generated_files/pin_manager.c: 155:     IOCCF2_InterruptHandler = InterruptHandler;
  6189                           
  6190                           ;incstack = 0
  6191  001FD2  C006  F046         	movff	i1IOCCF2_SetInterruptHandler@InterruptHandler,_IOCCF2_InterruptHandler
  6192  001FD6  C007  F047         	movff	i1IOCCF2_SetInterruptHandler@InterruptHandler+1,_IOCCF2_InterruptHandler+1
  6193  001FDA  0012               	return		;funcret
  6194  001FDC                     __end_ofi1_IOCCF2_SetInterruptHandler:
  6195                           	opt callstack 0
  6196                           
  6197 ;; *************** function _TMR1_WriteTimer *****************
  6198 ;; Defined at:
  6199 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  timerVal        2    5[COMRAM] unsigned short 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, status,2
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6213 ;;      Params:         2       0       0       0       0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6216 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6217 ;;Total ram usage:        2 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    3
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_TMR1_ISR
  6224 ;;		_ping_RC2_went_HIGH
  6225 ;;		_TMR1_Reload
  6226 ;;		_ping_send
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text57
  6231  001EC2                     __ptext57:
  6232                           	opt callstack 0
  6233  001EC2                     _TMR1_WriteTimer:
  6234                           	opt callstack 16
  6235                           
  6236                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
  6237                           
  6238                           ;incstack = 0
  6239  001EC2  A4CE               	btfss	4046,2,c	;volatile
  6240  001EC4  D007               	goto	i1l3132
  6241                           
  6242                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  6243  001EC6  90CE               	bcf	4046,0,c	;volatile
  6244                           
  6245                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
  6246  001EC8  5007               	movf	TMR1_WriteTimer@timerVal+1,w,c
  6247  001ECA  6ECD               	movwf	4045,c	;volatile
  6248                           
  6249                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
  6250  001ECC  C006  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6251                           
  6252                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  6253  001ED0  80CE               	bsf	4046,0,c	;volatile
  6254                           
  6255                           ;mcc_generated_files/tmr1.c: 140:     }
  6256  001ED2  0012               	return	
  6257  001ED4                     i1l3132:
  6258                           
  6259                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
  6260  001ED4  5007               	movf	TMR1_WriteTimer@timerVal+1,w,c
  6261  001ED6  6ECD               	movwf	4045,c	;volatile
  6262                           
  6263                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
  6264  001ED8  C006  FFCC         	movff	TMR1_WriteTimer@timerVal,4044	;volatile
  6265  001EDC  0012               	return		;funcret
  6266  001EDE                     __end_of_TMR1_WriteTimer:
  6267                           	opt callstack 0
  6268                           
  6269 ;; *************** function _TMR1_StartTimer *****************
  6270 ;; Defined at:
  6271 ;;		line 99 in file "mcc_generated_files/tmr1.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		None
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6289 ;;Total ram usage:        0 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    3
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_ping_RC2_went_HIGH
  6296 ;;		_ping_send
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text58
  6301  001FF0                     __ptext58:
  6302                           	opt callstack 0
  6303  001FF0                     _TMR1_StartTimer:
  6304                           	opt callstack 14
  6305                           
  6306                           ;mcc_generated_files/tmr1.c: 102:     T1CONbits.TMR1ON = 1;
  6307                           
  6308                           ;incstack = 0
  6309  001FF0  80CE               	bsf	4046,0,c	;volatile
  6310  001FF2  0012               	return		;funcret
  6311  001FF4                     __end_of_TMR1_StartTimer:
  6312                           	opt callstack 0
  6313                           
  6314 ;; *************** function _CCP1_CaptureISR *****************
  6315 ;; Defined at:
  6316 ;;		line 94 in file "mcc_generated_files/ccp1.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;		None
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  module          2   46[COMRAM] struct CCPR1Reg_tag
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6330 ;;      Params:         0       0       0       0       0       0       0       0       0
  6331 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6333 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6334 ;;Total ram usage:        2 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    5
  6337 ;; This function calls:
  6338 ;;		Absolute function
  6339 ;;		_CCP1_DefaultCallBack
  6340 ;;		_ping_CCP1_triggered
  6341 ;; This function is called by:
  6342 ;;		_INTERRUPT_InterruptManagerLow
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text59
  6347  001D5A                     __ptext59:
  6348                           	opt callstack 0
  6349  001D5A                     _CCP1_CaptureISR:
  6350                           	opt callstack 15
  6351                           
  6352                           ;mcc_generated_files/ccp1.c: 96:     CCP1_PERIOD_REG_T module;;mcc_generated_files/ccp1.
      +                          c: 99:     PIR6bits.CCP1IF = 0;
  6353                           
  6354                           ;incstack = 0
  6355  001D5A  010E               	movlb	14	; () banked
  6356  001D5C  91CB               	bcf	203,0,b	;volatile
  6357                           
  6358                           ;mcc_generated_files/ccp1.c: 102:     module.ccpr1l = CCPR1L;
  6359  001D5E  CFA9 F02F          	movff	4009,CCP1_CaptureISR@module	;volatile
  6360                           
  6361                           ;mcc_generated_files/ccp1.c: 103:     module.ccpr1h = CCPR1H;
  6362  001D62  CFAA F030          	movff	4010,CCP1_CaptureISR@module+1	;volatile
  6363                           
  6364                           ; BSR set to: 14
  6365                           ;mcc_generated_files/ccp1.c: 106:     CCP1_CallBack(module.ccpr1_16Bit);
  6366  001D66  C02F  F02D         	movff	CCP1_CaptureISR@module,ping_CCP1_triggered@timeOfFlight
  6367  001D6A  C030  F02E         	movff	CCP1_CaptureISR@module+1,ping_CCP1_triggered@timeOfFlight+1
  6368  001D6E  D801               	call	i1u240_28
  6369  001D70  0012               	return	
  6370  001D72                     i1u240_28:
  6371  001D72  0005               	push	
  6372  001D74  6EFA               	movwf	pclath,c
  6373  001D76  5044               	movf	_CCP1_CallBack,w,c
  6374  001D78  6EFD               	movwf	tosl,c
  6375  001D7A  5045               	movf	_CCP1_CallBack+1,w,c
  6376  001D7C  6EFE               	movwf	tosh,c
  6377  001D7E  50F8               	movf	tblptru,w,c
  6378  001D80  6EFF               	movwf	tosu,c
  6379  001D82  50FA               	movf	pclath,w,c
  6380  001D84  0012               	return		;indir
  6381  001D86                     __end_of_CCP1_CaptureISR:
  6382                           	opt callstack 0
  6383                           
  6384 ;; *************** function _CCP1_DefaultCallBack *****************
  6385 ;; Defined at:
  6386 ;;		line 60 in file "mcc_generated_files/ccp1.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  capturedValu    2   44[COMRAM] unsigned short 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1    wreg      void 
  6393 ;; Registers used:
  6394 ;;		None
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6400 ;;      Params:         2       0       0       0       0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6403 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6404 ;;Total ram usage:        2 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    3
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_CCP1_Initialize
  6411 ;;		_CCP1_CaptureISR
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text60
  6416  001FFE                     __ptext60:
  6417                           	opt callstack 0
  6418  001FFE                     _CCP1_DefaultCallBack:
  6419                           	opt callstack 16
  6420                           
  6421                           ;incstack = 0
  6422  001FFE  0012               	return		;funcret
  6423  002000                     __end_of_CCP1_DefaultCallBack:
  6424                           	opt callstack 0
  6425                           
  6426 ;; *************** function _ping_CCP1_triggered *****************
  6427 ;; Defined at:
  6428 ;;		line 83 in file "ping.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  timeOfFlight    2   44[COMRAM] unsigned short 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;		None
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1    wreg      void 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6442 ;;      Params:         2       0       0       0       0       0       0       0       0
  6443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6445 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6446 ;;Total ram usage:        2 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    4
  6449 ;; This function calls:
  6450 ;;		___flmul
  6451 ;;		___xxtofl
  6452 ;; This function is called by:
  6453 ;;		_ping_init
  6454 ;;		_CCP1_CaptureISR
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text61
  6459  00188C                     __ptext61:
  6460                           	opt callstack 0
  6461  00188C                     _ping_CCP1_triggered:
  6462                           	opt callstack 15
  6463                           
  6464                           ;ping.c: 84:     status.tof = timeOfFlight;
  6465                           
  6466                           ;incstack = 0
  6467  00188C  C02D  F04E         	movff	ping_CCP1_triggered@timeOfFlight,_status+6	;volatile
  6468  001890  C02E  F04F         	movff	ping_CCP1_triggered@timeOfFlight+1,_status+7	;volatile
  6469                           
  6470                           ;ping.c: 85:     status.pingStarted = 0;
  6471  001894  0E00               	movlw	0
  6472  001896  6E4D               	movwf	_status+5,c	;volatile
  6473                           
  6474                           ;ping.c: 86:     status.readReady = 1;
  6475  001898  0E01               	movlw	1
  6476  00189A  6E48               	movwf	_status,c	;volatile
  6477                           
  6478                           ;ping.c: 87:     PIE6bits.CCP1IE = 0;
  6479  00189C  010E               	movlb	14	; () banked
  6480  00189E  91C3               	bcf	195,0,b	;volatile
  6481                           
  6482                           ; BSR set to: 14
  6483  0018A0  9482               	bcf	3970,2,c	;volatile
  6484                           
  6485                           ; BSR set to: 14
  6486                           ;ping.c: 89:     status.measurment = 0.009 * timeOfFlight;
  6487  0018A2  C02D  F006         	movff	ping_CCP1_triggered@timeOfFlight,___xxtofl@val
  6488  0018A6  C02E  F007         	movff	ping_CCP1_triggered@timeOfFlight+1,___xxtofl@val+1
  6489  0018AA  6A08               	clrf	___xxtofl@val+2,c
  6490  0018AC  6A09               	clrf	___xxtofl@val+3,c
  6491  0018AE  0E00               	movlw	0
  6492  0018B0  EC48  F008         	call	___xxtofl
  6493  0018B4  C006  F014         	movff	?___xxtofl,___flmul@b
  6494  0018B8  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  6495  0018BC  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  6496  0018C0  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  6497  0018C4  0EBC               	movlw	188
  6498  0018C6  6E18               	movwf	___flmul@a,c
  6499  0018C8  0E74               	movlw	116
  6500  0018CA  6E19               	movwf	___flmul@a+1,c
  6501  0018CC  0E13               	movlw	19
  6502  0018CE  6E1A               	movwf	___flmul@a+2,c
  6503  0018D0  0E3C               	movlw	60
  6504  0018D2  6E1B               	movwf	___flmul@a+3,c
  6505  0018D4  EC14  F004         	call	___flmul	;wreg free
  6506  0018D8  C014  F049         	movff	?___flmul,_status+1	;volatile
  6507  0018DC  C015  F04A         	movff	?___flmul+1,_status+2	;volatile
  6508  0018E0  C016  F04B         	movff	?___flmul+2,_status+3	;volatile
  6509  0018E4  C017  F04C         	movff	?___flmul+3,_status+4	;volatile
  6510                           
  6511                           ;ping.c: 90:     status.readReady = 1;
  6512  0018E8  0E01               	movlw	1
  6513  0018EA  6E48               	movwf	_status,c	;volatile
  6514                           
  6515                           ;ping.c: 91:     status.pingStarted = 0;
  6516  0018EC  0E00               	movlw	0
  6517  0018EE  6E4D               	movwf	_status+5,c	;volatile
  6518  0018F0  0012               	return		;funcret
  6519  0018F2                     __end_of_ping_CCP1_triggered:
  6520                           	opt callstack 0
  6521                           
  6522 ;; *************** function ___xxtofl *****************
  6523 ;; Defined at:
  6524 ;;		line 10 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  sign            1    wreg     unsigned char 
  6527 ;;  val             4    5[COMRAM] long 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  sign            1   13[COMRAM] unsigned char 
  6530 ;;  arg             4   15[COMRAM] unsigned long 
  6531 ;;  exp             1   14[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  4    5[COMRAM] unsigned char 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6541 ;;      Params:         4       0       0       0       0       0       0       0       0
  6542 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6543 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6544 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6545 ;;Total ram usage:       14 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    3
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_ping_CCP1_triggered
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           	psect	text62
  6556  001090                     __ptext62:
  6557                           	opt callstack 0
  6558  001090                     ___xxtofl:
  6559                           	opt callstack 15
  6560                           
  6561                           ;incstack = 0
  6562                           ;___xxtofl@sign stored from wreg
  6563  001090  6E0E               	movwf	___xxtofl@sign,c
  6564  001092  500E               	movf	___xxtofl@sign,w,c
  6565  001094  A4D8               	btfss	status,2,c
  6566  001096  AE09               	btfss	___xxtofl@val+3,7,c
  6567  001098  D01A               	goto	i1l1694
  6568  00109A  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  6569  00109E  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  6570  0010A2  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  6571  0010A6  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  6572  0010AA  1E0A               	comf	??___xxtofl,f,c
  6573  0010AC  1E0B               	comf	??___xxtofl+1,f,c
  6574  0010AE  1E0C               	comf	??___xxtofl+2,f,c
  6575  0010B0  1E0D               	comf	??___xxtofl+3,f,c
  6576  0010B2  2A0A               	incf	??___xxtofl,f,c
  6577  0010B4  0E00               	movlw	0
  6578  0010B6  220B               	addwfc	??___xxtofl+1,f,c
  6579  0010B8  220C               	addwfc	??___xxtofl+2,f,c
  6580  0010BA  220D               	addwfc	??___xxtofl+3,f,c
  6581  0010BC  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  6582  0010C0  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  6583  0010C4  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  6584  0010C8  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  6585  0010CC  D008               	goto	i1l3410
  6586  0010CE                     i1l1694:
  6587  0010CE  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  6588  0010D2  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6589  0010D6  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6590  0010DA  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6591  0010DE                     i1l3410:
  6592  0010DE  5006               	movf	___xxtofl@val,w,c
  6593  0010E0  1007               	iorwf	___xxtofl@val+1,w,c
  6594  0010E2  1008               	iorwf	___xxtofl@val+2,w,c
  6595  0010E4  1009               	iorwf	___xxtofl@val+3,w,c
  6596  0010E6  A4D8               	btfss	status,2,c
  6597  0010E8  D009               	goto	i1l3416
  6598  0010EA  0E00               	movlw	0
  6599  0010EC  6E06               	movwf	?___xxtofl,c
  6600  0010EE  0E00               	movlw	0
  6601  0010F0  6E07               	movwf	?___xxtofl+1,c
  6602  0010F2  0E00               	movlw	0
  6603  0010F4  6E08               	movwf	?___xxtofl+2,c
  6604  0010F6  0E00               	movlw	0
  6605  0010F8  6E09               	movwf	?___xxtofl+3,c
  6606  0010FA  0012               	return	
  6607  0010FC                     i1l3416:
  6608  0010FC  0E96               	movlw	150
  6609  0010FE  6E0F               	movwf	___xxtofl@exp,c
  6610  001100  D006               	goto	i1l3420
  6611  001102                     i1l3418:
  6612  001102  2A0F               	incf	___xxtofl@exp,f,c
  6613  001104  90D8               	bcf	status,0,c
  6614  001106  3213               	rrcf	___xxtofl@arg+3,f,c
  6615  001108  3212               	rrcf	___xxtofl@arg+2,f,c
  6616  00110A  3211               	rrcf	___xxtofl@arg+1,f,c
  6617  00110C  3210               	rrcf	___xxtofl@arg,f,c
  6618  00110E                     i1l3420:
  6619  00110E  0E00               	movlw	0
  6620  001110  1410               	andwf	___xxtofl@arg,w,c
  6621  001112  6E0A               	movwf	??___xxtofl& (0+255),c
  6622  001114  0E00               	movlw	0
  6623  001116  1411               	andwf	___xxtofl@arg+1,w,c
  6624  001118  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6625  00111A  0E00               	movlw	0
  6626  00111C  1412               	andwf	___xxtofl@arg+2,w,c
  6627  00111E  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6628  001120  0EFE               	movlw	254
  6629  001122  1413               	andwf	___xxtofl@arg+3,w,c
  6630  001124  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6631  001126  500A               	movf	??___xxtofl,w,c
  6632  001128  100B               	iorwf	??___xxtofl+1,w,c
  6633  00112A  100C               	iorwf	??___xxtofl+2,w,c
  6634  00112C  100D               	iorwf	??___xxtofl+3,w,c
  6635  00112E  B4D8               	btfsc	status,2,c
  6636  001130  D00D               	goto	i1l1701
  6637  001132  D7E7               	goto	i1l3418
  6638  001134                     i1l3422:
  6639  001134  2A0F               	incf	___xxtofl@exp,f,c
  6640  001136  0E01               	movlw	1
  6641  001138  2610               	addwf	___xxtofl@arg,f,c
  6642  00113A  0E00               	movlw	0
  6643  00113C  2211               	addwfc	___xxtofl@arg+1,f,c
  6644  00113E  2212               	addwfc	___xxtofl@arg+2,f,c
  6645  001140  2213               	addwfc	___xxtofl@arg+3,f,c
  6646  001142  90D8               	bcf	status,0,c
  6647  001144  3213               	rrcf	___xxtofl@arg+3,f,c
  6648  001146  3212               	rrcf	___xxtofl@arg+2,f,c
  6649  001148  3211               	rrcf	___xxtofl@arg+1,f,c
  6650  00114A  3210               	rrcf	___xxtofl@arg,f,c
  6651  00114C                     i1l1701:
  6652  00114C  0E00               	movlw	0
  6653  00114E  1410               	andwf	___xxtofl@arg,w,c
  6654  001150  6E0A               	movwf	??___xxtofl& (0+255),c
  6655  001152  0E00               	movlw	0
  6656  001154  1411               	andwf	___xxtofl@arg+1,w,c
  6657  001156  6E0B               	movwf	(??___xxtofl+1)& (0+255),c
  6658  001158  0E00               	movlw	0
  6659  00115A  1412               	andwf	___xxtofl@arg+2,w,c
  6660  00115C  6E0C               	movwf	(??___xxtofl+2)& (0+255),c
  6661  00115E  0EFF               	movlw	255
  6662  001160  1413               	andwf	___xxtofl@arg+3,w,c
  6663  001162  6E0D               	movwf	(??___xxtofl+3)& (0+255),c
  6664  001164  500A               	movf	??___xxtofl,w,c
  6665  001166  100B               	iorwf	??___xxtofl+1,w,c
  6666  001168  100C               	iorwf	??___xxtofl+2,w,c
  6667  00116A  100D               	iorwf	??___xxtofl+3,w,c
  6668  00116C  B4D8               	btfsc	status,2,c
  6669  00116E  D007               	goto	i1l3430
  6670  001170  D7E1               	goto	i1l3422
  6671  001172                     i1l3428:
  6672  001172  060F               	decf	___xxtofl@exp,f,c
  6673  001174  90D8               	bcf	status,0,c
  6674  001176  3610               	rlcf	___xxtofl@arg,f,c
  6675  001178  3611               	rlcf	___xxtofl@arg+1,f,c
  6676  00117A  3612               	rlcf	___xxtofl@arg+2,f,c
  6677  00117C  3613               	rlcf	___xxtofl@arg+3,f,c
  6678  00117E                     i1l3430:
  6679  00117E  BE12               	btfsc	___xxtofl@arg+2,7,c
  6680  001180  D003               	goto	i1u208_20
  6681  001182  0E02               	movlw	2
  6682  001184  600F               	cpfslt	___xxtofl@exp,c
  6683  001186  D7F5               	goto	i1l3428
  6684  001188                     i1u208_20:
  6685  001188  A00F               	btfss	___xxtofl@exp,0,c
  6686  00118A  9E12               	bcf	___xxtofl@arg+2,7,c
  6687  00118C  90D8               	bcf	status,0,c
  6688  00118E  320F               	rrcf	___xxtofl@exp,f,c
  6689  001190  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  6690  001194  6A0B               	clrf	(??___xxtofl+1)& (0+255),c
  6691  001196  6A0C               	clrf	(??___xxtofl+2)& (0+255),c
  6692  001198  6A0D               	clrf	(??___xxtofl+3)& (0+255),c
  6693  00119A  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  6694  00119E  6A0C               	clrf	??___xxtofl+2,c
  6695  0011A0  6A0B               	clrf	??___xxtofl+1,c
  6696  0011A2  6A0A               	clrf	??___xxtofl,c
  6697  0011A4  500A               	movf	??___xxtofl,w,c
  6698  0011A6  1210               	iorwf	___xxtofl@arg,f,c
  6699  0011A8  500B               	movf	??___xxtofl+1,w,c
  6700  0011AA  1211               	iorwf	___xxtofl@arg+1,f,c
  6701  0011AC  500C               	movf	??___xxtofl+2,w,c
  6702  0011AE  1212               	iorwf	___xxtofl@arg+2,f,c
  6703  0011B0  500D               	movf	??___xxtofl+3,w,c
  6704  0011B2  1213               	iorwf	___xxtofl@arg+3,f,c
  6705  0011B4  500E               	movf	___xxtofl@sign,w,c
  6706  0011B6  A4D8               	btfss	status,2,c
  6707  0011B8  AE09               	btfss	___xxtofl@val+3,7,c
  6708  0011BA  D001               	goto	i1l3446
  6709  0011BC  8E13               	bsf	___xxtofl@arg+3,7,c
  6710  0011BE                     i1l3446:
  6711  0011BE  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  6712  0011C2  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  6713  0011C6  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  6714  0011CA  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  6715  0011CE  0012               	return		;funcret
  6716  0011D0                     __end_of___xxtofl:
  6717                           	opt callstack 0
  6718                           
  6719 ;; *************** function ___flmul *****************
  6720 ;; Defined at:
  6721 ;;		line 8 in file "/Applications/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  b               4   19[COMRAM] unsigned char 
  6724 ;;  a               4   23[COMRAM] unsigned char 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  prod            4   38[COMRAM] struct .
  6727 ;;  grs             4   32[COMRAM] unsigned long 
  6728 ;;  temp            2   42[COMRAM] struct .
  6729 ;;  bexp            1   37[COMRAM] unsigned char 
  6730 ;;  aexp            1   36[COMRAM] unsigned char 
  6731 ;;  sign            1   31[COMRAM] unsigned char 
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  4   19[COMRAM] unsigned char 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0, prodl, prodh
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6741 ;;      Params:         8       0       0       0       0       0       0       0       0
  6742 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6743 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6744 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6745 ;;Total ram usage:       25 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; Hardware stack levels required when called:    3
  6748 ;; This function calls:
  6749 ;;		Nothing
  6750 ;; This function is called by:
  6751 ;;		_ping_CCP1_triggered
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text63
  6756  000828                     __ptext63:
  6757                           	opt callstack 0
  6758  000828                     ___flmul:
  6759                           	opt callstack 15
  6760                           
  6761                           ;incstack = 0
  6762  000828  5017               	movf	___flmul@b+3,w,c
  6763  00082A  0B80               	andlw	128
  6764  00082C  6E20               	movwf	___flmul@sign,c
  6765  00082E  5017               	movf	___flmul@b+3,w,c
  6766  000830  2417               	addwf	___flmul@b+3,w,c
  6767  000832  6E26               	movwf	___flmul@bexp,c
  6768  000834  BE16               	btfsc	___flmul@b+2,7,c
  6769  000836  8026               	bsf	___flmul@bexp,0,c
  6770  000838  5026               	movf	___flmul@bexp,w,c
  6771  00083A  B4D8               	btfsc	status,2,c
  6772  00083C  D00D               	goto	i1l3288
  6773  00083E  2826               	incf	___flmul@bexp,w,c
  6774  000840  A4D8               	btfss	status,2,c
  6775  000842  D008               	goto	i1l3286
  6776  000844  0E00               	movlw	0
  6777  000846  6E14               	movwf	___flmul@b,c
  6778  000848  0E00               	movlw	0
  6779  00084A  6E15               	movwf	___flmul@b+1,c
  6780  00084C  0E00               	movlw	0
  6781  00084E  6E16               	movwf	___flmul@b+2,c
  6782  000850  0E00               	movlw	0
  6783  000852  6E17               	movwf	___flmul@b+3,c
  6784  000854                     i1l3286:
  6785  000854  8E16               	bsf	___flmul@b+2,7,c
  6786  000856  D008               	goto	i1l3290
  6787  000858                     i1l3288:
  6788  000858  0E00               	movlw	0
  6789  00085A  6E14               	movwf	___flmul@b,c
  6790  00085C  0E00               	movlw	0
  6791  00085E  6E15               	movwf	___flmul@b+1,c
  6792  000860  0E00               	movlw	0
  6793  000862  6E16               	movwf	___flmul@b+2,c
  6794  000864  0E00               	movlw	0
  6795  000866  6E17               	movwf	___flmul@b+3,c
  6796  000868                     i1l3290:
  6797  000868  501B               	movf	___flmul@a+3,w,c
  6798  00086A  0B80               	andlw	128
  6799  00086C  1A20               	xorwf	___flmul@sign,f,c
  6800  00086E  501B               	movf	___flmul@a+3,w,c
  6801  000870  241B               	addwf	___flmul@a+3,w,c
  6802  000872  6E25               	movwf	___flmul@aexp,c
  6803  000874  BE1A               	btfsc	___flmul@a+2,7,c
  6804  000876  8025               	bsf	___flmul@aexp,0,c
  6805  000878  5025               	movf	___flmul@aexp,w,c
  6806  00087A  B4D8               	btfsc	status,2,c
  6807  00087C  D00D               	goto	i1l3306
  6808  00087E  2825               	incf	___flmul@aexp,w,c
  6809  000880  A4D8               	btfss	status,2,c
  6810  000882  D008               	goto	i1l3304
  6811  000884  0E00               	movlw	0
  6812  000886  6E18               	movwf	___flmul@a,c
  6813  000888  0E00               	movlw	0
  6814  00088A  6E19               	movwf	___flmul@a+1,c
  6815  00088C  0E00               	movlw	0
  6816  00088E  6E1A               	movwf	___flmul@a+2,c
  6817  000890  0E00               	movlw	0
  6818  000892  6E1B               	movwf	___flmul@a+3,c
  6819  000894                     i1l3304:
  6820  000894  8E1A               	bsf	___flmul@a+2,7,c
  6821  000896  D008               	goto	i1l1653
  6822  000898                     i1l3306:
  6823  000898  0E00               	movlw	0
  6824  00089A  6E18               	movwf	___flmul@a,c
  6825  00089C  0E00               	movlw	0
  6826  00089E  6E19               	movwf	___flmul@a+1,c
  6827  0008A0  0E00               	movlw	0
  6828  0008A2  6E1A               	movwf	___flmul@a+2,c
  6829  0008A4  0E00               	movlw	0
  6830  0008A6  6E1B               	movwf	___flmul@a+3,c
  6831  0008A8                     i1l1653:
  6832  0008A8  5025               	movf	___flmul@aexp,w,c
  6833  0008AA  B4D8               	btfsc	status,2,c
  6834  0008AC  D003               	goto	i1u190_20
  6835  0008AE  5026               	movf	___flmul@bexp,w,c
  6836  0008B0  A4D8               	btfss	status,2,c
  6837  0008B2  D009               	goto	i1l3314
  6838  0008B4                     i1u190_20:
  6839  0008B4  0E00               	movlw	0
  6840  0008B6  6E14               	movwf	?___flmul,c
  6841  0008B8  0E00               	movlw	0
  6842  0008BA  6E15               	movwf	?___flmul+1,c
  6843  0008BC  0E00               	movlw	0
  6844  0008BE  6E16               	movwf	?___flmul+2,c
  6845  0008C0  0E00               	movlw	0
  6846  0008C2  6E17               	movwf	?___flmul+3,c
  6847  0008C4  0012               	return	
  6848  0008C6                     i1l3314:
  6849  0008C6  501A               	movf	___flmul@a+2,w,c
  6850  0008C8  0214               	mulwf	___flmul@b,c
  6851  0008CA  CFF3 F02B          	movff	prodl,___flmul@temp
  6852  0008CE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6853  0008D2  502B               	movf	___flmul@temp,w,c
  6854  0008D4  6E21               	movwf	___flmul@grs,c
  6855  0008D6  6A22               	clrf	___flmul@grs+1,c
  6856  0008D8  6A23               	clrf	___flmul@grs+2,c
  6857  0008DA  6A24               	clrf	___flmul@grs+3,c
  6858  0008DC  502C               	movf	___flmul@temp+1,w,c
  6859  0008DE  6E27               	movwf	___flmul@prod,c
  6860  0008E0  6A28               	clrf	___flmul@prod+1,c
  6861  0008E2  6A29               	clrf	___flmul@prod+2,c
  6862  0008E4  6A2A               	clrf	___flmul@prod+3,c
  6863  0008E6  5019               	movf	___flmul@a+1,w,c
  6864  0008E8  0215               	mulwf	___flmul@b+1,c
  6865  0008EA  CFF3 F02B          	movff	prodl,___flmul@temp
  6866  0008EE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6867  0008F2  502B               	movf	___flmul@temp,w,c
  6868  0008F4  2621               	addwf	___flmul@grs,f,c
  6869  0008F6  0E00               	movlw	0
  6870  0008F8  2222               	addwfc	___flmul@grs+1,f,c
  6871  0008FA  2223               	addwfc	___flmul@grs+2,f,c
  6872  0008FC  2224               	addwfc	___flmul@grs+3,f,c
  6873  0008FE  502C               	movf	___flmul@temp+1,w,c
  6874  000900  2627               	addwf	___flmul@prod,f,c
  6875  000902  0E00               	movlw	0
  6876  000904  2228               	addwfc	___flmul@prod+1,f,c
  6877  000906  2229               	addwfc	___flmul@prod+2,f,c
  6878  000908  222A               	addwfc	___flmul@prod+3,f,c
  6879  00090A  5018               	movf	___flmul@a,w,c
  6880  00090C  0216               	mulwf	___flmul@b+2,c
  6881  00090E  CFF3 F02B          	movff	prodl,___flmul@temp
  6882  000912  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6883  000916  502B               	movf	___flmul@temp,w,c
  6884  000918  2621               	addwf	___flmul@grs,f,c
  6885  00091A  0E00               	movlw	0
  6886  00091C  2222               	addwfc	___flmul@grs+1,f,c
  6887  00091E  2223               	addwfc	___flmul@grs+2,f,c
  6888  000920  2224               	addwfc	___flmul@grs+3,f,c
  6889  000922  502C               	movf	___flmul@temp+1,w,c
  6890  000924  2627               	addwf	___flmul@prod,f,c
  6891  000926  0E00               	movlw	0
  6892  000928  2228               	addwfc	___flmul@prod+1,f,c
  6893  00092A  2229               	addwfc	___flmul@prod+2,f,c
  6894  00092C  222A               	addwfc	___flmul@prod+3,f,c
  6895  00092E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6896  000932  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6897  000936  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6898  00093A  6A21               	clrf	___flmul@grs,c
  6899  00093C  5018               	movf	___flmul@a,w,c
  6900  00093E  0215               	mulwf	___flmul@b+1,c
  6901  000940  CFF3 F02B          	movff	prodl,___flmul@temp
  6902  000944  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6903  000948  502B               	movf	___flmul@temp,w,c
  6904  00094A  2621               	addwf	___flmul@grs,f,c
  6905  00094C  502C               	movf	___flmul@temp+1,w,c
  6906  00094E  2222               	addwfc	___flmul@grs+1,f,c
  6907  000950  0E00               	movlw	0
  6908  000952  2223               	addwfc	___flmul@grs+2,f,c
  6909  000954  0E00               	movlw	0
  6910  000956  2224               	addwfc	___flmul@grs+3,f,c
  6911  000958  5019               	movf	___flmul@a+1,w,c
  6912  00095A  0214               	mulwf	___flmul@b,c
  6913  00095C  CFF3 F02B          	movff	prodl,___flmul@temp
  6914  000960  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6915  000964  502B               	movf	___flmul@temp,w,c
  6916  000966  2621               	addwf	___flmul@grs,f,c
  6917  000968  502C               	movf	___flmul@temp+1,w,c
  6918  00096A  2222               	addwfc	___flmul@grs+1,f,c
  6919  00096C  0E00               	movlw	0
  6920  00096E  2223               	addwfc	___flmul@grs+2,f,c
  6921  000970  0E00               	movlw	0
  6922  000972  2224               	addwfc	___flmul@grs+3,f,c
  6923  000974  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  6924  000978  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  6925  00097C  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  6926  000980  6A21               	clrf	___flmul@grs,c
  6927  000982  5018               	movf	___flmul@a,w,c
  6928  000984  0214               	mulwf	___flmul@b,c
  6929  000986  CFF3 F02B          	movff	prodl,___flmul@temp
  6930  00098A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6931  00098E  502B               	movf	___flmul@temp,w,c
  6932  000990  2621               	addwf	___flmul@grs,f,c
  6933  000992  502C               	movf	___flmul@temp+1,w,c
  6934  000994  2222               	addwfc	___flmul@grs+1,f,c
  6935  000996  0E00               	movlw	0
  6936  000998  2223               	addwfc	___flmul@grs+2,f,c
  6937  00099A  0E00               	movlw	0
  6938  00099C  2224               	addwfc	___flmul@grs+3,f,c
  6939  00099E  501A               	movf	___flmul@a+2,w,c
  6940  0009A0  0215               	mulwf	___flmul@b+1,c
  6941  0009A2  CFF3 F02B          	movff	prodl,___flmul@temp
  6942  0009A6  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6943  0009AA  502B               	movf	___flmul@temp,w,c
  6944  0009AC  2627               	addwf	___flmul@prod,f,c
  6945  0009AE  502C               	movf	___flmul@temp+1,w,c
  6946  0009B0  2228               	addwfc	___flmul@prod+1,f,c
  6947  0009B2  0E00               	movlw	0
  6948  0009B4  2229               	addwfc	___flmul@prod+2,f,c
  6949  0009B6  0E00               	movlw	0
  6950  0009B8  222A               	addwfc	___flmul@prod+3,f,c
  6951  0009BA  5019               	movf	___flmul@a+1,w,c
  6952  0009BC  0216               	mulwf	___flmul@b+2,c
  6953  0009BE  CFF3 F02B          	movff	prodl,___flmul@temp
  6954  0009C2  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6955  0009C6  502B               	movf	___flmul@temp,w,c
  6956  0009C8  2627               	addwf	___flmul@prod,f,c
  6957  0009CA  502C               	movf	___flmul@temp+1,w,c
  6958  0009CC  2228               	addwfc	___flmul@prod+1,f,c
  6959  0009CE  0E00               	movlw	0
  6960  0009D0  2229               	addwfc	___flmul@prod+2,f,c
  6961  0009D2  0E00               	movlw	0
  6962  0009D4  222A               	addwfc	___flmul@prod+3,f,c
  6963  0009D6  501A               	movf	___flmul@a+2,w,c
  6964  0009D8  0216               	mulwf	___flmul@b+2,c
  6965  0009DA  CFF3 F02B          	movff	prodl,___flmul@temp
  6966  0009DE  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6967  0009E2  502B               	movf	___flmul@temp,w,c
  6968  0009E4  6E1C               	movwf	??___flmul& (0+255),c
  6969  0009E6  502C               	movf	___flmul@temp+1,w,c
  6970  0009E8  6E1D               	movwf	(??___flmul+1)& (0+255),c
  6971  0009EA  6A1E               	clrf	(??___flmul+2)& (0+255),c
  6972  0009EC  6A1F               	clrf	(??___flmul+3)& (0+255),c
  6973  0009EE  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6974  0009F2  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6975  0009F6  C01C  F01D         	movff	??___flmul,??___flmul+1
  6976  0009FA  6A1C               	clrf	??___flmul,c
  6977  0009FC  501C               	movf	??___flmul,w,c
  6978  0009FE  2627               	addwf	___flmul@prod,f,c
  6979  000A00  501D               	movf	??___flmul+1,w,c
  6980  000A02  2228               	addwfc	___flmul@prod+1,f,c
  6981  000A04  501E               	movf	??___flmul+2,w,c
  6982  000A06  2229               	addwfc	___flmul@prod+2,f,c
  6983  000A08  501F               	movf	??___flmul+3,w,c
  6984  000A0A  222A               	addwfc	___flmul@prod+3,f,c
  6985  000A0C  C021  F01C         	movff	___flmul@grs,??___flmul
  6986  000A10  C022  F01D         	movff	___flmul@grs+1,??___flmul+1
  6987  000A14  C023  F01E         	movff	___flmul@grs+2,??___flmul+2
  6988  000A18  C024  F01F         	movff	___flmul@grs+3,??___flmul+3
  6989  000A1C  0E19               	movlw	25
  6990  000A1E  D005               	goto	i1u191_20
  6991  000A20                     i1u191_25:
  6992  000A20  90D8               	bcf	status,0,c
  6993  000A22  321F               	rrcf	??___flmul+3,f,c
  6994  000A24  321E               	rrcf	??___flmul+2,f,c
  6995  000A26  321D               	rrcf	??___flmul+1,f,c
  6996  000A28  321C               	rrcf	??___flmul,f,c
  6997  000A2A                     i1u191_20:
  6998  000A2A  2EE8               	decfsz	wreg,f,c
  6999  000A2C  D7F9               	goto	i1u191_25
  7000  000A2E  501C               	movf	??___flmul,w,c
  7001  000A30  2627               	addwf	___flmul@prod,f,c
  7002  000A32  501D               	movf	??___flmul+1,w,c
  7003  000A34  2228               	addwfc	___flmul@prod+1,f,c
  7004  000A36  501E               	movf	??___flmul+2,w,c
  7005  000A38  2229               	addwfc	___flmul@prod+2,f,c
  7006  000A3A  501F               	movf	??___flmul+3,w,c
  7007  000A3C  222A               	addwfc	___flmul@prod+3,f,c
  7008  000A3E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  7009  000A42  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  7010  000A46  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  7011  000A4A  6A21               	clrf	___flmul@grs,c
  7012  000A4C  5025               	movf	___flmul@aexp,w,c
  7013  000A4E  C026  F01C         	movff	___flmul@bexp,??___flmul
  7014  000A52  6A1D               	clrf	(??___flmul+1)& (0+255),c
  7015  000A54  261C               	addwf	??___flmul,f,c
  7016  000A56  0E00               	movlw	0
  7017  000A58  221D               	addwfc	??___flmul+1,f,c
  7018  000A5A  0E82               	movlw	130
  7019  000A5C  241C               	addwf	??___flmul,w,c
  7020  000A5E  6E2B               	movwf	___flmul@temp,c
  7021  000A60  0EFF               	movlw	255
  7022  000A62  201D               	addwfc	??___flmul+1,w,c
  7023  000A64  6E2C               	movwf	___flmul@temp+1,c
  7024  000A66  D00F               	goto	i1l3362
  7025  000A68                     i1l3356:
  7026  000A68  90D8               	bcf	status,0,c
  7027  000A6A  3627               	rlcf	___flmul@prod,f,c
  7028  000A6C  3628               	rlcf	___flmul@prod+1,f,c
  7029  000A6E  3629               	rlcf	___flmul@prod+2,f,c
  7030  000A70  362A               	rlcf	___flmul@prod+3,f,c
  7031  000A72  BE24               	btfsc	___flmul@grs+3,7,c
  7032  000A74  8027               	bsf	___flmul@prod,0,c
  7033  000A76  90D8               	bcf	status,0,c
  7034  000A78  3621               	rlcf	___flmul@grs,f,c
  7035  000A7A  3622               	rlcf	___flmul@grs+1,f,c
  7036  000A7C  3623               	rlcf	___flmul@grs+2,f,c
  7037  000A7E  3624               	rlcf	___flmul@grs+3,f,c
  7038  000A80  062B               	decf	___flmul@temp,f,c
  7039  000A82  A0D8               	btfss	status,0,c
  7040  000A84  062C               	decf	___flmul@temp+1,f,c
  7041  000A86                     i1l3362:
  7042  000A86  AE29               	btfss	___flmul@prod+2,7,c
  7043  000A88  D7EF               	goto	i1l3356
  7044  000A8A  0E00               	movlw	0
  7045  000A8C  6E25               	movwf	___flmul@aexp,c
  7046  000A8E  AE24               	btfss	___flmul@grs+3,7,c
  7047  000A90  D017               	goto	i1l1662
  7048  000A92  0EFF               	movlw	255
  7049  000A94  1421               	andwf	___flmul@grs,w,c
  7050  000A96  6E1C               	movwf	??___flmul& (0+255),c
  7051  000A98  0EFF               	movlw	255
  7052  000A9A  1422               	andwf	___flmul@grs+1,w,c
  7053  000A9C  6E1D               	movwf	(??___flmul+1)& (0+255),c
  7054  000A9E  0EFF               	movlw	255
  7055  000AA0  1423               	andwf	___flmul@grs+2,w,c
  7056  000AA2  6E1E               	movwf	(??___flmul+2)& (0+255),c
  7057  000AA4  0E7F               	movlw	127
  7058  000AA6  1424               	andwf	___flmul@grs+3,w,c
  7059  000AA8  6E1F               	movwf	(??___flmul+3)& (0+255),c
  7060  000AAA  501C               	movf	??___flmul,w,c
  7061  000AAC  101D               	iorwf	??___flmul+1,w,c
  7062  000AAE  101E               	iorwf	??___flmul+2,w,c
  7063  000AB0  101F               	iorwf	??___flmul+3,w,c
  7064  000AB2  B4D8               	btfsc	status,2,c
  7065  000AB4  D003               	goto	i1l1663
  7066  000AB6                     i1u195_20:
  7067  000AB6  0E01               	movlw	1
  7068  000AB8  6E25               	movwf	___flmul@aexp,c
  7069  000ABA  D002               	goto	i1l1662
  7070  000ABC                     i1l1663:
  7071  000ABC  B027               	btfsc	___flmul@prod,0,c
  7072  000ABE  D7FB               	goto	i1u195_20
  7073  000AC0                     i1l1662:
  7074  000AC0  5025               	movf	___flmul@aexp,w,c
  7075  000AC2  B4D8               	btfsc	status,2,c
  7076  000AC4  D01F               	goto	i1l3382
  7077  000AC6  0E01               	movlw	1
  7078  000AC8  2627               	addwf	___flmul@prod,f,c
  7079  000ACA  0E00               	movlw	0
  7080  000ACC  2228               	addwfc	___flmul@prod+1,f,c
  7081  000ACE  2229               	addwfc	___flmul@prod+2,f,c
  7082  000AD0  222A               	addwfc	___flmul@prod+3,f,c
  7083  000AD2  A02A               	btfss	___flmul@prod+3,0,c
  7084  000AD4  D017               	goto	i1l3382
  7085  000AD6  C027  F01C         	movff	___flmul@prod,??___flmul
  7086  000ADA  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  7087  000ADE  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  7088  000AE2  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  7089  000AE6  341F               	rlcf	??___flmul+3,w,c
  7090  000AE8  321F               	rrcf	??___flmul+3,f,c
  7091  000AEA  321E               	rrcf	??___flmul+2,f,c
  7092  000AEC  321D               	rrcf	??___flmul+1,f,c
  7093  000AEE  321C               	rrcf	??___flmul,f,c
  7094  000AF0  C01C  F027         	movff	??___flmul,___flmul@prod
  7095  000AF4  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  7096  000AF8  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  7097  000AFC  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  7098  000B00  4A2B               	infsnz	___flmul@temp,f,c
  7099  000B02  2A2C               	incf	___flmul@temp+1,f,c
  7100  000B04                     i1l3382:
  7101  000B04  BE2C               	btfsc	___flmul@temp+1,7,c
  7102  000B06  D00D               	goto	i1l3386
  7103  000B08  502C               	movf	___flmul@temp+1,w,c
  7104  000B0A  E103               	bnz	i1u199_20
  7105  000B0C  282B               	incf	___flmul@temp,w,c
  7106  000B0E  A0D8               	btfss	status,0,c
  7107  000B10  D008               	goto	i1l3386
  7108  000B12                     i1u199_20:
  7109  000B12  0E00               	movlw	0
  7110  000B14  6E27               	movwf	___flmul@prod,c
  7111  000B16  0E00               	movlw	0
  7112  000B18  6E28               	movwf	___flmul@prod+1,c
  7113  000B1A  0E80               	movlw	128
  7114  000B1C  6E29               	movwf	___flmul@prod+2,c
  7115  000B1E  0E7F               	movlw	127
  7116  000B20  D020               	goto	L2
  7117  000B22                     i1l3386:
  7118  000B22  BE2C               	btfsc	___flmul@temp+1,7,c
  7119  000B24  D005               	goto	i1u200_20
  7120  000B26  502C               	movf	___flmul@temp+1,w,c
  7121  000B28  E10E               	bnz	i1l1670
  7122  000B2A  042B               	decf	___flmul@temp,w,c
  7123  000B2C  B0D8               	btfsc	status,0,c
  7124  000B2E  D00B               	goto	i1l1670
  7125  000B30                     i1u200_20:
  7126  000B30  0E00               	movlw	0
  7127  000B32  6E27               	movwf	___flmul@prod,c
  7128  000B34  0E00               	movlw	0
  7129  000B36  6E28               	movwf	___flmul@prod+1,c
  7130  000B38  0E00               	movlw	0
  7131  000B3A  6E29               	movwf	___flmul@prod+2,c
  7132  000B3C  0E00               	movlw	0
  7133  000B3E  6E2A               	movwf	___flmul@prod+3,c
  7134  000B40  0E00               	movlw	0
  7135  000B42  6E20               	movwf	___flmul@sign,c
  7136  000B44  D00F               	goto	i1l3398
  7137  000B46                     i1l1670:
  7138  000B46  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  7139  000B4A  0EFF               	movlw	255
  7140  000B4C  1627               	andwf	___flmul@prod,f,c
  7141  000B4E  0EFF               	movlw	255
  7142  000B50  1628               	andwf	___flmul@prod+1,f,c
  7143  000B52  0E7F               	movlw	127
  7144  000B54  1629               	andwf	___flmul@prod+2,f,c
  7145  000B56  0E00               	movlw	0
  7146  000B58  162A               	andwf	___flmul@prod+3,f,c
  7147  000B5A  B026               	btfsc	___flmul@bexp,0,c
  7148  000B5C  8E29               	bsf	___flmul@prod+2,7,c
  7149  000B5E  90D8               	bcf	status,0,c
  7150  000B60  3026               	rrcf	___flmul@bexp,w,c
  7151  000B62                     L2:
  7152  000B62  6E2A               	movwf	___flmul@prod+3,c
  7153  000B64                     i1l3398:
  7154  000B64  5020               	movf	___flmul@sign,w,c
  7155  000B66  122A               	iorwf	___flmul@prod+3,f,c
  7156  000B68  C027  F014         	movff	___flmul@prod,?___flmul
  7157  000B6C  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  7158  000B70  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  7159  000B74  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  7160  000B78  0012               	return		;funcret
  7161  000B7A                     __end_of___flmul:
  7162                           	opt callstack 0
  7163                           
  7164 ;; *************** function _ADCC_ISR *****************
  7165 ;; Defined at:
  7166 ;;		line 296 in file "mcc_generated_files/adcc.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;		None
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  1    wreg      void 
  7173 ;; Registers used:
  7174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7180 ;;      Params:         0       0       0       0       0       0       0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7183 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7184 ;;Total ram usage:        0 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    5
  7187 ;; This function calls:
  7188 ;;		Absolute function
  7189 ;;		_ADCC_DefaultInterruptHandler
  7190 ;;		_adc_ready_ISR
  7191 ;; This function is called by:
  7192 ;;		_INTERRUPT_InterruptManagerLow
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text64
  7197  001E24                     __ptext64:
  7198                           	opt callstack 0
  7199  001E24                     _ADCC_ISR:
  7200                           	opt callstack 15
  7201                           
  7202                           ;mcc_generated_files/adcc.c: 299:     PIR1bits.ADIF = 0;
  7203                           
  7204                           ;incstack = 0
  7205  001E24  010E               	movlb	14	; () banked
  7206  001E26  91C6               	bcf	198,0,b	;volatile
  7207                           
  7208                           ; BSR set to: 14
  7209                           ;mcc_generated_files/adcc.c: 301:     if (ADCC_ADI_InterruptHandler)
  7210  001E28  503E               	movf	_ADCC_ADI_InterruptHandler,w,c
  7211  001E2A  103F               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
  7212  001E2C  B4D8               	btfsc	status,2,c
  7213  001E2E  0012               	return	
  7214                           
  7215                           ; BSR set to: 14
  7216                           ;mcc_generated_files/adcc.c: 302:             ADCC_ADI_InterruptHandler();
  7217  001E30  D801               	call	i1u239_28
  7218  001E32  0012               	return	
  7219  001E34                     i1u239_28:
  7220  001E34  0005               	push	
  7221  001E36  6EFA               	movwf	pclath,c
  7222  001E38  503E               	movf	_ADCC_ADI_InterruptHandler,w,c
  7223  001E3A  6EFD               	movwf	tosl,c
  7224  001E3C  503F               	movf	_ADCC_ADI_InterruptHandler+1,w,c
  7225  001E3E  6EFE               	movwf	tosh,c
  7226  001E40  50F8               	movf	tblptru,w,c
  7227  001E42  6EFF               	movwf	tosu,c
  7228  001E44  50FA               	movf	pclath,w,c
  7229  001E46  0012               	return		;indir
  7230  001E48                     __end_of_ADCC_ISR:
  7231                           	opt callstack 0
  7232                           
  7233 ;; *************** function _ADCC_DefaultInterruptHandler *****************
  7234 ;; Defined at:
  7235 ;;		line 309 in file "mcc_generated_files/adcc.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;		None
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		None
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    3
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_ADCC_Initialize
  7260 ;;		_ADCC_ISR
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text65
  7265  002000                     __ptext65:
  7266                           	opt callstack 0
  7267  002000                     _ADCC_DefaultInterruptHandler:
  7268                           	opt callstack 16
  7269                           
  7270                           ;incstack = 0
  7271  002000  0012               	return		;funcret
  7272  002002                     __end_of_ADCC_DefaultInterruptHandler:
  7273                           	opt callstack 0
  7274                           
  7275 ;; *************** function _adc_ready_ISR *****************
  7276 ;; Defined at:
  7277 ;;		line 70 in file "cam.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;		None
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7291 ;;      Params:         0       0       0       0       0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7293 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7294 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7295 ;;Total ram usage:        4 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    4
  7298 ;; This function calls:
  7299 ;;		i1_TMR3_SetInterruptHandler
  7300 ;;		i1_TMR3_StartTimer
  7301 ;;		i1_TMR3_WriteTimer
  7302 ;; This function is called by:
  7303 ;;		_timer_ISR
  7304 ;;		_cam_init
  7305 ;;		_ADCC_ISR
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text66
  7310  0014C2                     __ptext66:
  7311                           	opt callstack 0
  7312  0014C2                     _adc_ready_ISR:
  7313                           	opt callstack 15
  7314                           
  7315                           ;incstack = 0
  7316                           ;cam.c: 71:     do { LATCbits.LATC1 = ~LATCbits.LATC1; } while(0);
  7317  0014C2  A284               	btfss	3972,1,c	;volatile
  7318  0014C4  D002               	goto	i1u227_20
  7319  0014C6  0E01               	movlw	1
  7320  0014C8  D001               	goto	i1u227_26
  7321  0014CA                     i1u227_20:
  7322  0014CA  0E00               	movlw	0
  7323  0014CC                     i1u227_26:
  7324  0014CC  0AFF               	xorlw	255
  7325  0014CE  6E08               	movwf	??_adc_ready_ISR& (0+255),c
  7326  0014D0  4608               	rlncf	??_adc_ready_ISR,f,c
  7327  0014D2  5084               	movf	3972,w,c	;volatile
  7328  0014D4  1808               	xorwf	??_adc_ready_ISR,w,c
  7329  0014D6  0BFD               	andlw	-3
  7330  0014D8  1808               	xorwf	??_adc_ready_ISR,w,c
  7331  0014DA  6E84               	movwf	3972,c	;volatile
  7332                           
  7333                           ;cam.c: 72:     if (myCam.readFromFirst) {
  7334  0014DC  EE22  F000         	lfsr	2,_myCam
  7335  0014E0  50DF               	movf	indf2,w,c
  7336  0014E2  B4D8               	btfsc	status,2,c
  7337  0014E4  D012               	goto	i1l3696
  7338                           
  7339                           ;cam.c: 74:         myCam.cam_pixels_2[myCam.index] = ADRESH;
  7340  0014E6  010F               	movlb	15	; () banked
  7341  0014E8  515F               	movf	95,w,b	;volatile
  7342  0014EA  6E08               	movwf	??_adc_ready_ISR& (0+255),c
  7343  0014EC  6A09               	clrf	(??_adc_ready_ISR+1)& (0+255),c
  7344  0014EE  EE24  F002         	lfsr	2,_myCam+514	;volatile
  7345  0014F2  CFDE F00A          	movff	postinc2,??_adc_ready_ISR+2
  7346  0014F6  CFDD F00B          	movff	postdec2,??_adc_ready_ISR+3
  7347  0014FA  90D8               	bcf	status,0,c
  7348  0014FC  360A               	rlcf	??_adc_ready_ISR+2,f,c
  7349  0014FE  360B               	rlcf	??_adc_ready_ISR+3,f,c
  7350  001500  0E01               	movlw	low (_myCam+257)
  7351  001502  240A               	addwf	??_adc_ready_ISR+2,w,c
  7352  001504  6ED9               	movwf	fsr2l,c
  7353  001506  0E03               	movlw	high (_myCam+257)
  7354  001508  D011               	goto	L3
  7355  00150A                     i1l3696:
  7356                           
  7357                           ;cam.c: 76:         myCam.cam_pixels_1[myCam.index] = ADRESH;
  7358  00150A  010F               	movlb	15	; () banked
  7359  00150C  515F               	movf	95,w,b	;volatile
  7360  00150E  6E08               	movwf	??_adc_ready_ISR& (0+255),c
  7361  001510  6A09               	clrf	(??_adc_ready_ISR+1)& (0+255),c
  7362  001512  EE24  F002         	lfsr	2,_myCam+514	;volatile
  7363  001516  CFDE F00A          	movff	postinc2,??_adc_ready_ISR+2
  7364  00151A  CFDD F00B          	movff	postdec2,??_adc_ready_ISR+3
  7365  00151E  90D8               	bcf	status,0,c
  7366  001520  360A               	rlcf	??_adc_ready_ISR+2,f,c
  7367  001522  360B               	rlcf	??_adc_ready_ISR+3,f,c
  7368  001524  0E01               	movlw	low (_myCam+1)
  7369  001526  240A               	addwf	??_adc_ready_ISR+2,w,c
  7370  001528  6ED9               	movwf	fsr2l,c
  7371  00152A  0E02               	movlw	high (_myCam+1)
  7372  00152C                     L3:
  7373  00152C  200B               	addwfc	??_adc_ready_ISR+3,w,c
  7374  00152E  6EDA               	movwf	fsr2h,c
  7375  001530  C008  FFDE         	movff	??_adc_ready_ISR,postinc2
  7376  001534  C009  FFDD         	movff	??_adc_ready_ISR+1,postdec2
  7377                           
  7378                           ; BSR set to: 15
  7379                           ;cam.c: 78:     myCam.index++;
  7380                           
  7381                           ;cam.c: 77:     }
  7382  001538  EE24  F002         	lfsr	2,_myCam+514	;volatile
  7383  00153C  2ADE               	incf	postinc2,f,c
  7384  00153E  0E00               	movlw	0
  7385  001540  22DD               	addwfc	postdec2,f,c
  7386                           
  7387                           ;cam.c: 80:     if (myCam.index >= 128) {
  7388  001542  EE24  F002         	lfsr	2,_myCam+514	;volatile
  7389  001546  0E01               	movlw	1
  7390  001548  BEDB               	btfsc	plusw2,7,c
  7391  00154A  D00D               	goto	i1l3700
  7392  00154C  0E01               	movlw	1
  7393  00154E  50DB               	movf	plusw2,w,c
  7394  001550  E104               	bnz	i1u229_20
  7395  001552  0E80               	movlw	128
  7396  001554  5CDE               	subwf	postinc2,w,c
  7397  001556  A0D8               	btfss	status,0,c
  7398  001558  D006               	goto	i1l3700
  7399  00155A                     i1u229_20:
  7400                           
  7401                           ; BSR set to: 15
  7402                           ;cam.c: 84:         myCam.status = CAM_DONE;
  7403  00155A  0E02               	movlw	2
  7404  00155C  CFE8 F401          	movff	wreg,_myCam+513	;volatile
  7405                           
  7406                           ; BSR set to: 15
  7407                           
  7408                           ;cam.c: 85:         do { LATBbits.LATB1 = 0; } while(0);
  7409  001560  9283               	bcf	3971,1,c	;volatile
  7410                           
  7411                           ; BSR set to: 15
  7412                           
  7413                           ;cam.c: 86:         do { LATBbits.LATB2 = 0; } while(0);
  7414  001562  9483               	bcf	3971,2,c	;volatile
  7415  001564  0012               	return	
  7416  001566                     i1l3700:
  7417                           
  7418                           ; BSR set to: 15
  7419                           ;cam.c: 90:         TMR3_WriteTimer(timing_val);
  7420  001566  C050  F006         	movff	_timing_val,i1TMR3_WriteTimer@timerVal
  7421  00156A  C051  F007         	movff	_timing_val+1,i1TMR3_WriteTimer@timerVal+1
  7422  00156E  EC6F  F00F         	call	i1_TMR3_WriteTimer	;wreg free
  7423                           
  7424                           ;cam.c: 91:         TMR3_SetInterruptHandler(timer_ISR);
  7425  001572  0EC8               	movlw	low _timer_ISR
  7426  001574  6E06               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler,c
  7427  001576  0E16               	movlw	high _timer_ISR
  7428  001578  6E07               	movwf	i1TMR3_SetInterruptHandler@InterruptHandler+1,c
  7429  00157A  ECEE  F00F         	call	i1_TMR3_SetInterruptHandler	;wreg free
  7430                           
  7431                           ;cam.c: 92:         TMR3_StartTimer();
  7432  00157E  ECFA  F00F         	call	i1_TMR3_StartTimer	;wreg free
  7433  001582  9283               	bcf	3971,1,c	;volatile
  7434  001584  0012               	return		;funcret
  7435  001586                     __end_of_adc_ready_ISR:
  7436                           	opt callstack 0
  7437                           
  7438 ;; *************** function i1_TMR3_WriteTimer *****************
  7439 ;; Defined at:
  7440 ;;		line 127 in file "mcc_generated_files/tmr3.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  timerVal        2    5[COMRAM] unsigned short 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7454 ;;      Params:         2       0       0       0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7457 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7458 ;;Total ram usage:        2 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    3
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_TMR3_ISR
  7465 ;;		_timer_ISR
  7466 ;;		_adc_ready_ISR
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text67
  7471  001EDE                     __ptext67:
  7472                           	opt callstack 0
  7473  001EDE                     i1_TMR3_WriteTimer:
  7474                           	opt callstack 16
  7475                           
  7476                           ;mcc_generated_files/tmr3.c: 127: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 128: {;mcc_generated_files/tmr3.c: 129:     if (T3CONbits.nT3SYNC == 1)
  7477                           
  7478                           ;incstack = 0
  7479  001EDE  A4C8               	btfss	4040,2,c	;volatile
  7480  001EE0  D007               	goto	i1l3462
  7481                           
  7482                           ;mcc_generated_files/tmr3.c: 130:     {;mcc_generated_files/tmr3.c: 132:         T3CONbi
      +                          ts.TMR3ON = 0;
  7483  001EE2  90C8               	bcf	4040,0,c	;volatile
  7484                           
  7485                           ;mcc_generated_files/tmr3.c: 135:         TMR3H = (timerVal >> 8);
  7486  001EE4  5007               	movf	i1TMR3_WriteTimer@timerVal+1,w,c
  7487  001EE6  6EC7               	movwf	4039,c	;volatile
  7488                           
  7489                           ;mcc_generated_files/tmr3.c: 136:         TMR3L = timerVal;
  7490  001EE8  C006  FFC6         	movff	i1TMR3_WriteTimer@timerVal,4038	;volatile
  7491                           
  7492                           ;mcc_generated_files/tmr3.c: 139:         T3CONbits.TMR3ON =1;
  7493  001EEC  80C8               	bsf	4040,0,c	;volatile
  7494                           
  7495                           ;mcc_generated_files/tmr3.c: 140:     }
  7496  001EEE  0012               	return	
  7497  001EF0                     i1l3462:
  7498                           
  7499                           ;mcc_generated_files/tmr3.c: 142:     {;mcc_generated_files/tmr3.c: 144:         TMR3H =
      +                           (timerVal >> 8);
  7500  001EF0  5007               	movf	i1TMR3_WriteTimer@timerVal+1,w,c
  7501  001EF2  6EC7               	movwf	4039,c	;volatile
  7502                           
  7503                           ;mcc_generated_files/tmr3.c: 145:         TMR3L = timerVal;
  7504  001EF4  C006  FFC6         	movff	i1TMR3_WriteTimer@timerVal,4038	;volatile
  7505  001EF8  0012               	return		;funcret
  7506  001EFA                     __end_ofi1_TMR3_WriteTimer:
  7507                           	opt callstack 0
  7508                           
  7509 ;; *************** function i1_TMR3_StartTimer *****************
  7510 ;; Defined at:
  7511 ;;		line 99 in file "mcc_generated_files/tmr3.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		None
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7529 ;;Total ram usage:        0 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    3
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		_timer_ISR
  7536 ;;		_adc_ready_ISR
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text68
  7541  001FF4                     __ptext68:
  7542                           	opt callstack 0
  7543  001FF4                     i1_TMR3_StartTimer:
  7544                           	opt callstack 15
  7545                           
  7546                           ;mcc_generated_files/tmr3.c: 102:     T3CONbits.TMR3ON = 1;
  7547                           
  7548                           ;incstack = 0
  7549  001FF4  80C8               	bsf	4040,0,c	;volatile
  7550  001FF6  0012               	return		;funcret
  7551  001FF8                     __end_ofi1_TMR3_StartTimer:
  7552                           	opt callstack 0
  7553                           
  7554 ;; *************** function i1_TMR3_SetInterruptHandler *****************
  7555 ;; Defined at:
  7556 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  7559 ;;		 -> timer_ISR(1), TMR3_DefaultInterruptHandler(1), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7571 ;;      Params:         2       0       0       0       0       0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7574 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7575 ;;Total ram usage:        2 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:    3
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_timer_ISR
  7582 ;;		_adc_ready_ISR
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text69
  7587  001FDC                     __ptext69:
  7588                           	opt callstack 0
  7589  001FDC                     i1_TMR3_SetInterruptHandler:
  7590                           	opt callstack 15
  7591                           
  7592                           ;mcc_generated_files/tmr3.c: 179:     TMR3_InterruptHandler = InterruptHandler;
  7593                           
  7594                           ;incstack = 0
  7595  001FDC  C006  F03A         	movff	i1TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
  7596  001FE0  C007  F03B         	movff	i1TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
  7597  001FE4  0012               	return		;funcret
  7598  001FE6                     __end_ofi1_TMR3_SetInterruptHandler:
  7599                           	opt callstack 0
  7600                           
  7601 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  7602 ;; Defined at:
  7603 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1    wreg      void 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7617 ;;      Params:         0       0       0       0       0       0       0       0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7619 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7620 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7621 ;;Total ram usage:        2 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    2
  7624 ;; This function calls:
  7625 ;;		_TMR2_ISR
  7626 ;; This function is called by:
  7627 ;;		Interrupt level 2
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	intcode
  7632  000008                     __pintcode:
  7633                           	opt callstack 0
  7634  000008                     _INTERRUPT_InterruptManagerHigh:
  7635                           	opt callstack 14
  7636                           
  7637                           ;incstack = 0
  7638  000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7639  00000A  EF34  F00F         	goto	int_func
  7640                           
  7641                           	psect	intcode_body
  7642  001E68                     __pintcode_body:
  7643                           	opt callstack 14
  7644  001E68                     int_func:
  7645                           	opt callstack 14
  7646  001E68  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  7647  001E6C  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  7648                           
  7649                           ;mcc_generated_files/interrupt_manager.c: 83:     if(PIE4bits.TMR2IE == 1 && PIR4bits.TM
      +                          R2IF == 1)
  7650  001E70  010E               	movlb	14	; () banked
  7651  001E72  B3C1               	btfsc	193,1,b	;volatile
  7652                           
  7653                           ; BSR set to: 14
  7654  001E74  A3C9               	btfss	201,1,b	;volatile
  7655  001E76  D002               	goto	i2l256
  7656                           
  7657                           ; BSR set to: 14
  7658                           ;mcc_generated_files/interrupt_manager.c: 84:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 85:         TMR2_ISR();
  7659  001E78  ECFF  F00E         	call	_TMR2_ISR	;wreg free
  7660  001E7C                     i2l256:
  7661  001E7C  C005  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  7662  001E80  C004  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  7663  001E84  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7664  001E86  0011               	retfie		f
  7665  001E88                     __end_of_INTERRUPT_InterruptManagerHigh:
  7666                           	opt callstack 0
  7667                           
  7668 ;; *************** function _TMR2_ISR *****************
  7669 ;; Defined at:
  7670 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      void 
  7677 ;; Registers used:
  7678 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7684 ;;      Params:         0       0       0       0       0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7688 ;;Total ram usage:        0 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    1
  7691 ;; This function calls:
  7692 ;;		Absolute function
  7693 ;;		_TMR2_DefaultInterruptHandler
  7694 ;;		_carcontrol_ISR
  7695 ;; This function is called by:
  7696 ;;		_INTERRUPT_InterruptManagerHigh
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text71
  7701  001DFE                     __ptext71:
  7702                           	opt callstack 0
  7703  001DFE                     _TMR2_ISR:
  7704                           	opt callstack 14
  7705                           
  7706                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  7707                           
  7708                           ;incstack = 0
  7709  001DFE  010E               	movlb	14	; () banked
  7710  001E00  93C9               	bcf	201,1,b	;volatile
  7711                           
  7712                           ; BSR set to: 14
  7713                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
  7714  001E02  0100               	movlb	0	; () banked
  7715  001E04  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7716  001E06  11FF               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7717  001E08  B4D8               	btfsc	status,2,c
  7718  001E0A  0012               	return	
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
  7722  001E0C  D801               	call	i2u233_48
  7723  001E0E  0012               	return	
  7724  001E10                     i2u233_48:
  7725  001E10  0005               	push	
  7726  001E12  6EFA               	movwf	pclath,c
  7727  001E14  51FE               	movf	_TMR2_InterruptHandler& (0+255),w,b
  7728  001E16  6EFD               	movwf	tosl,c
  7729  001E18  51FF               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
  7730  001E1A  6EFE               	movwf	tosh,c
  7731  001E1C  50F8               	movf	tblptru,w,c
  7732  001E1E  6EFF               	movwf	tosu,c
  7733  001E20  50FA               	movf	pclath,w,c
  7734  001E22  0012               	return		;indir
  7735  001E24                     __end_of_TMR2_ISR:
  7736                           	opt callstack 0
  7737                           
  7738 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7739 ;; Defined at:
  7740 ;;		line 182 in file "mcc_generated_files/tmr2.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;		None
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      void 
  7747 ;; Registers used:
  7748 ;;		None
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7754 ;;      Params:         0       0       0       0       0       0       0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7757 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7758 ;;Total ram usage:        0 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; This function calls:
  7761 ;;		Nothing
  7762 ;; This function is called by:
  7763 ;;		_TMR2_Initialize
  7764 ;;		_TMR2_ISR
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text72
  7769  002002                     __ptext72:
  7770                           	opt callstack 0
  7771  002002                     _TMR2_DefaultInterruptHandler:
  7772                           	opt callstack 14
  7773                           
  7774                           ;incstack = 0
  7775  002002  0012               	return		;funcret
  7776  002004                     __end_of_TMR2_DefaultInterruptHandler:
  7777                           	opt callstack 0
  7778                           
  7779 ;; *************** function _carcontrol_ISR *****************
  7780 ;; Defined at:
  7781 ;;		line 41 in file "car_ctrl.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;		None
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1    wreg      void 
  7788 ;; Registers used:
  7789 ;;		wreg, status,2, status,0
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7795 ;;      Params:         0       0       0       0       0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7797 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7798 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7799 ;;Total ram usage:        3 bytes
  7800 ;; Hardware stack levels used:    1
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_carcontrol_init
  7805 ;;		_TMR2_ISR
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text73
  7810  0013DC                     __ptext73:
  7811                           	opt callstack 0
  7812  0013DC                     _carcontrol_ISR:
  7813                           	opt callstack 14
  7814                           
  7815                           ;car_ctrl.c: 43:     switch (carctl.state) {
  7816                           
  7817                           ;incstack = 0
  7818  0013DC  D05C               	goto	i2l3646
  7819  0013DE                     i2l3604:
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;car_ctrl.c: 46:             carctl.state = state_high;
  7823  0013DE  0E01               	movlw	1
  7824  0013E0  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7825                           
  7826                           ; BSR set to: 0
  7827  0013E2  8082               	bsf	3970,0,c	;volatile
  7828                           
  7829                           ; BSR set to: 0
  7830  0013E4  8282               	bsf	3970,1,c	;volatile
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;car_ctrl.c: 49:             stateTime = 0;
  7834  0013E6  0E00               	movlw	0
  7835  0013E8  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7836  0013EA  0E00               	movlw	0
  7837  0013EC  6FD5               	movwf	_stateTime& (0+255),b
  7838                           
  7839                           ;car_ctrl.c: 50:         break;
  7840  0013EE  0012               	return	
  7841  0013F0                     i2l3610:
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;car_ctrl.c: 52:             stateTime++;
  7845  0013F0  4BD5               	infsnz	_stateTime& (0+255),f,b
  7846  0013F2  2BD6               	incf	(_stateTime+1)& (0+255),f,b
  7847                           
  7848                           ; BSR set to: 0
  7849  0013F4  8082               	bsf	3970,0,c	;volatile
  7850                           
  7851                           ; BSR set to: 0
  7852  0013F6  8282               	bsf	3970,1,c	;volatile
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;car_ctrl.c: 55:             if (stateTime >= 100) {
  7856  0013F8  BFD6               	btfsc	(_stateTime+1)& (0+255),7,b
  7857  0013FA  0012               	return	
  7858  0013FC  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7859  0013FE  E104               	bnz	i2u219_40
  7860  001400  0E64               	movlw	100
  7861  001402  5DD5               	subwf	_stateTime& (0+255),w,b
  7862  001404  A0D8               	btfss	status,0,c
  7863  001406  0012               	return	
  7864  001408                     i2u219_40:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;car_ctrl.c: 57:                 carctl.state = state_vary;
  7868  001408  0E02               	movlw	2
  7869  00140A  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7870                           
  7871                           ;car_ctrl.c: 58:                 stateTime = 0;
  7872  00140C  0E00               	movlw	0
  7873  00140E  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7874  001410  0E00               	movlw	0
  7875  001412  6FD5               	movwf	_stateTime& (0+255),b
  7876  001414  0012               	return	
  7877  001416                     i2l3620:
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;car_ctrl.c: 62:             stateTime++;
  7881  001416  4BD5               	infsnz	_stateTime& (0+255),f,b
  7882  001418  2BD6               	incf	(_stateTime+1)& (0+255),f,b
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;car_ctrl.c: 63:             if (stateTime > carctl.throttleHighTime) {
  7886  00141A  51CB               	movf	(_carctl+4)& (0+255),w,b	;volatile
  7887  00141C  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7888  00141E  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7889  001420  51D5               	movf	_stateTime& (0+255),w,b
  7890  001422  5C01               	subwf	??_carcontrol_ISR,w,c
  7891  001424  5002               	movf	??_carcontrol_ISR+1,w,c
  7892  001426  0A80               	xorlw	128
  7893  001428  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
  7894  00142A  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7895  00142C  0A80               	xorlw	128
  7896  00142E  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
  7897  001430  A0D8               	btfss	status,0,c
  7898                           
  7899                           ; BSR set to: 0
  7900                           
  7901                           ;car_ctrl.c: 64:                 do { LATAbits.LATA0 = 0; } while(0);
  7902  001432  9082               	bcf	3970,0,c	;volatile
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;car_ctrl.c: 66:             if (stateTime > carctl.servoHighTime) {
  7906  001434  51CC               	movf	(_carctl+5)& (0+255),w,b	;volatile
  7907  001436  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7908  001438  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7909  00143A  51D5               	movf	_stateTime& (0+255),w,b
  7910  00143C  5C01               	subwf	??_carcontrol_ISR,w,c
  7911  00143E  5002               	movf	??_carcontrol_ISR+1,w,c
  7912  001440  0A80               	xorlw	128
  7913  001442  6E03               	movwf	(??_carcontrol_ISR+2)& (0+255),c
  7914  001444  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7915  001446  0A80               	xorlw	128
  7916  001448  5803               	subwfb	(??_carcontrol_ISR+2)& (0+255),w,c
  7917  00144A  A0D8               	btfss	status,0,c
  7918                           
  7919                           ; BSR set to: 0
  7920                           
  7921                           ;car_ctrl.c: 67:                 do { LATAbits.LATA1 = 0; } while(0);
  7922  00144C  9282               	bcf	3970,1,c	;volatile
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;car_ctrl.c: 69:             if (stateTime >= 100) {
  7926  00144E  BFD6               	btfsc	(_stateTime+1)& (0+255),7,b
  7927  001450  0012               	return	
  7928  001452  51D6               	movf	(_stateTime+1)& (0+255),w,b
  7929  001454  E104               	bnz	i2u222_40
  7930  001456  0E64               	movlw	100
  7931  001458  5DD5               	subwf	_stateTime& (0+255),w,b
  7932  00145A  A0D8               	btfss	status,0,c
  7933  00145C  0012               	return	
  7934  00145E                     i2u222_40:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;car_ctrl.c: 70:                 carctl.state = state_low;
  7938  00145E  0E03               	movlw	3
  7939  001460  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7940                           
  7941                           ;car_ctrl.c: 71:                 stateTime = 0;
  7942  001462  0E00               	movlw	0
  7943  001464  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7944  001466  0E00               	movlw	0
  7945  001468  6FD5               	movwf	_stateTime& (0+255),b
  7946  00146A  0012               	return	
  7947  00146C                     i2l3630:
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;car_ctrl.c: 75:             stateTime++;
  7951  00146C  4BD5               	infsnz	_stateTime& (0+255),f,b
  7952  00146E  2BD6               	incf	(_stateTime+1)& (0+255),f,b
  7953                           
  7954                           ; BSR set to: 0
  7955  001470  9082               	bcf	3970,0,c	;volatile
  7956                           
  7957                           ; BSR set to: 0
  7958  001472  9282               	bcf	3970,1,c	;volatile
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;car_ctrl.c: 78:             if (stateTime >= 1800) {
  7962  001474  BFD6               	btfsc	(_stateTime+1)& (0+255),7,b
  7963  001476  0012               	return	
  7964  001478  0E08               	movlw	8
  7965  00147A  5DD5               	subwf	_stateTime& (0+255),w,b
  7966  00147C  0E07               	movlw	7
  7967  00147E  59D6               	subwfb	(_stateTime+1)& (0+255),w,b
  7968  001480  A0D8               	btfss	status,0,c
  7969  001482  0012               	return	
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;car_ctrl.c: 79:                 carctl.state = state_high;
  7973  001484  0E01               	movlw	1
  7974  001486  6FC8               	movwf	(_carctl+1)& (0+255),b	;volatile
  7975                           
  7976                           ;car_ctrl.c: 80:                 stateTime = 0;
  7977  001488  0E00               	movlw	0
  7978  00148A  6FD6               	movwf	(_stateTime+1)& (0+255),b
  7979  00148C  0E00               	movlw	0
  7980  00148E  6FD5               	movwf	_stateTime& (0+255),b
  7981                           
  7982                           ; BSR set to: 0
  7983  001490  8082               	bsf	3970,0,c	;volatile
  7984                           
  7985                           ; BSR set to: 0
  7986  001492  9282               	bcf	3970,1,c	;volatile
  7987  001494  0012               	return	
  7988  001496                     i2l3646:
  7989  001496  0100               	movlb	0	; () banked
  7990  001498  51C8               	movf	(_carctl+1)& (0+255),w,b	;volatile
  7991  00149A  6E01               	movwf	??_carcontrol_ISR& (0+255),c
  7992  00149C  6A02               	clrf	(??_carcontrol_ISR+1)& (0+255),c
  7993                           
  7994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7995                           ; Switch size 1, requested type "simple"
  7996                           ; Number of cases is 1, Range of values is 0 to 0
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte            4     3 (average)
  8000                           ;	Chosen strategy is simple_byte
  8001  00149E  5002               	movf	??_carcontrol_ISR+1,w,c
  8002  0014A0  0A00               	xorlw	0	; case 0
  8003  0014A2  A4D8               	btfss	status,2,c
  8004  0014A4  0012               	return	
  8005                           
  8006                           ; BSR set to: 0
  8007                           ; Switch size 1, requested type "simple"
  8008                           ; Number of cases is 4, Range of values is 0 to 3
  8009                           ; switch strategies available:
  8010                           ; Name         Instructions Cycles
  8011                           ; simple_byte           13     7 (average)
  8012                           ;	Chosen strategy is simple_byte
  8013  0014A6  5001               	movf	??_carcontrol_ISR,w,c
  8014  0014A8  0A00               	xorlw	0	; case 0
  8015  0014AA  B4D8               	btfsc	status,2,c
  8016  0014AC  D798               	goto	i2l3604
  8017  0014AE  0A01               	xorlw	1	; case 1
  8018  0014B0  B4D8               	btfsc	status,2,c
  8019  0014B2  D79E               	goto	i2l3610
  8020  0014B4  0A03               	xorlw	3	; case 2
  8021  0014B6  B4D8               	btfsc	status,2,c
  8022  0014B8  D7AE               	goto	i2l3620
  8023  0014BA  0A01               	xorlw	1	; case 3
  8024  0014BC  A4D8               	btfss	status,2,c
  8025  0014BE  0012               	return	
  8026  0014C0  D7D5               	goto	i2l3630
  8027  0014C2                     __end_of_carcontrol_ISR:
  8028                           	opt callstack 0
  8029                           
  8030                           	psect	text74
  8031  000000                     __ptext74:
  8032                           	opt callstack 0
  8033                           
  8034                           	psect	rparam
  8035  0000                     
  8036                           	psect	temp
  8037  000055                     btemp:
  8038                           	opt callstack 0
  8039  000055                     	ds	1
  8040  0000                     int$flags	set	btemp
  8041  0000                     wtemp8	set	btemp+1
  8042  0000                     ttemp5	set	btemp+1
  8043  0000                     ttemp6	set	btemp+4
  8044  0000                     ttemp7	set	btemp+8
  8045                           tosu	equ	0xFFF
  8046                           tosh	equ	0xFFE
  8047                           tosl	equ	0xFFD
  8048                           stkptr	equ	0xFFC
  8049                           pclatu	equ	0xFFB
  8050                           pclath	equ	0xFFA
  8051                           pcl	equ	0xFF9
  8052                           tblptru	equ	0xFF8
  8053                           tblptrh	equ	0xFF7
  8054                           tblptrl	equ	0xFF6
  8055                           tablat	equ	0xFF5
  8056                           prodh	equ	0xFF4
  8057                           prodl	equ	0xFF3
  8058                           indf0	equ	0xFEF
  8059                           postinc0	equ	0xFEE
  8060                           postdec0	equ	0xFED
  8061                           preinc0	equ	0xFEC
  8062                           plusw0	equ	0xFEB
  8063                           fsr0h	equ	0xFEA
  8064                           fsr0l	equ	0xFE9
  8065                           wreg	equ	0xFE8
  8066                           indf1	equ	0xFE7
  8067                           postinc1	equ	0xFE6
  8068                           postdec1	equ	0xFE5
  8069                           preinc1	equ	0xFE4
  8070                           plusw1	equ	0xFE3
  8071                           fsr1h	equ	0xFE2
  8072                           fsr1l	equ	0xFE1
  8073                           bsr	equ	0xFE0
  8074                           indf2	equ	0xFDF
  8075                           postinc2	equ	0xFDE
  8076                           postdec2	equ	0xFDD
  8077                           preinc2	equ	0xFDC
  8078                           plusw2	equ	0xFDB
  8079                           fsr2h	equ	0xFDA
  8080                           fsr2l	equ	0xFD9
  8081                           status	equ	0xFD8


Data Sizes:
    Strings     37
    Constant    0
    Data        5
    BSS         573
    Persistent  22
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      84
    BANK0           160    103     160
    BANK1           256    256     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3087_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), STR_1(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    cam_get@pixels	PTR unsigned short  size(2) Largest target is 256
		 -> main@cam_pixels(BANK1[256]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_ready_ISR(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> adc_ready_ISR(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_TMR1Overflow_isr(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> ping_CCP1_triggered(), CCP1_DefaultCallBack(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> carcontrol_ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ping_RC2_went_HIGH(), Absolute function(), IOCCF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    _INTERRUPT_InterruptManagerLow->_CCP1_CaptureISR
    _TMR3_ISR->_timer_ISR
    _timer_ISR->i1_ADCC_SetADIInterruptHandler
    _timer_ISR->i1_TMR3_SetInterruptHandler
    _timer_ISR->i1_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _ping_TMR1Overflow_isr->i1_IOCCF2_SetInterruptHandler
    _ping_TMR1Overflow_isr->i1_TMR1_SetInterruptHandler
    _ping_RC2_went_HIGH->_TMR1_WriteTimer
    _ping_RC2_went_HIGH->i1_IOCCF2_SetInterruptHandler
    _ping_RC2_went_HIGH->i1_TMR1_SetInterruptHandler
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_CaptureISR->_ping_CCP1_triggered
    _ping_CCP1_triggered->___flmul
    ___flmul->___xxtofl
    _ADCC_ISR->_adc_ready_ISR
    _adc_ready_ISR->i1_TMR3_SetInterruptHandler
    _adc_ready_ISR->i1_TMR3_WriteTimer

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR2_ISR->_carcontrol_ISR

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _abs->___aomod
    _carcontrol_init->_TMR2_SetInterruptHandler
    _cam_start->_TMR3_SetInterruptHandler
    _cam_start->_TMR3_WriteTimer
    _cam_init->_ADCC_SetADIInterruptHandler
    _SYSTEM_Initialize->_TMR1_Initialize
    _SYSTEM_Initialize->_TMR3_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _CCP1_Initialize->_CCP1_SetCallBack
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0   10354
                                             97 BANK0      6     6      0
                                              0 BANK1    256   256      0
                  _SYSTEM_Initialize
                            ___awmod
                            _cam_get
                           _cam_init
                          _cam_start
                    _carcontrol_init
                _carcontrol_steering
                _carcontrol_throttle
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6245
                                             89 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6039
                                             81 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5685
                                             65 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4314
                                             29 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2665
                                             18 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     812
                                              2 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _carcontrol_init                                      0     0      0     310
           _TMR2_SetInterruptHandler
                _carcontrol_steering
                _carcontrol_throttle
 ---------------------------------------------------------------------------------
 (1) _carcontrol_throttle                                  1     1      0      45
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _carcontrol_steering                                  1     1      0      91
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cam_start                                            1     1      0     714
                                              2 BANK0      1     1      0
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR3_WriteTimer                                      2     0      2     390
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cam_init                                             0     0      0     224
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _cam_get                                              6     4      2     300
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1814
                    _ADCC_Initialize
                    _CCP1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     324
                                              2 BANK0      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             2     0      2     324
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     350
                                              2 BANK0      2     2      0
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     350
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     274
         _IOCCF2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2     274
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     174
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     224
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          2     0      2     224
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManagerLow                       9     9      0    4112
                                             48 COMRAM     9     9      0
                           _ADCC_ISR
                    _CCP1_CaptureISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0     480
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _timer_ISR *
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _timer_ISR                                           1     1      0     314
                                              7 COMRAM     1     1      0
      i1_ADCC_SetADIInterruptHandler
         i1_TMR3_SetInterruptHandler
                  i1_TMR3_StartTimer
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i1_ADCC_SetADIInterruptHandler                       2     0      2      48
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     540
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
              _ping_TMR1Overflow_isr *
 ---------------------------------------------------------------------------------
 (12) _ping_TMR1Overflow_isr                               0     0      0     148
       i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0     540
                         _IOCCF2_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCCF2_ISR                                          0     0      0     540
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                 _ping_RC2_went_HIGH *
 ---------------------------------------------------------------------------------
 (13) _ping_RC2_went_HIGH                                  0     0      0     540
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
       i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (13) i1_TMR1_SetInterruptHandler                          2     0      2      74
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i1_IOCCF2_SetInterruptHandler                        2     0      2      74
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     392
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR1_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     2     2      0    2286
                                             46 COMRAM     2     2      0
                   Absolute function *
               _CCP1_DefaultCallBack *
                _ping_CCP1_triggered *
 ---------------------------------------------------------------------------------
 (12) _ping_CCP1_triggered                                 2     0      2    2239
                                             44 COMRAM     2     0      2
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (13) ___xxtofl                                           14    10      4     398
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___flmul                                            25    17      8    1744
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _ADCC_ISR                                            0     0      0     266
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                      _adc_ready_ISR *
 ---------------------------------------------------------------------------------
 (12) _adc_ready_ISR                                       4     4      0     266
                                              7 COMRAM     4     4      0
         i1_TMR3_SetInterruptHandler
                  i1_TMR3_StartTimer
                  i1_TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR3_WriteTimer                                   2     0      2     166
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_StartTimer                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_TMR3_SetInterruptHandler                          2     0      2     100
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManagerHigh                      2     2      0       0
                                              3 COMRAM     2     2      0
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR2_ISR                                            0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                     _carcontrol_ISR *
 ---------------------------------------------------------------------------------
 (17) _carcontrol_ISR                                      3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (17) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CCP1_Initialize
       _CCP1_SetCallBack
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF2_SetInterruptHandler
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   ___awmod
   _cam_get
   _cam_init
     _ADCC_SetADIInterruptHandler
   _cam_start
     _TMR3_SetInterruptHandler
     _TMR3_StartTimer
     _TMR3_WriteTimer
   _carcontrol_init
     _TMR2_SetInterruptHandler
     _carcontrol_steering
     _carcontrol_throttle
   _carcontrol_steering
   _carcontrol_throttle
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 _INTERRUPT_InterruptManagerLow (ROOT)
   _ADCC_ISR
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _adc_ready_ISR *
       i1_TMR3_SetInterruptHandler
       i1_TMR3_StartTimer
       i1_TMR3_WriteTimer
   _CCP1_CaptureISR
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
     _ping_CCP1_triggered *
       ___flmul
         ___xxtofl (ARG)
       ___xxtofl
   _PIN_MANAGER_IOC
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       _ping_RC2_went_HIGH *
         _TMR1_StartTimer
         _TMR1_WriteTimer
         i1_IOCCF2_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _ping_TMR1Overflow_isr *
       i1_IOCCF2_SetInterruptHandler
       i1_TMR1_SetInterruptHandler
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _timer_ISR *
       i1_ADCC_SetADIInterruptHandler
       i1_TMR3_SetInterruptHandler
       i1_TMR3_StartTimer
       i1_TMR3_WriteTimer
     i1_TMR3_WriteTimer *

 _INTERRUPT_InterruptManagerHigh (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _carcontrol_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     204      21       25.2%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      54       1       89.4%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F4      18        0.0%
DATA                 0      0     3F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 15:47:19 2019

                                 cam_get@pixels 0060                __end_of_TMR2_SetInterruptHandler 1F78  
                             ??_carcontrol_init 0062                                     __CFG_CP$OFF 000000  
                                            bsr 000FE0                             _carcontrol_throttle 1F12  
                           _carcontrol_steering 1C40                         __end_of_CCP1_Initialize 1D5A  
                                   __CFG_LVP$ON 000000                                             l964 1628  
                                           l991 165C                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                 _timer1ReloadVal 0042  
                                           _abs 1B72                                             _pad 162A  
                       __size_of_PMD_Initialize 001C                                    ___awmod@sign 0065  
                               _TMR2_Initialize 1CFE                                             tosl 000FFD  
                                           wreg 000FE8                ??_IOCCF2_DefaultInterruptHandler 0006  
               ?_IOCCF2_DefaultInterruptHandler 0001                                    ___flmul@aexp 0025  
                                  ___flmul@bexp 0026                  ?i1_ADCC_SetADIInterruptHandler 0006  
                  ?_ADCC_SetADIInterruptHandler 0060                                    ___flmul@sign 0020  
                                  ___flmul@temp 002B                                    ___flmul@prod 0027  
                   carcontrol_steering@steering 0060                                    __CFG_ZCD$OFF 000000  
                                          l1002 0BEE                                            l1004 0BF6  
                                          ?_abs 0072                                            l3000 1B42  
                                          l3010 1CE0                                            l3004 1B5A  
                                          l3020 1644                                            l3110 1298  
                                          l3102 123C                                            l3030 1680  
                                          l3104 1250                                            l3008 1CDA  
                                          l3024 1654                                            l3050 0F74  
                                          l3114 12AE                                            l3034 16AC  
                                          l3026 1666                                 _timer3ReloadVal 003C  
                                          l3062 0FC2                                            l3118 12D4  
                                          l3142 0BD2                                            l3064 0FD6  
                                          l3056 0F9C                                            l3160 0C1E  
                                          l3082 106E                                            l3074 1032  
                                          l1714 1B9C                                            l3170 0D18  
                                          l3250 0EB0                                            l3156 0C10  
                                          l3260 0EF8                                            l3078 1048  
                                          l3094 11FE                                            l3190 0D7E  
                                          l3256 0EEC                                            l3098 1222  
                                          l3194 0D96                                            l3266 0F10  
                                          l3712 1A24                                            l3714 1A4A  
                                          l3580 1E5C                                            ?_pad 0072  
                                          l3842 15DC                                            l3594 1C54  
                                          l3836 159A                                            l3588 1F22  
                                          l3598 1C62                                            l2990 17CA  
                                          l3942 131E                                            l3872 1760  
                                          l3848 15E6                                            l2978 1F3E  
                                          l3892 17A6                                            l3884 178E  
                                          l3876 176E                                            l3868 1754  
                                          l3956 1372                                            l3878 1776  
                                          l3966 13D4                                            l3888 1798  
                                          STR_1 0822                                            STR_2 0801  
                                          u1400 17C2                                            u1420 180A  
                                          _LATA 000F82                                            _LATB 000F83  
                                          _LATC 000F84                                            u1600 1254  
                                          u1521 0FA2                                            u1540 0FDA  
                                          u1700 0C0A                                            u1710 0D28  
                                          u2520 177A                                            u2440 1920  
                                          u1640 0BA4                                            u1490 1B82  
                                          u1730 0D4A                                            u1650 0BA6  
                                          u1810 0E32                                            _T2PR 000FBB  
                                          u1731 0D48                                            u1740 0D58  
                                          u1750 0D5C                                            u2480 1628  
                                          u1680 0BE4                                            u2458 1924  
                                          u1770 0D68                                            u2707 132E  
                                          u2717 13CA                                            u2727 192C  
                                          u2680 13B6                                            _PMD0 000EDC  
                                          _PMD1 000EDD                                            _PMD2 000EDE  
                                          _PMD3 000EDF                                            _PMD4 000EE0  
                                          _PMD5 000EE1                                            _PIR6 000ECB  
                                          _TMR2 000FBA                                            _WPUA 000F0B  
                                          _WPUB 000F13                                            _WPUC 000F1B  
                                          _WPUE 000F28                                __end_of_ADCC_ISR 1E48  
                          ?_carcontrol_throttle 0001                            ?_carcontrol_steering 0001  
                                 _EUSART1_Write 1F3A                                   __CFG_FCMEN$ON 000000  
                                          abs@a 0072                                            _dbuf 00D8  
                                          _main 12F6                                            _dtoa 0B7A  
                                          _prec 00D1                                            _nout 00CD  
                                          pad@i 0079                                            pad@p 0076  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 007B                                            fsr2l 000FD9  
                                          btemp 0055                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00A2  
                               _TMR3_Initialize 1AF2                        __end_of_CCP1_SetCallBack 1FB4  
                    ??_TMR1_SetInterruptHandler 0062                                   __CFG_CSWEN$ON 000000  
                                  ___param_bank 000000                                ?_CCP1_CaptureISR 0001  
                                 __CFG_SCANE$ON 000000                                           ??_abs 0074  
                                         ??_pad 0078                  __size_of_OSCILLATOR_Initialize 0018  
                 __end_of_OSCILLATOR_Initialize 1F12                             __size_of_IOCCF2_ISR 0026  
                               __end_of___aodiv 1090                                           _ADACQ 000F57  
                                         _ADCAP 000F58                                           _ADACT 000F51  
                                         ?_main 0001                                           ?_dtoa 007D  
                                         _ADCLK 000F52                                 __end_of___aomod 12F6  
                                         _ADCNT 000F62                                           _ADPCH 000F5A  
                                         _ADREF 000F53                                           _ADPRE 000F59  
                                 __CFG_WDTE$OFF 000000                                 __end_of___awmod 17B0  
                                         _ADRPT 000F61                                 __end_of___flmul 0B7A  
                               _TMR1_StartTimer 1FF0                                           _T1CLK 000FD1  
                                         _T1CON 000FCE                                           _T3CLK 000FCB  
                                         _T2CON 000FBC                                           _T3CON 000FC8  
                                         _T2HLT 000FBD                                  __CFG_DEBUG$OFF 000000  
                                         _T2TMR 000FBA                                           _T2RST 000FBF  
                                         i1l261 004C                                           i1l263 0058  
                                         i1l265 0064                                           i1l266 007A  
                                         i1l267 0070                                           i2l256 1E7C  
                                         _OSCEN 000ED7                                    vfpfcnvrt@fmt 00A3  
                               __end_of_cam_get 162A                                           _TMR1H 000FCD  
                                         _TMR1L 000FCC                                           _TMR3H 000FC7  
                                         _TMR3L 000FC6                                           _TRISA 000F87  
                                         _TRISB 000F88                                           _TRISC 000F89  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000               __size_of_TMR3_SetInterruptHandler 000A  
                                 __CFG_WRT3$OFF 000000                       ?_TMR3_SetInterruptHandler 0060  
                                __CFG_EBTR0$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR1_ISR 1CD0                                __end_of_TMR2_ISR 1E24  
                                 __CFG_WRTB$OFF 000000                                __end_of_TMR3_ISR 1CA0  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                  ??_TMR3_DefaultInterruptHandler 0006  
                       __end_of_PIN_MANAGER_IOC 1F64                                           _flags 00D3  
                                         _myCam 0200                          __size_of_adc_ready_ISR 00C4  
                                         _fputc 17B0                                           _fputs 1B36  
                            __CFG_MCLRE$EXTMCLR 000000                                           pad@fp 0072  
                                         _width 00CF                                           _putch 1F4A  
                                         main@i 00C5                                           dtoa@d 007F  
                                         dtoa@i 009F                                           dtoa@n 0097  
                                         dtoa@p 0091                                           dtoa@s 0095  
                                         dtoa@w 0093                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 1AAC                           ??_carcontrol_throttle 0060  
                         ??_carcontrol_steering 0060                                           pclath 000FFA  
                                         tablat 000FF5                                           plusw2 000FDB  
                ??i1_IOCCF2_SetInterruptHandler 0008                                           ttemp5 0056  
                                         ttemp6 0059                                           ttemp7 005D  
                                         status 000FD8                                           wtemp8 0056  
                                _carcontrol_ISR 13DC              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 1EC2                  ?_INTERRUPT_InterruptManagerLow 0001  
                               __initialization 19B6                     ?i1_TMR1_SetInterruptHandler 0006  
                    __end_of_EUSART1_Initialize 1AF2                                    __end_of_main 13DC  
                                  __end_of_dtoa 0DC0                         __end_of_TMR2_Initialize 1D2C  
                      _TMR2_SetInterruptHandler 1F6E                                          ??_main 00C1  
                                        ??_dtoa 0087                                ?_CCP1_Initialize 0001  
                               _TMR3_StartTimer 1FEC                                   __activetblptr 000002  
                         _TMR3_InterruptHandler 003A                         _IOCCF2_InterruptHandler 0046  
                                        _ADACCH 000F6C                                          _ADACCL 000F6B  
                                        _ADCON0 000F5B                                          _ADCON1 000F54  
                                        _ADCON2 000F55                                          _ADCON3 000F56  
                                        _ADERRH 000F6A                                          _ADERRL 000F69  
                                        ?_fputc 0062                                          _ADLTHH 000F66  
                                        _ADLTHL 000F65                                          ?_fputs 006B  
                                        _ADRESH 000F5F                                          _ADRESL 000F5E  
                                        _CCPR1H 000FAA                                          _CCPR1L 000FA9  
                                        _ADSTAT 000F60                                          _ADUTHH 000F68  
                                        _ADUTHL 000F67                                          _ANSELA 000F0C  
                                        ?_putch 0001                                          _ANSELB 000F14  
                                        _ANSELC 000F1C                                          _T1GATE 000FD0  
                                        _T1GCON 000FCF                                          _T3GATE 000FCA  
                                        _T3GCON 000FC9                                          _RC1REG 000F98  
                 __size_of_CCP1_DefaultCallBack 0002                                          _RC1STA 000F9C  
                       TMR1_WriteTimer@timerVal 0006                                          _ODCONA 000F0A  
                                        _ODCONB 000F12                                          _ODCONC 000F1A  
                                        _RC6PPS 000EF8                                          i1l3132 1ED4  
                                        i1l1701 114C                          __end_of_carcontrol_ISR 14C2  
                                        i1l3304 0894                                          i1l3314 08C6  
                                        i1l3306 0898                                          i1l3410 10DE  
                                        i1l3420 110E                                          i1l1653 08A8  
                                        i1l1670 0B46                                          i1l1662 0AC0  
                                        i1l3430 117E                                          i1l3422 1134  
                                        i1l1663 0ABC                                          i1l3416 10FC  
                                        i1l3362 0A86                                          i1l3290 0868  
                                        i1l3418 1102                                          i1l3700 1566  
                                        i1l3356 0A68                                          i1l3428 1172  
                       __end_of_TMR3_Initialize 1B36                                          i1l3462 1EF0  
                                        i1l3382 0B04                                          i1l3286 0854  
                                        i1l3446 11BE                                          i1l1694 10CE  
                                        i1l3288 0858                                          i1l3386 0B22  
                                        i1l3398 0B64                                  __CFG_WDTCCS$SC 000000  
                                        i1l3686 1720                                          i1l3696 150A  
                                        i2l3610 13F0                                          i2l3620 1416  
                                        i2l3604 13DE                                          i2l3630 146C  
                                        i2l3646 1496                                          _OSCFRQ 000ED9  
                                        _TX1REG 000F99                                __end_of_cam_init 1C40  
                                        _TX1STA 000F9D                                __end_of___xxtofl 11D0  
                               _TMR3_WriteTimer 1E48                                   _CCP1_CallBack 0044  
                                __CFG_PWRTE$OFF 000000                                  __CFG_XINST$OFF 000000  
          __end_of_TMR1_DefaultInterruptHandler 1FFC           __size_of_TMR1_DefaultInterruptHandler 0002  
                  _TMR1_DefaultInterruptHandler 1FFA                                    vfprintf@cfmt 00B7  
          __size_of_ADCC_SetADIInterruptHandler 000A                         __end_of_TMR1_StartTimer 1FF4  
                                 _adc_ready_ISR 14C2                                       ??___aodiv 0070  
                                     ??___aomod 0070                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0064                                       ??___flmul 001C  
                                        _carctl 00C7                        ?_EUSART1_SetErrorHandler 0060  
                                     ??_cam_get 0062                                          clear_0 19DE  
                                        clear_1 19F0                                          clear_2 19FC  
                               ___awmod@divisor 0062                                 ___awmod@counter 0064  
                                        _printf 1DB0                                          pad@buf 0074  
              ??_EUSART1_SetOverrunErrorHandler 0062                 ?_EUSART1_SetOverrunErrorHandler 0060  
                                        _status 0048                                          dtoa@fp 007D  
                                     ?_ADCC_ISR 0001                                          _strlen 1CD0  
                   __end_of_ping_CCP1_triggered 18F2                                 _ADCC_Initialize 1956  
                                        fputc@c 0062                                  _PMD_Initialize 1EA6  
                                        fputs@c 006F                                          fputs@i 0070  
                                  __pdataCOMRAM 0050                                          fputs@s 006B  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 1A66                                 ??_EUSART1_Write 0060  
                       ??_ping_TMR1Overflow_isr 0008      i1TMR3_SetInterruptHandler@InterruptHandler 0006  
 i1ADCC_SetADIInterruptHandler@InterruptHandler 0006      i1TMR1_SetInterruptHandler@InterruptHandler 0006  
  i1IOCCF2_SetInterruptHandler@InterruptHandler 0006        TMR3_SetInterruptHandler@InterruptHandler 0060  
   ADCC_SetADIInterruptHandler@InterruptHandler 0060        TMR1_SetInterruptHandler@InterruptHandler 0060  
      TMR2_SetInterruptHandler@InterruptHandler 0060      IOCCF2_SetInterruptHandler@InterruptHandler 0060  
                              ?_PIN_MANAGER_IOC 0001                         __end_of_TMR1_WriteTimer 1EDE  
                 __size_of_INTERRUPT_Initialize 0012                                    ??_IOCCF2_ISR 0008  
                   __size_of_ping_RC2_went_HIGH 0034                                ?_TMR1_Initialize 0001  
                               ?_carcontrol_ISR 0001                                    ___xxtofl@arg 0010  
                                  ___xxtofl@exp 000F                ??_INTERRUPT_InterruptManagerHigh 0004  
               ?_INTERRUPT_InterruptManagerHigh 0001                               _SYSTEM_Initialize 1D86  
                                  ___xxtofl@val 0006                                 _carcontrol_init 1BA6  
                                    __accesstop 0060                         __end_of__initialization 1A02  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                ?_adc_ready_ISR 0001                                  __pcstackCOMRAM 0001  
                                main@cam_pixels 0100                              __size_of_cam_start 0064  
                           ??_SYSTEM_Initialize 0064                         __end_of_TMR3_StartTimer 1FF0  
                                     ?_TMR1_ISR 0001                                       ?_TMR2_ISR 0001  
                 ?_TMR1_DefaultInterruptHandler 0001                                       ?_TMR3_ISR 0001  
                                 __end_of_fputc 181E                                   __end_of_fputs 1B72  
                                 __end_of_putch 1F58                                ?_TMR2_Initialize 0001  
                        __end_of_PMD_Initialize 1EC2                                      ??_ADCC_ISR 000C  
                            __end_of_IOCCF2_ISR 1DFE                                         ??_fputc 0066  
                     __end_of_SYSTEM_Initialize 1DB0                                         ??_fputs 006F  
                       __end_of_TMR3_WriteTimer 1E68                                         ??_putch 0061  
                                    __pbssBANK0 00C7                                ?_TMR3_Initialize 0001  
                                    __pnvCOMRAM 003A          __end_of_IOCCF2_DefaultInterruptHandler 1FFE  
       __size_of_IOCCF2_DefaultInterruptHandler 0002                  _IOCCF2_DefaultInterruptHandler 1FFC  
               __end_of_EUSART1_SetErrorHandler 1FAA                               ?_CCP1_SetCallBack 0060  
              __end_of_TMR3_SetInterruptHandler 1F6E                                ?_TMR1_StartTimer 0001  
                                    ??_TMR1_ISR 0008                                 __CFG_PPS1WAY$ON 000000  
                                    ??_TMR2_ISR 0004                    ??i1_TMR3_SetInterruptHandler 0008  
                                    ??_TMR3_ISR 0009                              ??_CCP1_SetCallBack 0062  
                       __end_of_ADCC_Initialize 19B6                                         _CCP1CAP 000FAC  
                                       _CCP1CON 000FAB                                         _ADFLTRH 000F6E  
                                       _ADFLTRL 000F6D                                         _CCP1PPS 000EAA  
                                       _ADPREVH 000F5D                                         _ADPREVL 000F5C  
                                       _ADSTPTH 000F64                                         _ADSTPTL 000F63  
                                       ?_printf 00B9                                 ?_PMD_Initialize 0001  
                                       ?_strlen 0060          __end_of_EUSART1_SetFramingErrorHandler 1FA0  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 1F96  
                            __size_of_timer_ISR 0076                                       ?_cam_init 0001  
                                     ?___xxtofl 0006                                         _SP1BRGH 000F9B  
                                       _SP1BRGL 000F9A                                         _OSCCON1 000ED3  
                                       _OSCCON3 000ED5                              __size_of_vfpfcnvrt 0186  
                       __end_of_carcontrol_init 1BDA                                         _OSCTUNE 000ED8  
                                       _SLRCONA 000F09                                         _SLRCONB 000F11  
                                       _SLRCONC 000F19                               __end_of_cam_start 1956  
                              ?_TMR1_WriteTimer 0006               CCP1_DefaultCallBack@capturedValue 002D  
           __size_ofi1_TMR3_SetInterruptHandler 000A                                 ??_adc_ready_ISR 0008  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 0062                      __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                                       ___aodiv 0F46                                         ___aomod 11D0  
                                       ___awmod 173E                                         ___flmul 0828  
                              ?_TMR3_StartTimer 0001                                       ?_vfprintf 00B1  
                                  __psmallconst 0800                                         _cam_get 1586  
                                       __pcinit 19B6                                         __ramtop 0800  
                                       __ptext0 12F6                                         __ptext1 1DB0  
                                       __ptext2 1A10                                         __ptext3 0DC0  
                                       __ptext4 0B7A                                         __ptext5 162A  
                                       __ptext6 1CD0                                         __ptext7 1B36  
                                       __ptext8 17B0                                         __ptext9 1F4A  
                               __size_of_printf 0028                        __size_of_CCP1_CaptureISR 002C  
                ??_TMR1_DefaultInterruptHandler 0006                                 __size_of_strlen 002E  
                                     _T1CONbits 000FCE                                      ??_cam_init 0062  
                         _OSCILLATOR_Initialize 1EFA                                       _T2CONbits 000FBC  
                                  __size_of_abs 0034                                    __size_of_pad 009E  
                                    ??___xxtofl 000A                                       _T3CONbits 000FC8  
                              ___awmod@dividend 0060               __size_of_TMR1_SetInterruptHandler 000A  
                            _EUSART1_Initialize 1AAC                     __end_of_carcontrol_throttle 1F28  
                      ??_PIN_MANAGER_Initialize 0062                       ?_TMR1_SetInterruptHandler 0060  
                   __end_of_carcontrol_steering 1C70                                       _T2HLTbits 000FBD  
                                     _IOCCFbits 000F15                                       _IOCCNbits 000F16  
                                     _IOCCPbits 000F17                      __size_of_SYSTEM_Initialize 002A  
                                       main@num 00C3                                  __pintcode_body 1E68  
                          end_of_initialization 1A02                                ?_TMR3_WriteTimer 0060  
                                     _T2RSTbits 000FBF                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0064                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 00FA                                         int_func 1E68  
                                       fputs@fp 006D                               __end_of_timer_ISR 173E  
                             __end_of_vfpfcnvrt 0F46                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                  __end_of_CCP1_DefaultCallBack 2000                                ?_ADCC_Initialize 0001  
                                    ??_vfprintf 00B7                            ??_EUSART1_Initialize 0062  
                         __CFG_WDTCPS$WDTCPS_31 000000                                         strlen@a 0062  
                                       strlen@s 0060                        _TMR3_SetInterruptHandler 1F64  
                                    _timing_val 0050                                      _servo_trim 0054  
                             __size_of_ADCC_ISR 0024             __end_of_ADCC_SetADIInterruptHandler 1FBE  
                   _ADCC_SetADIInterruptHandler 1FB4                                   ___xxtofl@sign 000E  
                                     _TRISBbits 000F88                                       _TRISCbits 000F89  
                              ??_carcontrol_ISR 0001                                ?_carcontrol_init 0001  
              __size_of_EUSART1_SetErrorHandler 000A                        __size_of_CCP1_Initialize 002E  
                  ??_IOCCF2_SetInterruptHandler 0062                             EUSART1_Write@txData 0060  
                              __CFG_FEXTOSC$OFF 000000                  __size_of_ping_TMR1Overflow_isr 001E  
                 __end_of_ping_TMR1Overflow_isr 1EA6                                     ___flmul@grs 0021  
                 ??_ADCC_SetADIInterruptHandler 0062              __end_ofi1_TMR3_SetInterruptHandler 1FE6  
                    i1_TMR3_SetInterruptHandler 1FDC                    __end_of_INTERRUPT_Initialize 1F3A  
          __end_of_TMR2_DefaultInterruptHandler 2004           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 2002                  ??_ADCC_DefaultInterruptHandler 0006  
                                   vfpfcnvrt@ap 00A5                                     vfpfcnvrt@fp 00A1  
                                   vfpfcnvrt@ll 00A9                                   __pidataCOMRAM 1FE6  
                             __size_of_TMR1_ISR 0030                               __size_of_TMR2_ISR 0026  
                             __size_of_TMR3_ISR 0030                          ?_OSCILLATOR_Initialize 0001  
           __size_of_IOCCF2_SetInterruptHandler 000A                                  __end_of_printf 1DD8  
                                __end_of_strlen 1CFE                             start_initialization 19B6  
               __size_of_PIN_MANAGER_Initialize 006E                                     __end_of_abs 1BA6  
                                   __end_of_pad 16C8                      __end_of_ping_RC2_went_HIGH 1C0E  
                             ??_CCP1_CaptureISR 002F                    __size_of_ping_CCP1_triggered 0066  
                                   putch@txData 0061                           __end_of_EUSART1_Write 1F4A  
                      __size_of_PIN_MANAGER_IOC 000C                                __CFG_LPBOREN$OFF 000000  
                      __size_of_TMR1_Initialize 0046                                     vfprintf@fmt 00B3  
                              ??_PMD_Initialize 0060                                     _CCPTMRSbits 000FAD  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 00BD  
                                      ??_strlen 0062                           CCP1_CaptureISR@module 002F  
                                   __pbssBIGRAM 0200                                       ___flmul@a 0018  
                                     ___flmul@b 0014                                     __pbssCOMRAM 0048  
                     __size_of_CCP1_SetCallBack 000A                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0100                                ___aodiv@dividend 0060  
                      __size_of_TMR2_Initialize 002E                               __size_of_cam_init 0032  
                             __size_of___xxtofl 0140                            _CCP1_DefaultCallBack 1FFE  
              ??_EUSART1_SetFramingErrorHandler 0062                 ?_EUSART1_SetFramingErrorHandler 0060  
                                     _cam_start 18F2                               ??_CCP1_Initialize 0062  
                                     __pnvBANK0 00F8                          _PIN_MANAGER_Initialize 181E  
                                     _dtoa$2626 008F                        __size_of_TMR3_Initialize 0044  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 1F82  
                                      ?___aodiv 0060                                        ?___aomod 0060  
                  ??i1_TMR1_SetInterruptHandler 0008                                ___aodiv@quotient 0072  
                                      ?___awmod 0060                                        ?___flmul 0014  
                                      ?_cam_get 0060                                     __pintcodelo 0018  
                                      _ADACTPPS 000EA9                               __size_of_vfprintf 0056  
                                      _ADCC_ISR 1E24                                        _BAUD1CON 000F9E  
                                   __smallconst 0800                        __size_of_TMR1_StartTimer 0004  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 00F8  
                       _EUSART1_SetErrorHandler 1FA0              __end_of_IOCCF2_SetInterruptHandler 1F8C  
                    _IOCCF2_SetInterruptHandler 1F82                                  __size_of_fputc 006E  
                                      _T2CLKCON 000FBE                                  __size_of_fputs 003C  
                         ?_CCP1_DefaultCallBack 002D                                  __size_of_putch 000E  
                          _INTERRUPT_Initialize 1F28                                      ?_cam_start 0001  
           __size_ofi1_TMR1_SetInterruptHandler 000A                                        _LATAbits 000F82  
       EUSART1_SetErrorHandler@interruptHandler 0060                                        _LATBbits 000F83  
                                      _LATCbits 000F84                                        _IPR0bits 000EB5  
                                      _IPR1bits 000EB6                                        _PIE0bits 000EBD  
                                      _PIE1bits 000EBE                                        _IPR4bits 000EB9  
                                      _PIE4bits 000EC1                                        _IPR6bits 000EBB  
                                      _PIE6bits 000EC3                                        i1u200_20 0B30  
                                      i1u214_28 1DE4                                        i1u214_29 1DF8  
                                      i1u208_20 1188                                        i1u224_20 16DC  
                                      i1u224_26 16DE                                        i1u240_28 1D72  
                                      i1u227_20 14CA                                        i1u227_26 14CC  
                                      i1u235_28 1CBC                                        i1u229_20 155A  
                                      i1u190_20 08B4                                        i1u237_28 1C8C  
                                      i1u191_20 0A2A                        __size_of_TMR1_WriteTimer 001C  
                                      i1u191_25 0A20                                        i1u239_28 1E34  
                                      i1u195_20 0AB6                                        i2u222_40 145E  
                                      i1u199_20 0B12                                        i2u233_48 1E10  
                                      i2u219_40 1408                                        _PIR0bits 000EC5  
                                      _PIR1bits 000EC6                                        _PIR3bits 000EC8  
                                      _PIR4bits 000EC9                      ??_TMR3_SetInterruptHandler 0062  
                                      _PIR6bits 000ECB                           __end_of_adc_ready_ISR 1586  
               ??i1_ADCC_SetADIInterruptHandler 0008                                       _timer_ISR 16C8  
                                      _TMR1_ISR 1CA0                                        _TMR2_ISR 1DFE  
                                      _TMR3_ISR 1C70                                       _servo_max 0052  
                                     _servo_min 0053                               ??_PIN_MANAGER_IOC 0008  
                             i1_TMR3_StartTimer 1FF4                                       _vfpfcnvrt 0DC0  
                             ??_TMR1_Initialize 0062                                       _stateTime 00D5  
                                    _ADCON0bits 000F5B                                      _ADCON1bits 000F54  
                                    _ADCON2bits 000F55                                      _ADCON3bits 000F56  
                            ?i1_TMR3_StartTimer 0001                        __size_of_TMR3_StartTimer 0004  
                ??_TMR2_DefaultInterruptHandler 0001               __size_of_TMR2_SetInterruptHandler 000A  
                     ?_TMR2_SetInterruptHandler 0060                             ??i1_TMR3_StartTimer 0006  
                                     copy_data0 19CA                           ?_INTERRUPT_Initialize 0001  
                  __size_of_carcontrol_throttle 0016                    __size_of_carcontrol_steering 0030  
                             i1_TMR3_WriteTimer 1EDE                               ??_TMR2_Initialize 0062  
                            ?i1_TMR3_WriteTimer 0006                                      _ADSTATbits 000F60  
                                      __Hrparam 0000                        __size_of_TMR3_WriteTimer 0020  
                                    vfprintf@ap 00B5                                        __Lrparam 0000  
                                    vfprintf@fp 00B1                              __CFG_BOREN$SBORDIS 000000  
                   ?i1_TMR3_SetInterruptHandler 0006                                      ?_timer_ISR 0001  
                     __end_ofi1_TMR3_StartTimer 1FF8                             ??i1_TMR3_WriteTimer 0008  
                       ??_OSCILLATOR_Initialize 0060                             _ping_CCP1_triggered 188C  
                              __size_of___aodiv 014A                                __size_of___aomod 0126  
                              __size_of___awmod 0072                                __size_of___flmul 0352  
                   __size_of_EUSART1_Initialize 0046                                      ?_vfpfcnvrt 00A1  
                               _CCP1_CaptureISR 1D5A                                __size_of_cam_get 00A4  
                               ___aodiv@divisor 0068                               ??_TMR3_Initialize 0062  
                      _TMR1_SetInterruptHandler 1F78                                 ___aodiv@counter 0070  
                         _TMR1_InterruptHandler 0040                       ??_EUSART1_SetErrorHandler 0062  
                                      _cam_init 1C0E                     _EUSART1_DefaultErrorHandler 000000  
                                      ___xxtofl 1090                                _CCP1_SetCallBack 1FAA  
                      __size_of_ADCC_Initialize 0060                 ??_INTERRUPT_InterruptManagerLow 0031  
                CCP1_SetCallBack@customCallBack 0060                                        __ptext10 1F3A  
                                      __ptext11 1B72                                        __ptext20 1C0E  
                                      __ptext12 11D0                                        __ptext21 1586  
                                      __ptext13 0F46                                      _T1GCONbits 000FCF  
                                      __ptext30 1EA6                                        __ptext22 173E  
                                      __ptext14 1BA6                                        __ptext31 181E  
                                      __ptext23 1D86                                        __ptext15 1F12  
                                      __ptext40 1FAA                                        __ptext32 1F82  
                                      __ptext24 1AF2                                        __ptext16 1C40  
                                      __ptext41 1956                                        __ptext33 1EFA  
                                      __ptext25 1F64                                        __ptext17 18F2  
                                      __ptext50 1E88                                        __ptext42 1FB4  
                                      __ptext34 1F28                                        __ptext26 1CFE  
                                      __ptext18 1E48                                        __ptext51 1F58  
                                      __ptext35 1AAC                                        __ptext27 1F6E  
                                      __ptext19 1FEC                                        __ptext60 1FFE  
                                      __ptext52 1DD8                                        __ptext44 1C70  
                                      __ptext36 1F8C                                        __ptext28 1A66  
                                      __ptext61 188C                                        __ptext53 1FFC  
                                      __ptext45 1FF8                                        __ptext37 1F96  
                                      __ptext29 1F78                                        __ptext62 1090  
                                      __ptext54 1BDA                                        __ptext46 16C8  
                                      __ptext38 1FA0                                        __ptext71 1DFE  
                                      __ptext63 0828                                        __ptext55 1FC8  
                                      __ptext47 1FBE                                        __ptext39 1D2C  
                                      __ptext72 2002                                        __ptext64 1E24  
                                      __ptext56 1FD2                                        __ptext48 1CA0  
                                      __ptext73 13DC                                        __ptext65 2000  
                                      __ptext57 1EC2                                        __ptext49 1FFA  
                                      __ptext74 0000                                        __ptext66 14C2  
                                      __ptext58 1FF0                                        __ptext67 1EDE  
                                      __ptext59 1D5A                                        __ptext68 1FF4  
                                      __ptext69 1FDC                          ??_CCP1_DefaultCallBack 002F  
                          ?_ping_CCP1_triggered 002D                       __end_ofi1_TMR3_WriteTimer 1EFA  
                                      cam_get@i 0062                               ??_TMR1_StartTimer 0006  
                                    _T3GCONbits 000FC9                                      _IOCCF2_ISR 1DD8  
                       TMR3_WriteTimer@timerVal 0060                                     ??_cam_start 0062  
                                 __size_of_main 00E6                                   __size_of_dtoa 0246  
                         _ping_TMR1Overflow_isr 1E88                        __size_of_carcontrol_init 0034  
                          __CFG_WDTCWS$WDTCWS_7 000000                              __CFG_BORV$VBOR_190 000000  
                            _ping_RC2_went_HIGH 1BDA                                      _RC1STAbits 000F9C  
            __end_ofi1_TMR1_SetInterruptHandler 1FD2                      i1_TMR1_SetInterruptHandler 1FC8  
                     _ADCC_ADI_InterruptHandler 003E  EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                     i1TMR3_WriteTimer@timerVal 0006                 ping_CCP1_triggered@timeOfFlight 002D  
                                      int$flags 0055                                        _vfprintf 1A10  
                           ?_ping_RC2_went_HIGH 0001                                       printf@fmt 00B9  
                             ??_TMR1_WriteTimer 0008            __end_of_TMR3_DefaultInterruptHandler 1FFA  
         __size_of_TMR3_DefaultInterruptHandler 0002                    _TMR3_DefaultInterruptHandler 1FF8  
                   _EUSART1_FramingErrorHandler 00FC           __end_ofi1_ADCC_SetADIInterruptHandler 1FC8  
        __size_ofi1_ADCC_SetADIInterruptHandler 000A                   i1_ADCC_SetADIInterruptHandler 1FBE  
                              ___aomod@dividend 0060                                      _INTCONbits 000FF2  
          __end_ofi1_IOCCF2_SetInterruptHandler 1FDC           __size_ofi1_IOCCF2_SetInterruptHandler 000A  
                  i1_IOCCF2_SetInterruptHandler 1FD2                                 _CCP1_Initialize 1D2C  
                        ??_INTERRUPT_Initialize 0060                           ??_ping_CCP1_triggered 002F  
                          ??_ping_RC2_went_HIGH 0008            __end_of_ADCC_DefaultInterruptHandler 2002  
         __size_of_ADCC_DefaultInterruptHandler 0002                    _ADCC_DefaultInterruptHandler 2000  
                             ??_TMR3_StartTimer 0060                                        intlevel1 0000  
                                      intlevel2 0000                         ?_PIN_MANAGER_Initialize 0001  
                             __CFG_CLKOUTEN$OFF 000000          __end_of_EUSART1_SetOverrunErrorHandler 1F96  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 1F8C  
                       __size_of_carcontrol_ISR 00E6                         __end_of_CCP1_CaptureISR 1D86  
                                   ??_timer_ISR 0008                      __size_ofi1_TMR3_StartTimer 0004  
                                      printf@ap 00BF  EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                               ___aomod@divisor 0068                                     ??_vfpfcnvrt 00A7  
                               ___aomod@counter 0070                               ??_TMR3_WriteTimer 0062  
                        __size_of_EUSART1_Write 0010                              _eusart1RxLastError 00D7  
                   carcontrol_throttle@throttle 0060          __end_of_INTERRUPT_InterruptManagerHigh 1E88  
       __size_of_INTERRUPT_InterruptManagerHigh 1E80                  _INTERRUPT_InterruptManagerHigh 0008  
                 ?_TMR3_DefaultInterruptHandler 0001                   ?i1_IOCCF2_SetInterruptHandler 0006  
                   ?_IOCCF2_SetInterruptHandler 0060                                      _TX1STAbits 000F9D  
                    __size_ofi1_TMR3_WriteTimer 001C           __end_of_INTERRUPT_InterruptManagerLow 00A2  
        __size_of_INTERRUPT_InterruptManagerLow 008A                   _INTERRUPT_InterruptManagerLow 0018  
                                  ___aodiv@sign 0071                                     ?_IOCCF2_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 188C                               ??_ADCC_Initialize 0062  
                                 cam_get@i_2578 0064                          ?_ping_TMR1Overflow_isr 0001  
                 ?_ADCC_DefaultInterruptHandler 0001                                 _PIN_MANAGER_IOC 1F58  
                         _TMR2_InterruptHandler 00FE                                    ___aomod@sign 0071  
                               _TMR1_Initialize 1A66  
